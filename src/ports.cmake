set(VCPKG_TARGET_ARCHITECTURE x64)
set(VCPKG_LIBRARY_LINKAGE static)
set(VCPKG_CRT_LINKAGE dynamic)
set(VCPKG_BUILD_TYPE release)

set(VCPKG_ENV_PASSTHROUGH_UNTRACKED "PATH")
set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/vcpkg.cmake")

set(VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_CXX_STANDARD=20")

if(PORT STREQUAL "bzip2" AND VCPKG_CMAKE_SYSTEM_NAME STREQUAL "Linux")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_C_EXTENSIONS=ON")
endif()

if(PORT STREQUAL "libpng" AND NOT VCPKG_CMAKE_SYSTEM_NAME STREQUAL "Linux")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_C_FLAGS=-D_WIN32")
endif()

if(PORT STREQUAL "harfbuzz")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_LINKER=")
endif()

if(PORT STREQUAL "wayland")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_LINKER=")
  set(ENV{NM} "llvm-nm")
endif()

if(PORT STREQUAL "libjpeg-turbo")
  set(VCPKG_C_FLAGS "-DNO_GETENV -DNO_PUTENV")
  set(VCPKG_CXX_FLAGS "-DNO_GETENV -DNO_PUTENV")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_C_EXTENSIONS=ON")
  #if(VCPKG_CMAKE_SYSTEM_NAME STREQUAL "Linux")
  #  set(VCPKG_C_FLAGS "${VCPKG_C_FLAGS} -D_DEFAULT_SOURCE")
  #  set(VCPKG_CXX_FLAGS "${VCPKG_CXX_FLAGS} -D_DEFAULT_SOURCE")
  #endif()
endif()
