set(ACE_SUPPORTED_SYSTEM_ARCHS "x86-64-v2;x86-64-v3")
if(NOT ACE_SYSTEM_ARCH IN_LIST ACE_SUPPORTED_SYSTEM_ARCHS)
  message(FATAL_ERROR "Unsupported ACE_SYSTEM_ARCH: ${ACE_SYSTEM_ARCH}")
endif()

set(ACE_SYSTEM_ARCH_X86_64_V2 OFF)
set(ACE_SYSTEM_ARCH_X86_64_V3 OFF)

if(ACE_SYSTEM_ARCH STREQUAL "x86-64-v2")
  set(ACE_SYSTEM_ARCH_X86_64_V2 ON)
endif()

if(ACE_SYSTEM_ARCH STREQUAL "x86-64-v3")
  set(ACE_SYSTEM_ARCH_X86_64_V2 ON)
  set(ACE_SYSTEM_ARCH_X86_64_V3 ON)
endif()

set(VCPKG_ENV_PASSTHROUGH_UNTRACKED "PATH")
set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/vcpkg.cmake")

set(VCPKG_LIBRARY_LINKAGE static)
set(VCPKG_CRT_LINKAGE dynamic)
set(VCPKG_BUILD_TYPE release)

set(VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_CXX_STANDARD=26")

if(PORT STREQUAL "pugixml")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DPUGIXML_NO_EXCEPTIONS=ON")
endif()

if(PORT STREQUAL "bzip2" AND VCPKG_CMAKE_SYSTEM_NAME STREQUAL "Linux")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_C_EXTENSIONS=ON")
endif()

if(PORT STREQUAL "draco")
  set(VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_CXX_STANDARD=20")
endif()

if(PORT STREQUAL "libjpeg-turbo")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_C_EXTENSIONS=ON")
  set(VCPKG_C_FLAGS "-DNO_GETENV -DNO_PUTENV")
endif()

if(PORT STREQUAL "libpng" AND VCPKG_CMAKE_SYSTEM_NAME STREQUAL "MinGW")
  set(VCPKG_C_FLAGS "-D_WIN32")
endif()

if(PORT STREQUAL "aom")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_MMX=ON")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_SSE=ON")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_SSE2=ON")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_SSE3=${ACE_SYSTEM_ARCH_X86_64_V2}")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_SSSE3=${ACE_SYSTEM_ARCH_X86_64_V2}")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_SSE4_1=${ACE_SYSTEM_ARCH_X86_64_V2}")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_SSE4_2=${ACE_SYSTEM_ARCH_X86_64_V2}")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_AVX=${ACE_SYSTEM_ARCH_X86_64_V3}")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DENABLE_AVX2=${ACE_SYSTEM_ARCH_X86_64_V3}")
endif()

if(PORT STREQUAL "harfbuzz")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_LINKER=")
endif()

if(PORT STREQUAL "glm")
  if(ACE_SYSTEM_ARCH STREQUAL "x86-64-v2")
    list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DGLM_ENABLE_SIMD_SSE4_2=ON")
  elseif(ACE_SYSTEM_ARCH STREQUAL "x86-64-v3")
    list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DGLM_ENABLE_SIMD_AVX2=ON")
  endif()
endif()

if(PORT STREQUAL "spirv-tools")
  set(VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_CXX_STANDARD=20")
endif()

if(PORT STREQUAL "wayland")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_LINKER=")
endif()

if(PORT STREQUAL "meshoptimizer")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DZSTD=ON")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DSTATIC=OFF")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DSSE=${ACE_SYSTEM_ARCH_X86_64_V3}")
  set(VCPKG_C_FLAGS "-U__AVX__ -U__AVX2__ -U__AVX512F__")
endif()

if(PORT STREQUAL "ktx")
  list(APPEND VCPKG_CMAKE_CONFIGURE_OPTIONS "-DBASISU_SUPPORT_SSE=${ACE_SYSTEM_ARCH_X86_64_V3}")
  set(VCPKG_C_FLAGS "-U__AVX__ -U__AVX2__ -U__AVX512F__")
endif()

if(PORT STREQUAL "blend2d")
  set(VCPKG_CMAKE_CONFIGURE_OPTIONS "-DCMAKE_CXX_STANDARD=23")
endif()

if(DEFINED VCPKG_C_FLAGS AND NOT DEFINED VCPKG_CXX_FLAGS)
  set(VCPKG_CXX_FLAGS "${VCPKG_C_FLAGS}")
endif()
