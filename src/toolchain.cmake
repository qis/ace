# Toolchain
if(VCPKG_TARGET_TRIPLET STREQUAL "ace-linux")
  include(${CMAKE_CURRENT_LIST_DIR}/../linux.cmake)
elseif(VCPKG_TARGET_TRIPLET STREQUAL "ace-mingw")
  include(${CMAKE_CURRENT_LIST_DIR}/../mingw.cmake)
else()
  message(FATAL_ERROR "Unsupported target triplet.")
endif()

# Compiler Flags
set(CMAKE_C_FLAGS_INIT
 "${CMAKE_C_FLAGS_INIT} ${VCPKG_C_FLAGS}")
set(CMAKE_C_FLAGS_DEBUG_INIT
 "${CMAKE_C_FLAGS_DEBUG_INIT} ${VCPKG_C_FLAGS_DEBUG}")
set(CMAKE_C_FLAGS_RELEASE_INIT
 "${CMAKE_C_FLAGS_RELEASE_INIT} ${VCPKG_C_FLAGS_RELEASE}")
set(CMAKE_C_FLAGS_MINSIZEREL_INIT
 "${CMAKE_C_FLAGS_MINSIZEREL_INIT} ${VCPKG_C_FLAGS_RELEASE}")
set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT
 "${CMAKE_C_FLAGS_RELWITHDEBINFO_INIT} ${VCPKG_C_FLAGS_DEBUG}")

set(CMAKE_CXX_FLAGS_INIT
 "${CMAKE_CXX_FLAGS_INIT} ${VCPKG_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS_DEBUG_INIT
 "${CMAKE_CXX_FLAGS_DEBUG_INIT} ${VCPKG_CXX_FLAGS_DEBUG}")
set(CMAKE_CXX_FLAGS_RELEASE_INIT
 "${CMAKE_CXX_FLAGS_RELEASE_INIT} ${VCPKG_CXX_FLAGS_RELEASE}")
set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT
 "${CMAKE_CXX_FLAGS_MINSIZEREL_INIT} ${VCPKG_CXX_FLAGS_RELEASE}")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT
 "${CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT} ${VCPKG_CXX_FLAGS_DEBUG}")

# Linker Flags
foreach(LINKER SHARED MODULE EXE)
  set(CMAKE_${LINKER}_LINKER_FLAGS_INIT
   "${CMAKE_${LINKER}_LINKER_FLAGS_INIT} ${VCPKG_LINKER_FLAGS}")
  set(CMAKE_${LINKER}_LINKER_FLAGS_DEBUG_INIT
   "${CMAKE_${LINKER}_LINKER_FLAGS_DEBUG_INIT} ${VCPKG_LINKER_FLAGS_DEBUG}")
  set(CMAKE_${LINKER}_LINKER_FLAGS_RELEASE_INIT
   "${CMAKE_${LINKER}_LINKER_FLAGS_RELEASE_INIT} ${VCPKG_LINKER_FLAGS_RELEASE}")
  set(CMAKE_${LINKER}_LINKER_FLAGS_MINSIZEREL_INIT
   "${CMAKE_${LINKER}_LINKER_FLAGS_MINSIZEREL_INIT} ${VCPKG_LINKER_FLAGS_RELEASE}")
  set(CMAKE_${LINKER}_LINKER_FLAGS_RELWITHDEBINFO_INIT
   "${CMAKE_${LINKER}_LINKER_FLAGS_RELWITHDEBINFO_INIT} ${VCPKG_LINKER_FLAGS_DEBUG}")
endforeach()

# Standard Libraries
set(CMAKE_CXX_STANDARD_LIBRARIES "-static-libstdc++" CACHE STRING "" FORCE)

# Platform Variables
set(CMAKE_TRY_COMPILE_PLATFORM_VARIABLES
  ${CMAKE_TRY_COMPILE_PLATFORM_VARIABLES}
  VCPKG_CHAINLOAD_TOOLCHAIN_FILE
  VCPKG_LIBRARY_LINKAGE
  CACHE STRING "" FORCE)
