diff '--color=auto' -ruNp vcpkg/ports/zstd/portfile.cmake src/ports/zstd/portfile.cmake
--- vcpkg/ports/zstd/portfile.cmake	2023-05-23 04:56:24.537321742 +0200
+++ src/ports/zstd/portfile.cmake	2023-05-23 05:19:45.759004767 +0200
@@ -38,6 +38,16 @@ if(targets MATCHES "-pthread")
 endif()
 
 file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/debug/include" "${CURRENT_PACKAGES_DIR}/debug/share")
+file(REMOVE_RECURSE
+    "${CURRENT_PACKAGES_DIR}/share/zstdConfig.cmake"
+    "${CURRENT_PACKAGES_DIR}/share/zstdConfigVersion.cmake"
+    "${CURRENT_PACKAGES_DIR}/share/zstdTargets.cmake"
+    "${CURRENT_PACKAGES_DIR}/share/zstdTargets-debug.cmake"
+    "${CURRENT_PACKAGES_DIR}/share/zstdTargets-release.cmake"
+)
+
+file(INSTALL "${CMAKE_CURRENT_LIST_DIR}/zstdConfig.cmake" DESTINATION "${CURRENT_PACKAGES_DIR}/share/${PORT}")
+file(INSTALL "${CMAKE_CURRENT_LIST_DIR}/zstdConfig-version.cmake" DESTINATION "${CURRENT_PACKAGES_DIR}/share/${PORT}")
 
 if(VCPKG_TARGET_IS_WINDOWS AND VCPKG_LIBRARY_LINKAGE STREQUAL "dynamic")
     foreach(HEADER IN ITEMS zdict.h zstd.h zstd_errors.h)
diff '--color=auto' -ruNp vcpkg/ports/zstd/zstdConfig-version.cmake src/ports/zstd/zstdConfig-version.cmake
--- vcpkg/ports/zstd/zstdConfig-version.cmake	1970-01-01 01:00:00.000000000 +0100
+++ src/ports/zstd/zstdConfig-version.cmake	2023-05-23 04:02:20.811000831 +0200
@@ -0,0 +1,47 @@
+set(PACKAGE_VERSION "1.5.5")
+
+if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION)
+  set(PACKAGE_VERSION_COMPATIBLE OFF)
+else()
+  if("${PACKAGE_VERSION}" MATCHES "^([0-9]+)\\.")
+    set(CVF_VERSION_MAJOR "${CMAKE_MATCH_1}")
+    if(NOT CVF_VERSION_MAJOR VERSION_EQUAL 0)
+      string(REGEX REPLACE "^0+" "" CVF_VERSION_MAJOR "${CVF_VERSION_MAJOR}")
+    endif()
+  else()
+    set(CVF_VERSION_MAJOR "${PACKAGE_VERSION}")
+  endif()
+  if(PACKAGE_FIND_VERSION_RANGE)
+    math(EXPR CVF_VERSION_MAJOR_NEXT "${CVF_VERSION_MAJOR} + 1")
+    if(NOT PACKAGE_FIND_VERSION_MIN_MAJOR STREQUAL CVF_VERSION_MAJOR
+       OR((PACKAGE_FIND_VERSION_RANGE_MAX STREQUAL "INCLUDE" AND NOT PACKAGE_FIND_VERSION_MAX_MAJOR STREQUAL CVF_VERSION_MAJOR)
+        OR(PACKAGE_FIND_VERSION_RANGE_MAX STREQUAL "EXCLUDE" AND NOT PACKAGE_FIND_VERSION_MAX VERSION_LESS_EQUAL CVF_VERSION_MAJOR_NEXT)))
+      set(PACKAGE_VERSION_COMPATIBLE OFF)
+    elseif(PACKAGE_FIND_VERSION_MIN_MAJOR STREQUAL CVF_VERSION_MAJOR
+      AND((PACKAGE_FIND_VERSION_RANGE_MAX STREQUAL "INCLUDE" AND PACKAGE_VERSION VERSION_LESS_EQUAL PACKAGE_FIND_VERSION_MAX)
+        OR(PACKAGE_FIND_VERSION_RANGE_MAX STREQUAL "EXCLUDE" AND PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION_MAX)))
+      set(PACKAGE_VERSION_COMPATIBLE ON)
+    else()
+      set(PACKAGE_VERSION_COMPATIBLE OFF)
+    endif()
+  else()
+    if(PACKAGE_FIND_VERSION_MAJOR STREQUAL CVF_VERSION_MAJOR)
+      set(PACKAGE_VERSION_COMPATIBLE ON)
+    else()
+      set(PACKAGE_VERSION_COMPATIBLE OFF)
+    endif()
+    if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION)
+      set(PACKAGE_VERSION_EXACT ON)
+    endif()
+  endif()
+endif()
+
+if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "" OR "8" STREQUAL "")
+  return()
+endif()
+
+if(NOT CMAKE_SIZEOF_VOID_P STREQUAL "8")
+  math(EXPR installedBits "8 * 8")
+  set(PACKAGE_VERSION "${PACKAGE_VERSION} (${installedBits}bit)")
+  set(PACKAGE_VERSION_UNSUITABLE ON)
+endif()
diff '--color=auto' -ruNp vcpkg/ports/zstd/zstdConfig.cmake src/ports/zstd/zstdConfig.cmake
--- vcpkg/ports/zstd/zstdConfig.cmake	1970-01-01 01:00:00.000000000 +0100
+++ src/ports/zstd/zstdConfig.cmake	2023-05-23 05:22:05.613305085 +0200
@@ -0,0 +1,57 @@
+cmake_policy(PUSH)
+cmake_policy(VERSION 3.20)
+set(CMAKE_IMPORT_FILE_VERSION 1)
+
+enable_language(C)
+
+set(ZSTD_VERSION_STRING ${zstd_VERSION})
+set(ZSTD_VERSION ${ZSTD_VERSION_STRING})
+
+set(ZSTD_LIBRARY zstd::zstd)
+set(ZSTD_LIBRARIES ${ZSTD_LIBRARY})
+
+get_filename_component(ZSTD_INCLUDE_DIRS ${CMAKE_CURRENT_LIST_DIR} DIRECTORY)
+get_filename_component(ZSTD_INCLUDE_DIRS ${ZSTD_INCLUDE_DIRS} DIRECTORY)
+set(ZSTD_INCLUDE_DIRS ${ZSTD_INCLUDE_DIRS}/include)
+
+include(CMakeFindDependencyMacro)
+find_dependency(Threads REQUIRED)
+
+set(ZSTD_LINK_LIBRARIES Threads::Threads)
+
+if(UNIX)
+  list(APPEND ZSTD_LINK_LIBRARIES m)
+endif()
+
+find_library(ZSTD_IMPORT_LOCATION NAMES zstd
+    PATHS ${CMAKE_CURRENT_LIST_DIR}/../../lib
+    NO_DEFAULT_PATH NO_CACHE REQUIRED)
+
+if(NOT TARGET zstd::zstd)
+  add_library(zstd::zstd UNKNOWN IMPORTED)
+  set_target_properties(zstd::zstd PROPERTIES
+    INTERFACE_INCLUDE_DIRECTORIES "${ZSTD_INCLUDE_DIRS}"
+    INTERFACE_LINK_LIBRARIES "${ZSTD_LINK_LIBRARIES}"
+    IMPORTED_LOCATION "${ZSTD_IMPORT_LOCATION}"
+    IMPORTED_LINK_INTERFACE_LANGUAGES "C")
+endif()
+
+if(NOT TARGET zstd::libzstd_shared)
+  add_library(zstd::libzstd_shared ALIAS zstd::zstd)
+endif()
+
+if(NOT TARGET zstd::libzstd_static)
+  add_library(zstd::libzstd_static ALIAS zstd::zstd)
+endif()
+
+string(REPLACE "." ";" ZSTD_VERSION_LIST ${ZSTD_VERSION})
+list(GET ZSTD_VERSION_LIST 0 ZSTD_VERSION_MAJOR)
+list(GET ZSTD_VERSION_LIST 1 ZSTD_VERSION_MINOR)
+list(GET ZSTD_VERSION_LIST 2 ZSTD_VERSION_PATCH)
+set(ZSTD_VERSION_TWEAK 0)
+
+set(ZSTD_INCLUDE_DIR "${ZSTD_INCLUDE_DIRS}" CACHE PATH "")
+set(ZSTD_FOUND 1)
+
+set(CMAKE_IMPORT_FILE_VERSION)
+cmake_policy(POP)
