cmake_minimum_required(VERSION 3.22 FATAL_ERROR)
project(main VERSION 0.1.0 LANGUAGES CXX)

add_executable(main main.cpp main.manifest)
target_compile_features(main PRIVATE cxx_std_23)

if(WIN32)
  target_compile_definitions(main PRIVATE NOMINMAX WIN32_LEAN_AND_MEAN)
endif()

find_package(ICU REQUIRED COMPONENTS data uc i18n)
target_link_libraries(main PRIVATE ICU::data ICU::uc ICU::i18n)

get_filename_component(ICU_DATA_NAME "${ICU_DATA}" NAME)
if(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/${ICU_DATA_NAME})
  file(COPY ${ICU_DATA} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
endif()

if(WIN32)
  if(DEFINED CMAKE_BUILD_TYPE)
    set(SHARED_CONFIGS ${CMAKE_BUILD_TYPE})
  else()
    set(SHARED_CONFIGS ${CMAKE_CONFIGURATION_TYPES})
  endif()
  if(NOT BUILD_SHARED_LIBS)
    list(REMOVE_ITEM SHARED_CONFIGS Release)
  endif()
  foreach(CONFIG ${SHARED_CONFIGS})
    foreach(TARGET data uc i18n)
      get_target_property(ICU_FILE ICU::${TARGET}_shared IMPORTED_LOCATION)
      get_filename_component(ICU_NAME "${ICU_FILE}" NAME)
      if(NOT EXISTS ${CMAKE_CURRENT_BINARY_DIR}/${CONFIG}/${ICU_NAME})
        file(COPY ${ICU_FILE} DESTINATION ${CONFIG})
      endif()
    endforeach()
  endforeach()
endif()
