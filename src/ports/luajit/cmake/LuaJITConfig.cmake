# LuaJIT
#
#   find_package(LuaJIT REQUIRED)
#   target_link_libraries(main PRIVATE LuaJIT::LuaJIT)
#
#   file(COPY ${LUAJIT_JIT_DIR} DESTINATION ${CMAKE_BINARY_DIR})
#
#   find_program(LUAJIT_EXECUTABLE luajit REQUIRED)
#
cmake_policy(PUSH)
cmake_policy(VERSION 3.20)
set(CMAKE_IMPORT_FILE_VERSION 1)

set(LUAJIT_VERSION_STRING ${LuaJIT_VERSION})
set(LUAJIT_VERSION ${LUAJIT_VERSION_STRING})

set(LUAJIT_LIBRARIES LuaJIT::LuaJIT)

include(CMakeFindDependencyMacro)
find_dependency(Threads REQUIRED)

set(LUAJIT_LINK_LIBRARIES Threads::Threads)

if(UNIX)
  list(APPEND LUAJIT_LINK_LIBRARIES m)
endif()

set(LUAJIT_DEFINITIONS_SHARED)

if(WIN32)
  list(APPEND LUAJIT_DEFINITIONS_SHARED LUA_BUILD_AS_DLL)
endif()

include(AceImportLibrary)
ace_import_library(LuaJIT::LuaJIT C NAMES luajit
  HEADERS_LOCATIONS luajit HEADERS lua.h
  COMPILE_DEFINITIONS_SHARED ${LUAJIT_DEFINITIONS_SHARED}
  LINK_LIBRARIES ${LUAJIT_LINK_LIBRARIES})

get_target_property(LUAJIT_INCLUDE_DIRS
  LuaJIT::LuaJIT INTERFACE_INCLUDE_DIRECTORIES)

string(REPLACE "." ";" LUAJIT_VERSION_LIST ${LUAJIT_VERSION})
list(GET LUAJIT_VERSION_LIST 0 LUAJIT_VERSION_MAJOR)
list(GET LUAJIT_VERSION_LIST 1 LUAJIT_VERSION_MINOR)
list(GET LUAJIT_VERSION_LIST 2 LUAJIT_VERSION_PATCH)
set(LUAJIT_VERSION_TWEAK 0)

set(LUAJIT_JIT_DIR "${ACE_TARGET_ROOT}/share/luajit/jit" CACHE PATH "")
set(LUAJIT_INCLUDE_DIR "${LUAJIT_INCLUDE_DIRS}" CACHE PATH "")
set(LUAJIT_LIBRARY "${LUAJIT_LIBRARIES}" CACHE STRING "")
set(LUAJIT_FOUND 1)

set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
