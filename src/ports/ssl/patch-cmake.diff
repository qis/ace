diff --git i/CMakeLists.txt w/CMakeLists.txt
index 03963a5..2d6822d 100644
--- i/CMakeLists.txt
+++ w/CMakeLists.txt
@@ -79,7 +79,7 @@ if(WIN32 OR (CMAKE_SYSTEM_NAME MATCHES "MINGW"))
 	add_definitions(-D__USE_MINGW_ANSI_STDIO)
 endif()
 
-set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2 -Wall")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2")
 
 if(CMAKE_SYSTEM_NAME MATCHES "HP-UX")
 	if(CMAKE_C_COMPILER MATCHES "gcc")
@@ -118,9 +118,6 @@ if(WIN32)
 	add_definitions(-D_REENTRANT -D_POSIX_THREAD_SAFE_FUNCTIONS)
 	add_definitions(-DCPPFLAGS -DNO_SYSLOG -DNO_CRYPT)
 	add_definitions(-DWIN32_LEAN_AND_MEAN)
-	if(NOT CMAKE_SYSTEM_NAME MATCHES "WindowsStore")
-		add_definitions(-D_WIN32_WINNT=0x0600)
-	endif()
 	set(PLATFORM_LIBS ${PLATFORM_LIBS} ws2_32 bcrypt)
 endif()
 
@@ -168,7 +165,7 @@ if(MSVC)
 	string(REPLACE "C" " -wd" MSVC_DISABLED_WARNINGS_STR
 		${MSVC_DISABLED_WARNINGS_LIST})
 	string(REGEX REPLACE "[/-]W[1234][ ]?" "" CMAKE_C_FLAGS ${CMAKE_C_FLAGS})
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -MP -W4 ${MSVC_DISABLED_WARNINGS_STR}")
+	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -MP ${MSVC_DISABLED_WARNINGS_STR}")
 endif()
 
 check_function_exists(asprintf HAVE_ASPRINTF)
@@ -309,15 +306,16 @@ if(ENABLE_ASM)
 			set(HOST_ASM_ELF_ARMV4 true)
 		elseif(CMAKE_SYSTEM_NAME STREQUAL "SunOS" AND "${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "i386")
 			set(HOST_ASM_ELF_X86_64 true)
+    else()
+      message(FATAL_ERROR "Could not enable ASM.")
 		endif()
 		add_definitions(-DHAVE_GNU_STACK)
 	elseif(APPLE AND "${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64")
 		set(HOST_ASM_MACOSX_X86_64 true)
-	elseif(MSVC AND ("${CMAKE_GENERATOR}" MATCHES "Win64" OR "${CMAKE_GENERATOR_PLATFORM}" STREQUAL "x64"))
-		set(HOST_ASM_MASM_X86_64 true)
-		ENABLE_LANGUAGE(ASM_MASM)
-	elseif(CMAKE_SYSTEM_NAME MATCHES "MINGW" AND "${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "x86_64")
+	elseif(WIN32 AND "${CMAKE_SYSTEM_PROCESSOR}" MATCHES "AMD64")
 		set(HOST_ASM_MINGW64_X86_64 true)
+  else()
+    message(FATAL_ERROR "Could not enable ASM.")
 	endif()
 endif()
 
@@ -363,9 +361,6 @@ if(LIBRESSL_APPS)
 endif()
 add_subdirectory(tls)
 add_subdirectory(include)
-if(NOT MSVC)
-	add_subdirectory(man)
-endif()
 # Tests require the openssl executable and are unavailable when building shared libraries
 if(LIBRESSL_APPS AND LIBRESSL_TESTS)
 	add_subdirectory(tests)
@@ -401,8 +396,6 @@ if(ENABLE_LIBRESSL_INSTALL)
 			string(REPLACE ".in" "" new_file "${filename}")
 			configure_file(${filename} pkgconfig/${new_file} @ONLY)
 		endforeach()
-		install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/pkgconfig
-			DESTINATION ${CMAKE_INSTALL_LIBDIR})
 	endif()
 endif(ENABLE_LIBRESSL_INSTALL)
 
@@ -412,11 +405,6 @@ else()
 	set(CONF_DIR "${CMAKE_INSTALL_PREFIX}/etc/ssl")
 endif()
 
-if(ENABLE_LIBRESSL_INSTALL)
-	install(FILES cert.pem openssl.cnf x509v3.cnf DESTINATION ${CONF_DIR})
-	install(DIRECTORY DESTINATION ${CONF_DIR}/certs)
-endif(ENABLE_LIBRESSL_INSTALL)
-
 if(NOT TARGET uninstall)
 	configure_file(
 		"${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
diff --git i/crypto/CMakeLists.txt w/crypto/CMakeLists.txt
index 9b66d9f..c82068f 100644
--- i/crypto/CMakeLists.txt
+++ w/crypto/CMakeLists.txt
@@ -942,15 +942,6 @@ endif()
 
 if(NOT ENABLE_ASM)
 	add_definitions(-DOPENSSL_NO_ASM)
-else()
-	if(MSVC)
-		if((NOT "${CMAKE_GENERATOR}" MATCHES "Win64") AND
-		   (NOT "${CMAKE_GENERATOR_PLATFORM}" STREQUAL "x64"))
-			add_definitions(-DOPENSSL_NO_ASM)
-		endif()
-	elseif(WIN32)
-		add_definitions(-DOPENSSL_NO_ASM)
-	endif()
 endif()
 
 if(NOT "${OPENSSLDIR}" STREQUAL "")
@@ -1007,17 +998,22 @@ target_link_libraries(crypto ${PLATFORM_LIBS})
 if (WIN32)
 	set(CRYPTO_POSTFIX -${CRYPTO_MAJOR_VERSION})
 endif()
-set_target_properties(crypto PROPERTIES
-	OUTPUT_NAME crypto${CRYPTO_POSTFIX}
-	ARCHIVE_OUTPUT_NAME crypto${CRYPTO_POSTFIX})
-set_target_properties(crypto PROPERTIES VERSION
-	${CRYPTO_VERSION} SOVERSION ${CRYPTO_MAJOR_VERSION})
+
+if(BUILD_SHARED_LIBS)
+  set(INSTALL_LIBDIR_SUFFIX $<$<PLATFORM_ID:Windows>:/shared>)
+  set_target_properties(crypto PROPERTIES
+    MSVC_RUNTIME_LIBRARY MultiThreadedDLL)
+else()
+  set(INSTALL_LIBDIR_SUFFIX $<$<PLATFORM_ID:Windows>:/static>)
+  set_target_properties(crypto PROPERTIES
+    MSVC_RUNTIME_LIBRARY MultiThreaded)
+endif()
 
 if(ENABLE_LIBRESSL_INSTALL)
 	install(
 		TARGETS crypto
-		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}${INSTALL_LIBDIR_SUFFIX}
+		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}${INSTALL_LIBDIR_SUFFIX}
 		RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
 	)
 endif(ENABLE_LIBRESSL_INSTALL)
diff --git i/include/CMakeLists.txt w/include/CMakeLists.txt
index 1d1a159..d37c3bb 100644
--- i/include/CMakeLists.txt
+++ w/include/CMakeLists.txt
@@ -1,4 +1,4 @@
-if(ENABLE_LIBRESSL_INSTALL)
+if(ENABLE_LIBRESSL_INSTALL AND NOT SKIP_INSTALL_HEADERS)
 	install(DIRECTORY .
 	        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
 	        PATTERN "CMakeLists.txt" EXCLUDE
diff --git i/ssl/CMakeLists.txt w/ssl/CMakeLists.txt
index cec2417..f1f778f 100644
--- i/ssl/CMakeLists.txt
+++ w/ssl/CMakeLists.txt
@@ -84,17 +84,22 @@ target_link_libraries(ssl crypto ${PLATFORM_LIBS})
 if (WIN32)
 	set(SSL_POSTFIX -${SSL_MAJOR_VERSION})
 endif()
-set_target_properties(ssl PROPERTIES
-	OUTPUT_NAME ssl${SSL_POSTFIX}
-	ARCHIVE_OUTPUT_NAME ssl${SSL_POSTFIX})
-set_target_properties(ssl PROPERTIES VERSION ${SSL_VERSION}
-	SOVERSION ${SSL_MAJOR_VERSION})
+
+if(BUILD_SHARED_LIBS)
+  set(INSTALL_LIBDIR_SUFFIX $<$<PLATFORM_ID:Windows>:/shared>)
+  set_target_properties(ssl PROPERTIES
+    MSVC_RUNTIME_LIBRARY MultiThreadedDLL)
+else()
+  set(INSTALL_LIBDIR_SUFFIX $<$<PLATFORM_ID:Windows>:/static>)
+  set_target_properties(ssl PROPERTIES
+    MSVC_RUNTIME_LIBRARY MultiThreaded)
+endif()
 
 if(ENABLE_LIBRESSL_INSTALL)
 	install(
 		TARGETS ssl
-		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}${INSTALL_LIBDIR_SUFFIX}
+		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}${INSTALL_LIBDIR_SUFFIX}
 		RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
 	)
 endif(ENABLE_LIBRESSL_INSTALL)
diff --git i/tls/CMakeLists.txt w/tls/CMakeLists.txt
index 7827a5e..f68e688 100644
--- i/tls/CMakeLists.txt
+++ w/tls/CMakeLists.txt
@@ -55,17 +55,22 @@ target_link_libraries(tls ${PLATFORM_LIBS})
 if (WIN32)
 	set(TLS_POSTFIX -${TLS_MAJOR_VERSION})
 endif()
-set_target_properties(tls PROPERTIES
-	OUTPUT_NAME tls${TLS_POSTFIX}
-	ARCHIVE_OUTPUT_NAME tls${TLS_POSTFIX})
-set_target_properties(tls PROPERTIES VERSION ${TLS_VERSION}
-	SOVERSION ${TLS_MAJOR_VERSION})
+
+if(BUILD_SHARED_LIBS)
+  set(INSTALL_LIBDIR_SUFFIX $<$<PLATFORM_ID:Windows>:/shared>)
+  set_target_properties(tls PROPERTIES
+    MSVC_RUNTIME_LIBRARY MultiThreadedDLL)
+else()
+  set(INSTALL_LIBDIR_SUFFIX $<$<PLATFORM_ID:Windows>:/static>)
+  set_target_properties(tls PROPERTIES
+    MSVC_RUNTIME_LIBRARY MultiThreaded)
+endif()
 
 if(ENABLE_LIBRESSL_INSTALL)
 	install(
 		TARGETS tls
-		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}${INSTALL_LIBDIR_SUFFIX}
+		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}${INSTALL_LIBDIR_SUFFIX}
 		RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
 	)
 endif(ENABLE_LIBRESSL_INSTALL)
