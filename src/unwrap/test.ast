TranslationUnitDecl 0x5605aba9c968 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5605aba9d670 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5605aba9cf30 '__int128'
|-TypedefDecl 0x5605aba9d6e8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5605aba9cf50 'unsigned __int128'
|-TypedefDecl 0x5605abaf4338 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x5605aba9d7f0 '__NSConstantString_tag'
|   `-CXXRecord 0x5605aba9d748 '__NSConstantString_tag'
|-TypedefDecl 0x5605aba9d250 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5605aba9d200 'char *'
|   `-BuiltinType 0x5605aba9ca10 'char'
|-TypedefDecl 0x5605aba9d5f8 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list '__va_list_tag[1]'
| `-ConstantArrayType 0x5605aba9d5a0 '__va_list_tag[1]' 1 
|   `-RecordType 0x5605aba9d360 '__va_list_tag'
|     `-CXXRecord 0x5605aba9d2b0 '__va_list_tag'
|-NamespaceDecl 0x5605abaf4398 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:308:1, line:327:1> line:308:11 std
| |-TypedefDecl 0x5605abaf4440 <line:310:3, col:26> col:26 referenced size_t 'unsigned long'
| | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |-TypedefDecl 0x5605abaf44b8 <line:311:3, col:28> col:28 ptrdiff_t 'long'
| | `-BuiltinType 0x5605aba9ca90 'long'
| |-TypedefDecl 0x5605abaf4568 <line:314:3, col:29> col:29 referenced nullptr_t 'decltype(nullptr)':'std::nullptr_t'
| | `-DecltypeType 0x5605abaf4520 'decltype(nullptr)' sugar
| |   |-CXXNullPtrLiteralExpr 0x5605abaf4510 <col:20> 'std::nullptr_t'
| |   `-BuiltinType 0x5605aba9d180 'std::nullptr_t'
| `-LinkageSpecDecl 0x5605abaf45e8 <line:320:3, line:325:3> line:320:10 C++
|   `-FunctionDecl 0x5605abaf46d0 <col:16, line:325:3> line:321:15 __terminate 'void () __attribute__((noreturn)) noexcept' inline
|     |-CompoundStmt 0x5605abaf4a38 <line:322:3, line:325:3>
|     | |-DeclStmt 0x5605abaf4990 <line:323:5, col:83>
|     | | `-FunctionDecl 0x5605abaf4840 parent 0x5605abaf45e8 <col:5, col:82> col:10 used terminate 'void () __attribute__((noreturn)) noexcept'
|     | |   |-ColdAttr 0x5605abaf48f8 <col:73>
|     | |   `-VisibilityAttr 0x5605abaf4968 <line:317:13> Implicit Default
|     | `-CallExpr 0x5605abaf4a18 <line:324:5, col:15> 'void'
|     |   `-ImplicitCastExpr 0x5605abaf4a00 <col:5> 'void (*)() __attribute__((noreturn)) noexcept' <FunctionToPointerDecay>
|     |     `-DeclRefExpr 0x5605abaf49a8 <col:5> 'void () __attribute__((noreturn)) noexcept' lvalue Function 0x5605abaf4840 'terminate' 'void () __attribute__((noreturn)) noexcept'
|     |-AlwaysInlineAttr 0x5605abaf4778 <line:320:46> always_inline
|     `-VisibilityAttr 0x5605abaf47e8 <line:317:13> Implicit Default
|-NamespaceDecl 0x5605abaf4aa8 prev 0x5605abaf4398 <line:341:1, line:344:1> line:341:11 std
| |-original Namespace 0x5605abaf4398 'std'
| `-NamespaceDecl 0x5605abaf4b40 <line:343:3, col:69> col:20 __cxx11 inline
|   `-AbiTagAttr 0x5605abaf4bc8 <col:43, col:63> cxx11
|-NamespaceDecl 0x5605abaf4c50 <line:345:1, line:348:1> line:345:11 __gnu_cxx
| `-NamespaceDecl 0x5605abaf4d00 <line:347:3, col:69> col:20 __cxx11 inline
|   `-AbiTagAttr 0x5605abaf4d88 <col:43, col:63> cxx11
|-NamespaceDecl 0x5605abaf4e10 prev 0x5605abaf4aa8 <line:534:1, line:556:1> line:534:11 std
| |-original Namespace 0x5605abaf4398 'std'
| `-FunctionDecl 0x5605abaf4ee0 <line:541:3, line:554:3> line:543:3 used constexpr __is_constant_evaluated 'bool () noexcept' inline
|   |-CompoundStmt 0x5605abaf50c0 <line:544:3, line:554:3>
|   | `-IfStmt 0x5605abaf5090 <line:547:5, col:56> has_else consteval
|   |   |-CompoundStmt 0x5605abaf5040 <col:18, col:33>
|   |   | `-ReturnStmt 0x5605abaf5030 <col:20, col:27>
|   |   |   `-CXXBoolLiteralExpr 0x5605abaf5020 <col:27> 'bool' true
|   |   `-CompoundStmt 0x5605abaf5078 <col:40, col:56>
|   |     `-ReturnStmt 0x5605abaf5068 <col:42, col:49>
|   |       `-CXXBoolLiteralExpr 0x5605abaf5058 <col:49> 'bool' false
|   |-AlwaysInlineAttr 0x5605abaf4f88 <line:541:18> always_inline
|   `-VisibilityAttr 0x5605abaf4ff8 <line:536:13> Implicit Default
|-NamespaceDecl 0x5605abaf50e0 prev 0x5605abaf4e10 <line:573:1, line:584:1> line:573:11 std
| |-original Namespace 0x5605abaf4398 'std'
| `-LinkageSpecDecl 0x5605abb23058 <line:577:3, line:216:29> line:577:10 C++
|   `-FunctionDecl 0x5605abb23420 <line:56:28, line:216:29> line:579:3 __glibcxx_assert_fail 'void (const char *, int, const char *, const char *) __attribute__((noreturn)) noexcept'
|     |-ParmVarDecl 0x5605abb230c8 <line:580:6, col:18> col:18 __file 'const char *'
|     |-ParmVarDecl 0x5605abb23150 <col:26, col:30> col:30 __line 'int'
|     |-ParmVarDecl 0x5605abb231d8 <col:38, col:50> col:50 __function 'const char *'
|     |-ParmVarDecl 0x5605abb23260 <line:581:6, col:18> col:18 __condition 'const char *'
|     `-VisibilityAttr 0x5605abb23500 <line:575:13> Implicit Default
|-NamespaceDecl 0x5605abb23560 prev 0x5605abaf50e0 <line:601:1, line:607:1> line:601:11 std
| |-original Namespace 0x5605abaf4398 'std'
| `-FunctionDecl 0x5605abb23648 <line:603:3, line:606:5> line:605:3 __glibcxx_assert_fail 'void ()' inline
|   |-CompoundStmt 0x5605abb23798 <line:606:3, col:5>
|   |-AlwaysInlineAttr 0x5605abb236f0 <line:603:18> always_inline
|   `-VisibilityAttr 0x5605abb23748 <col:36, col:60> Default
|-NamespaceDecl 0x5605abb237d0 prev 0x5605abb23560 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:65:1, line:4018:1> line:65:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-VisibilityAttr 0x5605abb23840 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
| |-ClassTemplateDecl 0x5605abb23a28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:69:3, line:70:11> col:11 reference_wrapper
| | |-TemplateTypeParmDecl 0x5605abb238a0 <line:69:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb23978 <line:70:5, col:11> col:11 class reference_wrapper
| |   `-PointerAttr 0x5605abb23c70 <<invalid sloc>> Implicit
| |-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| | |-TemplateTypeParmDecl 0x5605abb23cd8 <line:86:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abb23d78 <col:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| | |-CXXRecordDecl 0x5605abb23e00 <line:87:5, line:97:5> line:87:12 struct integral_constant definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abb53de0 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0x5605abb53ea0 <line:89:7, col:36> col:28 referenced value 'const _Tp' static inline constexpr cinit
| | | | `-DeclRefExpr 0x5605abb53f08 <col:36> '_Tp' NonTypeTemplateParm 0x5605abb23d78 '__v' '_Tp'
| | | |-TypeAliasDecl 0x5605abb53f58 <line:90:7, col:26> col:13 referenced value_type '_Tp'
| | | | `-TemplateTypeParmType 0x5605abb23d30 '_Tp' dependent depth 0 index 0
| | | |   `-TemplateTypeParm 0x5605abb23cd8 '_Tp'
| | | |-TypeAliasDecl 0x5605abb54138 <line:91:7, col:46> col:13 type 'integral_constant<_Tp, __v>'
| | | | `-ElaboratedType 0x5605abb540b0 'integral_constant<_Tp, __v>' sugar dependent
| | | |   `-TemplateSpecializationType 0x5605abb54050 'integral_constant<_Tp, __v>' sugar dependent
| | | |     |-name: 'integral_constant':'std::integral_constant' qualified
| | | |     | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| | | |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |     | `-TemplateTypeParmType 0x5605abb23d30 '_Tp' dependent depth 0 index 0
| | | |     |   `-TemplateTypeParm 0x5605abb23cd8 '_Tp'
| | | |     |-TemplateArgument expr '__v'
| | | |     | `-DeclRefExpr 0x5605abb54010 <line:91:43> '_Tp' NonTypeTemplateParm 0x5605abb23d78 '__v' '_Tp'
| | | |     `-InjectedClassNameType 0x5605abb53d40 'integral_constant<_Tp, __v>' dependent
| | | |       `-CXXRecord 0x5605abb23e00 'integral_constant'
| | | |-CXXConversionDecl 0x5605abb542f0 <line:92:7, col:70> col:17 constexpr operator type-parameter-0-0 'value_type () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abb54530 <col:54, col:70>
| | | |   `-ReturnStmt 0x5605abb54520 <col:56, col:63>
| | | |     `-DeclRefExpr 0x5605abb54500 <col:63> 'const _Tp' lvalue Var 0x5605abb53ea0 'value' 'const _Tp'
| | | `-CXXMethodDecl 0x5605abb543f0 <line:95:7, col:72> col:28 constexpr operator() 'value_type () const noexcept' implicit-inline
| | |   `-CompoundStmt 0x5605abb54578 <col:56, col:72>
| | |     `-ReturnStmt 0x5605abb54568 <col:58, col:65>
| | |       `-DeclRefExpr 0x5605abb54548 <col:65> 'const _Tp' lvalue Var 0x5605abb53ea0 'value' 'const _Tp'
| | |-ClassTemplateSpecializationDecl 0x5605abb549b0 <line:86:3, line:97:5> line:87:12 struct integral_constant definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'bool'
| | | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abb87d10 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0x5605abb87e08 <line:89:7, col:36> col:28 referenced value 'const bool' implicit_instantiation static inline constexpr cinit
| | | | |-value: Int 1
| | | | `-SubstNonTypeTemplateParmExpr 0x5605abc3d4f0 <col:36> 'bool'
| | | |   |-NonTypeTemplateParmDecl 0x5605abb23d78 <line:86:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| | | |   `-CXXBoolLiteralExpr 0x5605abc3d4e0 <line:89:36> 'bool' true
| | | |-TypeAliasDecl 0x5605abb87e98 <line:90:7, col:26> col:13 referenced value_type 'bool'
| | | | `-SubstTemplateTypeParmType 0x5605abb87dc0 'bool' sugar typename depth 0 index 0 _Tp
| | | |   |-ClassTemplateSpecialization 0x5605abb549b0 'integral_constant'
| | | |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |-TypeAliasDecl 0x5605abb88040 <line:91:7, col:46> col:13 referenced type 'integral_constant<bool, true>':'std::integral_constant<bool, true>'
| | | | `-ElaboratedType 0x5605abb87fe0 'integral_constant<bool, true>' sugar
| | | |   `-TemplateSpecializationType 0x5605abb87f80 'integral_constant<bool, true>' sugar
| | | |     |-name: 'integral_constant':'std::integral_constant' qualified
| | | |     | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| | | |     |-TemplateArgument type 'bool'
| | | |     | `-SubstTemplateTypeParmType 0x5605abb87dc0 'bool' sugar typename depth 0 index 0 _Tp
| | | |     |   |-ClassTemplateSpecialization 0x5605abb549b0 'integral_constant'
| | | |     |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |     |-TemplateArgument expr 'true'
| | | |     | `-ConstantExpr 0x5605abb87f60 <line:91:43> 'bool'
| | | |     |   |-value: Int 1
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abb87f18 <col:43> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abb23d78 <line:86:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| | | |     |     `-CXXBoolLiteralExpr 0x5605abb87f08 <line:91:43> 'bool' true
| | | |     `-RecordType 0x5605abb54ac0 'std::integral_constant<bool, true>'
| | | |       `-ClassTemplateSpecialization 0x5605abb549b0 'integral_constant'
| | | |-CXXConversionDecl 0x5605abb881e8 <line:92:7, col:70> col:17 constexpr operator bool 'value_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abb542f0
| | | `-CXXMethodDecl 0x5605abb882f8 <line:95:7, col:72> col:28 constexpr operator() 'value_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abb543f0
| | |-ClassTemplateSpecializationDecl 0x5605abb577e0 <line:86:3, line:97:5> line:87:12 struct integral_constant definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'bool'
| | | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abb89500 <col:5, col:12> col:12 implicit struct integral_constant
| | | |-VarDecl 0x5605abb895f8 <line:89:7, col:36> col:28 referenced value 'const bool' implicit_instantiation static inline constexpr cinit
| | | | |-value: Int 0
| | | | `-SubstNonTypeTemplateParmExpr 0x5605abc24e00 <col:36> 'bool'
| | | |   |-NonTypeTemplateParmDecl 0x5605abb23d78 <line:86:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| | | |   `-CXXBoolLiteralExpr 0x5605abc24df0 <line:89:36> 'bool' false
| | | |-TypeAliasDecl 0x5605abb89688 <line:90:7, col:26> col:13 referenced value_type 'bool'
| | | | `-SubstTemplateTypeParmType 0x5605abb895b0 'bool' sugar typename depth 0 index 0 _Tp
| | | |   |-ClassTemplateSpecialization 0x5605abb577e0 'integral_constant'
| | | |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |-TypeAliasDecl 0x5605abb89830 <line:91:7, col:46> col:13 type 'integral_constant<bool, false>':'std::integral_constant<bool, false>'
| | | | `-ElaboratedType 0x5605abb897d0 'integral_constant<bool, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abb89770 'integral_constant<bool, false>' sugar
| | | |     |-name: 'integral_constant':'std::integral_constant' qualified
| | | |     | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| | | |     |-TemplateArgument type 'bool'
| | | |     | `-SubstTemplateTypeParmType 0x5605abb895b0 'bool' sugar typename depth 0 index 0 _Tp
| | | |     |   |-ClassTemplateSpecialization 0x5605abb577e0 'integral_constant'
| | | |     |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abb89750 <line:91:43> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abb89708 <col:43> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abb23d78 <line:86:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| | | |     |     `-CXXBoolLiteralExpr 0x5605abb896f8 <line:91:43> 'bool' false
| | | |     `-RecordType 0x5605abb578f0 'std::integral_constant<bool, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abb577e0 'integral_constant'
| | | |-CXXConversionDecl 0x5605abb89960 <line:92:7, col:70> col:17 constexpr operator bool 'value_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abb542f0
| | | `-CXXMethodDecl 0x5605abb89a70 <line:95:7, col:72> col:28 constexpr operator() 'value_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abb543f0
| | `-ClassTemplateSpecializationDecl 0x5605abbf62c8 <line:86:3, line:97:5> line:87:12 struct integral_constant definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'unsigned long'
| |   | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |   |-TemplateArgument integral '0UL'
| |   |-CXXRecordDecl 0x5605abbf6518 <col:5, col:12> col:12 implicit struct integral_constant
| |   |-VarDecl 0x5605abbf6ef8 <line:89:7, col:28> col:28 value 'const unsigned long' implicit_instantiation static constexpr
| |   |-TypeAliasDecl 0x5605abbf6f88 <line:90:7, col:26> col:13 referenced value_type 'unsigned long'
| |   | `-SubstTemplateTypeParmType 0x5605abbf65c0 'unsigned long' sugar typename depth 0 index 0 _Tp
| |   |   |-ClassTemplateSpecialization 0x5605abbf62c8 'integral_constant'
| |   |   `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |   |-TypeAliasDecl 0x5605abbf7140 <line:91:7, col:46> col:13 type 'integral_constant<unsigned long, 0UL>':'std::integral_constant<unsigned long, 0>'
| |   | `-ElaboratedType 0x5605abbf70e0 'integral_constant<unsigned long, 0UL>' sugar
| |   |   `-TemplateSpecializationType 0x5605abbf7080 'integral_constant<unsigned long, 0UL>' sugar
| |   |     |-name: 'integral_constant':'std::integral_constant' qualified
| |   |     | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |   |     |-TemplateArgument type 'unsigned long'
| |   |     | `-SubstTemplateTypeParmType 0x5605abbf65c0 'unsigned long' sugar typename depth 0 index 0 _Tp
| |   |     |   |-ClassTemplateSpecialization 0x5605abbf62c8 'integral_constant'
| |   |     |   `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |   |     |-TemplateArgument expr '0UL'
| |   |     | `-ConstantExpr 0x5605abbf7060 <line:91:43> 'unsigned long'
| |   |     |   |-value: Int 0
| |   |     |   `-SubstNonTypeTemplateParmExpr 0x5605abbf7018 <col:43> 'unsigned long'
| |   |     |     |-NonTypeTemplateParmDecl 0x5605abb23d78 <line:86:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| |   |     |     `-IntegerLiteral 0x5605abbf6ff8 <line:91:43> 'unsigned long' 0
| |   |     `-RecordType 0x5605abbf63d0 'std::integral_constant<unsigned long, 0>'
| |   |       `-ClassTemplateSpecialization 0x5605abbf62c8 'integral_constant'
| |   |-CXXConversionDecl 0x5605abbf72b8 <line:92:7, col:70> col:17 constexpr operator unsigned long 'value_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abb542f0
| |   `-CXXMethodDecl 0x5605abbf73c8 <line:95:7, col:72> col:28 constexpr operator() 'value_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abb543f0
| |-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| | |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| | `-TypeAliasDecl 0x5605abb547d8 <line:107:5, col:56> col:11 __bool_constant 'integral_constant<bool, __v>'
| |   `-ElaboratedType 0x5605abb54750 'integral_constant<bool, __v>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abb546f0 'integral_constant<bool, __v>' dependent
| |       |-name: 'integral_constant':'std::integral_constant' qualified
| |       | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |       |-TemplateArgument type 'bool'
| |       | `-BuiltinType 0x5605aba9c9f0 'bool'
| |       `-TemplateArgument expr '__v'
| |         `-DeclRefExpr 0x5605abb54648 <line:107:53> 'bool' NonTypeTemplateParm 0x5605abb545c0 '__v' 'bool'
| |-TypeAliasDecl 0x5605abb57698 <line:111:3, col:42> col:9 referenced true_type '__bool_constant<true>':'std::integral_constant<bool, true>'
| | `-ElaboratedType 0x5605abb54bf0 '__bool_constant<true>' sugar
| |   `-TemplateSpecializationType 0x5605abb54ba0 '__bool_constant<true>' sugar alias
| |     |-name: '__bool_constant':'std::__bool_constant' qualified
| |     | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |     |-TemplateArgument expr 'true'
| |     | `-ConstantExpr 0x5605abb548d8 <line:111:38> 'bool'
| |     |   |-value: Int 1
| |     |   `-CXXBoolLiteralExpr 0x5605abb548b0 <col:38> 'bool' true
| |     `-ElaboratedType 0x5605abb54b40 'integral_constant<bool, true>' sugar
| |       `-TemplateSpecializationType 0x5605abb54ae0 'integral_constant<bool, true>' sugar
| |         |-name: 'integral_constant':'std::integral_constant' qualified
| |         | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |         |-TemplateArgument type 'bool'
| |         | `-BuiltinType 0x5605aba9c9f0 'bool'
| |         |-TemplateArgument expr 'true'
| |         | `-ConstantExpr 0x5605abb54988 <line:107:53> 'bool'
| |         |   |-value: Int 1
| |         |   `-SubstNonTypeTemplateParmExpr 0x5605abb54940 <col:53> 'bool'
| |         |     |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |         |     `-CXXBoolLiteralExpr 0x5605abb54930 <line:107:53> 'bool' true
| |         `-RecordType 0x5605abb54ac0 'std::integral_constant<bool, true>'
| |           `-ClassTemplateSpecialization 0x5605abb549b0 'integral_constant'
| |-TypeAliasDecl 0x5605abb57a98 <line:114:3, col:43> col:9 referenced false_type '__bool_constant<false>':'std::integral_constant<bool, false>'
| | `-ElaboratedType 0x5605abb57a20 '__bool_constant<false>' sugar
| |   `-TemplateSpecializationType 0x5605abb579d0 '__bool_constant<false>' sugar alias
| |     |-name: '__bool_constant':'std::__bool_constant' qualified
| |     | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |     |-TemplateArgument expr 'false'
| |     | `-ConstantExpr 0x5605abb57708 <line:114:38> 'bool'
| |     |   |-value: Int 0
| |     |   `-CXXBoolLiteralExpr 0x5605abb576f8 <col:38> 'bool' false
| |     `-ElaboratedType 0x5605abb57970 'integral_constant<bool, false>' sugar
| |       `-TemplateSpecializationType 0x5605abb57910 'integral_constant<bool, false>' sugar
| |         |-name: 'integral_constant':'std::integral_constant' qualified
| |         | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |         |-TemplateArgument type 'bool'
| |         | `-BuiltinType 0x5605aba9c9f0 'bool'
| |         |-TemplateArgument expr 'false'
| |         | `-ConstantExpr 0x5605abb577b8 <line:107:53> 'bool'
| |         |   |-value: Int 0
| |         |   `-SubstNonTypeTemplateParmExpr 0x5605abb57770 <col:53> 'bool'
| |         |     |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |         |     `-CXXBoolLiteralExpr 0x5605abb57760 <line:107:53> 'bool' false
| |         `-RecordType 0x5605abb578f0 'std::integral_constant<bool, false>'
| |           `-ClassTemplateSpecialization 0x5605abb577e0 'integral_constant'
| |-TypeAliasTemplateDecl 0x5605abb57e20 <line:119:3, line:120:46> col:5 bool_constant
| | |-NonTypeTemplateParmDecl 0x5605abb57b10 <line:119:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| | `-TypeAliasDecl 0x5605abb57db8 <line:120:5, col:46> col:11 bool_constant '__bool_constant<__v>':'integral_constant<bool, __v>'
| |   `-ElaboratedType 0x5605abb57d40 '__bool_constant<__v>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abb57cf0 '__bool_constant<__v>' sugar dependent alias
| |       |-name: '__bool_constant':'std::__bool_constant' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |       |-TemplateArgument expr '__v'
| |       | `-DeclRefExpr 0x5605abb57b88 <line:120:43> 'bool' NonTypeTemplateParm 0x5605abb57b10 '__v' 'bool'
| |       `-ElaboratedType 0x5605abb57c90 'integral_constant<bool, __v>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abb57c30 'integral_constant<bool, __v>' dependent
| |           |-name: 'integral_constant':'std::integral_constant' qualified
| |           | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |           |-TemplateArgument type 'bool'
| |           | `-BuiltinType 0x5605aba9c9f0 'bool'
| |           `-TemplateArgument expr '__v'
| |             `-SubstNonTypeTemplateParmExpr 0x5605abb57be0 <line:107:53> 'bool'
| |               |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               `-DeclRefExpr 0x5605abb57b88 <line:120:43> 'bool' NonTypeTemplateParm 0x5605abb57b10 '__v' 'bool'
| |-ClassTemplateDecl 0x5605abb580b0 <line:127:3, line:129:7> line:128:12 enable_if
| | |-NonTypeTemplateParmDecl 0x5605abb57e90 <line:127:12> col:16 'bool' depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abb57f00 <col:18, col:33> col:27 typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |-CXXRecordDecl 0x5605abb58000 <line:128:5, line:129:7> line:128:12 struct enable_if definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | `-CXXRecordDecl 0x5605abb583c0 <col:5, col:12> col:12 implicit struct enable_if
| | `-ClassTemplateSpecializationDecl 0x5605abdd0fb8 <line:132:3, line:134:25> line:133:12 struct enable_if definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument integral 'true'
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-CXXRecordDecl 0x5605abdd12a8 <col:5, col:12> col:12 implicit struct enable_if
| |   `-TypeAliasDecl 0x5605abdd1398 <line:134:7, col:20> col:13 referenced type 'void *const &'
| |     `-SubstTemplateTypeParmType 0x5605abdd1350 'void *const &' sugar typename depth 0 index 0 _Tp
| |       |-ClassTemplateSpecialization 0x5605abdd0fb8 'enable_if'
| |       `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |         `-QualType 0x5605aba9d151 'void *const' const
| |           `-PointerType 0x5605aba9d150 'void *'
| |             `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplatePartialSpecializationDecl 0x5605abb79c28 <line:132:3, line:134:25> line:133:12 struct enable_if definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abb58488 <line:132:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abb79e70 <line:133:5, col:12> col:12 implicit struct enable_if
| | `-TypeAliasDecl 0x5605abb79f30 <line:134:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x5605abb584e0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abb58488 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abb7a320 <line:137:3, line:138:59> col:5 __enable_if_t
| | |-NonTypeTemplateParmDecl 0x5605abb79fd8 <line:137:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x5605abb7a048 <col:24, col:39> col:33 referenced typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-TypeAliasDecl 0x5605abb7a2b8 <line:138:5, col:59> col:11 __enable_if_t 'typename enable_if<_Cond, _Tp>::type'
| |   `-DependentNameType 0x5605abb7a240 'typename enable_if<_Cond, _Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abb7a4c0 <line:140:3, line:145:5> line:141:12 __conditional
| | |-NonTypeTemplateParmDecl 0x5605abb7a390 <line:140:12> col:16 'bool' depth 0 index 0
| | |-CXXRecordDecl 0x5605abb7a410 <line:141:5, line:145:5> line:141:12 struct __conditional definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abb7a790 <col:5, col:12> col:12 implicit struct __conditional
| | | `-TypeAliasTemplateDecl 0x5605abb7aa58 <line:143:7, line:144:15> col:2 type
| | |   |-TemplateTypeParmDecl 0x5605abb7a840 <line:143:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | |   |-TemplateTypeParmDecl 0x5605abb7a8f8 <col:30> col:38 typename depth 1 index 1
| | |   `-TypeAliasDecl 0x5605abb7a9f0 <line:144:2, col:15> col:8 type '_Tp'
| | |     `-TemplateTypeParmType 0x5605abb7a8c0 '_Tp' dependent depth 1 index 0
| | |       `-TemplateTypeParm 0x5605abb7a840 '_Tp'
| | |-ClassTemplateSpecialization 0x5605abb7ab30 '__conditional'
| | `-ClassTemplateSpecializationDecl 0x5605abeb87c0 <line:140:3, line:145:5> line:141:12 struct __conditional definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument integral 'true'
| |   |-CXXRecordDecl 0x5605abeb8aa0 <col:5, col:12> col:12 implicit struct __conditional
| |   `-TypeAliasTemplateDecl 0x5605abeb8d20 <line:143:7, line:144:15> col:2 type
| |     |-TemplateTypeParmDecl 0x5605abeb8b50 <line:143:16, col:25> col:25 typename depth 0 index 0 _Tp
| |     |-TemplateTypeParmDecl 0x5605abeb8bd8 <col:30> col:38 typename depth 0 index 1
| |     `-TypeAliasDecl 0x5605abeb8ca0 <line:144:2, col:15> col:8 type '_Tp'
| |       `-TemplateTypeParmType 0x5605abeb8ba0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abeb8b50 '_Tp'
| |-ClassTemplateSpecializationDecl 0x5605abb7ab30 <line:147:3, line:152:5> line:148:12 struct __conditional definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument integral 'false'
| | |-CXXRecordDecl 0x5605abb7b938 <col:5, col:12> col:12 implicit struct __conditional
| | `-TypeAliasTemplateDecl 0x5605abb7bba8 <line:150:7, line:151:15> col:2 type
| |   |-TemplateTypeParmDecl 0x5605abb7b9e8 <line:150:16> col:24 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0x5605abb7ba78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| |   `-TypeAliasDecl 0x5605abb7bb40 <line:151:2, col:15> col:8 type '_Up'
| |     `-TemplateTypeParmType 0x5605abb7bad0 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abb7ba78 '_Up'
| |-TypeAliasTemplateDecl 0x5605abb7c0e0 <line:155:3, line:157:64> line:156:5 __conditional_t
| | |-NonTypeTemplateParmDecl 0x5605abb7bc48 <line:155:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x5605abb7bca8 <col:24, col:33> col:33 referenced typename depth 0 index 1 _If
| | |-TemplateTypeParmDecl 0x5605abb7bd38 <col:38, col:47> col:47 referenced typename depth 0 index 2 _Else
| | `-TypeAliasDecl 0x5605abb7c078 <line:156:5, line:157:64> line:156:11 __conditional_t 'typename __conditional<_Cond>::template type<_If, _Else>'
| |   `-DependentTemplateSpecializationType 0x5605abb7bf90 'typename __conditional<_Cond>::template type<_If, _Else>' dependent
| |-ClassTemplateDecl 0x5605abb7c298 <line:160:3, line:162:27> line:161:12 __type_identity
| | |-TemplateTypeParmDecl 0x5605abb7c140 <line:160:13, col:22> col:22 referenced typename depth 0 index 0 _Type
| | `-CXXRecordDecl 0x5605abb7c1e8 <line:161:5, line:162:27> line:161:12 struct __type_identity definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abb7c550 <col:5, col:12> col:12 implicit struct __type_identity
| |   `-TypeAliasDecl 0x5605abb7c610 <line:162:7, col:20> col:13 type '_Type'
| |     `-TemplateTypeParmType 0x5605abb7c190 '_Type' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abb7c140 '_Type'
| |-TypeAliasTemplateDecl 0x5605abb7ce20 <line:164:3, line:165:62> col:5 __type_identity_t
| | |-TemplateTypeParmDecl 0x5605abb7c6a8 <line:164:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abb7cdb8 <line:165:5, col:62> col:11 __type_identity_t 'typename __type_identity<_Tp>::type'
| |   `-DependentNameType 0x5605abb7cd40 'typename __type_identity<_Tp>::type' dependent
| |-NamespaceDecl 0x5605abb7ce80 <line:167:3, line:187:3> line:167:13 __detail
| | |-TypeAliasTemplateDecl 0x5605abb7d0f8 <line:170:5, line:171:25> col:7 __first_t
| | | |-TemplateTypeParmDecl 0x5605abb7cf10 <line:170:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abb7cf98 <col:28> col:39 typename depth 0 index 1 ...
| | | `-TypeAliasDecl 0x5605abb7d090 <line:171:7, col:25> col:13 __first_t '_Tp'
| | |   `-TemplateTypeParmType 0x5605abb7cf60 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abb7cf10 '_Tp'
| | |-FunctionTemplateDecl 0x5605abb7db10 <line:174:5, line:176:45> line:175:12 __or_fn
| | | |-TemplateTypeParmDecl 0x5605abb7d158 <line:174:14, col:26> col:26 typename depth 0 index 0 ... _Bn
| | | `-FunctionDecl 0x5605abb7da60 <line:175:7, line:176:45> line:175:12 __or_fn 'auto (int) -> __first_t<false_type, __enable_if_t<!bool(_Bn::value)>...>'
| | |   `-ParmVarDecl 0x5605abb7d250 <col:20> col:23 'int'
| | |-FunctionTemplateDecl 0x5605abb7e110 <line:178:5, line:179:28> col:12 __or_fn
| | | |-TemplateTypeParmDecl 0x5605abb7dbf8 <line:178:14, col:26> col:26 typename depth 0 index 0 ... _Bn
| | | `-FunctionDecl 0x5605abb7e060 <line:179:7, col:28> col:12 __or_fn 'auto (...) -> true_type'
| | |-FunctionTemplateDecl 0x5605abb7eaa0 <line:181:5, line:183:45> line:182:12 __and_fn
| | | |-TemplateTypeParmDecl 0x5605abb7e200 <line:181:14, col:26> col:26 typename depth 0 index 0 ... _Bn
| | | `-FunctionDecl 0x5605abb7e9f0 <line:182:7, line:183:45> line:182:12 __and_fn 'auto (int) -> __first_t<true_type, __enable_if_t<bool(_Bn::value)>...>'
| | |   `-ParmVarDecl 0x5605abb7e2c0 <col:21> col:24 'int'
| | `-FunctionTemplateDecl 0x5605abb7ed90 <line:185:5, line:186:29> col:12 __and_fn
| |   |-TemplateTypeParmDecl 0x5605abb7eb88 <line:185:14, col:26> col:26 typename depth 0 index 0 ... _Bn
| |   `-FunctionDecl 0x5605abb7ece0 <line:186:7, col:29> col:12 __and_fn 'auto (...) -> false_type'
| |-ClassTemplateDecl 0x5605abb7fac8 <line:192:3, line:195:7> line:193:12 __or_
| | |-TemplateTypeParmDecl 0x5605abb7eee0 <line:192:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | `-CXXRecordDecl 0x5605abb7fa18 <line:193:5, line:195:7> line:193:12 struct __or_ definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'decltype(__detail::__or_fn<_Bn...>(0))'
| |   `-CXXRecordDecl 0x5605abb7ffe8 <col:5, col:12> col:12 implicit struct __or_
| |-ClassTemplateDecl 0x5605abb80208 <line:197:3, line:200:7> line:198:12 __and_
| | |-TemplateTypeParmDecl 0x5605abb800b0 <line:197:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | `-CXXRecordDecl 0x5605abb80158 <line:198:5, line:200:7> line:198:12 struct __and_ definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'decltype(__detail::__and_fn<_Bn...>(0))'
| |   `-CXXRecordDecl 0x5605abb806e8 <col:5, col:12> col:12 implicit struct __and_
| |-ClassTemplateDecl 0x5605abb80908 <line:202:3, line:205:7> line:203:12 __not_
| | |-TemplateTypeParmDecl 0x5605abb807b0 <line:202:12, col:21> col:21 typename depth 0 index 0 _Pp
| | `-CXXRecordDecl 0x5605abb80858 <line:203:5, line:205:7> line:203:12 struct __not_ definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<!bool(_Pp::value)>':'integral_constant<bool, !bool(_Pp::value)>'
| |   `-CXXRecordDecl 0x5605abb81988 <col:5, col:12> col:12 implicit struct __not_
| |-VarTemplateDecl 0x5605abb81b78 <line:211:3, line:212:51> col:27 __or_v
| | |-TemplateTypeParmDecl 0x5605abb81a50 <line:211:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | `-VarDecl 0x5605abb81b08 <line:212:5, col:51> col:27 __or_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abb81cf8 <col:36, col:51> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec '__or_<_Bn...>'
| |-VarTemplateDecl 0x5605abb81e78 <line:213:3, line:214:53> col:27 __and_v
| | |-TemplateTypeParmDecl 0x5605abb81d50 <line:213:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | `-VarDecl 0x5605abb81e08 <line:214:5, col:53> col:27 __and_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abb81ff8 <col:37, col:53> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec '__and_<_Bn...>'
| |-NamespaceDecl 0x5605abb82050 prev 0x5605abb7ce80 <line:216:3, line:233:3> line:216:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | |-ClassTemplateDecl 0x5605abb82388 <line:218:5, line:220:27> line:219:14 __disjunction_impl
| | | |-TemplateTypeParmDecl 0x5605abb820c8 <line:218:14> col:35 typename depth 0 index 0
| | | |-TemplateTypeParmDecl 0x5605abb82158 <col:37, col:46> col:46 referenced typename depth 0 index 1 _B1
| | | |-TemplateTypeParmDecl 0x5605abb821e8 <col:51, col:63> col:63 typename depth 0 index 2 ... _Bn
| | | `-CXXRecordDecl 0x5605abb822d8 <line:219:7, line:220:27> line:219:14 struct __disjunction_impl definition
| | |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   |-CXXRecordDecl 0x5605abb83010 <col:7, col:14> col:14 implicit struct __disjunction_impl
| | |   `-TypeAliasDecl 0x5605abb830d0 <line:220:9, col:22> col:15 type '_B1'
| | |     `-TemplateTypeParmType 0x5605abb821b0 '_B1' dependent depth 0 index 1
| | |       `-TemplateTypeParm 0x5605abb82158 '_B1'
| | |-ClassTemplatePartialSpecializationDecl 0x5605abb83900 <line:222:5, line:224:76> line:223:14 struct __disjunction_impl definition explicit_specialization
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'typename enable_if<!bool(_B1::value), void>::type'
| | | | `-DependentNameType 0x5605abb835f0 'typename enable_if<!bool(_B1::value), void>::type' dependent
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |-TemplateArgument pack '<type-parameter-0-1, type-parameter-0-2...>'
| | | | |-TemplateArgument type 'type-parameter-0-1'
| | | | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | `-TemplateArgument type 'type-parameter-0-2...'
| | | |   `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| | | |     `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| | | |-TemplateTypeParmDecl 0x5605abb83168 <line:222:14, col:23> col:23 referenced typename depth 0 index 0 _B1
| | | |-TemplateTypeParmDecl 0x5605abb831f8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _B2
| | | |-TemplateTypeParmDecl 0x5605abb83288 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _Bn
| | | |-CXXRecordDecl 0x5605abb84298 <line:223:7, col:14> col:14 implicit struct __disjunction_impl
| | | `-TypeAliasDecl 0x5605abb845b8 <line:224:9, col:70> col:15 type 'typename __disjunction_impl<void, _B2, _Bn...>::type'
| | |   `-DependentNameType 0x5605abb84540 'typename __disjunction_impl<void, _B2, _Bn...>::type' dependent
| | |-ClassTemplateDecl 0x5605abb848d8 <line:226:5, line:228:27> line:227:14 __conjunction_impl
| | | |-TemplateTypeParmDecl 0x5605abb84650 <line:226:14> col:35 typename depth 0 index 0
| | | |-TemplateTypeParmDecl 0x5605abb846d8 <col:37, col:46> col:46 referenced typename depth 0 index 1 _B1
| | | |-TemplateTypeParmDecl 0x5605abb84768 <col:51, col:63> col:63 typename depth 0 index 2 ... _Bn
| | | `-CXXRecordDecl 0x5605abb84828 <line:227:7, line:228:27> line:227:14 struct __conjunction_impl definition
| | |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   |-CXXRecordDecl 0x5605abb84c80 <col:7, col:14> col:14 implicit struct __conjunction_impl
| | |   `-TypeAliasDecl 0x5605abb84d40 <line:228:9, col:22> col:15 type '_B1'
| | |     `-TemplateTypeParmType 0x5605abb84730 '_B1' dependent depth 0 index 1
| | |       `-TemplateTypeParm 0x5605abb846d8 '_B1'
| | `-ClassTemplatePartialSpecializationDecl 0x5605abb85bd0 <line:230:5, line:232:76> line:231:14 struct __conjunction_impl definition explicit_specialization
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'typename enable_if<bool(_B1::value), void>::type'
| |   | `-DependentNameType 0x5605abb858c0 'typename enable_if<bool(_B1::value), void>::type' dependent
| |   |-TemplateArgument type 'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |-TemplateArgument pack '<type-parameter-0-1, type-parameter-0-2...>'
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | `-TemplateArgument type 'type-parameter-0-2...'
| |   |   `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| |   |     `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |-TemplateTypeParmDecl 0x5605abb84dd8 <line:230:14, col:23> col:23 referenced typename depth 0 index 0 _B1
| |   |-TemplateTypeParmDecl 0x5605abb84e68 <col:28, col:37> col:37 referenced typename depth 0 index 1 _B2
| |   |-TemplateTypeParmDecl 0x5605abb84ef8 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _Bn
| |   |-CXXRecordDecl 0x5605abb85f58 <line:231:7, col:14> col:14 implicit struct __conjunction_impl
| |   `-TypeAliasDecl 0x5605abb86278 <line:232:9, col:70> col:15 type 'typename __conjunction_impl<void, _B2, _Bn...>::type'
| |     `-DependentNameType 0x5605abb86200 'typename __conjunction_impl<void, _B2, _Bn...>::type' dependent
| |-ClassTemplateDecl 0x5605abb86468 <line:236:3, line:239:7> line:237:12 conjunction
| | |-TemplateTypeParmDecl 0x5605abb86310 <line:236:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | |-CXXRecordDecl 0x5605abb863b8 <line:237:5, line:239:7> line:237:12 struct conjunction definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__detail::__conjunction_impl<void, _Bn...>::type'
| | | `-CXXRecordDecl 0x5605abb879f8 <col:5, col:12> col:12 implicit struct conjunction
| | `-ClassTemplateSpecialization 0x5605abb87ad8 'conjunction'
| |-ClassTemplateSpecializationDecl 0x5605abb87ad8 <line:241:3, line:244:7> line:242:12 struct conjunction definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument pack '<>'
| | `-CXXRecordDecl 0x5605abb88418 <col:5, col:12> col:12 implicit struct conjunction
| |-ClassTemplateDecl 0x5605abb88638 <line:246:3, line:249:7> line:247:12 disjunction
| | |-TemplateTypeParmDecl 0x5605abb884e0 <line:246:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | |-CXXRecordDecl 0x5605abb88588 <line:247:5, line:249:7> line:247:12 struct disjunction definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__detail::__disjunction_impl<void, _Bn...>::type'
| | | `-CXXRecordDecl 0x5605abb891e8 <col:5, col:12> col:12 implicit struct disjunction
| | `-ClassTemplateSpecialization 0x5605abb892c8 'disjunction'
| |-ClassTemplateSpecializationDecl 0x5605abb892c8 <line:251:3, line:254:7> line:252:12 struct disjunction definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument pack '<>'
| | `-CXXRecordDecl 0x5605abb89b90 <col:5, col:12> col:12 implicit struct disjunction
| |-ClassTemplateDecl 0x5605abb89db8 <line:256:3, line:259:7> line:257:12 negation
| | |-TemplateTypeParmDecl 0x5605abb89c58 <line:256:12, col:21> col:21 referenced typename depth 0 index 0 _Pp
| | `-CXXRecordDecl 0x5605abb89d08 <line:257:5, line:259:7> line:257:12 struct negation definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__not_<_Pp>::type'
| |   `-CXXRecordDecl 0x5605abb8ad88 <col:5, col:12> col:12 implicit struct negation
| |-VarTemplateDecl 0x5605abb8af78 <line:264:3, line:265:64> col:27 conjunction_v
| | |-TemplateTypeParmDecl 0x5605abb8ae50 <line:264:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | `-VarDecl 0x5605abb8af08 <line:265:5, col:64> col:27 conjunction_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abb8b0f8 <col:43, col:64> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'conjunction<_Bn...>'
| |-VarTemplateDecl 0x5605abb8b278 <line:267:3, line:268:64> col:27 disjunction_v
| | |-TemplateTypeParmDecl 0x5605abb8b150 <line:267:12, col:24> col:24 referenced typename depth 0 index 0 ... _Bn
| | `-VarDecl 0x5605abb8b208 <line:268:5, col:64> col:27 disjunction_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abb8b3f8 <col:43, col:64> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'disjunction<_Bn...>'
| |-VarTemplateDecl 0x5605abb8b578 <line:270:3, line:271:55> col:27 negation_v
| | |-TemplateTypeParmDecl 0x5605abb8b450 <line:270:12, col:21> col:21 referenced typename depth 0 index 0 _Pp
| | `-VarDecl 0x5605abb8b508 <line:271:5, col:55> col:27 negation_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abb8b688 <col:40, col:55> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'negation<_Pp>'
| |-ClassTemplateDecl 0x5605abb8b838 <line:277:3, line:278:12> col:12 is_reference
| | |-TemplateTypeParmDecl 0x5605abb8b6e0 <line:277:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abb8b788 <line:278:5, col:12> col:12 struct is_reference
| |-ClassTemplateDecl 0x5605abb8c098 <line:279:3, line:280:12> col:12 is_function
| | |-TemplateTypeParmDecl 0x5605abb8bf38 <line:279:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abb8bfe8 <line:280:5, col:12> col:12 struct is_function
| |-ClassTemplateDecl 0x5605abb8c448 <line:281:3, line:282:12> col:12 is_void
| | |-TemplateTypeParmDecl 0x5605abb8c2e8 <line:281:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x5605abb8c398 <line:282:5, col:12> col:12 struct is_void
| | |-ClassTemplateSpecialization 0x5605abb903b0 'is_void'
| | |-ClassTemplateSpecialization 0x5605abb906b8 'is_void'
| | |-ClassTemplateSpecialization 0x5605abb92228 'is_void'
| | `-ClassTemplateSpecialization 0x5605abb92538 'is_void'
| |-ClassTemplateDecl 0x5605abb8c7f8 <line:283:3, line:284:12> col:12 remove_cv
| | |-TemplateTypeParmDecl 0x5605abb8c698 <line:283:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x5605abb8c748 <line:284:5, col:12> col:12 struct remove_cv
| | |-ClassTemplateSpecializationDecl 0x5605abc3cd98 <line:283:3, line:284:12> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | |-CXXRecordDecl 0x5605abc3cfb0 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc3d0f8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(wchar_t)':'wchar_t'
| | |   `-UnaryTransformType 0x5605abc3d0a0 '__remove_cv(wchar_t)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abc3d060 'wchar_t' sugar typename depth 0 index 0
| | |     | |-ClassTemplateSpecialization 0x5605abc3cd98 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | |     `-SubstTemplateTypeParmType 0x5605abc3d060 'wchar_t' sugar typename depth 0 index 0
| | |       |-ClassTemplateSpecialization 0x5605abc3cd98 'remove_cv'
| | |       `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | |-ClassTemplateSpecializationDecl 0x5605abc3ec88 <line:283:3, line:284:12> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-CXXRecordDecl 0x5605abc3eea0 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc3efe8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(unsigned int)':'unsigned int'
| | |   `-UnaryTransformType 0x5605abc3ef90 '__remove_cv(unsigned int)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abc3ef50 'unsigned int' sugar typename depth 0 index 0
| | |     | |-ClassTemplateSpecialization 0x5605abc3ec88 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |     `-SubstTemplateTypeParmType 0x5605abc3ef50 'unsigned int' sugar typename depth 0 index 0
| | |       |-ClassTemplateSpecialization 0x5605abc3ec88 'remove_cv'
| | |       `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x5605abc42048 <line:283:3, line:284:12> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | |-CXXRecordDecl 0x5605abc42260 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc423a8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(char8_t)':'char8_t'
| | |   `-UnaryTransformType 0x5605abc42350 '__remove_cv(char8_t)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abc42310 'char8_t' sugar typename depth 0 index 0
| | |     | |-ClassTemplateSpecialization 0x5605abc42048 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | |     `-SubstTemplateTypeParmType 0x5605abc42310 'char8_t' sugar typename depth 0 index 0
| | |       |-ClassTemplateSpecialization 0x5605abc42048 'remove_cv'
| | |       `-BuiltinType 0x5605aba9cf90 'char8_t'
| | |-ClassTemplateSpecializationDecl 0x5605abc446f8 <line:283:3, line:284:12> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-CXXRecordDecl 0x5605abc44910 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc44a58 <line:1639:7, col:35> col:13 referenced type '__remove_cv(unsigned char)':'unsigned char'
| | |   `-UnaryTransformType 0x5605abc44a00 '__remove_cv(unsigned char)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abc449c0 'unsigned char' sugar typename depth 0 index 0
| | |     | |-ClassTemplateSpecialization 0x5605abc446f8 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |     `-SubstTemplateTypeParmType 0x5605abc449c0 'unsigned char' sugar typename depth 0 index 0
| | |       |-ClassTemplateSpecialization 0x5605abc446f8 'remove_cv'
| | |       `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |-ClassTemplateSpecializationDecl 0x5605abc47e08 <line:283:3, line:284:12> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | |-CXXRecordDecl 0x5605abc49658 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc49798 <line:1639:7, col:35> col:13 referenced type '__remove_cv(char16_t)':'char16_t'
| | |   `-UnaryTransformType 0x5605abc49740 '__remove_cv(char16_t)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abc49700 'char16_t' sugar typename depth 0 index 0
| | |     | |-ClassTemplateSpecialization 0x5605abc47e08 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | |     `-SubstTemplateTypeParmType 0x5605abc49700 'char16_t' sugar typename depth 0 index 0
| | |       |-ClassTemplateSpecialization 0x5605abc47e08 'remove_cv'
| | |       `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | |-ClassTemplateSpecializationDecl 0x5605abc4aca8 <line:283:3, line:284:12> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-CXXRecordDecl 0x5605abc4aec0 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc4b008 <line:1639:7, col:35> col:13 referenced type '__remove_cv(unsigned short)':'unsigned short'
| | |   `-UnaryTransformType 0x5605abc4afb0 '__remove_cv(unsigned short)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abc4af70 'unsigned short' sugar typename depth 0 index 0
| | |     | |-ClassTemplateSpecialization 0x5605abc4aca8 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |     `-SubstTemplateTypeParmType 0x5605abc4af70 'unsigned short' sugar typename depth 0 index 0
| | |       |-ClassTemplateSpecialization 0x5605abc4aca8 'remove_cv'
| | |       `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x5605abc4f268 <line:283:3, line:284:12> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | | |-CXXRecordDecl 0x5605abc4f480 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc4f5c8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(char32_t)':'char32_t'
| | |   `-UnaryTransformType 0x5605abc4f570 '__remove_cv(char32_t)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abc4f530 'char32_t' sugar typename depth 0 index 0
| | |     | |-ClassTemplateSpecialization 0x5605abc4f268 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | |     `-SubstTemplateTypeParmType 0x5605abc4f530 'char32_t' sugar typename depth 0 index 0
| | |       |-ClassTemplateSpecialization 0x5605abc4f268 'remove_cv'
| | |       `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | |-ClassTemplateSpecializationDecl 0x5605abeb8318 <line:1637:3, line:1639:38> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'long'
| | | | `-BuiltinType 0x5605aba9ca90 'long'
| | | |-CXXRecordDecl 0x5605abeb9070 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abeb91b8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(long)':'long'
| | |   `-UnaryTransformType 0x5605abeb9160 '__remove_cv(long)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abeb9120 'long' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abeb8318 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9ca90 'long'
| | |     `-SubstTemplateTypeParmType 0x5605abeb9120 'long' sugar typename depth 0 index 0 _Tp
| | |       |-ClassTemplateSpecialization 0x5605abeb8318 'remove_cv'
| | |       `-BuiltinType 0x5605aba9ca90 'long'
| | |-ClassTemplateSpecializationDecl 0x5605abebf658 <line:1637:3, line:1639:38> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | |-CXXRecordDecl 0x5605abebfe80 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abebffc8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(ice::error)':'ice::error'
| | |   `-UnaryTransformType 0x5605abebff70 '__remove_cv(ice::error)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abebff30 'ice::error' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abebf658 'remove_cv'
| | |     | `-RecordType 0x5605abe9a400 'ice::error'
| | |     |   `-CXXRecord 0x5605abea0860 'error'
| | |     `-SubstTemplateTypeParmType 0x5605abebff30 'ice::error' sugar typename depth 0 index 0 _Tp
| | |       |-ClassTemplateSpecialization 0x5605abebf658 'remove_cv'
| | |       `-RecordType 0x5605abe9a400 'ice::error'
| | |         `-CXXRecord 0x5605abea0860 'error'
| | |-ClassTemplateSpecializationDecl 0x5605abec3058 <line:1637:3, line:1639:38> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'int'
| | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | |-CXXRecordDecl 0x5605abec3880 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abec39c8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(int)':'int'
| | |   `-UnaryTransformType 0x5605abec3970 '__remove_cv(int)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abec3930 'int' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abec3058 'remove_cv'
| | |     | `-BuiltinType 0x5605aba9ca70 'int'
| | |     `-SubstTemplateTypeParmType 0x5605abec3930 'int' sugar typename depth 0 index 0 _Tp
| | |       |-ClassTemplateSpecialization 0x5605abec3058 'remove_cv'
| | |       `-BuiltinType 0x5605aba9ca70 'int'
| | |-ClassTemplateSpecializationDecl 0x5605abed4418 <line:1637:3, line:1639:38> line:1638:12 struct remove_cv definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'consteval_move'
| | | | `-RecordType 0x5605abeccf70 'consteval_move'
| | | |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | | |-CXXRecordDecl 0x5605abed5d38 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abed5e78 <line:1639:7, col:35> col:13 referenced type '__remove_cv(consteval_move)':'consteval_move'
| | |   `-UnaryTransformType 0x5605abed5e20 '__remove_cv(consteval_move)' sugar remove_cv
| | |     |-SubstTemplateTypeParmType 0x5605abed5de0 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abed4418 'remove_cv'
| | |     | `-RecordType 0x5605abeccf70 'consteval_move'
| | |     |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |     `-SubstTemplateTypeParmType 0x5605abed5de0 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |       |-ClassTemplateSpecialization 0x5605abed4418 'remove_cv'
| | |       `-RecordType 0x5605abeccf70 'consteval_move'
| | |         `-CXXRecord 0x5605abeccec8 'consteval_move'
| | `-ClassTemplateSpecializationDecl 0x5605abedf668 <line:1637:3, line:1639:38> line:1638:12 struct remove_cv definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'move<false>'
| |   | `-RecordType 0x5605abede560 'move<false>'
| |   |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| |   |-CXXRecordDecl 0x5605abedfe90 <col:5, col:12> col:12 implicit struct remove_cv
| |   `-TypeAliasDecl 0x5605abedffd8 <line:1639:7, col:35> col:13 referenced type '__remove_cv(move<false>)':'move<false>'
| |     `-UnaryTransformType 0x5605abedff80 '__remove_cv(move<false>)' sugar remove_cv
| |       |-SubstTemplateTypeParmType 0x5605abedff40 'move<false>' sugar typename depth 0 index 0 _Tp
| |       | |-ClassTemplateSpecialization 0x5605abedf668 'remove_cv'
| |       | `-RecordType 0x5605abede560 'move<false>'
| |       |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| |       `-SubstTemplateTypeParmType 0x5605abedff40 'move<false>' sugar typename depth 0 index 0 _Tp
| |         |-ClassTemplateSpecialization 0x5605abedf668 'remove_cv'
| |         `-RecordType 0x5605abede560 'move<false>'
| |           `-ClassTemplateSpecialization 0x5605abede470 'move'
| |-ClassTemplateDecl 0x5605abb8cba8 <line:285:3, line:286:12> col:12 is_const
| | |-TemplateTypeParmDecl 0x5605abb8ca48 <line:285:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x5605abb8caf8 <line:286:5, col:12> col:12 struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abc24a68 <line:838:3, line:840:27> line:839:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | `-CXXRecordDecl 0x5605abc24ce8 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abc27e58 <line:838:3, line:840:27> line:839:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | `-CXXRecordDecl 0x5605abc280d8 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abbcf518 <line:838:3, line:840:27> line:839:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | `-CXXRecordDecl 0x5605abbcf798 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abc332b8 <line:838:3, line:840:27> line:839:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char32_t'
| | | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | | `-CXXRecordDecl 0x5605abc33538 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abc3fca8 <line:838:3, line:840:27> line:839:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | `-CXXRecordDecl 0x5605abc3ff28 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abc45718 <line:838:3, line:840:27> line:839:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | `-CXXRecordDecl 0x5605abc45fa8 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abc4c738 <line:838:3, line:840:27> line:839:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | `-CXXRecordDecl 0x5605abc4c9b8 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abdc9608 <line:842:3, line:844:26> line:843:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'void *const'
| | | | `-QualType 0x5605aba9d151 'void *const' const
| | | |   `-PointerType 0x5605aba9d150 'void *'
| | | |     `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-CXXRecordDecl 0x5605abdc98d0 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abeb7f18 <line:842:3, line:844:26> line:843:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'const long'
| | | | `-QualType 0x5605aba9ca91 'const long' const
| | | |   `-BuiltinType 0x5605aba9ca90 'long'
| | | `-CXXRecordDecl 0x5605abeb81e0 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abebf268 <line:842:3, line:844:26> line:843:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'const ice::error'
| | | | `-QualType 0x5605abe9a401 'const ice::error' const
| | | |   `-RecordType 0x5605abe9a400 'ice::error'
| | | |     `-CXXRecord 0x5605abea0860 'error'
| | | `-CXXRecordDecl 0x5605abebf520 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abec2c58 <line:842:3, line:844:26> line:843:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'const int'
| | | | `-QualType 0x5605aba9ca71 'const int' const
| | | |   `-BuiltinType 0x5605aba9ca70 'int'
| | | `-CXXRecordDecl 0x5605abec2f20 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecializationDecl 0x5605abed4028 <line:842:3, line:844:26> line:843:12 struct is_const definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'true_type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'const consteval_move'
| | | | `-QualType 0x5605abeccf71 'const consteval_move' const
| | | |   `-RecordType 0x5605abeccf70 'consteval_move'
| | | |     `-CXXRecord 0x5605abeccec8 'consteval_move'
| | | `-CXXRecordDecl 0x5605abed42e0 <col:5, col:12> col:12 implicit struct is_const
| | `-ClassTemplateSpecializationDecl 0x5605abedf278 <line:842:3, line:844:26> line:843:12 struct is_const definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'true_type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'const move<false>'
| |   | `-QualType 0x5605abede561 'const move<false>' const
| |   |   `-RecordType 0x5605abede560 'move<false>'
| |   |     `-ClassTemplateSpecialization 0x5605abede470 'move'
| |   `-CXXRecordDecl 0x5605abedf530 <col:5, col:12> col:12 implicit struct is_const
| |-ClassTemplateDecl 0x5605abb8e078 <line:289:3, line:290:12> col:12 __is_array_unknown_bounds
| | |-TemplateTypeParmDecl 0x5605abb8cdf8 <line:289:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abb8dfc8 <line:290:5, col:12> col:12 struct __is_array_unknown_bounds
| |-FunctionTemplateDecl 0x5605abb8e758 <line:295:3, line:297:18> line:296:25 __is_complete_or_unbounded
| | |-TemplateTypeParmDecl 0x5605abb8e2c8 <line:295:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abb8e3f8 <col:27, col:46> col:34 'size_t':'unsigned long' depth 0 index 1
| | | `-TemplateArgument <col:36, col:46> expr 'sizeof(_Tp)'
| | |   `-UnaryExprOrTypeTraitExpr 0x5605abb8e3c0 <col:36, col:46> 'unsigned long' sizeof '_Tp'
| | `-FunctionDecl 0x5605abb8e6a8 <line:296:5, line:297:18> line:296:25 constexpr __is_complete_or_unbounded 'true_type (__type_identity<_Tp>)' implicit-inline
| |   |-ParmVarDecl 0x5605abb8e578 <col:52, col:71> col:72 '__type_identity<_Tp>'
| |   `-CompoundStmt 0x5605abb8e8c8 <line:297:5, col:18>
| |     `-ReturnStmt 0x5605abb8e8b8 <col:7, col:15>
| |       `-InitListExpr 0x5605abb8e878 <col:14, col:15> 'true_type':'std::integral_constant<bool, true>'
| |-FunctionTemplateDecl 0x5605abb8fc38 <line:299:3, line:307:18> line:306:13 __is_complete_or_unbounded
| | |-TemplateTypeParmDecl 0x5605abb8e8e8 <line:299:13, col:22> col:22 referenced typename depth 0 index 0 _TypeIdentity
| | |-TemplateTypeParmDecl 0x5605abb8ea48 <line:300:7, col:54> col:16 referenced typename depth 0 index 1 _NestedType
| | | `-TemplateArgument type 'typename _TypeIdentity::type':'typename type-parameter-0-0::type'
| | |   `-DependentNameType 0x5605abb8e9d0 'typename _TypeIdentity::type' dependent
| | `-FunctionDecl 0x5605abb8fb88 <line:301:5, line:307:18> line:306:13 constexpr __is_complete_or_unbounded 'typename __or_<is_reference<_NestedType>, is_function<_NestedType>, is_void<_NestedType>, __is_array_unknown_bounds<_NestedType>>::type (_TypeIdentity)' implicit-inline
| |   |-ParmVarDecl 0x5605abb8fa48 <col:40> col:53 '_TypeIdentity'
| |   `-CompoundStmt 0x5605abb8fd78 <line:307:5, col:18>
| |     `-ReturnStmt 0x5605abb8fd68 <col:7, col:15>
| |       `-InitListExpr 0x5605abb8fd28 <col:14, col:15> 'void'
| |-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| | |-TemplateTypeParmDecl 0x5605abb8fd98 <line:310:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abb8ff98 <line:311:5, col:52> col:11 __remove_cv_t 'typename remove_cv<_Tp>::type'
| |   `-DependentNameType 0x5605abb8ff20 'typename remove_cv<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abb901a0 prev 0x5605abb8c448 <line:317:3, line:319:27> line:318:12 is_void
| | |-TemplateTypeParmDecl 0x5605abb90060 <line:317:12, col:21> col:21 typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abb90108 prev 0x5605abb8c398 <line:318:5, line:319:27> line:318:12 struct is_void definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x5605abb902a8 <col:5, col:12> col:12 implicit struct is_void
| | |-ClassTemplateSpecialization 0x5605abb903b0 'is_void'
| | |-ClassTemplateSpecialization 0x5605abb906b8 'is_void'
| | |-ClassTemplateSpecialization 0x5605abb92228 'is_void'
| | `-ClassTemplateSpecialization 0x5605abb92538 'is_void'
| |-ClassTemplateSpecializationDecl 0x5605abb903b0 <line:321:3, line:323:26> line:322:12 struct is_void definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abb905c8 <col:5, col:12> col:12 implicit struct is_void
| |-ClassTemplateSpecializationDecl 0x5605abb906b8 <line:325:3, line:327:26> line:326:12 struct is_void definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'const void'
| | | `-QualType 0x5605aba9c9d1 'const void' const
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abb92138 <col:5, col:12> col:12 implicit struct is_void
| |-ClassTemplateSpecializationDecl 0x5605abb92228 <line:329:3, line:331:26> line:330:12 struct is_void definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'volatile void'
| | | `-QualType 0x5605aba9c9d4 'volatile void' volatile
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abb92448 <col:5, col:12> col:12 implicit struct is_void
| |-ClassTemplateSpecializationDecl 0x5605abb92538 <line:333:3, line:335:26> line:334:12 struct is_void definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'const volatile void'
| | | `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abb92758 <col:5, col:12> col:12 implicit struct is_void
| |-ClassTemplateDecl 0x5605abb92978 <line:338:3, line:340:27> line:339:12 __is_integral_helper
| | |-TemplateTypeParmDecl 0x5605abb92820 <line:338:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x5605abb928c8 <line:339:5, line:340:27> line:339:12 struct __is_integral_helper definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x5605abb92c70 <col:5, col:12> col:12 implicit struct __is_integral_helper
| | |-ClassTemplateSpecialization 0x5605abb92d60 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb936a8 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb939c0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb93cd0 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb93fd8 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb942e8 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb94848 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb94b58 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb94e70 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb95180 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb95490 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb959f8 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb95d10 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb96020 '__is_integral_helper'
| | |-ClassTemplateSpecialization 0x5605abb96330 '__is_integral_helper'
| | `-ClassTemplateSpecialization 0x5605abb96640 '__is_integral_helper'
| |-ClassTemplateSpecializationDecl 0x5605abb92d60 <line:342:3, line:344:26> line:343:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'bool'
| | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | `-CXXRecordDecl 0x5605abb935b8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb936a8 <line:346:3, line:348:26> line:347:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char'
| | | `-BuiltinType 0x5605aba9ca10 'char'
| | `-CXXRecordDecl 0x5605abb938c8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb939c0 <line:350:3, line:352:26> line:351:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'signed char'
| | | `-BuiltinType 0x5605aba9ca30 'signed char'
| | `-CXXRecordDecl 0x5605abb93bd8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb93cd0 <line:354:3, line:356:26> line:355:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned char'
| | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | `-CXXRecordDecl 0x5605abb93ee8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb93fd8 <line:361:3, line:363:26> line:362:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'wchar_t'
| | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | `-CXXRecordDecl 0x5605abb941f8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb942e8 <line:366:3, line:368:26> line:367:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char8_t'
| | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | `-CXXRecordDecl 0x5605abb94508 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb94848 <line:371:3, line:373:26> line:372:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char16_t'
| | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | `-CXXRecordDecl 0x5605abb94a68 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb94b58 <line:375:3, line:377:26> line:376:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'char32_t'
| | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | `-CXXRecordDecl 0x5605abb94d78 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb94e70 <line:379:3, line:381:26> line:380:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'short'
| | | `-BuiltinType 0x5605aba9ca50 'short'
| | `-CXXRecordDecl 0x5605abb95088 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb95180 <line:383:3, line:385:26> line:384:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned short'
| | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | `-CXXRecordDecl 0x5605abb95398 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb95490 <line:387:3, line:389:26> line:388:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'int'
| | | `-BuiltinType 0x5605aba9ca70 'int'
| | `-CXXRecordDecl 0x5605abb956a8 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb959f8 <line:391:3, line:393:26> line:392:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned int'
| | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | `-CXXRecordDecl 0x5605abb95c18 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb95d10 <line:395:3, line:397:26> line:396:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long'
| | | `-BuiltinType 0x5605aba9ca90 'long'
| | `-CXXRecordDecl 0x5605abb95f28 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb96020 <line:399:3, line:401:26> line:400:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned long'
| | | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | `-CXXRecordDecl 0x5605abb96238 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb96330 <line:403:3, line:405:26> line:404:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long long'
| | | `-BuiltinType 0x5605aba9cab0 'long long'
| | `-CXXRecordDecl 0x5605abb96548 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecializationDecl 0x5605abb96640 <line:407:3, line:409:26> line:408:12 struct __is_integral_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'unsigned long long'
| | | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | `-CXXRecordDecl 0x5605abb96858 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateDecl 0x5605abb96c98 <line:460:3, line:463:7> line:461:12 is_integral
| | |-TemplateTypeParmDecl 0x5605abb96920 <line:460:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abb96be8 <line:461:5, line:463:7> line:461:12 struct is_integral definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__is_integral_helper<__remove_cv_t<_Tp>>::type'
| | | `-CXXRecordDecl 0x5605abb97368 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x5605abc3cac8 <line:460:3, line:463:7> line:461:12 struct is_integral definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__is_integral_helper<__remove_cv_t<wchar_t>>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | `-CXXRecordDecl 0x5605abc3d3d8 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x5605abc3e9b8 <line:460:3, line:463:7> line:461:12 struct is_integral definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__is_integral_helper<__remove_cv_t<unsigned int>>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | `-CXXRecordDecl 0x5605abc3f298 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x5605abc41d78 <line:460:3, line:463:7> line:461:12 struct is_integral definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__is_integral_helper<__remove_cv_t<char8_t>>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | `-CXXRecordDecl 0x5605abc42658 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x5605abc44428 <line:460:3, line:463:7> line:461:12 struct is_integral definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__is_integral_helper<__remove_cv_t<unsigned char>>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | `-CXXRecordDecl 0x5605abc44d08 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x5605abc47b38 <line:460:3, line:463:7> line:461:12 struct is_integral definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__is_integral_helper<__remove_cv_t<char16_t>>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | `-CXXRecordDecl 0x5605abc49a48 <col:5, col:12> col:12 implicit struct is_integral
| | |-ClassTemplateSpecializationDecl 0x5605abc4a9d8 <line:460:3, line:463:7> line:461:12 struct is_integral definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__is_integral_helper<__remove_cv_t<unsigned short>>::type':'std::integral_constant<bool, true>'
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | `-CXXRecordDecl 0x5605abc4b2b8 <col:5, col:12> col:12 implicit struct is_integral
| | `-ClassTemplateSpecializationDecl 0x5605abc4ef98 <line:460:3, line:463:7> line:461:12 struct is_integral definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_integral_helper<__remove_cv_t<char32_t>>::type':'std::integral_constant<bool, true>'
| |   |-TemplateArgument type 'char32_t'
| |   | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| |   `-CXXRecordDecl 0x5605abc4f878 <col:5, col:12> col:12 implicit struct is_integral
| |-ClassTemplateDecl 0x5605abb97588 <line:466:3, line:468:27> line:467:12 __is_floating_point_helper
| | |-TemplateTypeParmDecl 0x5605abb97430 <line:466:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x5605abb974d8 <line:467:5, line:468:27> line:467:12 struct __is_floating_point_helper definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x5605abb97880 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| | |-ClassTemplateSpecialization 0x5605abb97978 '__is_floating_point_helper'
| | |-ClassTemplateSpecialization 0x5605abb98610 '__is_floating_point_helper'
| | `-ClassTemplateSpecialization 0x5605abb98920 '__is_floating_point_helper'
| |-ClassTemplateSpecializationDecl 0x5605abb97978 <line:470:3, line:472:26> line:471:12 struct __is_floating_point_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'float'
| | | `-BuiltinType 0x5605aba9cb70 'float'
| | `-CXXRecordDecl 0x5605abb98518 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0x5605abb98610 <line:474:3, line:476:26> line:475:12 struct __is_floating_point_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'double'
| | | `-BuiltinType 0x5605aba9cb90 'double'
| | `-CXXRecordDecl 0x5605abb98828 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecializationDecl 0x5605abb98920 <line:478:3, line:480:26> line:479:12 struct __is_floating_point_helper definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'long double'
| | | `-BuiltinType 0x5605aba9cbb0 'long double'
| | `-CXXRecordDecl 0x5605abb98b38 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateDecl 0x5605abb98d58 <line:520:3, line:523:7> line:521:12 is_floating_point
| | |-TemplateTypeParmDecl 0x5605abb98c00 <line:520:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb98ca8 <line:521:5, line:523:7> line:521:12 struct is_floating_point definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_floating_point_helper<__remove_cv_t<_Tp>>::type'
| |   `-CXXRecordDecl 0x5605abb993f8 <col:5, col:12> col:12 implicit struct is_floating_point
| |-ClassTemplateDecl 0x5605abb9abe8 <line:527:3, line:530:7> line:528:12 is_array
| | |-TemplateTypeParmDecl 0x5605abb994c0 <line:527:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb9ab38 <line:528:5, line:530:7> line:528:12 struct is_array definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_array(_Tp)>':'integral_constant<bool, __is_array(_Tp)>'
| |   `-CXXRecordDecl 0x5605abb9b148 <col:5, col:12> col:12 implicit struct is_array
| |-ClassTemplateDecl 0x5605abb9b368 <line:545:3, line:547:27> line:546:12 __is_pointer_helper
| | |-TemplateTypeParmDecl 0x5605abb9b210 <line:545:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abb9b2b8 <line:546:5, line:547:27> line:546:12 struct __is_pointer_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x5605abb9b660 <col:5, col:12> col:12 implicit struct __is_pointer_helper
| |-ClassTemplatePartialSpecializationDecl 0x5605abb9b8e0 <line:549:3, line:551:26> line:550:12 struct __is_pointer_helper definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 *'
| | | `-PointerType 0x5605abb9b7d0 'type-parameter-0-0 *' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abb9b728 <line:549:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb9c430 <line:550:5, col:12> col:12 implicit struct __is_pointer_helper
| |-ClassTemplateDecl 0x5605abb9c658 <line:554:3, line:557:7> line:555:12 is_pointer
| | |-TemplateTypeParmDecl 0x5605abb9c4f8 <line:554:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb9c5a8 <line:555:5, line:557:7> line:555:12 struct is_pointer definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_pointer_helper<__remove_cv_t<_Tp>>::type'
| |   `-CXXRecordDecl 0x5605abb9ccf8 <col:5, col:12> col:12 implicit struct is_pointer
| |-ClassTemplateDecl 0x5605abb9cf18 <line:560:3, line:562:27> line:561:12 is_lvalue_reference
| | |-TemplateTypeParmDecl 0x5605abb9cdc0 <line:560:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abb9ce68 <line:561:5, line:562:27> line:561:12 struct is_lvalue_reference definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x5605abb9d210 <col:5, col:12> col:12 implicit struct is_lvalue_reference
| |-ClassTemplatePartialSpecializationDecl 0x5605abb9e660 <line:564:3, line:566:26> line:565:12 struct is_lvalue_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abb9d2d8 <line:564:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb9e880 <line:565:5, col:12> col:12 implicit struct is_lvalue_reference
| |-ClassTemplateDecl 0x5605abb9eaa8 <line:569:3, line:571:27> line:570:12 is_rvalue_reference
| | |-TemplateTypeParmDecl 0x5605abb9e948 <line:569:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abb9e9f8 <line:570:5, line:571:27> line:570:12 struct is_rvalue_reference definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x5605abb9eda0 <col:5, col:12> col:12 implicit struct is_rvalue_reference
| |-ClassTemplatePartialSpecializationDecl 0x5605abb9f020 <line:573:3, line:575:26> line:574:12 struct is_rvalue_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abb9ee68 <line:573:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb9f240 <line:574:5, col:12> col:12 implicit struct is_rvalue_reference
| |-ClassTemplateDecl 0x5605abb9f468 <line:579:3, line:582:7> line:580:12 is_member_object_pointer
| | |-TemplateTypeParmDecl 0x5605abb9f308 <line:579:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abb9f3b8 <line:580:5, line:582:7> line:580:12 struct is_member_object_pointer definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_member_object_pointer(_Tp)>':'integral_constant<bool, __is_member_object_pointer(_Tp)>'
| |   `-CXXRecordDecl 0x5605abba07a8 <col:5, col:12> col:12 implicit struct is_member_object_pointer
| |-ClassTemplateDecl 0x5605abba09c8 <line:601:3, line:604:7> line:602:12 is_member_function_pointer
| | |-TemplateTypeParmDecl 0x5605abba0870 <line:601:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba0918 <line:602:5, line:604:7> line:602:12 struct is_member_function_pointer definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_member_function_pointer(_Tp)>':'integral_constant<bool, __is_member_function_pointer(_Tp)>'
| |   `-CXXRecordDecl 0x5605abba0f28 <col:5, col:12> col:12 implicit struct is_member_function_pointer
| |-ClassTemplateDecl 0x5605abba1148 <line:622:3, line:625:7> line:623:12 is_enum
| | |-TemplateTypeParmDecl 0x5605abba0ff0 <line:622:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba1098 <line:623:5, line:625:7> line:623:12 struct is_enum definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_enum(_Tp)>':'integral_constant<bool, __is_enum(_Tp)>'
| |   `-CXXRecordDecl 0x5605abba1fe8 <col:5, col:12> col:12 implicit struct is_enum
| |-ClassTemplateDecl 0x5605abba2208 <line:628:3, line:631:7> line:629:12 is_union
| | |-TemplateTypeParmDecl 0x5605abba20b0 <line:628:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba2158 <line:629:5, line:631:7> line:629:12 struct is_union definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_union(_Tp)>':'integral_constant<bool, __is_union(_Tp)>'
| |   `-CXXRecordDecl 0x5605abba2768 <col:5, col:12> col:12 implicit struct is_union
| |-ClassTemplateDecl 0x5605abba2988 <line:634:3, line:637:7> line:635:12 is_class
| | |-TemplateTypeParmDecl 0x5605abba2830 <line:634:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba28d8 <line:635:5, line:637:7> line:635:12 struct is_class definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_class(_Tp)>':'integral_constant<bool, __is_class(_Tp)>'
| |   `-CXXRecordDecl 0x5605abba5388 <col:5, col:12> col:12 implicit struct is_class
| |-ClassTemplateDecl 0x5605abba5590 prev 0x5605abb8c098 <line:641:3, line:644:7> line:642:12 is_function
| | |-TemplateTypeParmDecl 0x5605abba5450 <line:641:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba54f8 prev 0x5605abb8bfe8 <line:642:5, line:644:7> line:642:12 struct is_function definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_function(_Tp)>':'integral_constant<bool, __is_function(_Tp)>'
| |   `-CXXRecordDecl 0x5605abba58f8 <col:5, col:12> col:12 implicit struct is_function
| |-ClassTemplateDecl 0x5605abba5b18 <line:661:3, line:663:27> line:662:12 is_null_pointer
| | |-TemplateTypeParmDecl 0x5605abba59c0 <line:661:12, col:21> col:21 typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abba5a68 <line:662:5, line:663:27> line:662:12 struct is_null_pointer definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x5605abba5e10 <col:5, col:12> col:12 implicit struct is_null_pointer
| | |-ClassTemplateSpecialization 0x5605abba5fb0 'is_null_pointer'
| | |-ClassTemplateSpecialization 0x5605abba6360 'is_null_pointer'
| | |-ClassTemplateSpecialization 0x5605abba66a8 'is_null_pointer'
| | `-ClassTemplateSpecialization 0x5605abba69f8 'is_null_pointer'
| |-ClassTemplateSpecializationDecl 0x5605abba5fb0 <line:665:3, line:667:26> line:666:12 struct is_null_pointer definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'std::nullptr_t'
| | | `-BuiltinType 0x5605aba9d180 'std::nullptr_t'
| | `-CXXRecordDecl 0x5605abba6230 <col:5, col:12> col:12 implicit struct is_null_pointer
| |-ClassTemplateSpecializationDecl 0x5605abba6360 <line:669:3, line:671:26> line:670:12 struct is_null_pointer definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'const std::nullptr_t'
| | | `-QualType 0x5605aba9d181 'const std::nullptr_t' const
| | |   `-BuiltinType 0x5605aba9d180 'std::nullptr_t'
| | `-CXXRecordDecl 0x5605abba6578 <col:5, col:12> col:12 implicit struct is_null_pointer
| |-ClassTemplateSpecializationDecl 0x5605abba66a8 <line:673:3, line:675:26> line:674:12 struct is_null_pointer definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'volatile std::nullptr_t'
| | | `-QualType 0x5605aba9d184 'volatile std::nullptr_t' volatile
| | |   `-BuiltinType 0x5605aba9d180 'std::nullptr_t'
| | `-CXXRecordDecl 0x5605abba68c8 <col:5, col:12> col:12 implicit struct is_null_pointer
| |-ClassTemplateSpecializationDecl 0x5605abba69f8 <line:677:3, line:679:26> line:678:12 struct is_null_pointer definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'const volatile std::nullptr_t'
| | | `-QualType 0x5605aba9d185 'const volatile std::nullptr_t' const volatile
| | |   `-BuiltinType 0x5605aba9d180 'std::nullptr_t'
| | `-CXXRecordDecl 0x5605abba6c18 <col:5, col:12> col:12 implicit struct is_null_pointer
| |-ClassTemplateDecl 0x5605abba6e38 <line:683:3, line:686:7> line:684:12 __is_nullptr_t
| | |-TemplateTypeParmDecl 0x5605abba6ce0 <line:683:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba6d88 <line:684:5, line:686:7> line:684:12 struct __is_nullptr_t definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'is_null_pointer<_Tp>'
| |   |-DeprecatedAttr 0x5605abba72d8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:100:19, col:58> "use 'std::is_null_pointer' instead" ""
| |   `-CXXRecordDecl 0x5605abba71e8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:684:5, col:12> col:12 implicit struct __is_nullptr_t
| |-ClassTemplateDecl 0x5605abba74d0 prev 0x5605abb8b838 <line:693:3, line:696:7> line:694:12 is_reference
| | |-TemplateTypeParmDecl 0x5605abba7390 <line:693:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba7438 prev 0x5605abb8b788 <line:694:5, line:696:7> line:694:12 struct is_reference definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_reference(_Tp)>':'integral_constant<bool, __is_reference(_Tp)>'
| |   `-CXXRecordDecl 0x5605abba7838 <col:5, col:12> col:12 implicit struct is_reference
| |-ClassTemplateDecl 0x5605abba7a58 <line:715:3, line:718:7> line:716:12 is_arithmetic
| | |-TemplateTypeParmDecl 0x5605abba7900 <line:715:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba79a8 <line:716:5, line:718:7> line:716:12 struct is_arithmetic definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__or_<is_integral<_Tp>, is_floating_point<_Tp>>::type'
| |   `-CXXRecordDecl 0x5605abba80f8 <col:5, col:12> col:12 implicit struct is_arithmetic
| |-ClassTemplateDecl 0x5605abba8838 <line:721:3, line:725:7> line:722:12 is_fundamental
| | |-TemplateTypeParmDecl 0x5605abba86d8 <line:721:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba8788 <line:722:5, line:725:7> line:722:12 struct is_fundamental definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__or_<is_arithmetic<_Tp>, is_void<_Tp>, is_null_pointer<_Tp>>::type'
| |   `-CXXRecordDecl 0x5605abba8ff8 <col:5, col:12> col:12 implicit struct is_fundamental
| |-ClassTemplateDecl 0x5605abba9218 <line:729:3, line:732:7> line:730:12 is_object
| | |-TemplateTypeParmDecl 0x5605abba90c0 <line:729:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba9168 <line:730:5, line:732:7> line:730:12 struct is_object definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_object(_Tp)>':'integral_constant<bool, __is_object(_Tp)>'
| |   `-CXXRecordDecl 0x5605abbaa0a8 <col:5, col:12> col:12 implicit struct is_object
| |-ClassTemplateDecl 0x5605abbaa2c8 <line:741:3, line:742:12> col:12 is_member_pointer
| | |-TemplateTypeParmDecl 0x5605abbaa170 <line:741:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abbaa218 <line:742:5, col:12> col:12 struct is_member_pointer
| |-ClassTemplateDecl 0x5605abbaa678 <line:745:3, line:749:7> line:746:12 is_scalar
| | |-TemplateTypeParmDecl 0x5605abbaa518 <line:745:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbaa5c8 <line:746:5, line:749:7> line:746:12 struct is_scalar definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__or_<is_arithmetic<_Tp>, is_enum<_Tp>, is_pointer<_Tp>, is_member_pointer<_Tp>, is_null_pointer<_Tp>>::type'
| |   `-CXXRecordDecl 0x5605abbacc18 <col:5, col:12> col:12 implicit struct is_scalar
| |-ClassTemplateDecl 0x5605abbace38 <line:752:3, line:754:61> line:753:12 is_compound
| | |-TemplateTypeParmDecl 0x5605abbacce0 <line:752:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbacd88 <line:753:5, line:754:61> line:753:12 struct is_compound definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<!is_fundamental<_Tp>::value>':'integral_constant<bool, !is_fundamental<_Tp>::value>'
| |   `-CXXRecordDecl 0x5605abbad4a8 <col:5, col:12> col:12 implicit struct is_compound
| |-ClassTemplateDecl 0x5605abbad6b0 prev 0x5605abbaa2c8 <line:758:3, line:761:7> line:759:12 is_member_pointer
| | |-TemplateTypeParmDecl 0x5605abbad570 <line:758:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbad618 prev 0x5605abbaa218 <line:759:5, line:761:7> line:759:12 struct is_member_pointer definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_member_pointer(_Tp)>':'integral_constant<bool, __is_member_pointer(_Tp)>'
| |   `-CXXRecordDecl 0x5605abbada18 <col:5, col:12> col:12 implicit struct is_member_pointer
| |-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| | |-TemplateTypeParmDecl 0x5605abbadae0 <line:779:12> col:20 typename depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abbae0f8 <col:22> col:30 typename depth 0 index 1
| | `-CXXRecordDecl 0x5605abbae1b0 <line:780:5, col:12> col:12 struct is_same
| |-TypeAliasTemplateDecl 0x5605abbae9d0 <line:783:3, line:784:54> col:5 __is_one_of
| | |-TemplateTypeParmDecl 0x5605abbae4e8 <line:783:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbae578 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| | `-TypeAliasDecl 0x5605abbae968 <line:784:5, col:54> col:11 __is_one_of '__or_<is_same<_Tp, _Types>...>'
| |   `-ElaboratedType 0x5605abbae8f0 '__or_<is_same<_Tp, _Types>...>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbae8a0 '__or_<is_same<_Tp, _Types>...>' dependent
| |       |-name: '__or_':'std::__or_' qualified
| |       | `-ClassTemplateDecl 0x5605abb7fac8 <line:192:3, line:195:7> line:193:12 __or_
| |       `-TemplateArgument type 'is_same<_Tp, _Types>...':'is_same<type-parameter-0-0, type-parameter-0-1>...'
| |         `-PackExpansionType 0x5605abbae7c0 'is_same<_Tp, _Types>...' dependent
| |           `-ElaboratedType 0x5605abbae710 'is_same<_Tp, _Types>' sugar dependent contains_unexpanded_pack
| |             `-TemplateSpecializationType 0x5605abbae6b0 'is_same<_Tp, _Types>' dependent contains_unexpanded_pack
| |               |-name: 'is_same':'std::is_same' qualified
| |               | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |               |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |               | `-TemplateTypeParmType 0x5605abbae540 '_Tp' dependent depth 0 index 0
| |               |   `-TemplateTypeParm 0x5605abbae4e8 '_Tp'
| |               `-TemplateArgument type '_Types':'type-parameter-0-1'
| |                 `-TemplateTypeParmType 0x5605abbae5d0 '_Types' dependent contains_unexpanded_pack depth 0 index 1 pack
| |                   `-TemplateTypeParm 0x5605abbae578 '_Types'
| |-TypeAliasTemplateDecl 0x5605abbb00b0 <line:788:3, line:804:4> line:789:5 __is_signed_integer
| | |-TemplateTypeParmDecl 0x5605abbaea30 <line:788:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abbb0048 <line:789:5, line:804:4> line:789:11 __is_signed_integer '__is_one_of<__remove_cv_t<_Tp>, signed char, short, int, long, long long>':'__or_<is_same<__remove_cv_t<_Tp>, signed char>, is_same<__remove_cv_t<_Tp>, short>, is_same<__remove_cv_t<_Tp>, int>, is_same<__remove_cv_t<_Tp>, long>, is_same<__remove_cv_t<_Tp>, long long>>'
| |   `-ElaboratedType 0x5605abbaff80 '__is_one_of<__remove_cv_t<_Tp>, signed char, short, int, long, long long>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbafeb0 '__is_one_of<__remove_cv_t<_Tp>, signed char, short, int, long, long long>' sugar dependent alias
| |       |-name: '__is_one_of':'std::__is_one_of' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abbae9d0 <line:783:3, line:784:54> col:5 __is_one_of
| |       |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       | `-ElaboratedType 0x5605abbaeca0 '__remove_cv_t<_Tp>' sugar dependent
| |       |   `-TemplateSpecializationType 0x5605abbaec50 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |     | `-TemplateTypeParmType 0x5605abbaea80 '_Tp' dependent depth 0 index 0
| |       |     |   `-TemplateTypeParm 0x5605abbaea30 '_Tp'
| |       |     `-DependentNameType 0x5605abbaec00 'typename remove_cv<_Tp>::type' dependent
| |       |-TemplateArgument type 'signed char'
| |       | `-BuiltinType 0x5605aba9ca30 'signed char'
| |       |-TemplateArgument type 'short'
| |       | `-BuiltinType 0x5605aba9ca50 'short'
| |       |-TemplateArgument type 'int'
| |       | `-BuiltinType 0x5605aba9ca70 'int'
| |       |-TemplateArgument type 'long'
| |       | `-BuiltinType 0x5605aba9ca90 'long'
| |       |-TemplateArgument type 'long long'
| |       | `-BuiltinType 0x5605aba9cab0 'long long'
| |       `-ElaboratedType 0x5605abbafe40 '__or_<is_same<__remove_cv_t<_Tp>, signed char>, is_same<__remove_cv_t<_Tp>, short>, is_same<__remove_cv_t<_Tp>, int>, is_same<__remove_cv_t<_Tp>, long>, is_same<__remove_cv_t<_Tp>, long long>>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbafd90 '__or_<is_same<__remove_cv_t<_Tp>, signed char>, is_same<__remove_cv_t<_Tp>, short>, is_same<__remove_cv_t<_Tp>, int>, is_same<__remove_cv_t<_Tp>, long>, is_same<__remove_cv_t<_Tp>, long long>>' dependent
| |           |-name: '__or_':'std::__or_' qualified
| |           | `-ClassTemplateDecl 0x5605abb7fac8 <line:192:3, line:195:7> line:193:12 __or_
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, signed char>':'is_same<typename remove_cv<type-parameter-0-0>::type, signed char>'
| |           | `-ElaboratedType 0x5605abbaf030 'is_same<__remove_cv_t<_Tp>, signed char>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbaefd0 'is_same<__remove_cv_t<_Tp>, signed char>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbaeca0 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbaec50 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbaea80 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbaea30 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbaec00 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'signed char'
| |           |       `-BuiltinType 0x5605aba9ca30 'signed char'
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, short>':'is_same<typename remove_cv<type-parameter-0-0>::type, short>'
| |           | `-ElaboratedType 0x5605abbaf7d0 'is_same<__remove_cv_t<_Tp>, short>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbaf770 'is_same<__remove_cv_t<_Tp>, short>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbaeca0 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbaec50 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbaea80 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbaea30 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbaec00 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'short'
| |           |       `-BuiltinType 0x5605aba9ca50 'short'
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, int>':'is_same<typename remove_cv<type-parameter-0-0>::type, int>'
| |           | `-ElaboratedType 0x5605abbaf930 'is_same<__remove_cv_t<_Tp>, int>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbaf8d0 'is_same<__remove_cv_t<_Tp>, int>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbaeca0 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbaec50 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbaea80 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbaea30 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbaec00 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'int'
| |           |       `-BuiltinType 0x5605aba9ca70 'int'
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, long>':'is_same<typename remove_cv<type-parameter-0-0>::type, long>'
| |           | `-ElaboratedType 0x5605abbafa90 'is_same<__remove_cv_t<_Tp>, long>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbafa30 'is_same<__remove_cv_t<_Tp>, long>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbaeca0 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbaec50 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbaea80 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbaea30 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbaec00 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'long'
| |           |       `-BuiltinType 0x5605aba9ca90 'long'
| |           `-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, long long>':'is_same<typename remove_cv<type-parameter-0-0>::type, long long>'
| |             `-ElaboratedType 0x5605abbafbf0 'is_same<__remove_cv_t<_Tp>, long long>' sugar dependent
| |               `-TemplateSpecializationType 0x5605abbafb90 'is_same<__remove_cv_t<_Tp>, long long>' dependent
| |                 |-name: 'is_same':'std::is_same' qualified
| |                 | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |                 |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                 | `-ElaboratedType 0x5605abbaeca0 '__remove_cv_t<_Tp>' sugar dependent
| |                 |   `-TemplateSpecializationType 0x5605abbaec50 '__remove_cv_t<_Tp>' sugar dependent alias
| |                 |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                 |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                 |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                 |     | `-TemplateTypeParmType 0x5605abbaea80 '_Tp' dependent depth 0 index 0
| |                 |     |   `-TemplateTypeParm 0x5605abbaea30 '_Tp'
| |                 |     `-DependentNameType 0x5605abbaec00 'typename remove_cv<_Tp>::type' dependent
| |                 `-TemplateArgument type 'long long'
| |                   `-BuiltinType 0x5605aba9cab0 'long long'
| |-TypeAliasTemplateDecl 0x5605abbb1130 <line:808:3, line:824:4> line:809:5 __is_unsigned_integer
| | |-TemplateTypeParmDecl 0x5605abbb0110 <line:808:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abbb10c8 <line:809:5, line:824:4> line:809:11 __is_unsigned_integer '__is_one_of<__remove_cv_t<_Tp>, unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'__or_<is_same<__remove_cv_t<_Tp>, unsigned char>, is_same<__remove_cv_t<_Tp>, unsigned short>, is_same<__remove_cv_t<_Tp>, unsigned int>, is_same<__remove_cv_t<_Tp>, unsigned long>, is_same<__remove_cv_t<_Tp>, unsigned long long>>'
| |   `-ElaboratedType 0x5605abbb1000 '__is_one_of<__remove_cv_t<_Tp>, unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbb0f30 '__is_one_of<__remove_cv_t<_Tp>, unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar dependent alias
| |       |-name: '__is_one_of':'std::__is_one_of' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abbae9d0 <line:783:3, line:784:54> col:5 __is_one_of
| |       |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       | `-ElaboratedType 0x5605abbb0360 '__remove_cv_t<_Tp>' sugar dependent
| |       |   `-TemplateSpecializationType 0x5605abbb0310 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |     | `-TemplateTypeParmType 0x5605abbb0160 '_Tp' dependent depth 0 index 0
| |       |     |   `-TemplateTypeParm 0x5605abbb0110 '_Tp'
| |       |     `-DependentNameType 0x5605abbb02c0 'typename remove_cv<_Tp>::type' dependent
| |       |-TemplateArgument type 'unsigned char'
| |       | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |       |-TemplateArgument type 'unsigned short'
| |       | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| |       |-TemplateArgument type 'unsigned int'
| |       | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |       |-TemplateArgument type 'unsigned long'
| |       | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |       |-TemplateArgument type 'unsigned long long'
| |       | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| |       `-ElaboratedType 0x5605abbb0ec0 '__or_<is_same<__remove_cv_t<_Tp>, unsigned char>, is_same<__remove_cv_t<_Tp>, unsigned short>, is_same<__remove_cv_t<_Tp>, unsigned int>, is_same<__remove_cv_t<_Tp>, unsigned long>, is_same<__remove_cv_t<_Tp>, unsigned long long>>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbb0e10 '__or_<is_same<__remove_cv_t<_Tp>, unsigned char>, is_same<__remove_cv_t<_Tp>, unsigned short>, is_same<__remove_cv_t<_Tp>, unsigned int>, is_same<__remove_cv_t<_Tp>, unsigned long>, is_same<__remove_cv_t<_Tp>, unsigned long long>>' dependent
| |           |-name: '__or_':'std::__or_' qualified
| |           | `-ClassTemplateDecl 0x5605abb7fac8 <line:192:3, line:195:7> line:193:12 __or_
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned char>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned char>'
| |           | `-ElaboratedType 0x5605abbb06e0 'is_same<__remove_cv_t<_Tp>, unsigned char>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbb0680 'is_same<__remove_cv_t<_Tp>, unsigned char>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbb0360 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbb0310 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbb0160 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbb0110 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbb02c0 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'unsigned char'
| |           |       `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned short>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned short>'
| |           | `-ElaboratedType 0x5605abbb0850 'is_same<__remove_cv_t<_Tp>, unsigned short>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbb07f0 'is_same<__remove_cv_t<_Tp>, unsigned short>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbb0360 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbb0310 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbb0160 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbb0110 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbb02c0 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'unsigned short'
| |           |       `-BuiltinType 0x5605aba9caf0 'unsigned short'
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned int>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned int>'
| |           | `-ElaboratedType 0x5605abbb09b0 'is_same<__remove_cv_t<_Tp>, unsigned int>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbb0950 'is_same<__remove_cv_t<_Tp>, unsigned int>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbb0360 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbb0310 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbb0160 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbb0110 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbb02c0 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'unsigned int'
| |           |       `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |           |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned long>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned long>'
| |           | `-ElaboratedType 0x5605abbb0b10 'is_same<__remove_cv_t<_Tp>, unsigned long>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abbb0ab0 'is_same<__remove_cv_t<_Tp>, unsigned long>' dependent
| |           |     |-name: 'is_same':'std::is_same' qualified
| |           |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |           |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |           |     | `-ElaboratedType 0x5605abbb0360 '__remove_cv_t<_Tp>' sugar dependent
| |           |     |   `-TemplateSpecializationType 0x5605abbb0310 '__remove_cv_t<_Tp>' sugar dependent alias
| |           |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |           |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |           |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           |     |     | `-TemplateTypeParmType 0x5605abbb0160 '_Tp' dependent depth 0 index 0
| |           |     |     |   `-TemplateTypeParm 0x5605abbb0110 '_Tp'
| |           |     |     `-DependentNameType 0x5605abbb02c0 'typename remove_cv<_Tp>::type' dependent
| |           |     `-TemplateArgument type 'unsigned long'
| |           |       `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |           `-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned long long>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned long long>'
| |             `-ElaboratedType 0x5605abbb0c70 'is_same<__remove_cv_t<_Tp>, unsigned long long>' sugar dependent
| |               `-TemplateSpecializationType 0x5605abbb0c10 'is_same<__remove_cv_t<_Tp>, unsigned long long>' dependent
| |                 |-name: 'is_same':'std::is_same' qualified
| |                 | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |                 |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                 | `-ElaboratedType 0x5605abbb0360 '__remove_cv_t<_Tp>' sugar dependent
| |                 |   `-TemplateSpecializationType 0x5605abbb0310 '__remove_cv_t<_Tp>' sugar dependent alias
| |                 |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                 |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                 |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                 |     | `-TemplateTypeParmType 0x5605abbb0160 '_Tp' dependent depth 0 index 0
| |                 |     |   `-TemplateTypeParm 0x5605abbb0110 '_Tp'
| |                 |     `-DependentNameType 0x5605abbb02c0 'typename remove_cv<_Tp>::type' dependent
| |                 `-TemplateArgument type 'unsigned long long'
| |                   `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| |-TypeAliasTemplateDecl 0x5605abbb32a0 <line:827:3, line:829:67> line:828:5 __is_standard_integer
| | |-TemplateTypeParmDecl 0x5605abbb1190 <line:827:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abbb3238 <line:828:5, line:829:67> line:828:11 __is_standard_integer '__or_<__is_signed_integer<_Tp>, __is_unsigned_integer<_Tp>>'
| |   `-ElaboratedType 0x5605abbb31b0 '__or_<__is_signed_integer<_Tp>, __is_unsigned_integer<_Tp>>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbb3150 '__or_<__is_signed_integer<_Tp>, __is_unsigned_integer<_Tp>>' dependent
| |       |-name: '__or_':'std::__or_' qualified
| |       | `-ClassTemplateDecl 0x5605abb7fac8 <line:192:3, line:195:7> line:193:12 __or_
| |       |-TemplateArgument type '__is_signed_integer<_Tp>':'__or_<is_same<typename remove_cv<type-parameter-0-0>::type, signed char>, is_same<typename remove_cv<type-parameter-0-0>::type, short>, is_same<typename remove_cv<type-parameter-0-0>::type, int>, is_same<typename remove_cv<type-parameter-0-0>::type, long>, is_same<typename remove_cv<type-parameter-0-0>::type, long long>>'
| |       | `-ElaboratedType 0x5605abbb2240 '__is_signed_integer<_Tp>' sugar dependent
| |       |   `-TemplateSpecializationType 0x5605abbb21f0 '__is_signed_integer<_Tp>' sugar dependent alias
| |       |     |-name: '__is_signed_integer':'std::__is_signed_integer' qualified
| |       |     | `-TypeAliasTemplateDecl 0x5605abbb00b0 <line:788:3, line:804:4> line:789:5 __is_signed_integer
| |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |       |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |       |     `-ElaboratedType 0x5605abbb2170 '__is_one_of<__remove_cv_t<_Tp>, signed char, short, int, long, long long>' sugar dependent
| |       |       `-TemplateSpecializationType 0x5605abbb20a0 '__is_one_of<__remove_cv_t<_Tp>, signed char, short, int, long, long long>' sugar dependent alias
| |       |         |-name: '__is_one_of':'std::__is_one_of' qualified
| |       |         | `-TypeAliasTemplateDecl 0x5605abbae9d0 <line:783:3, line:784:54> col:5 __is_one_of
| |       |         |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       |         | `-ElaboratedType 0x5605abbb1510 '__remove_cv_t<_Tp>' sugar dependent
| |       |         |   `-TemplateSpecializationType 0x5605abbb14c0 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |         |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |         |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |         |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |         |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |       |         |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |       |         |     `-DependentNameType 0x5605abbb1470 'typename remove_cv<_Tp>::type' dependent
| |       |         |-TemplateArgument type 'signed char'
| |       |         | `-BuiltinType 0x5605aba9ca30 'signed char'
| |       |         |-TemplateArgument type 'short'
| |       |         | `-BuiltinType 0x5605aba9ca50 'short'
| |       |         |-TemplateArgument type 'int'
| |       |         | `-BuiltinType 0x5605aba9ca70 'int'
| |       |         |-TemplateArgument type 'long'
| |       |         | `-BuiltinType 0x5605aba9ca90 'long'
| |       |         |-TemplateArgument type 'long long'
| |       |         | `-BuiltinType 0x5605aba9cab0 'long long'
| |       |         `-ElaboratedType 0x5605abbb2030 '__or_<is_same<__remove_cv_t<_Tp>, signed char>, is_same<__remove_cv_t<_Tp>, short>, is_same<__remove_cv_t<_Tp>, int>, is_same<__remove_cv_t<_Tp>, long>, is_same<__remove_cv_t<_Tp>, long long>>' sugar dependent
| |       |           `-TemplateSpecializationType 0x5605abbb1f80 '__or_<is_same<__remove_cv_t<_Tp>, signed char>, is_same<__remove_cv_t<_Tp>, short>, is_same<__remove_cv_t<_Tp>, int>, is_same<__remove_cv_t<_Tp>, long>, is_same<__remove_cv_t<_Tp>, long long>>' dependent
| |       |             |-name: '__or_':'std::__or_' qualified
| |       |             | `-ClassTemplateDecl 0x5605abb7fac8 <line:192:3, line:195:7> line:193:12 __or_
| |       |             |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, signed char>':'is_same<typename remove_cv<type-parameter-0-0>::type, signed char>'
| |       |             | `-ElaboratedType 0x5605abbb1a30 'is_same<__remove_cv_t<_Tp>, signed char>' sugar dependent
| |       |             |   `-TemplateSpecializationType 0x5605abbb19d0 'is_same<__remove_cv_t<_Tp>, signed char>' dependent
| |       |             |     |-name: 'is_same':'std::is_same' qualified
| |       |             |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |       |             |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       |             |     | `-ElaboratedType 0x5605abbb1510 '__remove_cv_t<_Tp>' sugar dependent
| |       |             |     |   `-TemplateSpecializationType 0x5605abbb14c0 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |             |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |             |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |             |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |             |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |       |             |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |       |             |     |     `-DependentNameType 0x5605abbb1470 'typename remove_cv<_Tp>::type' dependent
| |       |             |     `-TemplateArgument type 'signed char'
| |       |             |       `-BuiltinType 0x5605aba9ca30 'signed char'
| |       |             |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, short>':'is_same<typename remove_cv<type-parameter-0-0>::type, short>'
| |       |             | `-ElaboratedType 0x5605abbb1b30 'is_same<__remove_cv_t<_Tp>, short>' sugar dependent
| |       |             |   `-TemplateSpecializationType 0x5605abbb1ad0 'is_same<__remove_cv_t<_Tp>, short>' dependent
| |       |             |     |-name: 'is_same':'std::is_same' qualified
| |       |             |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |       |             |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       |             |     | `-ElaboratedType 0x5605abbb1510 '__remove_cv_t<_Tp>' sugar dependent
| |       |             |     |   `-TemplateSpecializationType 0x5605abbb14c0 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |             |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |             |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |             |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |             |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |       |             |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |       |             |     |     `-DependentNameType 0x5605abbb1470 'typename remove_cv<_Tp>::type' dependent
| |       |             |     `-TemplateArgument type 'short'
| |       |             |       `-BuiltinType 0x5605aba9ca50 'short'
| |       |             |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, int>':'is_same<typename remove_cv<type-parameter-0-0>::type, int>'
| |       |             | `-ElaboratedType 0x5605abbb1c30 'is_same<__remove_cv_t<_Tp>, int>' sugar dependent
| |       |             |   `-TemplateSpecializationType 0x5605abbb1bd0 'is_same<__remove_cv_t<_Tp>, int>' dependent
| |       |             |     |-name: 'is_same':'std::is_same' qualified
| |       |             |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |       |             |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       |             |     | `-ElaboratedType 0x5605abbb1510 '__remove_cv_t<_Tp>' sugar dependent
| |       |             |     |   `-TemplateSpecializationType 0x5605abbb14c0 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |             |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |             |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |             |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |             |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |       |             |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |       |             |     |     `-DependentNameType 0x5605abbb1470 'typename remove_cv<_Tp>::type' dependent
| |       |             |     `-TemplateArgument type 'int'
| |       |             |       `-BuiltinType 0x5605aba9ca70 'int'
| |       |             |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, long>':'is_same<typename remove_cv<type-parameter-0-0>::type, long>'
| |       |             | `-ElaboratedType 0x5605abbb1d30 'is_same<__remove_cv_t<_Tp>, long>' sugar dependent
| |       |             |   `-TemplateSpecializationType 0x5605abbb1cd0 'is_same<__remove_cv_t<_Tp>, long>' dependent
| |       |             |     |-name: 'is_same':'std::is_same' qualified
| |       |             |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |       |             |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       |             |     | `-ElaboratedType 0x5605abbb1510 '__remove_cv_t<_Tp>' sugar dependent
| |       |             |     |   `-TemplateSpecializationType 0x5605abbb14c0 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |             |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |             |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |             |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |             |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |       |             |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |       |             |     |     `-DependentNameType 0x5605abbb1470 'typename remove_cv<_Tp>::type' dependent
| |       |             |     `-TemplateArgument type 'long'
| |       |             |       `-BuiltinType 0x5605aba9ca90 'long'
| |       |             `-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, long long>':'is_same<typename remove_cv<type-parameter-0-0>::type, long long>'
| |       |               `-ElaboratedType 0x5605abbb1e30 'is_same<__remove_cv_t<_Tp>, long long>' sugar dependent
| |       |                 `-TemplateSpecializationType 0x5605abbb1dd0 'is_same<__remove_cv_t<_Tp>, long long>' dependent
| |       |                   |-name: 'is_same':'std::is_same' qualified
| |       |                   | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |       |                   |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |       |                   | `-ElaboratedType 0x5605abbb1510 '__remove_cv_t<_Tp>' sugar dependent
| |       |                   |   `-TemplateSpecializationType 0x5605abbb14c0 '__remove_cv_t<_Tp>' sugar dependent alias
| |       |                   |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |       |                   |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |       |                   |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |                   |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |       |                   |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |       |                   |     `-DependentNameType 0x5605abbb1470 'typename remove_cv<_Tp>::type' dependent
| |       |                   `-TemplateArgument type 'long long'
| |       |                     `-BuiltinType 0x5605aba9cab0 'long long'
| |       `-TemplateArgument type '__is_unsigned_integer<_Tp>':'__or_<is_same<typename remove_cv<type-parameter-0-0>::type, unsigned char>, is_same<typename remove_cv<type-parameter-0-0>::type, unsigned short>, is_same<typename remove_cv<type-parameter-0-0>::type, unsigned int>, is_same<typename remove_cv<type-parameter-0-0>::type, unsigned long>, is_same<typename remove_cv<type-parameter-0-0>::type, unsigned long long>>'
| |         `-ElaboratedType 0x5605abbb3030 '__is_unsigned_integer<_Tp>' sugar dependent
| |           `-TemplateSpecializationType 0x5605abbb2fe0 '__is_unsigned_integer<_Tp>' sugar dependent alias
| |             |-name: '__is_unsigned_integer':'std::__is_unsigned_integer' qualified
| |             | `-TypeAliasTemplateDecl 0x5605abbb1130 <line:808:3, line:824:4> line:809:5 __is_unsigned_integer
| |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |             | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |             |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |             `-ElaboratedType 0x5605abbb2f60 '__is_one_of<__remove_cv_t<_Tp>, unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar dependent
| |               `-TemplateSpecializationType 0x5605abbb2e90 '__is_one_of<__remove_cv_t<_Tp>, unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar dependent alias
| |                 |-name: '__is_one_of':'std::__is_one_of' qualified
| |                 | `-TypeAliasTemplateDecl 0x5605abbae9d0 <line:783:3, line:784:54> col:5 __is_one_of
| |                 |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                 | `-ElaboratedType 0x5605abbb2590 '__remove_cv_t<_Tp>' sugar dependent
| |                 |   `-TemplateSpecializationType 0x5605abbb2540 '__remove_cv_t<_Tp>' sugar dependent alias
| |                 |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                 |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                 |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                 |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |                 |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |                 |     `-DependentNameType 0x5605abbb24f0 'typename remove_cv<_Tp>::type' dependent
| |                 |-TemplateArgument type 'unsigned char'
| |                 | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |                 |-TemplateArgument type 'unsigned short'
| |                 | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| |                 |-TemplateArgument type 'unsigned int'
| |                 | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |                 |-TemplateArgument type 'unsigned long'
| |                 | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |                 |-TemplateArgument type 'unsigned long long'
| |                 | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| |                 `-ElaboratedType 0x5605abbb2e20 '__or_<is_same<__remove_cv_t<_Tp>, unsigned char>, is_same<__remove_cv_t<_Tp>, unsigned short>, is_same<__remove_cv_t<_Tp>, unsigned int>, is_same<__remove_cv_t<_Tp>, unsigned long>, is_same<__remove_cv_t<_Tp>, unsigned long long>>' sugar dependent
| |                   `-TemplateSpecializationType 0x5605abbb2d70 '__or_<is_same<__remove_cv_t<_Tp>, unsigned char>, is_same<__remove_cv_t<_Tp>, unsigned short>, is_same<__remove_cv_t<_Tp>, unsigned int>, is_same<__remove_cv_t<_Tp>, unsigned long>, is_same<__remove_cv_t<_Tp>, unsigned long long>>' dependent
| |                     |-name: '__or_':'std::__or_' qualified
| |                     | `-ClassTemplateDecl 0x5605abb7fac8 <line:192:3, line:195:7> line:193:12 __or_
| |                     |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned char>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned char>'
| |                     | `-ElaboratedType 0x5605abbb2810 'is_same<__remove_cv_t<_Tp>, unsigned char>' sugar dependent
| |                     |   `-TemplateSpecializationType 0x5605abbb27b0 'is_same<__remove_cv_t<_Tp>, unsigned char>' dependent
| |                     |     |-name: 'is_same':'std::is_same' qualified
| |                     |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |                     |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                     |     | `-ElaboratedType 0x5605abbb2590 '__remove_cv_t<_Tp>' sugar dependent
| |                     |     |   `-TemplateSpecializationType 0x5605abbb2540 '__remove_cv_t<_Tp>' sugar dependent alias
| |                     |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                     |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                     |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                     |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |                     |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |                     |     |     `-DependentNameType 0x5605abbb24f0 'typename remove_cv<_Tp>::type' dependent
| |                     |     `-TemplateArgument type 'unsigned char'
| |                     |       `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |                     |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned short>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned short>'
| |                     | `-ElaboratedType 0x5605abbb2910 'is_same<__remove_cv_t<_Tp>, unsigned short>' sugar dependent
| |                     |   `-TemplateSpecializationType 0x5605abbb28b0 'is_same<__remove_cv_t<_Tp>, unsigned short>' dependent
| |                     |     |-name: 'is_same':'std::is_same' qualified
| |                     |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |                     |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                     |     | `-ElaboratedType 0x5605abbb2590 '__remove_cv_t<_Tp>' sugar dependent
| |                     |     |   `-TemplateSpecializationType 0x5605abbb2540 '__remove_cv_t<_Tp>' sugar dependent alias
| |                     |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                     |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                     |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                     |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |                     |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |                     |     |     `-DependentNameType 0x5605abbb24f0 'typename remove_cv<_Tp>::type' dependent
| |                     |     `-TemplateArgument type 'unsigned short'
| |                     |       `-BuiltinType 0x5605aba9caf0 'unsigned short'
| |                     |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned int>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned int>'
| |                     | `-ElaboratedType 0x5605abbb2a20 'is_same<__remove_cv_t<_Tp>, unsigned int>' sugar dependent
| |                     |   `-TemplateSpecializationType 0x5605abbb29c0 'is_same<__remove_cv_t<_Tp>, unsigned int>' dependent
| |                     |     |-name: 'is_same':'std::is_same' qualified
| |                     |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |                     |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                     |     | `-ElaboratedType 0x5605abbb2590 '__remove_cv_t<_Tp>' sugar dependent
| |                     |     |   `-TemplateSpecializationType 0x5605abbb2540 '__remove_cv_t<_Tp>' sugar dependent alias
| |                     |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                     |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                     |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                     |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |                     |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |                     |     |     `-DependentNameType 0x5605abbb24f0 'typename remove_cv<_Tp>::type' dependent
| |                     |     `-TemplateArgument type 'unsigned int'
| |                     |       `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |                     |-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned long>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned long>'
| |                     | `-ElaboratedType 0x5605abbb2b20 'is_same<__remove_cv_t<_Tp>, unsigned long>' sugar dependent
| |                     |   `-TemplateSpecializationType 0x5605abbb2ac0 'is_same<__remove_cv_t<_Tp>, unsigned long>' dependent
| |                     |     |-name: 'is_same':'std::is_same' qualified
| |                     |     | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |                     |     |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                     |     | `-ElaboratedType 0x5605abbb2590 '__remove_cv_t<_Tp>' sugar dependent
| |                     |     |   `-TemplateSpecializationType 0x5605abbb2540 '__remove_cv_t<_Tp>' sugar dependent alias
| |                     |     |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                     |     |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                     |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                     |     |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |                     |     |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |                     |     |     `-DependentNameType 0x5605abbb24f0 'typename remove_cv<_Tp>::type' dependent
| |                     |     `-TemplateArgument type 'unsigned long'
| |                     |       `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |                     `-TemplateArgument type 'is_same<__remove_cv_t<_Tp>, unsigned long long>':'is_same<typename remove_cv<type-parameter-0-0>::type, unsigned long long>'
| |                       `-ElaboratedType 0x5605abbb2c20 'is_same<__remove_cv_t<_Tp>, unsigned long long>' sugar dependent
| |                         `-TemplateSpecializationType 0x5605abbb2bc0 'is_same<__remove_cv_t<_Tp>, unsigned long long>' dependent
| |                           |-name: 'is_same':'std::is_same' qualified
| |                           | `-ClassTemplateDecl 0x5605abbae260 <line:779:3, line:780:12> col:12 is_same
| |                           |-TemplateArgument type '__remove_cv_t<_Tp>':'typename remove_cv<type-parameter-0-0>::type'
| |                           | `-ElaboratedType 0x5605abbb2590 '__remove_cv_t<_Tp>' sugar dependent
| |                           |   `-TemplateSpecializationType 0x5605abbb2540 '__remove_cv_t<_Tp>' sugar dependent alias
| |                           |     |-name: '__remove_cv_t':'std::__remove_cv_t' qualified
| |                           |     | `-TypeAliasTemplateDecl 0x5605abb90000 <line:310:3, line:311:52> col:5 __remove_cv_t
| |                           |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |                           |     | `-TemplateTypeParmType 0x5605abbb11e0 '_Tp' dependent depth 0 index 0
| |                           |     |   `-TemplateTypeParm 0x5605abbb1190 '_Tp'
| |                           |     `-DependentNameType 0x5605abbb24f0 'typename remove_cv<_Tp>::type' dependent
| |                           `-TemplateArgument type 'unsigned long long'
| |                             `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| |-TypeAliasTemplateDecl 0x5605abbb3420 <line:832:3, col:42> col:25 __void_t
| | |-TemplateTypeParmDecl 0x5605abbb3300 <col:12> col:23 typename depth 0 index 0 ...
| | `-TypeAliasDecl 0x5605abbb33b8 <col:25, col:42> col:31 __void_t 'void'
| |   `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplateDecl 0x5605abbb35c0 prev 0x5605abb8cba8 <line:838:3, line:840:27> line:839:12 is_const
| | |-TemplateTypeParmDecl 0x5605abbb3480 <line:838:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x5605abbb3528 prev 0x5605abb8caf8 <line:839:5, line:840:27> line:839:12 struct is_const definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x5605abbb36c8 <col:5, col:12> col:12 implicit struct is_const
| | |-ClassTemplateSpecialization 0x5605abc24a68 'is_const'
| | |-ClassTemplateSpecialization 0x5605abc27e58 'is_const'
| | |-ClassTemplateSpecialization 0x5605abbcf518 'is_const'
| | |-ClassTemplateSpecialization 0x5605abc332b8 'is_const'
| | |-ClassTemplateSpecialization 0x5605abc3fca8 'is_const'
| | |-ClassTemplateSpecialization 0x5605abc45718 'is_const'
| | |-ClassTemplateSpecialization 0x5605abc4c738 'is_const'
| | |-ClassTemplateSpecialization 0x5605abdc9608 'is_const'
| | |-ClassTemplateSpecialization 0x5605abeb7f18 'is_const'
| | |-ClassTemplateSpecialization 0x5605abebf268 'is_const'
| | |-ClassTemplateSpecialization 0x5605abec2c58 'is_const'
| | |-ClassTemplateSpecialization 0x5605abed4028 'is_const'
| | `-ClassTemplateSpecialization 0x5605abedf278 'is_const'
| |-ClassTemplatePartialSpecializationDecl 0x5605abbb3a48 <line:842:3, line:844:26> line:843:12 struct is_const definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'const type-parameter-0-0'
| | | `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abbb3790 <line:842:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb3c70 <line:843:5, col:12> col:12 implicit struct is_const
| |-ClassTemplateDecl 0x5605abbb3e98 <line:847:3, line:849:27> line:848:12 is_volatile
| | |-TemplateTypeParmDecl 0x5605abbb3d38 <line:847:12> col:20 typename depth 0 index 0
| | |-CXXRecordDecl 0x5605abbb3de8 <line:848:5, line:849:27> line:848:12 struct is_volatile definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | `-CXXRecordDecl 0x5605abbb4190 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x5605abc25118 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | `-CXXRecordDecl 0x5605abc25398 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x5605abc28248 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | `-CXXRecordDecl 0x5605abc284c8 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x5605abbcf908 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | `-CXXRecordDecl 0x5605abbcfb88 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x5605abc336a8 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'char32_t'
| | | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | | `-CXXRecordDecl 0x5605abc33928 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x5605abc40098 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | `-CXXRecordDecl 0x5605abc40318 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x5605abc46118 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | `-CXXRecordDecl 0x5605abc46398 <col:5, col:12> col:12 implicit struct is_volatile
| | |-ClassTemplateSpecializationDecl 0x5605abc4cb28 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public 'false_type':'std::integral_constant<bool, false>'
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | `-CXXRecordDecl 0x5605abc4cda8 <col:5, col:12> col:12 implicit struct is_volatile
| | `-ClassTemplateSpecializationDecl 0x5605abdc9a48 <line:847:3, line:849:27> line:848:12 struct is_volatile definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   |-TemplateArgument type 'void *const'
| |   | `-QualType 0x5605aba9d151 'void *const' const
| |   |   `-PointerType 0x5605aba9d150 'void *'
| |   |     `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-CXXRecordDecl 0x5605abdc9cc8 <col:5, col:12> col:12 implicit struct is_volatile
| |-ClassTemplatePartialSpecializationDecl 0x5605abbb43b0 <line:851:3, line:853:26> line:852:12 struct is_volatile definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | | `-QualType 0x5605abb238f4 'volatile type-parameter-0-0' volatile
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abbb4258 <line:851:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb45d0 <line:852:5, col:12> col:12 implicit struct is_volatile
| |-ClassTemplateDecl 0x5605abbb47f8 <line:856:3, line:862:5> line:857:12 is_trivial
| | |-TemplateTypeParmDecl 0x5605abbb4698 <line:856:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb4748 <line:857:5, line:862:5> line:857:12 struct is_trivial definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_trivial(_Tp)>':'integral_constant<bool, __is_trivial(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbb56f8 <col:5, col:12> col:12 implicit struct is_trivial
| |   `-StaticAssertDecl 0x5605abbb59d0 <line:860:7, line:861:68> line:860:7
| |     |-CallExpr 0x5605abbb5948 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbb57c0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbb5920 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbb58e0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbb5970 <line:861:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbb5b88 <line:865:3, line:871:5> line:866:12 is_trivially_copyable
| | |-TemplateTypeParmDecl 0x5605abbb5a30 <line:865:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb5ad8 <line:866:5, line:871:5> line:866:12 struct is_trivially_copyable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_trivially_copyable(_Tp)>':'integral_constant<bool, __is_trivially_copyable(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbb60e8 <col:5, col:12> col:12 implicit struct is_trivially_copyable
| |   `-StaticAssertDecl 0x5605abbb68f8 <line:869:7, line:870:68> line:869:7
| |     |-CallExpr 0x5605abbb6338 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbb61b0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbb6310 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbb62d0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbb6360 <line:870:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbb6ab8 <line:874:3, line:880:5> line:875:12 is_standard_layout
| | |-TemplateTypeParmDecl 0x5605abbb6958 <line:874:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb6a08 <line:875:5, line:880:5> line:875:12 struct is_standard_layout definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_standard_layout(_Tp)>':'integral_constant<bool, __is_standard_layout(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbb7018 <col:5, col:12> col:12 implicit struct is_standard_layout
| |   `-StaticAssertDecl 0x5605abbb72f0 <line:878:7, line:879:68> line:878:7
| |     |-CallExpr 0x5605abbb7268 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbb70e0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbb7240 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbb7200 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbb7290 <line:879:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbb74f8 <line:887:3, line:895:5> line:890:5 is_pod
| | |-TemplateTypeParmDecl 0x5605abbb7350 <line:887:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb7448 <line:888:5, line:895:5> line:890:5 struct is_pod definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_pod(_Tp)>':'integral_constant<bool, __is_pod(_Tp)>'
| |   |-DeprecatedAttr 0x5605abbb77a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:100:19, col:58> "use 'is_standard_layout && is_trivial' instead" ""
| |   |-CXXRecordDecl 0x5605abbb83b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:888:5, line:890:5> col:5 implicit struct is_pod
| |   `-StaticAssertDecl 0x5605abbb8690 <line:893:7, line:894:68> line:893:7
| |     |-CallExpr 0x5605abbb8608 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbb8480 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbb85e0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbb85a0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbb8630 <line:894:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbb8848 <line:901:3, line:909:5> line:904:5 is_literal_type
| | |-TemplateTypeParmDecl 0x5605abbb86f0 <line:901:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb8798 <line:902:5, line:909:5> line:904:5 struct is_literal_type definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_literal(_Tp)>':'integral_constant<bool, __is_literal(_Tp)>'
| |   |-DeprecatedAttr 0x5605abbb8af8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:123:34> "" ""
| |   |-CXXRecordDecl 0x5605abbb8e18 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:902:5, line:904:5> col:5 implicit struct is_literal_type
| |   `-StaticAssertDecl 0x5605abbb90f0 <line:907:7, line:908:68> line:907:7
| |     |-CallExpr 0x5605abbb9068 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbb8ee0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbb9040 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbb9000 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbb9090 <line:908:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbb97c8 <line:912:3, line:915:7> line:913:12 is_empty
| | |-TemplateTypeParmDecl 0x5605abbb9150 <line:912:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb9718 <line:913:5, line:915:7> line:913:12 struct is_empty definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_empty(_Tp)>':'integral_constant<bool, __is_empty(_Tp)>'
| |   `-CXXRecordDecl 0x5605abbb9d28 <col:5, col:12> col:12 implicit struct is_empty
| |-ClassTemplateDecl 0x5605abbb9f48 <line:918:3, line:921:7> line:919:12 is_polymorphic
| | |-TemplateTypeParmDecl 0x5605abbb9df0 <line:918:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbb9e98 <line:919:5, line:921:7> line:919:12 struct is_polymorphic definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_polymorphic(_Tp)>':'integral_constant<bool, __is_polymorphic(_Tp)>'
| |   `-CXXRecordDecl 0x5605abbba4a8 <col:5, col:12> col:12 implicit struct is_polymorphic
| |-ClassTemplateDecl 0x5605abbbaff8 <line:926:3, line:929:7> line:927:12 is_final
| | |-TemplateTypeParmDecl 0x5605abbba570 <line:926:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbba618 <line:927:5, line:929:7> line:927:12 struct is_final definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_final(_Tp)>':'integral_constant<bool, __is_final(_Tp)>'
| |   `-CXXRecordDecl 0x5605abbbb558 <col:5, col:12> col:12 implicit struct is_final
| |-ClassTemplateDecl 0x5605abbbb778 <line:933:3, line:936:7> line:934:12 is_abstract
| | |-TemplateTypeParmDecl 0x5605abbbb620 <line:933:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbbb6c8 <line:934:5, line:936:7> line:934:12 struct is_abstract definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_abstract(_Tp)>':'integral_constant<bool, __is_abstract(_Tp)>'
| |   `-CXXRecordDecl 0x5605abbbbcd8 <col:5, col:12> col:12 implicit struct is_abstract
| |-ClassTemplateDecl 0x5605abbbc9d8 <line:939:3, line:942:27> line:941:12 __is_signed_helper
| | |-TemplateTypeParmDecl 0x5605abbbbda0 <line:939:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbbbf28 <line:940:5, col:32> col:10 'bool' depth 0 index 1
| | | `-TemplateArgument <col:12, col:32> expr 'is_arithmetic<_Tp>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abbbbed8 <col:12, col:32> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec 'is_arithmetic<_Tp>'
| | `-CXXRecordDecl 0x5605abbbc928 <line:941:5, line:942:27> line:941:12 struct __is_signed_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x5605abbbcd20 <col:5, col:12> col:12 implicit struct __is_signed_helper
| |-ClassTemplatePartialSpecializationDecl 0x5605abbbcf98 <line:944:3, line:947:7> line:945:12 struct __is_signed_helper definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__bool_constant<_Tp(-1) < _Tp(0)>':'integral_constant<bool, _Tp(-1) < _Tp(0)>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'true'
| | |-TemplateTypeParmDecl 0x5605abbbcde8 <line:944:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbbd558 <line:945:5, col:12> col:12 implicit struct __is_signed_helper
| |-ClassTemplateDecl 0x5605abbbd778 <line:951:3, line:954:7> line:952:12 is_signed
| | |-TemplateTypeParmDecl 0x5605abbbd620 <line:951:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbbd6c8 <line:952:5, line:954:7> line:952:12 struct is_signed definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_signed_helper<_Tp>::type'
| |   `-CXXRecordDecl 0x5605abbbe688 <col:5, col:12> col:12 implicit struct is_signed
| |-ClassTemplateDecl 0x5605abbbe8a8 <line:957:3, line:960:7> line:958:12 is_unsigned
| | |-TemplateTypeParmDecl 0x5605abbbe750 <line:957:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbbe7f8 <line:958:5, line:960:7> line:958:12 struct is_unsigned definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__and_<is_arithmetic<_Tp>, __not_<is_signed<_Tp>>>::type'
| |   `-CXXRecordDecl 0x5605abbbf058 <col:5, col:12> col:12 implicit struct is_unsigned
| |-FunctionTemplateDecl 0x5605abbbf9d8 <line:963:3, line:965:18> col:5 __declval
| | |-TemplateTypeParmDecl 0x5605abbbf120 <line:963:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbbf1e8 <col:26, col:44> col:35 referenced typename depth 0 index 1 _Up
| | | `-TemplateArgument type '_Tp &&':'type-parameter-0-0 &&'
| | |   `-RValueReferenceType 0x5605abbbf1a0 '_Tp &&' dependent
| | |     `-TemplateTypeParmType 0x5605abbbf170 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x5605abbbf120 '_Tp'
| | |-FunctionDecl 0x5605abbbf928 <line:964:5, line:965:18> col:5 __declval '_Up (int)'
| | | `-ParmVarDecl 0x5605abbbf7f8 <col:15> col:18 'int'
| | |-FunctionDecl 0x5605abc024e8 <line:964:5, line:965:18> col:5 referenced __declval 'void *&&(int)' implicit_instantiation
| | | |-TemplateArgument type 'void *'
| | | | `-PointerType 0x5605aba9d150 'void *'
| | | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-TemplateArgument type 'void *&&'
| | | | `-RValueReferenceType 0x5605abc022e0 'void *&&'
| | | |   `-PointerType 0x5605aba9d150 'void *'
| | | |     `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-ParmVarDecl 0x5605abc023d8 <col:15> col:18 'int'
| | |-FunctionDecl 0x5605abd26ba8 <line:964:5, line:965:18> col:5 referenced __declval 'const std::ranges::__swap::_Swap &(int)' implicit_instantiation
| | | |-TemplateArgument type 'const std::ranges::__swap::_Swap &'
| | | | `-LValueReferenceType 0x5605abd25000 'const std::ranges::__swap::_Swap &'
| | | |   `-QualType 0x5605abd23a91 'const std::ranges::__swap::_Swap' const
| | | |     `-RecordType 0x5605abd23a90 'std::ranges::__swap::_Swap'
| | | |       `-CXXRecord 0x5605abd239e8 '_Swap'
| | | |-TemplateArgument type 'const std::ranges::__swap::_Swap &'
| | | | `-LValueReferenceType 0x5605abd25000 'const std::ranges::__swap::_Swap &'
| | | |   `-QualType 0x5605abd23a91 'const std::ranges::__swap::_Swap' const
| | | |     `-RecordType 0x5605abd23a90 'std::ranges::__swap::_Swap'
| | | |       `-CXXRecord 0x5605abd239e8 '_Swap'
| | | `-ParmVarDecl 0x5605abd26a98 <col:15> col:18 'int'
| | |-FunctionDecl 0x5605abdbae48 <line:964:5, line:965:18> col:5 referenced __declval 'bool &&(int)' implicit_instantiation
| | | |-TemplateArgument type 'bool'
| | | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |-TemplateArgument type 'bool &&'
| | | | `-RValueReferenceType 0x5605abdba540 'bool &&'
| | | |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | | `-ParmVarDecl 0x5605abdbad38 <col:15> col:18 'int'
| | |-FunctionDecl 0x5605abdcbae8 <line:964:5, line:965:18> col:5 referenced __declval 'void *const &(&(int))()' implicit_instantiation
| | | |-TemplateArgument type 'void *const &(&)()'
| | | | `-LValueReferenceType 0x5605abdcb150 'void *const &(&)()'
| | | |   `-FunctionProtoType 0x5605abdcb0c0 'void *const &()' cdecl
| | | |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |       `-QualType 0x5605aba9d151 'void *const' const
| | | |         `-PointerType 0x5605aba9d150 'void *'
| | | |           `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-TemplateArgument type 'void *const &(&)()'
| | | | `-LValueReferenceType 0x5605abdcb150 'void *const &(&)()'
| | | |   `-FunctionProtoType 0x5605abdcb0c0 'void *const &()' cdecl
| | | |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |       `-QualType 0x5605aba9d151 'void *const' const
| | | |         `-PointerType 0x5605aba9d150 'void *'
| | | |           `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-ParmVarDecl 0x5605abdcb9d8 <col:15> col:18 'int'
| | `-FunctionDecl 0x5605abdd39b8 <line:964:5, line:965:18> col:5 referenced __declval 'void *const &(int)' implicit_instantiation
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-ParmVarDecl 0x5605abdd38a8 <col:15> col:18 'int'
| |-FunctionTemplateDecl 0x5605abbbfd58 <line:967:3, line:969:19> col:5 __declval
| | |-TemplateTypeParmDecl 0x5605abbbfac0 <line:967:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x5605abbbfca8 <line:968:5, line:969:19> col:5 __declval '_Tp (long)'
| | | `-ParmVarDecl 0x5605abbbfb80 <col:15> col:19 'long'
| | |-FunctionDecl 0x5605abc020d8 <line:968:5, line:969:19> col:5 __declval 'void *(long)' implicit_instantiation
| | | |-TemplateArgument type 'void *'
| | | | `-PointerType 0x5605aba9d150 'void *'
| | | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-ParmVarDecl 0x5605abc01758 <col:15> col:19 'long'
| | |-FunctionDecl 0x5605abd267b8 <line:968:5, line:969:19> col:5 __declval 'const std::ranges::__swap::_Swap &(long)' implicit_instantiation
| | | |-TemplateArgument type 'const std::ranges::__swap::_Swap &'
| | | | `-LValueReferenceType 0x5605abd25000 'const std::ranges::__swap::_Swap &'
| | | |   `-QualType 0x5605abd23a91 'const std::ranges::__swap::_Swap' const
| | | |     `-RecordType 0x5605abd23a90 'std::ranges::__swap::_Swap'
| | | |       `-CXXRecord 0x5605abd239e8 '_Swap'
| | | `-ParmVarDecl 0x5605abd266a8 <col:15> col:19 'long'
| | |-FunctionDecl 0x5605abdbaa68 <line:968:5, line:969:19> col:5 __declval 'bool (long)' implicit_instantiation
| | | |-TemplateArgument type 'bool'
| | | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | | `-ParmVarDecl 0x5605abdba958 <col:15> col:19 'long'
| | |-FunctionDecl 0x5605abdcb698 <line:968:5, line:969:19> col:5 __declval 'void *const &(&(long))()' implicit_instantiation
| | | |-TemplateArgument type 'void *const &(&)()'
| | | | `-LValueReferenceType 0x5605abdcb150 'void *const &(&)()'
| | | |   `-FunctionProtoType 0x5605abdcb0c0 'void *const &()' cdecl
| | | |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |       `-QualType 0x5605aba9d151 'void *const' const
| | | |         `-PointerType 0x5605aba9d150 'void *'
| | | |           `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-ParmVarDecl 0x5605abdcb588 <col:15> col:19 'long'
| | `-FunctionDecl 0x5605abdd35d8 <line:968:5, line:969:19> col:5 __declval 'void *const &(long)' implicit_instantiation
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-ParmVarDecl 0x5605abdd34c8 <col:15> col:19 'long'
| |-FunctionTemplateDecl 0x5605abbc0190 <line:972:3, line:973:10> col:10 declval
| | |-TemplateTypeParmDecl 0x5605abbbfe50 <line:972:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x5605abbc00e0 <line:973:5, col:10> col:10 declval 'auto () noexcept -> decltype(__declval<_Tp>(0))'
| | |-FunctionDecl 0x5605abc02c40 <col:5, col:10> col:10 referenced declval 'auto () noexcept -> decltype(__declval<void *>(0))' implicit_instantiation
| | | `-TemplateArgument type 'void *'
| | |   `-PointerType 0x5605aba9d150 'void *'
| | |     `-BuiltinType 0x5605aba9c9d0 'void'
| | |-FunctionDecl 0x5605abd27300 <line:2485:5, line:2490:5> line:2485:10 referenced declval 'auto () noexcept -> decltype(__declval<const std::ranges::__swap::_Swap &>(0))' implicit_instantiation
| | | `-TemplateArgument type 'const std::ranges::__swap::_Swap &'
| | |   `-LValueReferenceType 0x5605abd25000 'const std::ranges::__swap::_Swap &'
| | |     `-QualType 0x5605abd23a91 'const std::ranges::__swap::_Swap' const
| | |       `-RecordType 0x5605abd23a90 'std::ranges::__swap::_Swap'
| | |         `-CXXRecord 0x5605abd239e8 '_Swap'
| | |-FunctionDecl 0x5605abdbb5a0 <col:5, line:2490:5> line:2485:10 referenced declval 'auto () noexcept -> decltype(__declval<bool>(0))' implicit_instantiation
| | | `-TemplateArgument type 'bool'
| | |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | |-FunctionDecl 0x5605abdcc240 <col:5, line:2490:5> line:2485:10 referenced declval 'auto () noexcept -> decltype(__declval<void *const &(&)()>(0))' implicit_instantiation
| | | `-TemplateArgument type 'void *const &(&)()'
| | |   `-LValueReferenceType 0x5605abdcb150 'void *const &(&)()'
| | |     `-FunctionProtoType 0x5605abdcb0c0 'void *const &()' cdecl
| | |       `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |         `-QualType 0x5605aba9d151 'void *const' const
| | |           `-PointerType 0x5605aba9d150 'void *'
| | |             `-BuiltinType 0x5605aba9c9d0 'void'
| | `-FunctionDecl 0x5605abdd4110 <col:5, line:2490:5> line:2485:10 referenced declval 'auto () noexcept -> decltype(__declval<void *const &>(0))' implicit_instantiation
| |   `-TemplateArgument type 'void *const &'
| |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |       `-QualType 0x5605aba9d151 'void *const' const
| |         `-PointerType 0x5605aba9d150 'void *'
| |           `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplateDecl 0x5605abbc03c8 <line:975:3, line:976:12> col:12 remove_all_extents
| | |-TemplateTypeParmDecl 0x5605abbc0270 <line:975:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abbc0318 <line:976:5, col:12> col:12 struct remove_all_extents
| |-ClassTemplateDecl 0x5605abbc11e0 <line:979:3, line:982:7> line:980:12 __is_array_known_bounds
| | |-TemplateTypeParmDecl 0x5605abbc0618 <line:979:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc06c8 <line:980:5, line:982:7> line:980:12 struct __is_array_known_bounds definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x5605abbc14d0 <col:5, col:12> col:12 implicit struct __is_array_known_bounds
| |-ClassTemplatePartialSpecializationDecl 0x5605abbc1820 <line:984:3, line:987:7> line:985:12 struct __is_array_known_bounds definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <col:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | |-TemplateTypeParmDecl 0x5605abbc1598 <line:984:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbc1638 <col:26, col:33> col:33 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| | `-CXXRecordDecl 0x5605abbc1a50 <line:985:5, col:12> col:12 implicit struct __is_array_known_bounds
| |-ClassTemplateDecl 0x5605abbc1c60 prev 0x5605abb8e078 <line:989:3, line:992:7> line:990:12 __is_array_unknown_bounds
| | |-TemplateTypeParmDecl 0x5605abbc1b18 <line:989:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc1bc8 prev 0x5605abb8dfc8 <line:990:5, line:992:7> line:990:12 struct __is_array_unknown_bounds definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x5605abbc1d68 <col:5, col:12> col:12 implicit struct __is_array_unknown_bounds
| |-ClassTemplatePartialSpecializationDecl 0x5605abbc2010 <line:994:3, line:997:7> line:995:12 struct __is_array_unknown_bounds definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abbc1e30 <line:994:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc27f0 <line:995:5, col:12> col:12 implicit struct __is_array_unknown_bounds
| |-CXXRecordDecl 0x5605abbc28b8 <line:1006:3, line:1013:3> line:1006:10 referenced struct __do_is_destructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abbc29f0 <col:3, col:10> col:10 implicit struct __do_is_destructible_impl
| | |-FunctionTemplateDecl 0x5605abbc2fd8 <line:1008:5, line:1009:34> col:24 __test
| | | |-TemplateTypeParmDecl 0x5605abbc2aa0 <line:1008:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abbc2d18 <col:28, col:70> col:37 typename depth 0 index 1
| | | | `-TemplateArgument type 'decltype(declval<_Tp &>().~_Tp())'
| | | |   `-DecltypeType 0x5605abbc2cd0 'decltype(declval<_Tp &>().~_Tp())' dependent
| | | |     `-CallExpr 0x5605abbc2c78 <col:48, col:69> 'void'
| | | |       `-CXXPseudoDestructorExpr 0x5605abbc2c28 <col:48, col:65> '<bound member function type>'
| | | |         `-CallExpr 0x5605abbc2bf8 <col:48, col:62> '<dependent type>'
| | | |           `-UnresolvedLookupExpr 0x5605abbc2b80 <col:48, col:60> '<dependent type>' lvalue (ADL) = 'declval' 0x5605abbc0190
| | | |             `-TemplateArgument type '_Tp &':'type-parameter-0-0 &'
| | | |               `-LValueReferenceType 0x5605abbc2b40 '_Tp &' dependent
| | | |                 `-TemplateTypeParmType 0x5605abbc2af0 '_Tp' dependent depth 0 index 0
| | | |                   `-TemplateTypeParm 0x5605abbc2aa0 '_Tp'
| | | `-CXXMethodDecl 0x5605abbc2f28 <line:1009:7, col:34> col:24 __test 'true_type (int)' static
| | |   `-ParmVarDecl 0x5605abbc2e08 <col:31> col:34 'int'
| | `-FunctionTemplateDecl 0x5605abbc3210 <line:1011:5, line:1012:35> col:25 __test
| |   |-TemplateTypeParmDecl 0x5605abbc3058 <line:1011:14> col:22 typename depth 0 index 0
| |   `-CXXMethodDecl 0x5605abbc3160 <line:1012:7, col:35> col:25 __test 'false_type (...)' static
| |-ClassTemplateDecl 0x5605abbc3438 <line:1015:3, line:1020:5> line:1016:12 __is_destructible_impl
| | |-TemplateTypeParmDecl 0x5605abbc32e0 <line:1015:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc3388 <line:1016:5, line:1020:5> line:1016:12 struct __is_destructible_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__do_is_destructible_impl':'std::__do_is_destructible_impl'
| |   |-CXXRecordDecl 0x5605abbc4138 <col:5, col:12> col:12 implicit struct __is_destructible_impl
| |   `-TypeAliasDecl 0x5605abbc4348 <line:1019:7, col:43> col:13 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x5605abbc4300 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x5605abbc42a8 <col:29, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abbc4208 <col:29, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abbc2fd8 0x5605abbc3210
| |         | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         |   `-TemplateTypeParmType 0x5605abbc3330 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abbc32e0 '_Tp'
| |         `-IntegerLiteral 0x5605abbc4288 <col:41> 'int' 0
| |-ClassTemplateDecl 0x5605abbc4e68 <line:1022:3, line:1027:12> col:12 __is_destructible_safe
| | |-TemplateTypeParmDecl 0x5605abbc43e0 <line:1022:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbc4908 <line:1023:12, line:1025:44> line:1023:17 'bool' depth 0 index 1
| | | `-TemplateArgument <col:19, line:1025:44> expr '__or_<is_void<_Tp>, __is_array_unknown_bounds<_Tp>, is_function<_Tp>>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abbc48b8 <line:1023:19, line:1025:44> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec '__or_<is_void<_Tp>, __is_array_unknown_bounds<_Tp>, is_function<_Tp>>'
| | |-NonTypeTemplateParmDecl 0x5605abbc4d08 <line:1026:12, col:61> col:17 'bool' depth 0 index 2
| | | `-TemplateArgument <col:19, col:61> expr '__or_<is_reference<_Tp>, is_scalar<_Tp>>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abbc4cb8 <col:19, col:61> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec '__or_<is_reference<_Tp>, is_scalar<_Tp>>'
| | `-CXXRecordDecl 0x5605abbc4db8 <line:1027:5, col:12> col:12 struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x5605abbc7120 <line:1029:3, line:1033:7> line:1030:12 struct __is_destructible_safe definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__is_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abbc6f08 <line:1029:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc76e8 <line:1030:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x5605abbc79c0 <line:1035:3, line:1037:27> line:1036:12 struct __is_destructible_safe definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abbc77b0 <line:1035:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc7cb0 <line:1036:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x5605abbc8080 <line:1039:3, line:1041:26> line:1040:12 struct __is_destructible_safe definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'true'
| | |-TemplateTypeParmDecl 0x5605abbc7d78 <line:1039:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc8370 <line:1040:5, col:12> col:12 implicit struct __is_destructible_safe
| |-ClassTemplateDecl 0x5605abbc8598 <line:1045:3, line:1051:5> line:1046:12 is_destructible
| | |-TemplateTypeParmDecl 0x5605abbc8438 <line:1045:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbc84e8 <line:1046:5, line:1051:5> line:1046:12 struct is_destructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_destructible_safe<_Tp>::type'
| |   |-CXXRecordDecl 0x5605abbc95d8 <col:5, col:12> col:12 implicit struct is_destructible
| |   `-StaticAssertDecl 0x5605abbc98b0 <line:1049:7, line:1050:68> line:1049:7
| |     |-CallExpr 0x5605abbc9828 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbc96a0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbc9800 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbc97c0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbc9850 <line:1050:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-CXXRecordDecl 0x5605abbc9910 <line:1059:3, line:1067:3> line:1059:10 referenced struct __do_is_nt_destructible_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abbc9a50 <col:3, col:10> col:10 implicit struct __do_is_nt_destructible_impl
| | |-FunctionTemplateDecl 0x5605abbca1a8 <line:1061:5, line:1063:17> col:7 __test
| | | |-TemplateTypeParmDecl 0x5605abbc9b00 <line:1061:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-CXXMethodDecl 0x5605abbca0f8 <line:1062:7, line:1063:17> col:7 __test '__bool_constant<noexcept(declval<_Tp &>().~_Tp())> (int)' static
| | |   `-ParmVarDecl 0x5605abbc9f80 <col:14> col:17 'int'
| | `-FunctionTemplateDecl 0x5605abbca4e8 <line:1065:5, line:1066:35> col:25 __test
| |   |-TemplateTypeParmDecl 0x5605abbca228 <line:1065:14> col:22 typename depth 0 index 0
| |   `-CXXMethodDecl 0x5605abbca2f8 <line:1066:7, col:35> col:25 __test 'false_type (...)' static
| |-ClassTemplateDecl 0x5605abbca718 <line:1069:3, line:1074:5> line:1070:12 __is_nt_destructible_impl
| | |-TemplateTypeParmDecl 0x5605abbca5b8 <line:1069:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbca668 <line:1070:5, line:1074:5> line:1070:12 struct __is_nt_destructible_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__do_is_nt_destructible_impl':'std::__do_is_nt_destructible_impl'
| |   |-CXXRecordDecl 0x5605abbcaa48 <col:5, col:12> col:12 implicit struct __is_nt_destructible_impl
| |   `-TypeAliasDecl 0x5605abbcac28 <line:1073:7, col:43> col:13 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x5605abbcabe0 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x5605abbcabb8 <col:29, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abbcab18 <col:29, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abbca1a8 0x5605abbca4e8
| |         | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         |   `-TemplateTypeParmType 0x5605abbca610 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abbca5b8 '_Tp'
| |         `-IntegerLiteral 0x5605abbcab98 <col:41> 'int' 0
| |-ClassTemplateDecl 0x5605abbcbb30 <line:1076:3, line:1081:12> col:12 __is_nt_destructible_safe
| | |-TemplateTypeParmDecl 0x5605abbcacc0 <line:1076:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbcb178 <line:1077:12, line:1079:44> line:1077:17 'bool' depth 0 index 1
| | | `-TemplateArgument <col:19, line:1079:44> expr '__or_<is_void<_Tp>, __is_array_unknown_bounds<_Tp>, is_function<_Tp>>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abbcb128 <line:1077:19, line:1079:44> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec '__or_<is_void<_Tp>, __is_array_unknown_bounds<_Tp>, is_function<_Tp>>'
| | |-NonTypeTemplateParmDecl 0x5605abbcb9d0 <line:1080:12, col:61> col:17 'bool' depth 0 index 2
| | | `-TemplateArgument <col:19, col:61> expr '__or_<is_reference<_Tp>, is_scalar<_Tp>>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abbcb980 <col:19, col:61> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec '__or_<is_reference<_Tp>, is_scalar<_Tp>>'
| | `-CXXRecordDecl 0x5605abbcba80 <line:1081:5, col:12> col:12 struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x5605abbcc060 <line:1083:3, line:1087:7> line:1084:12 struct __is_nt_destructible_safe definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__is_nt_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abbcbe48 <line:1083:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbcc5e8 <line:1084:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x5605abba31e8 <line:1089:3, line:1091:27> line:1090:12 struct __is_nt_destructible_safe definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'false_type':'std::integral_constant<bool, false>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abbcc6b0 <line:1089:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba34e0 <line:1090:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplatePartialSpecializationDecl 0x5605abba37c0 <line:1093:3, line:1095:26> line:1094:12 struct __is_nt_destructible_safe definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'true'
| | |-TemplateTypeParmDecl 0x5605abba35a8 <line:1093:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba3ab0 <line:1094:5, col:12> col:12 implicit struct __is_nt_destructible_safe
| |-ClassTemplateDecl 0x5605abba3cd8 <line:1099:3, line:1105:5> line:1100:12 is_nothrow_destructible
| | |-TemplateTypeParmDecl 0x5605abba3b78 <line:1099:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abba3c28 <line:1100:5, line:1105:5> line:1100:12 struct is_nothrow_destructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nt_destructible_safe<_Tp>::type'
| |   |-CXXRecordDecl 0x5605abbd1418 <col:5, col:12> col:12 implicit struct is_nothrow_destructible
| |   `-StaticAssertDecl 0x5605abbd16f0 <line:1103:7, line:1104:68> line:1103:7
| |     |-CallExpr 0x5605abbd1668 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbd14e0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbd1640 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbd1600 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbd1690 <line:1104:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abbd1c20 <line:1108:3, line:1110:58> line:1109:5 __is_constructible_impl
| | |-TemplateTypeParmDecl 0x5605abbd1750 <line:1108:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbd17d8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x5605abbd1bb8 <line:1109:5, line:1110:58> line:1109:11 __is_constructible_impl '__bool_constant<__is_constructible(_Tp, _Args...)>':'integral_constant<bool, __is_constructible(_Tp, _Args...)>'
| |   `-ElaboratedType 0x5605abbd1b40 '__bool_constant<__is_constructible(_Tp, _Args...)>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbd1af0 '__bool_constant<__is_constructible(_Tp, _Args...)>' sugar dependent alias
| |       |-name: '__bool_constant':'std::__bool_constant' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |       |-TemplateArgument expr '__is_constructible(_Tp, _Args...)'
| |       | `-TypeTraitExpr 0x5605abbd1920 <line:1110:25, col:57> 'bool' __is_constructible
| |       |   |-TemplateTypeParmType 0x5605abbd17a0 '_Tp' dependent depth 0 index 0
| |       |   | `-TemplateTypeParm 0x5605abbd1750 '_Tp'
| |       |   `-PackExpansionType 0x5605abbd18e0 '_Args...' dependent
| |       |     `-TemplateTypeParmType 0x5605abbd1830 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |       |       `-TemplateTypeParm 0x5605abbd17d8 '_Args'
| |       `-ElaboratedType 0x5605abbd1a90 'integral_constant<bool, __is_constructible(_Tp, _Args...)>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbd1a30 'integral_constant<bool, __is_constructible(_Tp, _Args...)>' dependent
| |           |-name: 'integral_constant':'std::integral_constant' qualified
| |           | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |           |-TemplateArgument type 'bool'
| |           | `-BuiltinType 0x5605aba9c9f0 'bool'
| |           `-TemplateArgument expr '__is_constructible(_Tp, _Args...)'
| |             `-SubstNonTypeTemplateParmExpr 0x5605abbd1980 <line:107:53> 'bool'
| |               |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               `-TypeTraitExpr 0x5605abbd1920 <line:1110:25, col:57> 'bool' __is_constructible
| |                 |-TemplateTypeParmType 0x5605abbd17a0 '_Tp' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x5605abbd1750 '_Tp'
| |                 `-PackExpansionType 0x5605abbd18e0 '_Args...' dependent
| |                   `-TemplateTypeParmType 0x5605abbd1830 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |                     `-TemplateTypeParm 0x5605abbd17d8 '_Args'
| |-ClassTemplateDecl 0x5605abbd1ea0 <line:1114:3, line:1120:5> line:1115:12 is_constructible
| | |-TemplateTypeParmDecl 0x5605abbd1c80 <line:1114:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbd1d08 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x5605abbd1df0 <line:1115:5, line:1120:5> line:1115:12 struct is_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_constructible_impl<_Tp, _Args...>':'integral_constant<bool, __is_constructible(_Tp, _Args...)>'
| |   |-CXXRecordDecl 0x5605abbd2690 <col:5, col:12> col:12 implicit struct is_constructible
| |   `-StaticAssertDecl 0x5605abbd2970 <line:1118:7, line:1119:68> line:1118:7
| |     |-CallExpr 0x5605abbd28e8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbd2758 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbd28c0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbd2880 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbd2910 <line:1119:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbd2b28 <line:1123:3, line:1129:5> line:1124:12 is_default_constructible
| | |-TemplateTypeParmDecl 0x5605abbd29d0 <line:1123:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbd2a78 <line:1124:5, line:1129:5> line:1124:12 struct is_default_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_constructible_impl<_Tp>':'integral_constant<bool, __is_constructible(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbd31b8 <col:5, col:12> col:12 implicit struct is_default_constructible
| |   `-StaticAssertDecl 0x5605abbd3490 <line:1127:7, line:1128:68> line:1127:7
| |     |-CallExpr 0x5605abbd3408 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbd3280 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbd33e0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbd33a0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbd3430 <line:1128:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbd3710 <line:1132:3, line:1134:25> line:1133:12 __add_lvalue_reference_helper
| | |-TemplateTypeParmDecl 0x5605abbd34f0 <line:1132:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbd3588 <col:26, col:37> col:35 typename depth 0 index 1
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abbd3660 <line:1133:5, line:1134:25> line:1133:12 struct __add_lvalue_reference_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abbd3a00 <col:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
| |   `-TypeAliasDecl 0x5605abbd3ac0 <line:1134:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abbd3540 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abbd34f0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abbd4eb8 <line:1136:3, line:1138:26> line:1137:12 struct __add_lvalue_reference_helper definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abbd3b58 <line:1136:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abbd50e0 <line:1137:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
| | `-TypeAliasDecl 0x5605abbd51a0 <line:1138:7, col:23> col:13 type '_Tp &'
| |   `-LValueReferenceType 0x5605abbd3c30 '_Tp &' dependent
| |     `-TemplateTypeParmType 0x5605abbd3bb0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abbd3b58 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| | |-TemplateTypeParmDecl 0x5605abbd5238 <line:1140:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abbd5438 <line:1141:5, col:75> col:11 __add_lval_ref_t 'typename __add_lvalue_reference_helper<_Tp>::type'
| |   `-DependentNameType 0x5605abbd53c0 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abbd5658 <line:1145:3, line:1151:5> line:1146:12 is_copy_constructible
| | |-TemplateTypeParmDecl 0x5605abbd5500 <line:1145:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbd55a8 <line:1146:5, line:1151:5> line:1146:12 struct is_copy_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_constructible_impl<_Tp, __add_lval_ref_t<const _Tp>>':'integral_constant<bool, __is_constructible(_Tp, __add_lval_ref_t<const _Tp>)>'
| |   |-CXXRecordDecl 0x5605abbd6270 <col:5, col:12> col:12 implicit struct is_copy_constructible
| |   `-StaticAssertDecl 0x5605abbd6550 <line:1149:7, line:1150:68> line:1149:7
| |     |-CallExpr 0x5605abbd64c8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbd6338 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbd64a0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbd6460 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbd64f0 <line:1150:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbd67d0 <line:1154:3, line:1156:25> line:1155:12 __add_rvalue_reference_helper
| | |-TemplateTypeParmDecl 0x5605abbd65b0 <line:1154:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbd6648 <col:26, col:37> col:35 typename depth 0 index 1
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abbd6720 <line:1155:5, line:1156:25> line:1155:12 struct __add_rvalue_reference_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abbd6ac0 <col:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
| |   `-TypeAliasDecl 0x5605abbd6b80 <line:1156:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abbd6600 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abbd65b0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abbd6ec8 <line:1158:3, line:1160:27> line:1159:12 struct __add_rvalue_reference_helper definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abbd6c18 <line:1158:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abbd7520 <line:1159:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
| | `-TypeAliasDecl 0x5605abbd75e0 <line:1160:7, col:23> col:13 type '_Tp &&'
| |   `-RValueReferenceType 0x5605abbd6cd0 '_Tp &&' dependent
| |     `-TemplateTypeParmType 0x5605abbd6c70 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abbd6c18 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| | |-TemplateTypeParmDecl 0x5605abbd7678 <line:1162:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abbd7878 <line:1163:5, col:75> col:11 __add_rval_ref_t 'typename __add_rvalue_reference_helper<_Tp>::type'
| |   `-DependentNameType 0x5605abbd7800 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abbd7a98 <line:1167:3, line:1173:5> line:1168:12 is_move_constructible
| | |-TemplateTypeParmDecl 0x5605abbd7940 <line:1167:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbd79e8 <line:1168:5, line:1173:5> line:1168:12 struct is_move_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_constructible_impl<_Tp, __add_rval_ref_t<_Tp>>':'integral_constant<bool, __is_constructible(_Tp, __add_rval_ref_t<_Tp>)>'
| |   |-CXXRecordDecl 0x5605abbd83b0 <col:5, col:12> col:12 implicit struct is_move_constructible
| |   `-StaticAssertDecl 0x5605abbd9ad0 <line:1171:7, line:1172:68> line:1171:7
| |     |-CallExpr 0x5605abbd9a48 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbd98b8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbd9a20 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbd99e0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbd9a70 <line:1172:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abbd9fd0 <line:1176:3, line:1178:66> line:1177:5 __is_nothrow_constructible_impl
| | |-TemplateTypeParmDecl 0x5605abbd9b30 <line:1176:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbd9bb8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x5605abbd9f68 <line:1177:5, line:1178:66> line:1177:11 __is_nothrow_constructible_impl '__bool_constant<__is_nothrow_constructible(_Tp, _Args...)>':'integral_constant<bool, __is_nothrow_constructible(_Tp, _Args...)>'
| |   `-ElaboratedType 0x5605abbd9ef0 '__bool_constant<__is_nothrow_constructible(_Tp, _Args...)>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbd9ea0 '__bool_constant<__is_nothrow_constructible(_Tp, _Args...)>' sugar dependent alias
| |       |-name: '__bool_constant':'std::__bool_constant' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |       |-TemplateArgument expr '__is_nothrow_constructible(_Tp, _Args...)'
| |       | `-TypeTraitExpr 0x5605abbd9cd0 <line:1178:25, col:65> 'bool' __is_nothrow_constructible
| |       |   |-TemplateTypeParmType 0x5605abbd9b80 '_Tp' dependent depth 0 index 0
| |       |   | `-TemplateTypeParm 0x5605abbd9b30 '_Tp'
| |       |   `-PackExpansionType 0x5605abbd9c90 '_Args...' dependent
| |       |     `-TemplateTypeParmType 0x5605abbd9c10 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |       |       `-TemplateTypeParm 0x5605abbd9bb8 '_Args'
| |       `-ElaboratedType 0x5605abbd9e40 'integral_constant<bool, __is_nothrow_constructible(_Tp, _Args...)>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbd9de0 'integral_constant<bool, __is_nothrow_constructible(_Tp, _Args...)>' dependent
| |           |-name: 'integral_constant':'std::integral_constant' qualified
| |           | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |           |-TemplateArgument type 'bool'
| |           | `-BuiltinType 0x5605aba9c9f0 'bool'
| |           `-TemplateArgument expr '__is_nothrow_constructible(_Tp, _Args...)'
| |             `-SubstNonTypeTemplateParmExpr 0x5605abbd9d30 <line:107:53> 'bool'
| |               |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               `-TypeTraitExpr 0x5605abbd9cd0 <line:1178:25, col:65> 'bool' __is_nothrow_constructible
| |                 |-TemplateTypeParmType 0x5605abbd9b80 '_Tp' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x5605abbd9b30 '_Tp'
| |                 `-PackExpansionType 0x5605abbd9c90 '_Args...' dependent
| |                   `-TemplateTypeParmType 0x5605abbd9c10 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |                     `-TemplateTypeParm 0x5605abbd9bb8 '_Args'
| |-ClassTemplateDecl 0x5605abbda220 <line:1182:3, line:1188:5> line:1183:12 is_nothrow_constructible
| | |-TemplateTypeParmDecl 0x5605abbda030 <line:1182:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbda0b8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x5605abbda170 <line:1183:5, line:1188:5> line:1183:12 struct is_nothrow_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_constructible_impl<_Tp, _Args...>':'integral_constant<bool, __is_nothrow_constructible(_Tp, _Args...)>'
| |   |-CXXRecordDecl 0x5605abbdb660 <col:5, col:12> col:12 implicit struct is_nothrow_constructible
| |   `-StaticAssertDecl 0x5605abbdb940 <line:1186:7, line:1187:68> line:1186:7
| |     |-CallExpr 0x5605abbdb8b8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbdb728 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbdb890 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbdb850 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbdb8e0 <line:1187:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbdbaf8 <line:1191:3, line:1197:5> line:1192:12 is_nothrow_default_constructible
| | |-TemplateTypeParmDecl 0x5605abbdb9a0 <line:1191:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbdba48 <line:1192:5, line:1197:5> line:1192:12 struct is_nothrow_default_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_constructible_impl<_Tp>':'integral_constant<bool, __is_nothrow_constructible(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbdc128 <col:5, col:12> col:12 implicit struct is_nothrow_default_constructible
| |   `-StaticAssertDecl 0x5605abbdc400 <line:1195:7, line:1196:68> line:1195:7
| |     |-CallExpr 0x5605abbdc378 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbdc1f0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbdc350 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbdc310 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbdc3a0 <line:1196:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbddae8 <line:1200:3, line:1206:5> line:1201:12 is_nothrow_copy_constructible
| | |-TemplateTypeParmDecl 0x5605abbdc460 <line:1200:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbdda38 <line:1201:5, line:1206:5> line:1201:12 struct is_nothrow_copy_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_constructible_impl<_Tp, __add_lval_ref_t<const _Tp>>':'integral_constant<bool, __is_nothrow_constructible(_Tp, __add_lval_ref_t<const _Tp>)>'
| |   |-CXXRecordDecl 0x5605abbde3d0 <col:5, col:12> col:12 implicit struct is_nothrow_copy_constructible
| |   `-StaticAssertDecl 0x5605abbde6b0 <line:1204:7, line:1205:68> line:1204:7
| |     |-CallExpr 0x5605abbde628 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbde498 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbde600 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbde5c0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbde650 <line:1205:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbde868 <line:1209:3, line:1215:5> line:1210:12 is_nothrow_move_constructible
| | |-TemplateTypeParmDecl 0x5605abbde710 <line:1209:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbde7b8 <line:1210:5, line:1215:5> line:1210:12 struct is_nothrow_move_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_constructible_impl<_Tp, __add_rval_ref_t<_Tp>>':'integral_constant<bool, __is_nothrow_constructible(_Tp, __add_rval_ref_t<_Tp>)>'
| |   |-CXXRecordDecl 0x5605abbdfa10 <col:5, col:12> col:12 implicit struct is_nothrow_move_constructible
| |   `-StaticAssertDecl 0x5605abbdfcf0 <line:1213:7, line:1214:68> line:1213:7
| |     |-CallExpr 0x5605abbdfc68 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbdfad8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbdfc40 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbdfc00 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbdfc90 <line:1214:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abbe01a0 <line:1218:3, line:1219:75> col:5 __is_assignable_impl
| | |-TemplateTypeParmDecl 0x5605abbdfd50 <line:1218:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbdfdd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-TypeAliasDecl 0x5605abbe0138 <line:1219:5, col:75> col:11 __is_assignable_impl '__bool_constant<__is_assignable(_Tp, _Up)>':'integral_constant<bool, __is_assignable(_Tp, _Up)>'
| |   `-ElaboratedType 0x5605abbe00c0 '__bool_constant<__is_assignable(_Tp, _Up)>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbe0070 '__bool_constant<__is_assignable(_Tp, _Up)>' sugar dependent alias
| |       |-name: '__bool_constant':'std::__bool_constant' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |       |-TemplateArgument expr '__is_assignable(_Tp, _Up)'
| |       | `-TypeTraitExpr 0x5605abbdfea8 <line:1219:50, col:74> 'bool' __is_assignable
| |       |   |-TemplateTypeParmType 0x5605abbdfda0 '_Tp' dependent depth 0 index 0
| |       |   | `-TemplateTypeParm 0x5605abbdfd50 '_Tp'
| |       |   `-TemplateTypeParmType 0x5605abbdfe30 '_Up' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abbdfdd8 '_Up'
| |       `-ElaboratedType 0x5605abbe0010 'integral_constant<bool, __is_assignable(_Tp, _Up)>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbdffb0 'integral_constant<bool, __is_assignable(_Tp, _Up)>' dependent
| |           |-name: 'integral_constant':'std::integral_constant' qualified
| |           | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |           |-TemplateArgument type 'bool'
| |           | `-BuiltinType 0x5605aba9c9f0 'bool'
| |           `-TemplateArgument expr '__is_assignable(_Tp, _Up)'
| |             `-SubstNonTypeTemplateParmExpr 0x5605abbdff08 <line:107:53> 'bool'
| |               |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               `-TypeTraitExpr 0x5605abbdfea8 <line:1219:50, col:74> 'bool' __is_assignable
| |                 |-TemplateTypeParmType 0x5605abbdfda0 '_Tp' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x5605abbdfd50 '_Tp'
| |                 `-TemplateTypeParmType 0x5605abbdfe30 '_Up' dependent depth 0 index 1
| |                   `-TemplateTypeParm 0x5605abbdfdd8 '_Up'
| |-ClassTemplateDecl 0x5605abbe0490 <line:1223:3, line:1229:5> line:1224:12 is_assignable
| | |-TemplateTypeParmDecl 0x5605abbe0200 <line:1223:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbe0328 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abbe03e0 <line:1224:5, line:1229:5> line:1224:12 struct is_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_assignable_impl<_Tp, _Up>':'integral_constant<bool, __is_assignable(_Tp, _Up)>'
| |   |-CXXRecordDecl 0x5605abbe0b10 <col:5, col:12> col:12 implicit struct is_assignable
| |   `-StaticAssertDecl 0x5605abbe0df0 <line:1227:7, line:1228:68> line:1227:7
| |     |-CallExpr 0x5605abbe0d68 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe0bd8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe0d40 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe0d00 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe0d90 <line:1228:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbe0fa8 <line:1232:3, line:1239:5> line:1233:12 is_copy_assignable
| | |-TemplateTypeParmDecl 0x5605abbe0e50 <line:1232:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbe0ef8 <line:1233:5, line:1239:5> line:1233:12 struct is_copy_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_assignable_impl<__add_lval_ref_t<_Tp>, __add_lval_ref_t<const _Tp>>':'integral_constant<bool, __is_assignable(__add_lval_ref_t<_Tp>, __add_lval_ref_t<const _Tp>)>'
| |   |-CXXRecordDecl 0x5605abbe2390 <col:5, col:12> col:12 implicit struct is_copy_assignable
| |   `-StaticAssertDecl 0x5605abbe2670 <line:1237:7, line:1238:68> line:1237:7
| |     |-CallExpr 0x5605abbe25e8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe2458 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe25c0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe2580 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe2610 <line:1238:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbe2828 <line:1242:3, line:1248:5> line:1243:12 is_move_assignable
| | |-TemplateTypeParmDecl 0x5605abbe26d0 <line:1242:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbe2778 <line:1243:5, line:1248:5> line:1243:12 struct is_move_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_assignable_impl<__add_lval_ref_t<_Tp>, __add_rval_ref_t<_Tp>>':'integral_constant<bool, __is_assignable(__add_lval_ref_t<_Tp>, __add_rval_ref_t<_Tp>)>'
| |   |-CXXRecordDecl 0x5605abbe37b0 <col:5, col:12> col:12 implicit struct is_move_assignable
| |   `-StaticAssertDecl 0x5605abbe3a90 <line:1246:7, line:1247:68> line:1246:7
| |     |-CallExpr 0x5605abbe3a08 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe3878 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe39e0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe39a0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe3a30 <line:1247:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abbe3f40 <line:1251:3, line:1253:58> line:1252:5 __is_nothrow_assignable_impl
| | |-TemplateTypeParmDecl 0x5605abbe3af0 <line:1251:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbe3b78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-TypeAliasDecl 0x5605abbe3ed8 <line:1252:5, line:1253:58> line:1252:11 __is_nothrow_assignable_impl '__bool_constant<__is_nothrow_assignable(_Tp, _Up)>':'integral_constant<bool, __is_nothrow_assignable(_Tp, _Up)>'
| |   `-ElaboratedType 0x5605abbe3e60 '__bool_constant<__is_nothrow_assignable(_Tp, _Up)>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbe3e10 '__bool_constant<__is_nothrow_assignable(_Tp, _Up)>' sugar dependent alias
| |       |-name: '__bool_constant':'std::__bool_constant' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |       |-TemplateArgument expr '__is_nothrow_assignable(_Tp, _Up)'
| |       | `-TypeTraitExpr 0x5605abbe3c48 <line:1253:25, col:57> 'bool' __is_nothrow_assignable
| |       |   |-TemplateTypeParmType 0x5605abbe3b40 '_Tp' dependent depth 0 index 0
| |       |   | `-TemplateTypeParm 0x5605abbe3af0 '_Tp'
| |       |   `-TemplateTypeParmType 0x5605abbe3bd0 '_Up' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abbe3b78 '_Up'
| |       `-ElaboratedType 0x5605abbe3db0 'integral_constant<bool, __is_nothrow_assignable(_Tp, _Up)>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbe3d50 'integral_constant<bool, __is_nothrow_assignable(_Tp, _Up)>' dependent
| |           |-name: 'integral_constant':'std::integral_constant' qualified
| |           | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |           |-TemplateArgument type 'bool'
| |           | `-BuiltinType 0x5605aba9c9f0 'bool'
| |           `-TemplateArgument expr '__is_nothrow_assignable(_Tp, _Up)'
| |             `-SubstNonTypeTemplateParmExpr 0x5605abbe3ca8 <line:107:53> 'bool'
| |               |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               `-TypeTraitExpr 0x5605abbe3c48 <line:1253:25, col:57> 'bool' __is_nothrow_assignable
| |                 |-TemplateTypeParmType 0x5605abbe3b40 '_Tp' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x5605abbe3af0 '_Tp'
| |                 `-TemplateTypeParmType 0x5605abbe3bd0 '_Up' dependent depth 0 index 1
| |                   `-TemplateTypeParm 0x5605abbe3b78 '_Up'
| |-ClassTemplateDecl 0x5605abbe4210 <line:1257:3, line:1263:5> line:1258:12 is_nothrow_assignable
| | |-TemplateTypeParmDecl 0x5605abbe3fa0 <line:1257:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbe4028 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abbe4160 <line:1258:5, line:1263:5> line:1258:12 struct is_nothrow_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_assignable_impl<_Tp, _Up>':'integral_constant<bool, __is_nothrow_assignable(_Tp, _Up)>'
| |   |-CXXRecordDecl 0x5605abbe4890 <col:5, col:12> col:12 implicit struct is_nothrow_assignable
| |   `-StaticAssertDecl 0x5605abbe4b70 <line:1261:7, line:1262:68> line:1261:7
| |     |-CallExpr 0x5605abbe4ae8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe4958 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe4ac0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe4a80 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe4b10 <line:1262:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbe4d28 <line:1266:3, line:1273:5> line:1267:12 is_nothrow_copy_assignable
| | |-TemplateTypeParmDecl 0x5605abbe4bd0 <line:1266:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbe4c78 <line:1267:5, line:1273:5> line:1267:12 struct is_nothrow_copy_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_assignable_impl<__add_lval_ref_t<_Tp>, __add_lval_ref_t<const _Tp>>':'integral_constant<bool, __is_nothrow_assignable(__add_lval_ref_t<_Tp>, __add_lval_ref_t<const _Tp>)>'
| |   |-CXXRecordDecl 0x5605abbe60e0 <col:5, col:12> col:12 implicit struct is_nothrow_copy_assignable
| |   `-StaticAssertDecl 0x5605abbe63c0 <line:1271:7, line:1272:68> line:1271:7
| |     |-CallExpr 0x5605abbe6338 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe61a8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe6310 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe62d0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe6360 <line:1272:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbe6578 <line:1276:3, line:1283:5> line:1277:12 is_nothrow_move_assignable
| | |-TemplateTypeParmDecl 0x5605abbe6420 <line:1276:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbe64c8 <line:1277:5, line:1283:5> line:1277:12 struct is_nothrow_move_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_assignable_impl<__add_lval_ref_t<_Tp>, __add_rval_ref_t<_Tp>>':'integral_constant<bool, __is_nothrow_assignable(__add_lval_ref_t<_Tp>, __add_rval_ref_t<_Tp>)>'
| |   |-CXXRecordDecl 0x5605abbe7530 <col:5, col:12> col:12 implicit struct is_nothrow_move_assignable
| |   `-StaticAssertDecl 0x5605abbe7810 <line:1281:7, line:1282:68> line:1281:7
| |     |-CallExpr 0x5605abbe7788 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe75f8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe7760 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe7720 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe77b0 <line:1282:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abbe7d10 <line:1286:3, line:1288:68> line:1287:5 __is_trivially_constructible_impl
| | |-TemplateTypeParmDecl 0x5605abbe7870 <line:1286:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbe78f8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x5605abbe7ca8 <line:1287:5, line:1288:68> line:1287:11 __is_trivially_constructible_impl '__bool_constant<__is_trivially_constructible(_Tp, _Args...)>':'integral_constant<bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   `-ElaboratedType 0x5605abbe7c30 '__bool_constant<__is_trivially_constructible(_Tp, _Args...)>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbe7be0 '__bool_constant<__is_trivially_constructible(_Tp, _Args...)>' sugar dependent alias
| |       |-name: '__bool_constant':'std::__bool_constant' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |       |-TemplateArgument expr '__is_trivially_constructible(_Tp, _Args...)'
| |       | `-TypeTraitExpr 0x5605abbe7a10 <line:1288:25, col:67> 'bool' __is_trivially_constructible
| |       |   |-TemplateTypeParmType 0x5605abbe78c0 '_Tp' dependent depth 0 index 0
| |       |   | `-TemplateTypeParm 0x5605abbe7870 '_Tp'
| |       |   `-PackExpansionType 0x5605abbe79d0 '_Args...' dependent
| |       |     `-TemplateTypeParmType 0x5605abbe7950 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |       |       `-TemplateTypeParm 0x5605abbe78f8 '_Args'
| |       `-ElaboratedType 0x5605abbe7b80 'integral_constant<bool, __is_trivially_constructible(_Tp, _Args...)>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbe7b20 'integral_constant<bool, __is_trivially_constructible(_Tp, _Args...)>' dependent
| |           |-name: 'integral_constant':'std::integral_constant' qualified
| |           | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |           |-TemplateArgument type 'bool'
| |           | `-BuiltinType 0x5605aba9c9f0 'bool'
| |           `-TemplateArgument expr '__is_trivially_constructible(_Tp, _Args...)'
| |             `-SubstNonTypeTemplateParmExpr 0x5605abbe7a70 <line:107:53> 'bool'
| |               |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               `-TypeTraitExpr 0x5605abbe7a10 <line:1288:25, col:67> 'bool' __is_trivially_constructible
| |                 |-TemplateTypeParmType 0x5605abbe78c0 '_Tp' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x5605abbe7870 '_Tp'
| |                 `-PackExpansionType 0x5605abbe79d0 '_Args...' dependent
| |                   `-TemplateTypeParmType 0x5605abbe7950 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |                     `-TemplateTypeParm 0x5605abbe78f8 '_Args'
| |-ClassTemplateDecl 0x5605abbe7ff0 <line:1292:3, line:1298:5> line:1293:12 is_trivially_constructible
| | |-TemplateTypeParmDecl 0x5605abbe7d70 <line:1292:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbe7df8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x5605abbe7f40 <line:1293:5, line:1298:5> line:1293:12 struct is_trivially_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_trivially_constructible_impl<_Tp, _Args...>':'integral_constant<bool, __is_trivially_constructible(_Tp, _Args...)>'
| |   |-CXXRecordDecl 0x5605abbe87b0 <col:5, col:12> col:12 implicit struct is_trivially_constructible
| |   `-StaticAssertDecl 0x5605abbe8a90 <line:1296:7, line:1297:68> line:1296:7
| |     |-CallExpr 0x5605abbe8a08 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe8878 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe89e0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe89a0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe8a30 <line:1297:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbe8c48 <line:1301:3, line:1307:5> line:1302:12 is_trivially_default_constructible
| | |-TemplateTypeParmDecl 0x5605abbe8af0 <line:1301:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbe8b98 <line:1302:5, line:1307:5> line:1302:12 struct is_trivially_default_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_trivially_constructible_impl<_Tp>':'integral_constant<bool, __is_trivially_constructible(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbe9b88 <col:5, col:12> col:12 implicit struct is_trivially_default_constructible
| |   `-StaticAssertDecl 0x5605abbe9e60 <line:1305:7, line:1306:68> line:1305:7
| |     |-CallExpr 0x5605abbe9dd8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbe9c50 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbe9db0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbe9d70 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbe9e00 <line:1306:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-VarTemplateDecl 0x5605abbe9fe8 <line:1310:3, line:1312:47> line:1311:20 __is_implicitly_default_constructible_v
| | |-TemplateTypeParmDecl 0x5605abbe9ec0 <line:1310:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abbe9f78 <line:1311:5, line:1312:47> line:1311:20 __is_implicitly_default_constructible_v 'const bool' constexpr cinit
| |   `-RequiresExpr 0x5605abbea3b8 <line:1312:9, col:47> 'bool'
| |     |-ParmVarDecl 0x5605abbea230 <col:19, col:33> col:25 referenced __f 'void (&)(_Tp)'
| |     `-SimpleRequirement 0x5605abbea388 dependent
| |       `-CallExpr 0x5605abbea360 <col:38, col:44> '<dependent type>'
| |         |-DeclRefExpr 0x5605abbea300 <col:38> 'void (_Tp)' lvalue ParmVar 0x5605abbea230 '__f' 'void (&)(_Tp)' non_odr_use_unevaluated
| |         `-InitListExpr 0x5605abbea320 <col:42, col:43> 'void'
| |-ClassTemplateDecl 0x5605abbea578 <line:1314:3, line:1317:7> line:1315:12 __is_implicitly_default_constructible
| | |-TemplateTypeParmDecl 0x5605abbea418 <line:1314:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbea4c8 <line:1315:5, line:1317:7> line:1315:12 struct __is_implicitly_default_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_implicitly_default_constructible_v<_Tp>>':'integral_constant<bool, __is_implicitly_default_constructible_v<_Tp>>'
| |   `-CXXRecordDecl 0x5605abbeb028 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible
| |-ClassTemplateDecl 0x5605abbeb248 <line:1351:3, line:1357:5> line:1352:12 is_trivially_copy_constructible
| | |-TemplateTypeParmDecl 0x5605abbeb0f0 <line:1351:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbeb198 <line:1352:5, line:1357:5> line:1352:12 struct is_trivially_copy_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_trivially_constructible_impl<_Tp, __add_lval_ref_t<const _Tp>>':'integral_constant<bool, __is_trivially_constructible(_Tp, __add_lval_ref_t<const _Tp>)>'
| |   |-CXXRecordDecl 0x5605abbebb30 <col:5, col:12> col:12 implicit struct is_trivially_copy_constructible
| |   `-StaticAssertDecl 0x5605abbec770 <line:1355:7, line:1356:68> line:1355:7
| |     |-CallExpr 0x5605abbec6e8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbec560 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbec6c0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbec680 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbec710 <line:1356:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbec928 <line:1360:3, line:1366:5> line:1361:12 is_trivially_move_constructible
| | |-TemplateTypeParmDecl 0x5605abbec7d0 <line:1360:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbec878 <line:1361:5, line:1366:5> line:1361:12 struct is_trivially_move_constructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_trivially_constructible_impl<_Tp, __add_rval_ref_t<_Tp>>':'integral_constant<bool, __is_trivially_constructible(_Tp, __add_rval_ref_t<_Tp>)>'
| |   |-CXXRecordDecl 0x5605abbed210 <col:5, col:12> col:12 implicit struct is_trivially_move_constructible
| |   `-StaticAssertDecl 0x5605abbed4f0 <line:1364:7, line:1365:68> line:1364:7
| |     |-CallExpr 0x5605abbed468 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbed2d8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbed440 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbed400 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbed490 <line:1365:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abbee360 <line:1369:3, line:1371:60> line:1370:5 __is_trivially_assignable_impl
| | |-TemplateTypeParmDecl 0x5605abbedf08 <line:1369:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbedf98 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-TypeAliasDecl 0x5605abbee2f8 <line:1370:5, line:1371:60> line:1370:11 __is_trivially_assignable_impl '__bool_constant<__is_trivially_assignable(_Tp, _Up)>':'integral_constant<bool, __is_trivially_assignable(_Tp, _Up)>'
| |   `-ElaboratedType 0x5605abbee280 '__bool_constant<__is_trivially_assignable(_Tp, _Up)>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abbee230 '__bool_constant<__is_trivially_assignable(_Tp, _Up)>' sugar dependent alias
| |       |-name: '__bool_constant':'std::__bool_constant' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |       |-TemplateArgument expr '__is_trivially_assignable(_Tp, _Up)'
| |       | `-TypeTraitExpr 0x5605abbee068 <line:1371:25, col:59> 'bool' __is_trivially_assignable
| |       |   |-TemplateTypeParmType 0x5605abbedf60 '_Tp' dependent depth 0 index 0
| |       |   | `-TemplateTypeParm 0x5605abbedf08 '_Tp'
| |       |   `-TemplateTypeParmType 0x5605abbedff0 '_Up' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abbedf98 '_Up'
| |       `-ElaboratedType 0x5605abbee1d0 'integral_constant<bool, __is_trivially_assignable(_Tp, _Up)>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abbee170 'integral_constant<bool, __is_trivially_assignable(_Tp, _Up)>' dependent
| |           |-name: 'integral_constant':'std::integral_constant' qualified
| |           | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |           |-TemplateArgument type 'bool'
| |           | `-BuiltinType 0x5605aba9c9f0 'bool'
| |           `-TemplateArgument expr '__is_trivially_assignable(_Tp, _Up)'
| |             `-SubstNonTypeTemplateParmExpr 0x5605abbee0c8 <line:107:53> 'bool'
| |               |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               `-TypeTraitExpr 0x5605abbee068 <line:1371:25, col:59> 'bool' __is_trivially_assignable
| |                 |-TemplateTypeParmType 0x5605abbedf60 '_Tp' dependent depth 0 index 0
| |                 | `-TemplateTypeParm 0x5605abbedf08 '_Tp'
| |                 `-TemplateTypeParmType 0x5605abbedff0 '_Up' dependent depth 0 index 1
| |                   `-TemplateTypeParm 0x5605abbedf98 '_Up'
| |-ClassTemplateDecl 0x5605abbee5b0 <line:1375:3, line:1381:5> line:1376:12 is_trivially_assignable
| | |-TemplateTypeParmDecl 0x5605abbee3c0 <line:1375:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbee448 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abbee500 <line:1376:5, line:1381:5> line:1376:12 struct is_trivially_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_trivially_assignable_impl<_Tp, _Up>':'integral_constant<bool, __is_trivially_assignable(_Tp, _Up)>'
| |   |-CXXRecordDecl 0x5605abbeec30 <col:5, col:12> col:12 implicit struct is_trivially_assignable
| |   `-StaticAssertDecl 0x5605abbf0410 <line:1379:7, line:1380:68> line:1379:7
| |     |-CallExpr 0x5605abbeee88 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbeecf8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbeee60 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbeee20 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbf03b0 <line:1380:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbf05c8 <line:1384:3, line:1391:5> line:1385:12 is_trivially_copy_assignable
| | |-TemplateTypeParmDecl 0x5605abbf0470 <line:1384:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbf0518 <line:1385:5, line:1391:5> line:1385:12 struct is_trivially_copy_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_trivially_assignable_impl<__add_lval_ref_t<_Tp>, __add_lval_ref_t<const _Tp>>':'integral_constant<bool, __is_trivially_assignable(__add_lval_ref_t<_Tp>, __add_lval_ref_t<const _Tp>)>'
| |   |-CXXRecordDecl 0x5605abbf10b0 <col:5, col:12> col:12 implicit struct is_trivially_copy_assignable
| |   `-StaticAssertDecl 0x5605abbf1858 <line:1389:7, line:1390:68> line:1389:7
| |     |-CallExpr 0x5605abbf1308 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbf1178 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbf12e0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbf12a0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbf1330 <line:1390:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbf1a18 <line:1394:3, line:1401:5> line:1395:12 is_trivially_move_assignable
| | |-TemplateTypeParmDecl 0x5605abbf18b8 <line:1394:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbf1968 <line:1395:5, line:1401:5> line:1395:12 struct is_trivially_move_assignable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_trivially_assignable_impl<__add_lval_ref_t<_Tp>, __add_rval_ref_t<_Tp>>':'integral_constant<bool, __is_trivially_assignable(__add_lval_ref_t<_Tp>, __add_rval_ref_t<_Tp>)>'
| |   |-CXXRecordDecl 0x5605abbf2500 <col:5, col:12> col:12 implicit struct is_trivially_move_assignable
| |   `-StaticAssertDecl 0x5605abbf27e0 <line:1399:7, line:1400:68> line:1399:7
| |     |-CallExpr 0x5605abbf2758 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbf25c8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbf2730 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbf26f0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbf2780 <line:1400:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbf2e58 <line:1404:3, line:1411:5> line:1405:12 is_trivially_destructible
| | |-TemplateTypeParmDecl 0x5605abbf2cf8 <line:1404:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbf2da8 <line:1405:5, line:1411:5> line:1405:12 struct is_trivially_destructible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__and_<__is_destructible_safe<_Tp>, __bool_constant<__has_trivial_destructor(_Tp)>>::type'
| |   |-CXXRecordDecl 0x5605abbf4178 <col:5, col:12> col:12 implicit struct is_trivially_destructible
| |   `-StaticAssertDecl 0x5605abbf4450 <line:1409:7, line:1410:68> line:1409:7
| |     |-CallExpr 0x5605abbf43c8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbf4240 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbf43a0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbf4360 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbf43f0 <line:1410:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbf4608 <line:1415:3, line:1421:5> line:1416:12 has_virtual_destructor
| | |-TemplateTypeParmDecl 0x5605abbf44b0 <line:1415:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbf4558 <line:1416:5, line:1421:5> line:1416:12 struct has_virtual_destructor definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__has_virtual_destructor(_Tp)>':'integral_constant<bool, __has_virtual_destructor(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbf4b68 <col:5, col:12> col:12 implicit struct has_virtual_destructor
| |   `-StaticAssertDecl 0x5605abbf4e40 <line:1419:7, line:1420:68> line:1419:7
| |     |-CallExpr 0x5605abbf4db8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbf4c30 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbf4d90 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbf4d50 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbf4de0 <line:1420:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbf4ff8 <line:1427:3, line:1433:5> line:1428:12 alignment_of
| | |-TemplateTypeParmDecl 0x5605abbf4ea0 <line:1427:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbf4f48 <line:1428:5, line:1433:5> line:1428:12 struct alignment_of definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'integral_constant<std::size_t, alignof(_Tp)>'
| |   |-CXXRecordDecl 0x5605abbf5aa0 <col:5, col:12> col:12 implicit struct alignment_of
| |   `-StaticAssertDecl 0x5605abbf5d80 <line:1431:7, line:1432:68> line:1431:7
| |     |-CallExpr 0x5605abbf5cf8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abbf5b68 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abbf5cd0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abbf5c90 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abbf5d20 <line:1432:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abbf5f38 <line:1436:3, line:1438:50> line:1437:12 rank
| | |-TemplateTypeParmDecl 0x5605abbf5de0 <line:1436:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abbf5e88 <line:1437:5, line:1438:50> line:1437:12 struct rank definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'integral_constant<std::size_t, 0>':'std::integral_constant<unsigned long, 0>'
| |   `-CXXRecordDecl 0x5605abbf74e8 <col:5, col:12> col:12 implicit struct rank
| |-ClassTemplatePartialSpecializationDecl 0x5605abbf7830 <line:1440:3, line:1442:69> line:1441:12 struct rank definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | |-TemplateTypeParmDecl 0x5605abbf75b0 <line:1440:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbf7688 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | `-CXXRecordDecl 0x5605abbf7d50 <line:1441:5, col:12> col:12 implicit struct rank
| |-ClassTemplatePartialSpecializationDecl 0x5605abbf8100 <line:1444:3, line:1446:69> line:1445:12 struct rank definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abbf7e18 <line:1444:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbf85a0 <line:1445:5, col:12> col:12 implicit struct rank
| |-ClassTemplateDecl 0x5605abbf8888 <line:1449:3, line:1451:45> line:1450:12 extent
| | |-TemplateTypeParmDecl 0x5605abbf8668 <line:1449:12> col:20 typename depth 0 index 0
| | |-NonTypeTemplateParmDecl 0x5605abbf8730 <col:22, col:39> col:31 'unsigned int' depth 0 index 1 _Uint
| | | `-TemplateArgument <col:39> expr '0'
| | |   `-IntegerLiteral 0x5605abbf86f0 <col:39> 'int' 0
| | `-CXXRecordDecl 0x5605abbf87d8 <line:1450:5, line:1451:45> line:1450:12 struct extent definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'integral_constant<size_t, 0>':'std::integral_constant<unsigned long, 0>'
| |   `-CXXRecordDecl 0x5605abbf8d00 <col:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0x5605abbf95b8 <line:1453:3, line:1455:49> line:1454:12 struct extent definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'integral_constant<size_t, _Size>'
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | |-TemplateArgument integral '0U'
| | |-TemplateTypeParmDecl 0x5605abbf8dc8 <line:1453:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbf8e68 <col:26, col:33> col:33 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| | `-CXXRecordDecl 0x5605abbf9a00 <line:1454:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0x5605abbf9e18 <line:1457:3, line:1459:45> line:1458:12 struct extent definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'extent<_Tp, _Uint - 1>::type'
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbf9c90 'type-parameter-0-0[_Size]' dependent   <col:22, col:28>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbf9c68 <col:23> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbf9be0 '_Size' 'size_t':'unsigned long'
| | |-TemplateArgument expr '_Uint'
| | | `-DeclRefExpr 0x5605abbf9d30 <col:31> 'unsigned int' NonTypeTemplateParm 0x5605abbf9b70 '_Uint' 'unsigned int'
| | |-TemplateTypeParmDecl 0x5605abbf9ac8 <line:1457:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbf9b70 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| | |-NonTypeTemplateParmDecl 0x5605abbf9be0 <col:42, col:49> col:49 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| | `-CXXRecordDecl 0x5605abbfa308 <line:1458:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0x5605abbfa7d8 <line:1461:3, line:1463:45> line:1462:12 struct extent definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'integral_constant<size_t, 0>':'std::integral_constant<unsigned long, 0>'
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral '0U'
| | |-TemplateTypeParmDecl 0x5605abbfa3d0 <line:1461:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abbfabb0 <line:1462:5, col:12> col:12 implicit struct extent
| |-ClassTemplatePartialSpecializationDecl 0x5605abbfaed8 <line:1465:3, line:1467:45> line:1466:12 struct extent definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'extent<_Tp, _Uint - 1>::type'
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument expr '_Uint'
| | | `-DeclRefExpr 0x5605abbfadf0 <col:26> 'unsigned int' NonTypeTemplateParm 0x5605abbfad20 '_Uint' 'unsigned int'
| | |-TemplateTypeParmDecl 0x5605abbfac78 <line:1465:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abbfad20 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| | `-CXXRecordDecl 0x5605abbfb328 <line:1466:5, col:12> col:12 implicit struct extent
| |-ClassTemplateDecl 0x5605abbfb5c8 prev 0x5605abbae260 <line:1474:3, line:1477:7> line:1475:12 is_same
| | |-TemplateTypeParmDecl 0x5605abbfb3f0 <line:1474:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abbfb478 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abbfb530 prev 0x5605abbae1b0 <line:1475:5, line:1477:7> line:1475:12 struct is_same definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_same(_Tp, _Up)>':'integral_constant<bool, __is_same(_Tp, _Up)>'
| |   `-CXXRecordDecl 0x5605abbfba48 <col:5, col:12> col:12 implicit struct is_same
| |-ClassTemplateDecl 0x5605abbfbd00 <line:1491:3, line:1494:7> line:1492:12 is_base_of
| | |-TemplateTypeParmDecl 0x5605abbfbb10 <line:1491:12, col:21> col:21 referenced typename depth 0 index 0 _Base
| | |-TemplateTypeParmDecl 0x5605abbfbb98 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Derived
| | `-CXXRecordDecl 0x5605abbfbc50 <line:1492:5, line:1494:7> line:1492:12 struct is_base_of definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_base_of(_Base, _Derived)>':'integral_constant<bool, __is_base_of(_Base, _Derived)>'
| |   `-CXXRecordDecl 0x5605abbfc2a8 <col:5, col:12> col:12 implicit struct is_base_of
| |-ClassTemplateDecl 0x5605abbfc560 <line:1497:3, line:1500:7> line:1498:12 is_convertible
| | |-TemplateTypeParmDecl 0x5605abbfc370 <line:1497:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x5605abbfc3f8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | `-CXXRecordDecl 0x5605abbfc4b0 <line:1498:5, line:1500:7> line:1498:12 struct is_convertible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<__is_convertible(_From, _To)>':'integral_constant<bool, __is_convertible(_From, _To)>'
| |   `-CXXRecordDecl 0x5605abb51818 <col:5, col:12> col:12 implicit struct is_convertible
| |-TypeAliasTemplateDecl 0x5605abb51de0 <line:1540:3, line:1542:66> line:1541:5 __is_array_convertible
| | |-TemplateTypeParmDecl 0x5605abb518e0 <line:1540:12, col:21> col:21 referenced typename depth 0 index 0 _ToElementType
| | |-TemplateTypeParmDecl 0x5605abb51968 <col:37, col:46> col:46 referenced typename depth 0 index 1 _FromElementType
| | `-TypeAliasDecl 0x5605abb51d78 <line:1541:5, line:1542:66> line:1541:11 __is_array_convertible 'is_convertible<_FromElementType (*)[], _ToElementType (*)[]>'
| |   `-ElaboratedType 0x5605abb51cf0 'is_convertible<_FromElementType (*)[], _ToElementType (*)[]>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abb51c90 'is_convertible<_FromElementType (*)[], _ToElementType (*)[]>' dependent
| |       |-name: 'is_convertible':'std::is_convertible' qualified
| |       | `-ClassTemplateDecl 0x5605abbfc560 <line:1497:3, line:1500:7> line:1498:12 is_convertible
| |       |-TemplateArgument type '_FromElementType (*)[]':'type-parameter-0-1 (*)[]'
| |       | `-PointerType 0x5605abb51ae0 '_FromElementType (*)[]' dependent
| |       |   `-ParenType 0x5605abb51a80 '_FromElementType[]' sugar dependent
| |       |     `-IncompleteArrayType 0x5605abb51a50 '_FromElementType[]' dependent 
| |       |       `-TemplateTypeParmType 0x5605abb519c0 '_FromElementType' dependent depth 0 index 1
| |       |         `-TemplateTypeParm 0x5605abb51968 '_FromElementType'
| |       `-TemplateArgument type '_ToElementType (*)[]':'type-parameter-0-0 (*)[]'
| |         `-PointerType 0x5605abb51bd0 '_ToElementType (*)[]' dependent
| |           `-ParenType 0x5605abb51b70 '_ToElementType[]' sugar dependent
| |             `-IncompleteArrayType 0x5605abb51b40 '_ToElementType[]' dependent 
| |               `-TemplateTypeParmType 0x5605abb51930 '_ToElementType' dependent depth 0 index 0
| |                 `-TemplateTypeParm 0x5605abb518e0 '_ToElementType'
| |-VarTemplateDecl 0x5605abb52000 <line:1548:3, line:1550:44> line:1549:27 is_nothrow_convertible_v
| | |-TemplateTypeParmDecl 0x5605abb51e40 <line:1548:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x5605abb51ec8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | `-VarDecl 0x5605abb51f90 <line:1549:5, line:1550:44> line:1549:27 is_nothrow_convertible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abb52078 <line:1550:9, col:44> 'bool' __is_nothrow_convertible
| |     |-TemplateTypeParmType 0x5605abb51e90 '_From' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abb51e40 '_From'
| |     `-TemplateTypeParmType 0x5605abb51f20 '_To' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abb51ec8 '_To'
| |-ClassTemplateDecl 0x5605abb522b0 <line:1553:3, line:1556:7> line:1554:12 is_nothrow_convertible
| | |-TemplateTypeParmDecl 0x5605abb520c0 <line:1553:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x5605abb52148 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | `-CXXRecordDecl 0x5605abb52200 <line:1554:5, line:1556:7> line:1554:12 struct is_nothrow_convertible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<is_nothrow_convertible_v<_From, _To>>':'integral_constant<bool, is_nothrow_convertible_v<_From, _To>>'
| |   `-CXXRecordDecl 0x5605abc00e18 <col:5, col:12> col:12 implicit struct is_nothrow_convertible
| |-ClassTemplateDecl 0x5605abc010d0 <line:1602:3, line:1607:7> line:1603:12 __is_nothrow_new_constructible_impl
| | |-TemplateTypeParmDecl 0x5605abc00ee0 <line:1602:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc00f68 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x5605abc01020 <line:1603:5, line:1607:7> line:1603:12 struct __is_nothrow_new_constructible_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<noexcept(::new (std::declval<void *>()) _Tp(std::declval<_Args>()...))>':'integral_constant<bool, noexcept(::new (std::declval<void *>()) _Tp(std::declval<_Args>()...))>'
| |   `-CXXRecordDecl 0x5605abc032d8 <col:5, col:12> col:12 implicit struct __is_nothrow_new_constructible_impl
| |-VarTemplateDecl 0x5605abc03560 <line:1609:3, line:1612:62> line:1610:38 __is_nothrow_new_constructible
| | |-TemplateTypeParmDecl 0x5605abc033a0 <line:1609:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc03428 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-VarDecl 0x5605abc034f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:207:29, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1612:62> line:1610:38 __is_nothrow_new_constructible 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abc039e8 <line:1611:9, line:1612:62> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec '__and_<is_constructible<_Tp, _Args...>, __is_nothrow_new_constructible_impl<_Tp, _Args...>>'
| |-ClassTemplateDecl 0x5605abc03b98 <line:1618:3, line:1620:25> line:1619:12 remove_const
| | |-TemplateTypeParmDecl 0x5605abc03a40 <line:1618:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc03ae8 <line:1619:5, line:1620:25> line:1619:12 struct remove_const definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc03e50 <col:5, col:12> col:12 implicit struct remove_const
| |   `-TypeAliasDecl 0x5605abc03f10 <line:1620:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc03a90 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc03a40 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc04710 <line:1622:3, line:1624:25> line:1623:12 struct remove_const definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'const type-parameter-0-0'
| | | `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc03fa8 <line:1622:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc048f0 <line:1623:5, col:12> col:12 implicit struct remove_const
| | `-TypeAliasDecl 0x5605abc049b0 <line:1624:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x5605abc04000 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abc03fa8 '_Tp'
| |-ClassTemplateDecl 0x5605abc04ba8 <line:1627:3, line:1629:25> line:1628:12 remove_volatile
| | |-TemplateTypeParmDecl 0x5605abc04a48 <line:1627:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc04af8 <line:1628:5, line:1629:25> line:1628:12 struct remove_volatile definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc04e60 <col:5, col:12> col:12 implicit struct remove_volatile
| |   `-TypeAliasDecl 0x5605abc04f20 <line:1629:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc04aa0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc04a48 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc05110 <line:1631:3, line:1633:25> line:1632:12 struct remove_volatile definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | | `-QualType 0x5605abb238f4 'volatile type-parameter-0-0' volatile
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc04fb8 <line:1631:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc052f0 <line:1632:5, col:12> col:12 implicit struct remove_volatile
| | `-TypeAliasDecl 0x5605abc053b0 <line:1633:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x5605abc05010 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abc04fb8 '_Tp'
| |-ClassTemplateDecl 0x5605abc05590 prev 0x5605abb8c7f8 <line:1637:3, line:1639:38> line:1638:12 remove_cv
| | |-TemplateTypeParmDecl 0x5605abc05448 <line:1637:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc054f8 prev 0x5605abb8c748 <line:1638:5, line:1639:38> line:1638:12 struct remove_cv definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc05c48 <col:5, col:12> col:12 implicit struct remove_cv
| | | `-TypeAliasDecl 0x5605abc05d98 <line:1639:7, col:35> col:13 type '__remove_cv(_Tp)'
| | |   `-UnaryTransformType 0x5605abc05d40 '__remove_cv(_Tp)' dependent remove_cv
| | |     `-TemplateTypeParmType 0x5605abc054a0 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x5605abc05448 '_Tp'
| | |-ClassTemplateSpecialization 0x5605abc3cd98 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abc3ec88 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abc42048 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abc446f8 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abc47e08 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abc4aca8 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abc4f268 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abeb8318 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abebf658 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abec3058 'remove_cv'
| | |-ClassTemplateSpecialization 0x5605abed4418 'remove_cv'
| | `-ClassTemplateSpecialization 0x5605abedf668 'remove_cv'
| |-ClassTemplateDecl 0x5605abc05f88 <line:1659:3, line:1661:31> line:1660:12 add_const
| | |-TemplateTypeParmDecl 0x5605abc05e30 <line:1659:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc05ed8 <line:1660:5, line:1661:31> line:1660:12 struct add_const definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc06240 <col:5, col:12> col:12 implicit struct add_const
| |   `-TypeAliasDecl 0x5605abc06300 <line:1661:7, col:20> col:13 type 'const _Tp'
| |     `-QualType 0x5605abc05e81 'const _Tp' const
| |       `-TemplateTypeParmType 0x5605abc05e80 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abc05e30 '_Tp'
| |-ClassTemplateDecl 0x5605abc064f8 <line:1664:3, line:1666:34> line:1665:12 add_volatile
| | |-TemplateTypeParmDecl 0x5605abc06398 <line:1664:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc06448 <line:1665:5, line:1666:34> line:1665:12 struct add_volatile definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc067b0 <col:5, col:12> col:12 implicit struct add_volatile
| |   `-TypeAliasDecl 0x5605abc06870 <line:1666:7, col:20> col:13 type 'volatile _Tp'
| |     `-QualType 0x5605abc063f4 'volatile _Tp' volatile
| |       `-TemplateTypeParmType 0x5605abc063f0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abc06398 '_Tp'
| |-ClassTemplateDecl 0x5605abc06a68 <line:1669:3, line:1671:40> line:1670:12 add_cv
| | |-TemplateTypeParmDecl 0x5605abc06908 <line:1669:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc069b8 <line:1670:5, line:1671:40> line:1670:12 struct add_cv definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc07f00 <col:5, col:12> col:12 implicit struct add_cv
| |   `-TypeAliasDecl 0x5605abc07fc0 <line:1671:7, col:20> col:13 type 'const volatile _Tp'
| |     `-QualType 0x5605abc06965 'const volatile _Tp' const volatile
| |       `-TemplateTypeParmType 0x5605abc06960 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abc06908 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abc082c0 <line:1675:3, line:1676:56> col:5 remove_const_t
| | |-TemplateTypeParmDecl 0x5605abc08058 <line:1675:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc08258 <line:1676:5, col:56> col:11 remove_const_t 'typename remove_const<_Tp>::type'
| |   `-DependentNameType 0x5605abc081e0 'typename remove_const<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc08580 <line:1679:3, line:1680:62> col:5 remove_volatile_t
| | |-TemplateTypeParmDecl 0x5605abc08320 <line:1679:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc08518 <line:1680:5, col:62> col:11 remove_volatile_t 'typename remove_volatile<_Tp>::type'
| |   `-DependentNameType 0x5605abc084a0 'typename remove_volatile<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc08820 <line:1683:3, line:1684:50> col:5 remove_cv_t
| | |-TemplateTypeParmDecl 0x5605abc085e0 <line:1683:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc087b8 <line:1684:5, col:50> col:11 remove_cv_t 'typename remove_cv<_Tp>::type'
| |   `-DependentNameType 0x5605abc08740 'typename remove_cv<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc08ae0 <line:1687:3, line:1688:50> col:5 add_const_t
| | |-TemplateTypeParmDecl 0x5605abc08880 <line:1687:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc08a78 <line:1688:5, col:50> col:11 add_const_t 'typename add_const<_Tp>::type'
| |   `-DependentNameType 0x5605abc08a00 'typename add_const<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc08da0 <line:1691:3, line:1692:56> col:5 add_volatile_t
| | |-TemplateTypeParmDecl 0x5605abc08b40 <line:1691:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc08d38 <line:1692:5, col:56> col:11 add_volatile_t 'typename add_volatile<_Tp>::type'
| |   `-DependentNameType 0x5605abc08cc0 'typename add_volatile<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc0a520 <line:1695:3, line:1696:44> col:5 add_cv_t
| | |-TemplateTypeParmDecl 0x5605abc0a2b8 <line:1695:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc0a4b8 <line:1696:5, col:44> col:11 add_cv_t 'typename add_cv<_Tp>::type'
| |   `-DependentNameType 0x5605abc0a440 'typename add_cv<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc0a6d8 <line:1707:3, line:1709:25> line:1708:12 remove_reference
| | |-TemplateTypeParmDecl 0x5605abc0a580 <line:1707:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc0a628 <line:1708:5, line:1709:25> line:1708:12 struct remove_reference definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc0a990 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypeAliasDecl 0x5605abc0aa50 <line:1709:7, col:20> col:13 type '_Tp'
| | |   `-TemplateTypeParmType 0x5605abc0a5d0 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abc0a580 '_Tp'
| | |-ClassTemplateSpecializationDecl 0x5605abdb82a0 <line:1707:3, line:1709:25> line:1708:12 struct remove_reference definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'void *'
| | | | `-PointerType 0x5605aba9d150 'void *'
| | | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-CXXRecordDecl 0x5605abdb8510 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypeAliasDecl 0x5605abdb8608 <line:1709:7, col:20> col:13 referenced type 'void *'
| | |   `-SubstTemplateTypeParmType 0x5605abdb85c0 'void *' sugar typename depth 0 index 0 _Tp
| | |     |-ClassTemplateSpecialization 0x5605abdb82a0 'remove_reference'
| | |     `-PointerType 0x5605aba9d150 'void *'
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | |-ClassTemplateSpecializationDecl 0x5605abdd5538 <line:1711:3, line:1713:25> line:1712:12 struct remove_reference definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'void *const &'
| | | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |   `-QualType 0x5605aba9d151 'void *const' const
| | | |     `-PointerType 0x5605aba9d150 'void *'
| | | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-CXXRecordDecl 0x5605abdd5800 <col:5, col:12> col:12 implicit struct remove_reference
| | | `-TypeAliasDecl 0x5605abdd58f8 <line:1713:7, col:20> col:13 referenced type 'void *const'
| | |   `-SubstTemplateTypeParmType 0x5605abdd58b0 'void *const' sugar typename depth 0 index 0 _Tp
| | |     |-ClassTemplateSpecialization 0x5605abdd5538 'remove_reference'
| | |     `-QualType 0x5605aba9d151 'void *const' const
| | |       `-PointerType 0x5605aba9d150 'void *'
| | |         `-BuiltinType 0x5605aba9c9d0 'void'
| | `-ClassTemplateSpecializationDecl 0x5605abec47c8 <line:1707:3, line:1709:25> line:1708:12 struct remove_reference definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'int'
| |   | `-BuiltinType 0x5605aba9ca70 'int'
| |   |-CXXRecordDecl 0x5605abec4a48 <col:5, col:12> col:12 implicit struct remove_reference
| |   `-TypeAliasDecl 0x5605abec4b38 <line:1709:7, col:20> col:13 referenced type 'int'
| |     `-SubstTemplateTypeParmType 0x5605abec4af0 'int' sugar typename depth 0 index 0 _Tp
| |       |-ClassTemplateSpecialization 0x5605abec47c8 'remove_reference'
| |       `-BuiltinType 0x5605aba9ca70 'int'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc0ac70 <line:1711:3, line:1713:25> line:1712:12 struct remove_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc0aae8 <line:1711:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc0ae50 <line:1712:5, col:12> col:12 implicit struct remove_reference
| | `-TypeAliasDecl 0x5605abc0af10 <line:1713:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x5605abc0ab40 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abc0aae8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc0b130 <line:1715:3, line:1717:25> line:1716:12 struct remove_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc0afa8 <line:1715:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc0b830 <line:1716:5, col:12> col:12 implicit struct remove_reference
| | `-TypeAliasDecl 0x5605abc0b8f0 <line:1717:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x5605abc0b000 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abc0afa8 '_Tp'
| |-ClassTemplateDecl 0x5605abc0bae8 <line:1721:3, line:1723:43> line:1722:12 add_lvalue_reference
| | |-TemplateTypeParmDecl 0x5605abc0b988 <line:1721:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc0ba38 <line:1722:5, line:1723:43> line:1722:12 struct add_lvalue_reference definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc0bda0 <col:5, col:12> col:12 implicit struct add_lvalue_reference
| |   `-TypeAliasDecl 0x5605abc0c078 <line:1723:7, col:40> col:13 type '__add_lval_ref_t<_Tp>':'typename __add_lvalue_reference_helper<_Tp>::type'
| |     `-ElaboratedType 0x5605abc0c000 '__add_lval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abc0bfb0 '__add_lval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abc0b9e0 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abc0b988 '_Tp'
| |         `-DependentNameType 0x5605abc0bf60 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc0c268 <line:1726:3, line:1728:43> line:1727:12 add_rvalue_reference
| | |-TemplateTypeParmDecl 0x5605abc0c110 <line:1726:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc0c1b8 <line:1727:5, line:1728:43> line:1727:12 struct add_rvalue_reference definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc0c520 <col:5, col:12> col:12 implicit struct add_rvalue_reference
| |   `-TypeAliasDecl 0x5605abc0d1a8 <line:1728:7, col:40> col:13 type '__add_rval_ref_t<_Tp>':'typename __add_rvalue_reference_helper<_Tp>::type'
| |     `-ElaboratedType 0x5605abc0c780 '__add_rval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abc0c730 '__add_rval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_rval_ref_t':'std::__add_rval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abc0c160 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abc0c110 '_Tp'
| |         `-DependentNameType 0x5605abc0c6e0 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc0d4a0 <line:1732:3, line:1733:64> col:5 remove_reference_t
| | |-TemplateTypeParmDecl 0x5605abc0d240 <line:1732:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc0d438 <line:1733:5, col:64> col:11 remove_reference_t 'typename remove_reference<_Tp>::type'
| |   `-DependentNameType 0x5605abc0d3c0 'typename remove_reference<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc0d760 <line:1736:3, line:1737:72> col:5 add_lvalue_reference_t
| | |-TemplateTypeParmDecl 0x5605abc0d500 <line:1736:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc0d6f8 <line:1737:5, col:72> col:11 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
| |   `-DependentNameType 0x5605abc0d680 'typename add_lvalue_reference<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc0da20 <line:1740:3, line:1741:72> col:5 add_rvalue_reference_t
| | |-TemplateTypeParmDecl 0x5605abc0d7c0 <line:1740:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc0d9b8 <line:1741:5, col:72> col:11 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
| |   `-DependentNameType 0x5605abc0d940 'typename add_rvalue_reference<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | |-TemplateTypeParmDecl 0x5605abc0da80 <line:1749:12, col:21> col:21 typename depth 0 index 0 _Unqualified
| | |-NonTypeTemplateParmDecl 0x5605abc0db18 <col:35, col:40> col:40 'bool' depth 0 index 1 _IsConst
| | |-NonTypeTemplateParmDecl 0x5605abc0db88 <col:50, col:55> col:55 'bool' depth 0 index 2 _IsVol
| | |-CXXRecordDecl 0x5605abc0dc18 <line:1750:5, col:12> col:12 struct __cv_selector
| | |-ClassTemplateSpecializationDecl 0x5605abc25918 <line:1752:3, line:1754:36> line:1753:12 struct __cv_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc25e08 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypeAliasDecl 0x5605abc25ef8 <line:1754:7, col:22> col:13 referenced __type 'unsigned int'
| | |   `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | |     |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | |     `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x5605abc28fe8 <line:1752:3, line:1754:36> line:1753:12 struct __cv_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc294d8 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypeAliasDecl 0x5605abc295c8 <line:1754:7, col:22> col:13 referenced __type 'unsigned char'
| | |   `-SubstTemplateTypeParmType 0x5605abc29580 'unsigned char' sugar typename depth 0 index 0 _Unqualified
| | |     |-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| | |     `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |-ClassTemplateSpecializationDecl 0x5605abbd0108 <line:1752:3, line:1754:36> line:1753:12 struct __cv_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc31e08 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypeAliasDecl 0x5605abc31ef8 <line:1754:7, col:22> col:13 referenced __type 'unsigned short'
| | |   `-SubstTemplateTypeParmType 0x5605abc31eb0 'unsigned short' sugar typename depth 0 index 0 _Unqualified
| | |     |-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| | |     `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x5605abc40b58 <line:1752:3, line:1754:36> line:1753:12 struct __cv_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'int'
| | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc41048 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypeAliasDecl 0x5605abc41138 <line:1754:7, col:22> col:13 referenced __type 'int'
| | |   `-SubstTemplateTypeParmType 0x5605abc410f0 'int' sugar typename depth 0 index 0 _Unqualified
| | |     |-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| | |     `-BuiltinType 0x5605aba9ca70 'int'
| | |-ClassTemplateSpecializationDecl 0x5605abc46918 <line:1752:3, line:1754:36> line:1753:12 struct __cv_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'signed char'
| | | | `-BuiltinType 0x5605aba9ca30 'signed char'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc46e08 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypeAliasDecl 0x5605abc46ef8 <line:1754:7, col:22> col:13 referenced __type 'signed char'
| | |   `-SubstTemplateTypeParmType 0x5605abc46eb0 'signed char' sugar typename depth 0 index 0 _Unqualified
| | |     |-ClassTemplateSpecialization 0x5605abc46918 '__cv_selector'
| | |     `-BuiltinType 0x5605aba9ca30 'signed char'
| | |-ClassTemplateSpecializationDecl 0x5605abc4d328 <line:1752:3, line:1754:36> line:1753:12 struct __cv_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'short'
| | | | `-BuiltinType 0x5605aba9ca50 'short'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc4d818 <col:5, col:12> col:12 implicit struct __cv_selector
| | | `-TypeAliasDecl 0x5605abc4d908 <line:1754:7, col:22> col:13 referenced __type 'short'
| | |   `-SubstTemplateTypeParmType 0x5605abc4d8c0 'short' sugar typename depth 0 index 0 _Unqualified
| | |     |-ClassTemplateSpecialization 0x5605abc4d328 '__cv_selector'
| | |     `-BuiltinType 0x5605aba9ca50 'short'
| | `-ClassTemplateSpecializationDecl 0x5605abdca248 <line:1760:3, line:1762:42> line:1761:12 struct __cv_selector definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'void *const'
| |   | `-QualType 0x5605aba9d151 'void *const' const
| |   |   `-PointerType 0x5605aba9d150 'void *'
| |   |     `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument integral 'true'
| |   |-TemplateArgument integral 'false'
| |   |-CXXRecordDecl 0x5605abdca738 <col:5, col:12> col:12 implicit struct __cv_selector
| |   `-TypeAliasDecl 0x5605abdca828 <line:1762:7, col:28> col:13 referenced __type 'void *const const':'void *const'
| |     `-QualType 0x5605abdca7e1 'void *const const' const
| |       `-SubstTemplateTypeParmType 0x5605abdca7e0 'void *const' sugar typename depth 0 index 0 _Unqualified
| |         |-ClassTemplateSpecialization 0x5605abdca248 '__cv_selector'
| |         `-QualType 0x5605aba9d151 'void *const' const
| |           `-PointerType 0x5605aba9d150 'void *'
| |             `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc0f6a0 <line:1752:3, line:1754:36> line:1753:12 struct __cv_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abc0dfe8 <line:1752:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x5605abc0f950 <line:1753:5, col:12> col:12 implicit struct __cv_selector
| | `-TypeAliasDecl 0x5605abc0fa10 <line:1754:7, col:22> col:13 __type '_Unqualified'
| |   `-TemplateTypeParmType 0x5605abc0e040 '_Unqualified' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abc0dfe8 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc0fcc0 <line:1756:3, line:1758:45> line:1757:12 struct __cv_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'true'
| | |-TemplateTypeParmDecl 0x5605abc0faa8 <line:1756:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x5605abc0ff70 <line:1757:5, col:12> col:12 implicit struct __cv_selector
| | `-TypeAliasDecl 0x5605abc10030 <line:1758:7, col:31> col:13 __type 'volatile _Unqualified'
| |   `-QualType 0x5605abc0fb04 'volatile _Unqualified' volatile
| |     `-TemplateTypeParmType 0x5605abc0fb00 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc0faa8 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc102e0 <line:1760:3, line:1762:42> line:1761:12 struct __cv_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abc100c8 <line:1760:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x5605abc10698 <line:1761:5, col:12> col:12 implicit struct __cv_selector
| | `-TypeAliasDecl 0x5605abc10758 <line:1762:7, col:28> col:13 __type 'const _Unqualified'
| |   `-QualType 0x5605abc10121 'const _Unqualified' const
| |     `-TemplateTypeParmType 0x5605abc10120 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc100c8 '_Unqualified'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc10a00 <line:1764:3, line:1766:51> line:1765:12 struct __cv_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument integral 'true'
| | |-TemplateTypeParmDecl 0x5605abc107f0 <line:1764:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| | |-CXXRecordDecl 0x5605abc10cb0 <line:1765:5, col:12> col:12 implicit struct __cv_selector
| | `-TypeAliasDecl 0x5605abc10d70 <line:1766:7, col:37> col:13 __type 'const volatile _Unqualified'
| |   `-QualType 0x5605abc10845 'const volatile _Unqualified' const volatile
| |     `-TemplateTypeParmType 0x5605abc10840 '_Unqualified' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc107f0 '_Unqualified'
| |-ClassTemplateDecl 0x5605abc11310 <line:1768:3, line:1777:5> line:1771:11 __match_cv_qualifiers
| | |-TemplateTypeParmDecl 0x5605abc10e08 <line:1768:12, col:21> col:21 referenced typename depth 0 index 0 _Qualified
| | |-TemplateTypeParmDecl 0x5605abc10e98 <col:33, col:42> col:42 referenced typename depth 0 index 1 _Unqualified
| | |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | |-CXXRecordDecl 0x5605abc11260 <line:1771:5, line:1777:5> line:1771:11 class __match_cv_qualifiers definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc11c10 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abc11f38 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<_Unqualified, _IsConst, _IsVol>'
| | | | `-ElaboratedType 0x5605abc11ea0 '__cv_selector<_Unqualified, _IsConst, _IsVol>' sugar dependent
| | | |   `-TemplateSpecializationType 0x5605abc11e20 '__cv_selector<_Unqualified, _IsConst, _IsVol>' dependent
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type '_Unqualified':'type-parameter-0-1'
| | | |     | `-TemplateTypeParmType 0x5605abc10ef0 '_Unqualified' dependent depth 0 index 1
| | | |     |   `-TemplateTypeParm 0x5605abc10e98 '_Unqualified'
| | | |     |-TemplateArgument expr '_IsConst'
| | | |     | `-DeclRefExpr 0x5605abc11d10 <line:1773:51> 'bool' NonTypeTemplateParm 0x5605abc11028 '_IsConst' 'bool'
| | | |     `-TemplateArgument expr '_IsVol'
| | | |       `-DeclRefExpr 0x5605abc11d78 <col:61> 'bool' NonTypeTemplateParm 0x5605abc111a8 '_IsVol' 'bool'
| | | |-AccessSpecDecl 0x5605abc11fa0 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc120f8 <line:1776:7, col:40> col:13 __type 'typename __match::__type'
| | |   `-DependentNameType 0x5605abc12080 'typename __match::__type' dependent
| | |-ClassTemplateSpecializationDecl 0x5605abc254f8 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc25770 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abc25b48 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<unsigned int, false, false>':'std::__cv_selector<unsigned int, false, false>'
| | | | `-ElaboratedType 0x5605abc25ae0 '__cv_selector<unsigned int, false, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc25a60 '__cv_selector<unsigned int, false, false>' sugar
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type 'unsigned int'
| | | |     | `-SubstTemplateTypeParmType 0x5605abc25820 'unsigned int' sugar typename depth 0 index 1 _Unqualified
| | | |     |   |-ClassTemplateSpecialization 0x5605abc254f8 '__match_cv_qualifiers'
| | | |     |   `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc258d0 <line:1773:51> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc25870 <col:51> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc25860 <line:1773:51> 'bool' false
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc258f0 <col:61> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc258a8 <col:61> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc25898 <line:1773:61> 'bool' false
| | | |     `-RecordType 0x5605abc25a40 'std::__cv_selector<unsigned int, false, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | | |-AccessSpecDecl 0x5605abc25bb0 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc26188 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'unsigned int'
| | |   `-ElaboratedType 0x5605abc25fa0 'typename __match::__type' sugar
| | |     `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |       |-TypeAlias 0x5605abc25ef8 '__type'
| | |       `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | |         |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | |         `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x5605abc28bc8 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc28e40 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abc29218 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<unsigned char, false, false>':'std::__cv_selector<unsigned char, false, false>'
| | | | `-ElaboratedType 0x5605abc291b0 '__cv_selector<unsigned char, false, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc29130 '__cv_selector<unsigned char, false, false>' sugar
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type 'unsigned char'
| | | |     | `-SubstTemplateTypeParmType 0x5605abc28ef0 'unsigned char' sugar typename depth 0 index 1 _Unqualified
| | | |     |   |-ClassTemplateSpecialization 0x5605abc28bc8 '__match_cv_qualifiers'
| | | |     |   `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc28fa0 <line:1773:51> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc28f40 <col:51> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc28f30 <line:1773:51> 'bool' false
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc28fc0 <col:61> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc28f78 <col:61> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc28f68 <line:1773:61> 'bool' false
| | | |     `-RecordType 0x5605abc29110 'std::__cv_selector<unsigned char, false, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| | | |-AccessSpecDecl 0x5605abc29280 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc296c8 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'unsigned char'
| | |   `-ElaboratedType 0x5605abc29670 'typename __match::__type' sugar
| | |     `-TypedefType 0x5605abc29640 'std::__cv_selector<unsigned char, false, false>::__type' sugar
| | |       |-TypeAlias 0x5605abc295c8 '__type'
| | |       `-SubstTemplateTypeParmType 0x5605abc29580 'unsigned char' sugar typename depth 0 index 0 _Unqualified
| | |         |-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| | |         `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |-ClassTemplateSpecializationDecl 0x5605abbcfce8 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abbcff60 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abbd0338 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<unsigned short, false, false>':'std::__cv_selector<unsigned short, false, false>'
| | | | `-ElaboratedType 0x5605abbd02d0 '__cv_selector<unsigned short, false, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abbd0250 '__cv_selector<unsigned short, false, false>' sugar
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type 'unsigned short'
| | | |     | `-SubstTemplateTypeParmType 0x5605abbd0010 'unsigned short' sugar typename depth 0 index 1 _Unqualified
| | | |     |   |-ClassTemplateSpecialization 0x5605abbcfce8 '__match_cv_qualifiers'
| | | |     |   `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abbd00c0 <line:1773:51> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abbd0060 <col:51> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abbd0050 <line:1773:51> 'bool' false
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abbd00e0 <col:61> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abbd0098 <col:61> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abbd0088 <line:1773:61> 'bool' false
| | | |     `-RecordType 0x5605abbd0230 'std::__cv_selector<unsigned short, false, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| | | |-AccessSpecDecl 0x5605abc31bb8 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc31ff8 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'unsigned short'
| | |   `-ElaboratedType 0x5605abc31fa0 'typename __match::__type' sugar
| | |     `-TypedefType 0x5605abc31f70 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |       |-TypeAlias 0x5605abc31ef8 '__type'
| | |       `-SubstTemplateTypeParmType 0x5605abc31eb0 'unsigned short' sugar typename depth 0 index 0 _Unqualified
| | |         |-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| | |         `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x5605abc33a88 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char32_t'
| | | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc33d00 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abc343f8 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<unsigned int, false, false>':'std::__cv_selector<unsigned int, false, false>'
| | | | `-ElaboratedType 0x5605abc33f20 '__cv_selector<unsigned int, false, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc33ea0 '__cv_selector<unsigned int, false, false>' sugar
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type 'unsigned int'
| | | |     | `-SubstTemplateTypeParmType 0x5605abc33db0 'unsigned int' sugar typename depth 0 index 1 _Unqualified
| | | |     |   |-ClassTemplateSpecialization 0x5605abc33a88 '__match_cv_qualifiers'
| | | |     |   `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc33e60 <line:1773:51> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc33e00 <col:51> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc33df0 <line:1773:51> 'bool' false
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc33e80 <col:61> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc33e38 <col:61> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc33e28 <line:1773:61> 'bool' false
| | | |     `-RecordType 0x5605abc25a40 'std::__cv_selector<unsigned int, false, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | | |-AccessSpecDecl 0x5605abc34460 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc34558 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'unsigned int'
| | |   `-ElaboratedType 0x5605abc34500 'typename __match::__type' sugar
| | |     `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |       |-TypeAlias 0x5605abc25ef8 '__type'
| | |       `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | |         |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | |         `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x5605abc40478 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-TemplateArgument type 'int'
| | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc406f0 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abc40d88 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<int, false, false>':'std::__cv_selector<int, false, false>'
| | | | `-ElaboratedType 0x5605abc40d20 '__cv_selector<int, false, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc40ca0 '__cv_selector<int, false, false>' sugar
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type 'int'
| | | |     | `-SubstTemplateTypeParmType 0x5605abc407a0 'int' sugar typename depth 0 index 1 _Unqualified
| | | |     |   |-ClassTemplateSpecialization 0x5605abc40478 '__match_cv_qualifiers'
| | | |     |   `-BuiltinType 0x5605aba9ca70 'int'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc40850 <line:1773:51> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc407f0 <col:51> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc407e0 <line:1773:51> 'bool' false
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc40870 <col:61> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc40828 <col:61> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc40818 <line:1773:61> 'bool' false
| | | |     `-RecordType 0x5605abc40c80 'std::__cv_selector<int, false, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| | | |-AccessSpecDecl 0x5605abc40df0 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc41238 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'int'
| | |   `-ElaboratedType 0x5605abc411e0 'typename __match::__type' sugar
| | |     `-TypedefType 0x5605abc411b0 'std::__cv_selector<int, false, false>::__type' sugar
| | |       |-TypeAlias 0x5605abc41138 '__type'
| | |       `-SubstTemplateTypeParmType 0x5605abc410f0 'int' sugar typename depth 0 index 0 _Unqualified
| | |         |-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| | |         `-BuiltinType 0x5605aba9ca70 'int'
| | |-ClassTemplateSpecializationDecl 0x5605abc464f8 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-TemplateArgument type 'signed char'
| | | | `-BuiltinType 0x5605aba9ca30 'signed char'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc46770 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abc46b48 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<signed char, false, false>':'std::__cv_selector<signed char, false, false>'
| | | | `-ElaboratedType 0x5605abc46ae0 '__cv_selector<signed char, false, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc46a60 '__cv_selector<signed char, false, false>' sugar
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type 'signed char'
| | | |     | `-SubstTemplateTypeParmType 0x5605abc46820 'signed char' sugar typename depth 0 index 1 _Unqualified
| | | |     |   |-ClassTemplateSpecialization 0x5605abc464f8 '__match_cv_qualifiers'
| | | |     |   `-BuiltinType 0x5605aba9ca30 'signed char'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc468d0 <line:1773:51> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc46870 <col:51> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc46860 <line:1773:51> 'bool' false
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc468f0 <col:61> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc468a8 <col:61> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc46898 <line:1773:61> 'bool' false
| | | |     `-RecordType 0x5605abc46a40 'std::__cv_selector<signed char, false, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abc46918 '__cv_selector'
| | | |-AccessSpecDecl 0x5605abc46bb0 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc46ff8 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'signed char'
| | |   `-ElaboratedType 0x5605abc46fa0 'typename __match::__type' sugar
| | |     `-TypedefType 0x5605abc46f70 'std::__cv_selector<signed char, false, false>::__type' sugar
| | |       |-TypeAlias 0x5605abc46ef8 '__type'
| | |       `-SubstTemplateTypeParmType 0x5605abc46eb0 'signed char' sugar typename depth 0 index 0 _Unqualified
| | |         |-ClassTemplateSpecialization 0x5605abc46918 '__cv_selector'
| | |         `-BuiltinType 0x5605aba9ca30 'signed char'
| | |-ClassTemplateSpecializationDecl 0x5605abc4cf08 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-TemplateArgument type 'short'
| | | | `-BuiltinType 0x5605aba9ca50 'short'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc4d180 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| | | |-TypeAliasDecl 0x5605abc4d558 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<short, false, false>':'std::__cv_selector<short, false, false>'
| | | | `-ElaboratedType 0x5605abc4d4f0 '__cv_selector<short, false, false>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc4d470 '__cv_selector<short, false, false>' sugar
| | | |     |-name: '__cv_selector':'std::__cv_selector' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| | | |     |-TemplateArgument type 'short'
| | | |     | `-SubstTemplateTypeParmType 0x5605abc4d230 'short' sugar typename depth 0 index 1 _Unqualified
| | | |     |   |-ClassTemplateSpecialization 0x5605abc4cf08 '__match_cv_qualifiers'
| | | |     |   `-BuiltinType 0x5605aba9ca50 'short'
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc4d2e0 <line:1773:51> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc4d280 <col:51> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | | |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc4d270 <line:1773:51> 'bool' false
| | | |     |-TemplateArgument expr 'false'
| | | |     | `-ConstantExpr 0x5605abc4d300 <col:61> 'bool'
| | | |     |   |-value: Int 0
| | | |     |   `-SubstNonTypeTemplateParmExpr 0x5605abc4d2b8 <col:61> 'bool'
| | | |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | | |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| | | |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| | | |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| | | |     |     `-CXXBoolLiteralExpr 0x5605abc4d2a8 <line:1773:61> 'bool' false
| | | |     `-RecordType 0x5605abc4d450 'std::__cv_selector<short, false, false>'
| | | |       `-ClassTemplateSpecialization 0x5605abc4d328 '__cv_selector'
| | | |-AccessSpecDecl 0x5605abc4d5c0 <line:1775:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc4da08 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'short'
| | |   `-ElaboratedType 0x5605abc4d9b0 'typename __match::__type' sugar
| | |     `-TypedefType 0x5605abc4d980 'std::__cv_selector<short, false, false>::__type' sugar
| | |       |-TypeAlias 0x5605abc4d908 '__type'
| | |       `-SubstTemplateTypeParmType 0x5605abc4d8c0 'short' sugar typename depth 0 index 0 _Unqualified
| | |         |-ClassTemplateSpecialization 0x5605abc4d328 '__cv_selector'
| | |         `-BuiltinType 0x5605aba9ca50 'short'
| | `-ClassTemplateSpecializationDecl 0x5605abdc9e28 <line:1768:3, line:1777:5> line:1771:11 class __match_cv_qualifiers definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'void *const'
| |   | `-QualType 0x5605aba9d151 'void *const' const
| |   |   `-PointerType 0x5605aba9d150 'void *'
| |   |     `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument type 'void *const'
| |   | `-QualType 0x5605aba9d151 'void *const' const
| |   |   `-PointerType 0x5605aba9d150 'void *'
| |   |     `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument integral 'true'
| |   |-TemplateArgument integral 'false'
| |   |-CXXRecordDecl 0x5605abdca0a0 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
| |   |-TypeAliasDecl 0x5605abdca478 <line:1773:7, col:67> col:13 referenced __match '__cv_selector<void *const, true, false>':'std::__cv_selector<void *const, true, false>'
| |   | `-ElaboratedType 0x5605abdca410 '__cv_selector<void *const, true, false>' sugar
| |   |   `-TemplateSpecializationType 0x5605abdca390 '__cv_selector<void *const, true, false>' sugar
| |   |     |-name: '__cv_selector':'std::__cv_selector' qualified
| |   |     | `-ClassTemplateDecl 0x5605abc0dcc8 <line:1749:3, line:1750:12> col:12 __cv_selector
| |   |     |-TemplateArgument type 'void *const'
| |   |     | `-SubstTemplateTypeParmType 0x5605abdca150 'void *const' sugar typename depth 0 index 1 _Unqualified
| |   |     |   |-ClassTemplateSpecialization 0x5605abdc9e28 '__match_cv_qualifiers'
| |   |     |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     |     `-PointerType 0x5605aba9d150 'void *'
| |   |     |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   |     |-TemplateArgument expr 'true'
| |   |     | `-ConstantExpr 0x5605abdca200 <line:1773:51> 'bool'
| |   |     |   |-value: Int 1
| |   |     |   `-SubstNonTypeTemplateParmExpr 0x5605abdca1a0 <col:51> 'bool'
| |   |     |     |-NonTypeTemplateParmDecl 0x5605abc11028 <line:1769:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| |   |     |     | `-TemplateArgument <col:21, col:43> expr 'is_const<_Qualified>::value'
| |   |     |     |   `-DependentScopeDeclRefExpr 0x5605abc10fd8 <col:21, col:43> '<dependent type>' lvalue
| |   |     |     |     `-NestedNameSpecifier TypeSpec 'is_const<_Qualified>'
| |   |     |     `-CXXBoolLiteralExpr 0x5605abdca190 <line:1773:51> 'bool' true
| |   |     |-TemplateArgument expr 'false'
| |   |     | `-ConstantExpr 0x5605abdca220 <col:61> 'bool'
| |   |     |   |-value: Int 0
| |   |     |   `-SubstNonTypeTemplateParmExpr 0x5605abdca1d8 <col:61> 'bool'
| |   |     |     |-NonTypeTemplateParmDecl 0x5605abc111a8 <line:1770:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| |   |     |     | `-TemplateArgument <col:19, col:44> expr 'is_volatile<_Qualified>::value'
| |   |     |     |   `-DependentScopeDeclRefExpr 0x5605abc11158 <col:19, col:44> '<dependent type>' lvalue
| |   |     |     |     `-NestedNameSpecifier TypeSpec 'is_volatile<_Qualified>'
| |   |     |     `-CXXBoolLiteralExpr 0x5605abdca1c8 <line:1773:61> 'bool' false
| |   |     `-RecordType 0x5605abdca370 'std::__cv_selector<void *const, true, false>'
| |   |       `-ClassTemplateSpecialization 0x5605abdca248 '__cv_selector'
| |   |-AccessSpecDecl 0x5605abdca4e0 <line:1775:5, col:11> col:5 public
| |   `-TypeAliasDecl 0x5605abdca928 <line:1776:7, col:40> col:13 referenced __type 'typename __match::__type':'void *const'
| |     `-ElaboratedType 0x5605abdca8d0 'typename __match::__type' sugar
| |       `-TypedefType 0x5605abdca8a0 'std::__cv_selector<void *const, true, false>::__type' sugar
| |         |-TypeAlias 0x5605abdca828 '__type'
| |         `-QualType 0x5605abdca7e1 'void *const const' const
| |           `-SubstTemplateTypeParmType 0x5605abdca7e0 'void *const' sugar typename depth 0 index 0 _Unqualified
| |             |-ClassTemplateSpecialization 0x5605abdca248 '__cv_selector'
| |             `-QualType 0x5605aba9d151 'void *const' const
| |               `-PointerType 0x5605aba9d150 'void *'
| |                 `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplateDecl 0x5605abc122e8 <line:1780:3, line:1782:27> line:1781:12 __make_unsigned
| | |-TemplateTypeParmDecl 0x5605abc12190 <line:1780:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc12238 <line:1781:5, line:1782:27> line:1781:12 struct __make_unsigned definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc125a0 <col:5, col:12> col:12 implicit struct __make_unsigned
| | | `-TypeAliasDecl 0x5605abc12660 <line:1782:7, col:22> col:13 __type '_Tp'
| | |   `-TemplateTypeParmType 0x5605abc121e0 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abc12190 '_Tp'
| | |-ClassTemplateSpecialization 0x5605abc12720 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc12a88 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc137c8 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc13b38 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc13ea8 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc14218 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc21828 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc26468 '__make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc299a8 '__make_unsigned'
| | `-ClassTemplateSpecialization 0x5605abc322d8 '__make_unsigned'
| |-ClassTemplateSpecializationDecl 0x5605abc12720 <line:1784:3, line:1786:37> line:1785:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char'
| | | `-BuiltinType 0x5605aba9ca10 'char'
| | |-CXXRecordDecl 0x5605abc128f8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc129c0 <line:1786:7, col:31> col:13 __type 'unsigned char'
| |   `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |-ClassTemplateSpecializationDecl 0x5605abc12a88 <line:1788:3, line:1790:37> line:1789:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'signed char'
| | | `-BuiltinType 0x5605aba9ca30 'signed char'
| | |-CXXRecordDecl 0x5605abc13638 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc13700 <line:1790:7, col:31> col:13 __type 'unsigned char'
| |   `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |-ClassTemplateSpecializationDecl 0x5605abc137c8 <line:1792:3, line:1794:38> line:1793:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'short'
| | | `-BuiltinType 0x5605aba9ca50 'short'
| | |-CXXRecordDecl 0x5605abc139a8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc13a70 <line:1794:7, col:31> col:13 __type 'unsigned short'
| |   `-BuiltinType 0x5605aba9caf0 'unsigned short'
| |-ClassTemplateSpecializationDecl 0x5605abc13b38 <line:1796:3, line:1798:36> line:1797:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'int'
| | | `-BuiltinType 0x5605aba9ca70 'int'
| | |-CXXRecordDecl 0x5605abc13d18 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc13de0 <line:1798:7, col:31> col:13 __type 'unsigned int'
| |   `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |-ClassTemplateSpecializationDecl 0x5605abc13ea8 <line:1800:3, line:1802:37> line:1801:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'long'
| | | `-BuiltinType 0x5605aba9ca90 'long'
| | |-CXXRecordDecl 0x5605abc14088 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc14150 <line:1802:7, col:31> col:13 __type 'unsigned long'
| |   `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |-ClassTemplateSpecializationDecl 0x5605abc14218 <line:1804:3, line:1806:42> line:1805:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'long long'
| | | `-BuiltinType 0x5605aba9cab0 'long long'
| | |-CXXRecordDecl 0x5605abc143f8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc144c0 <line:1806:7, col:36> col:13 __type 'unsigned long long'
| |   `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| |-ClassTemplateDecl 0x5605abc14b18 <line:1834:3, line:1837:11> col:11 __make_unsigned_selector
| | |-TemplateTypeParmDecl 0x5605abc14768 <line:1834:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abc148f8 <line:1835:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | | `-TemplateArgument <col:19, col:37> expr 'is_integral<_Tp>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abc148a8 <col:19, col:37> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec 'is_integral<_Tp>'
| | |-NonTypeTemplateParmDecl 0x5605abc149b8 <line:1836:5, col:33> col:10 'bool' depth 0 index 2 _IsEnum
| | | `-TemplateArgument <col:20, col:33> expr '__is_enum(_Tp)'
| | |   `-TypeTraitExpr 0x5605abc14980 <col:20, col:33> 'bool' __is_enum
| | |     `-TemplateTypeParmType 0x5605abc147c0 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x5605abc14768 '_Tp'
| | |-CXXRecordDecl 0x5605abc14a68 <line:1837:5, col:11> col:11 class __make_unsigned_selector
| | |-ClassTemplateSpecializationDecl 0x5605abc21b28 <line:1873:3, line:1886:5> line:1874:11 class __make_unsigned_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-private '__make_unsigned_selector_base':'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abc21f90 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x5605abc22040 <line:1878:7, line:1879:40> line:1878:13 referenced _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-ElaboratedType 0x5605abc1b130 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc1b080 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |     |-name: '_List':'std::__make_unsigned_selector_base::_List' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| | | |     |-TemplateArgument type 'unsigned char'
| | | |     | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |     |-TemplateArgument type 'unsigned short'
| | | |     | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |     |-TemplateArgument type 'unsigned int'
| | | |     | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |     |-TemplateArgument type 'unsigned long'
| | | |     | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | |     |-TemplateArgument type 'unsigned long long'
| | | |     | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | |     `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |       `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | | |-TypeAliasDecl 0x5605abc24938 <line:1881:7, col:71> col:13 referenced __unsigned_type 'typename __select<sizeof(wchar_t), _UInts>::__type':'unsigned int'
| | | | `-ElaboratedType 0x5605abc248e0 'typename __select<sizeof(wchar_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0x5605abc248b0 'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>>::__type' sugar
| | | |     |-TypeAlias 0x5605abc24648 '__type'
| | | |     `-SubstTemplateTypeParmType 0x5605abc24600 'unsigned int' sugar typename depth 0 index 1 _Uint
| | | |       |-ClassTemplateSpecialization 0x5605abc23e68 '__select'
| | | |       `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-AccessSpecDecl 0x5605abc249a0 <line:1883:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc26288 <line:1884:7, line:1885:58> line:1884:13 referenced __type 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0x5605abc26230 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc26200 'std::__match_cv_qualifiers<wchar_t, unsigned int>::__type' sugar
| | |       |-TypeAlias 0x5605abc26188 '__type'
| | |       `-ElaboratedType 0x5605abc25fa0 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc25ef8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x5605abc26768 <line:1873:3, line:1886:5> line:1874:11 class __make_unsigned_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-private '__make_unsigned_selector_base':'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abc26af8 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x5605abc26ba8 <line:1878:7, line:1879:40> line:1878:13 referenced _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-ElaboratedType 0x5605abc1b130 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc1b080 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |     |-name: '_List':'std::__make_unsigned_selector_base::_List' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| | | |     |-TemplateArgument type 'unsigned char'
| | | |     | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |     |-TemplateArgument type 'unsigned short'
| | | |     | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |     |-TemplateArgument type 'unsigned int'
| | | |     | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |     |-TemplateArgument type 'unsigned long'
| | | |     | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | |     |-TemplateArgument type 'unsigned long long'
| | | |     | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | |     `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |       `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | | |-TypeAliasDecl 0x5605abc27d28 <line:1881:7, col:71> col:13 referenced __unsigned_type 'typename __select<sizeof(char8_t), _UInts>::__type':'unsigned char'
| | | | `-ElaboratedType 0x5605abc27cd0 'typename __select<sizeof(char8_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0x5605abc27ca0 'std::__make_unsigned_selector_base::__select<1, std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>>::__type' sugar
| | | |     |-TypeAlias 0x5605abc27c28 '__type'
| | | |     `-SubstTemplateTypeParmType 0x5605abc27be0 'unsigned char' sugar typename depth 0 index 1 _Uint
| | | |       |-ClassTemplateSpecialization 0x5605abc26dd8 '__select'
| | | |       `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-AccessSpecDecl 0x5605abc27d90 <line:1883:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc297c8 <line:1884:7, line:1885:58> line:1884:13 referenced __type 'typename __match_cv_qualifiers<char8_t, __unsigned_type>::__type':'unsigned char'
| | |   `-ElaboratedType 0x5605abc29770 'typename __match_cv_qualifiers<char8_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc29740 'std::__match_cv_qualifiers<char8_t, unsigned char>::__type' sugar
| | |       |-TypeAlias 0x5605abc296c8 '__type'
| | |       `-ElaboratedType 0x5605abc29670 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc29640 'std::__cv_selector<unsigned char, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc295c8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc29580 'unsigned char' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |-ClassTemplateSpecializationDecl 0x5605abbcd3a8 <line:1873:3, line:1886:5> line:1874:11 class __make_unsigned_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-private '__make_unsigned_selector_base':'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abbcd738 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x5605abbcd7e8 <line:1878:7, line:1879:40> line:1878:13 referenced _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-ElaboratedType 0x5605abc1b130 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc1b080 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |     |-name: '_List':'std::__make_unsigned_selector_base::_List' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| | | |     |-TemplateArgument type 'unsigned char'
| | | |     | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |     |-TemplateArgument type 'unsigned short'
| | | |     | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |     |-TemplateArgument type 'unsigned int'
| | | |     | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |     |-TemplateArgument type 'unsigned long'
| | | |     | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | |     |-TemplateArgument type 'unsigned long long'
| | | |     | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | |     `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |       `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | | |-TypeAliasDecl 0x5605abbcf3e8 <line:1881:7, col:71> col:13 referenced __unsigned_type 'typename __select<sizeof(char16_t), _UInts>::__type':'unsigned short'
| | | | `-ElaboratedType 0x5605abbcf2b0 'typename __select<sizeof(char16_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0x5605abbcf280 'std::__make_unsigned_selector_base::__select<2, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>>::__type' sugar
| | | |     |-TypeAlias 0x5605abbcf108 '__type'
| | | |     `-SubstTemplateTypeParmType 0x5605abbcf0c0 'unsigned short' sugar typename depth 0 index 1 _Uint
| | | |       |-ClassTemplateSpecialization 0x5605abbce850 '__select'
| | | |       `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-AccessSpecDecl 0x5605abbcf450 <line:1883:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc320f8 <line:1884:7, line:1885:58> line:1884:13 referenced __type 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type':'unsigned short'
| | |   `-ElaboratedType 0x5605abc320a0 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc32070 'std::__match_cv_qualifiers<char16_t, unsigned short>::__type' sugar
| | |       |-TypeAlias 0x5605abc31ff8 '__type'
| | |       `-ElaboratedType 0x5605abc31fa0 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc31f70 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc31ef8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc31eb0 'unsigned short' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |-ClassTemplateSpecializationDecl 0x5605abc325d8 <line:1873:3, line:1886:5> line:1874:11 class __make_unsigned_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-private '__make_unsigned_selector_base':'std::__make_unsigned_selector_base'
| | | |-TemplateArgument type 'char32_t'
| | | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abc32968 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x5605abc32a18 <line:1878:7, line:1879:40> line:1878:13 referenced _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | `-ElaboratedType 0x5605abc1b130 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |   `-TemplateSpecializationType 0x5605abc1b080 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | | |     |-name: '_List':'std::__make_unsigned_selector_base::_List' qualified
| | | |     | `-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| | | |     |-TemplateArgument type 'unsigned char'
| | | |     | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |     |-TemplateArgument type 'unsigned short'
| | | |     | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |     |-TemplateArgument type 'unsigned int'
| | | |     | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |     |-TemplateArgument type 'unsigned long'
| | | |     | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | |     |-TemplateArgument type 'unsigned long long'
| | | |     | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | |     `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | |       `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | | |-TypeAliasDecl 0x5605abc33188 <line:1881:7, col:71> col:13 referenced __unsigned_type 'typename __select<sizeof(char32_t), _UInts>::__type':'unsigned int'
| | | | `-ElaboratedType 0x5605abc33130 'typename __select<sizeof(char32_t), _UInts>::__type' sugar
| | | |   `-TypedefType 0x5605abc248b0 'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>>::__type' sugar
| | | |     |-TypeAlias 0x5605abc24648 '__type'
| | | |     `-SubstTemplateTypeParmType 0x5605abc24600 'unsigned int' sugar typename depth 0 index 1 _Uint
| | | |       |-ClassTemplateSpecialization 0x5605abc23e68 '__select'
| | | |       `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-AccessSpecDecl 0x5605abc331f0 <line:1883:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc34658 <line:1884:7, line:1885:58> line:1884:13 referenced __type 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0x5605abc34600 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc345d0 'std::__match_cv_qualifiers<char32_t, unsigned int>::__type' sugar
| | |       |-TypeAlias 0x5605abc34558 '__type'
| | |       `-ElaboratedType 0x5605abc34500 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc25ef8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x5605abc3d620 <line:1839:3, line:1848:5> line:1840:11 class __make_unsigned_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | |-TemplateArgument integral 'true'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc3d940 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x5605abc3dd38 <line:1842:7, line:1843:50> line:1842:13 referenced __unsigned_type 'typename __make_unsigned<__remove_cv_t<wchar_t>>::__type':'unsigned int'
| | | | `-ElaboratedType 0x5605abc3dce0 'typename __make_unsigned<__remove_cv_t<wchar_t>>::__type' sugar
| | | |   `-TypedefType 0x5605abc3dcb0 'std::__make_unsigned<wchar_t>::__type' sugar
| | | |     |-TypeAlias 0x5605abc263a8 '__type'
| | | |     `-ElaboratedType 0x5605abc26330 'typename __make_unsigned_selector<wchar_t, false, true>::__type' sugar
| | | |       `-TypedefType 0x5605abc26300 'std::__make_unsigned_selector<wchar_t, false, true>::__type' sugar
| | | |         |-TypeAlias 0x5605abc26288 '__type'
| | | |         `-ElaboratedType 0x5605abc26230 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | | |           `-TypedefType 0x5605abc26200 'std::__match_cv_qualifiers<wchar_t, unsigned int>::__type' sugar
| | | |             |-TypeAlias 0x5605abc26188 '__type'
| | | |             `-ElaboratedType 0x5605abc25fa0 'typename __match::__type' sugar
| | | |               `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | | |                 |-TypeAlias 0x5605abc25ef8 '__type'
| | | |                 `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | | |                   |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | | |                   `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-AccessSpecDecl 0x5605abc3dda0 <line:1845:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc3e1d8 <line:1846:7, line:1847:58> line:1846:13 referenced __type 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type':'unsigned int'
| | |   `-ElaboratedType 0x5605abc3e180 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc26200 'std::__match_cv_qualifiers<wchar_t, unsigned int>::__type' sugar
| | |       |-TypeAlias 0x5605abc26188 '__type'
| | |       `-ElaboratedType 0x5605abc25fa0 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc25ef8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-ClassTemplateSpecializationDecl 0x5605abc42808 <line:1839:3, line:1848:5> line:1840:11 class __make_unsigned_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | |-TemplateArgument integral 'true'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc43978 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x5605abc43d68 <line:1842:7, line:1843:50> line:1842:13 referenced __unsigned_type 'typename __make_unsigned<__remove_cv_t<char8_t>>::__type':'unsigned char'
| | | | `-ElaboratedType 0x5605abc43d10 'typename __make_unsigned<__remove_cv_t<char8_t>>::__type' sugar
| | | |   `-TypedefType 0x5605abc43ce0 'std::__make_unsigned<char8_t>::__type' sugar
| | | |     |-TypeAlias 0x5605abc298e8 '__type'
| | | |     `-ElaboratedType 0x5605abc29870 'typename __make_unsigned_selector<char8_t, false, true>::__type' sugar
| | | |       `-TypedefType 0x5605abc29840 'std::__make_unsigned_selector<char8_t, false, true>::__type' sugar
| | | |         |-TypeAlias 0x5605abc297c8 '__type'
| | | |         `-ElaboratedType 0x5605abc29770 'typename __match_cv_qualifiers<char8_t, __unsigned_type>::__type' sugar
| | | |           `-TypedefType 0x5605abc29740 'std::__match_cv_qualifiers<char8_t, unsigned char>::__type' sugar
| | | |             |-TypeAlias 0x5605abc296c8 '__type'
| | | |             `-ElaboratedType 0x5605abc29670 'typename __match::__type' sugar
| | | |               `-TypedefType 0x5605abc29640 'std::__cv_selector<unsigned char, false, false>::__type' sugar
| | | |                 |-TypeAlias 0x5605abc295c8 '__type'
| | | |                 `-SubstTemplateTypeParmType 0x5605abc29580 'unsigned char' sugar typename depth 0 index 0 _Unqualified
| | | |                   |-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| | | |                   `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-AccessSpecDecl 0x5605abc43dd0 <line:1845:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc44208 <line:1846:7, line:1847:58> line:1846:13 referenced __type 'typename __match_cv_qualifiers<char8_t, __unsigned_type>::__type':'unsigned char'
| | |   `-ElaboratedType 0x5605abc441b0 'typename __match_cv_qualifiers<char8_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc29740 'std::__match_cv_qualifiers<char8_t, unsigned char>::__type' sugar
| | |       |-TypeAlias 0x5605abc296c8 '__type'
| | |       `-ElaboratedType 0x5605abc29670 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc29640 'std::__cv_selector<unsigned char, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc295c8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc29580 'unsigned char' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |-ClassTemplateSpecializationDecl 0x5605abc49bf8 <line:1839:3, line:1848:5> line:1840:11 class __make_unsigned_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | |-TemplateArgument integral 'true'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc49f20 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| | | |-TypeAliasDecl 0x5605abc4a318 <line:1842:7, line:1843:50> line:1842:13 referenced __unsigned_type 'typename __make_unsigned<__remove_cv_t<char16_t>>::__type':'unsigned short'
| | | | `-ElaboratedType 0x5605abc4a2c0 'typename __make_unsigned<__remove_cv_t<char16_t>>::__type' sugar
| | | |   `-TypedefType 0x5605abc4a290 'std::__make_unsigned<char16_t>::__type' sugar
| | | |     |-TypeAlias 0x5605abc32218 '__type'
| | | |     `-ElaboratedType 0x5605abc321a0 'typename __make_unsigned_selector<char16_t, false, true>::__type' sugar
| | | |       `-TypedefType 0x5605abc32170 'std::__make_unsigned_selector<char16_t, false, true>::__type' sugar
| | | |         |-TypeAlias 0x5605abc320f8 '__type'
| | | |         `-ElaboratedType 0x5605abc320a0 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | | |           `-TypedefType 0x5605abc32070 'std::__match_cv_qualifiers<char16_t, unsigned short>::__type' sugar
| | | |             |-TypeAlias 0x5605abc31ff8 '__type'
| | | |             `-ElaboratedType 0x5605abc31fa0 'typename __match::__type' sugar
| | | |               `-TypedefType 0x5605abc31f70 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | | |                 |-TypeAlias 0x5605abc31ef8 '__type'
| | | |                 `-SubstTemplateTypeParmType 0x5605abc31eb0 'unsigned short' sugar typename depth 0 index 0 _Unqualified
| | | |                   |-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| | | |                   `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-AccessSpecDecl 0x5605abc4a380 <line:1845:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc4a7b8 <line:1846:7, line:1847:58> line:1846:13 referenced __type 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type':'unsigned short'
| | |   `-ElaboratedType 0x5605abc4a760 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc32070 'std::__match_cv_qualifiers<char16_t, unsigned short>::__type' sugar
| | |       |-TypeAlias 0x5605abc31ff8 '__type'
| | |       `-ElaboratedType 0x5605abc31fa0 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc31f70 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc31ef8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc31eb0 'unsigned short' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | `-ClassTemplateSpecializationDecl 0x5605abc4fa28 <line:1839:3, line:1848:5> line:1840:11 class __make_unsigned_selector definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'char32_t'
| |   | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| |   |-TemplateArgument integral 'true'
| |   |-TemplateArgument integral 'false'
| |   |-CXXRecordDecl 0x5605abc4fd50 <col:5, col:11> col:11 implicit class __make_unsigned_selector
| |   |-TypeAliasDecl 0x5605abc50148 <line:1842:7, line:1843:50> line:1842:13 referenced __unsigned_type 'typename __make_unsigned<__remove_cv_t<char32_t>>::__type':'unsigned int'
| |   | `-ElaboratedType 0x5605abc500f0 'typename __make_unsigned<__remove_cv_t<char32_t>>::__type' sugar
| |   |   `-TypedefType 0x5605abc500c0 'std::__make_unsigned<char32_t>::__type' sugar
| |   |     |-TypeAlias 0x5605abc34778 '__type'
| |   |     `-ElaboratedType 0x5605abc34700 'typename __make_unsigned_selector<char32_t, false, true>::__type' sugar
| |   |       `-TypedefType 0x5605abc346d0 'std::__make_unsigned_selector<char32_t, false, true>::__type' sugar
| |   |         |-TypeAlias 0x5605abc34658 '__type'
| |   |         `-ElaboratedType 0x5605abc34600 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |   |           `-TypedefType 0x5605abc345d0 'std::__match_cv_qualifiers<char32_t, unsigned int>::__type' sugar
| |   |             |-TypeAlias 0x5605abc34558 '__type'
| |   |             `-ElaboratedType 0x5605abc34500 'typename __match::__type' sugar
| |   |               `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |   |                 |-TypeAlias 0x5605abc25ef8 '__type'
| |   |                 `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| |   |                   |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| |   |                   `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |   |-AccessSpecDecl 0x5605abc501b0 <line:1845:5, col:11> col:5 public
| |   `-TypeAliasDecl 0x5605abc505e8 <line:1846:7, line:1847:58> line:1846:13 referenced __type 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type':'unsigned int'
| |     `-ElaboratedType 0x5605abc50590 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |       `-TypedefType 0x5605abc345d0 'std::__match_cv_qualifiers<char32_t, unsigned int>::__type' sugar
| |         |-TypeAlias 0x5605abc34558 '__type'
| |         `-ElaboratedType 0x5605abc34500 'typename __match::__type' sugar
| |           `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |             |-TypeAlias 0x5605abc25ef8 '__type'
| |             `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| |               |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| |               `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc15050 <line:1839:3, line:1848:5> line:1840:11 class __make_unsigned_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abc14e38 <line:1839:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc15300 <line:1840:5, col:11> col:11 implicit class __make_unsigned_selector
| | |-TypeAliasDecl 0x5605abc15c08 <line:1842:7, line:1843:50> line:1842:13 referenced __unsigned_type 'typename __make_unsigned<__remove_cv_t<_Tp>>::__type'
| | | `-DependentNameType 0x5605abc156f0 'typename __make_unsigned<__remove_cv_t<_Tp>>::__type' dependent
| | |-AccessSpecDecl 0x5605abc15c70 <line:1845:5, col:11> col:5 public
| | `-TypeAliasDecl 0x5605abc16128 <line:1846:7, line:1847:58> line:1846:13 __type 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type'
| |   `-DependentNameType 0x5605abc160b0 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type' dependent
| |-CXXRecordDecl 0x5605abc161c0 <line:1850:3, line:1870:3> line:1850:9 referenced class __make_unsigned_selector_base definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abc16300 <col:3, col:9> col:9 implicit class __make_unsigned_selector_base
| | |-AccessSpecDecl 0x5605abc163b0 <line:1852:3, col:12> col:3 protected
| | |-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| | | |-TemplateTypeParmDecl 0x5605abc163e0 <col:14> col:25 typename depth 0 index 0 ...
| | | |-CXXRecordDecl 0x5605abc16488 <col:27, col:42> col:34 struct _List definition
| | | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | `-CXXRecordDecl 0x5605abc16850 <col:27, col:34> col:34 implicit struct _List
| | | |-ClassTemplateSpecializationDecl 0x5605abc1af70 <line:1855:5, line:1857:55> line:1856:14 struct _List definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '_List<unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack '<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | | |-TemplateArgument type 'unsigned char'
| | | | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | | | |-TemplateArgument type 'unsigned short'
| | | | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |   `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | | |-CXXRecordDecl 0x5605abc20dd0 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x5605abc20e80 <line:1857:9, col:52> col:33 referenced __size 'const size_t':'const unsigned long' implicit_instantiation static inline constexpr cinit
| | | |   |-value: Int 1
| | | |   `-UnaryExprOrTypeTraitExpr 0x5605abc20fa0 <col:42, col:52> 'unsigned long' sizeof 'unsigned char'
| | | |-ClassTemplateSpecializationDecl 0x5605abc1c298 <line:1855:5, line:1857:55> line:1856:14 struct _List definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '_List<unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack '<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | | |-TemplateArgument type 'unsigned short'
| | | | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |   `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | | |-CXXRecordDecl 0x5605abc1de48 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x5605abc1def8 <line:1857:9, col:52> col:33 referenced __size 'const size_t':'const unsigned long' implicit_instantiation static inline constexpr cinit
| | | |   |-value: Int 2
| | | |   `-UnaryExprOrTypeTraitExpr 0x5605abc22fc0 <col:42, col:52> 'unsigned long' sizeof 'unsigned short'
| | | |-ClassTemplateSpecializationDecl 0x5605abc1c968 <line:1855:5, line:1857:55> line:1856:14 struct _List definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '_List<unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned long, unsigned long long>'
| | | | |-TemplateArgument pack '<unsigned int, unsigned long, unsigned long long>'
| | | | | |-TemplateArgument type 'unsigned int'
| | | | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |   `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | | |-CXXRecordDecl 0x5605abc1dcd0 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x5605abc1dd80 <line:1857:9, col:52> col:33 referenced __size 'const size_t':'const unsigned long' implicit_instantiation static inline constexpr cinit
| | | |   |-value: Int 4
| | | |   `-UnaryExprOrTypeTraitExpr 0x5605abc23ca0 <col:42, col:52> 'unsigned long' sizeof 'unsigned int'
| | | |-ClassTemplateSpecializationDecl 0x5605abc1cf68 <line:1855:5, line:1857:55> line:1856:14 struct _List definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '_List<unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned long long>'
| | | | |-TemplateArgument pack '<unsigned long, unsigned long long>'
| | | | | |-TemplateArgument type 'unsigned long'
| | | | | | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |   `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | | |-CXXRecordDecl 0x5605abc1db58 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x5605abc1dc08 <line:1857:9, col:33> col:33 __size 'const size_t':'const unsigned long' implicit_instantiation static constexpr
| | | |-ClassTemplateSpecializationDecl 0x5605abc1d3c8 <line:1855:5, line:1857:55> line:1856:14 struct _List definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '_List<>':'std::__make_unsigned_selector_base::_List<>'
| | | | |-TemplateArgument pack '<unsigned long long>'
| | | | | `-TemplateArgument type 'unsigned long long'
| | | | |   `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | | | |-CXXRecordDecl 0x5605abc1d9e0 <col:7, col:14> col:14 implicit struct _List
| | | | `-VarDecl 0x5605abc1da90 <line:1857:9, col:33> col:33 __size 'const size_t':'const unsigned long' implicit_instantiation static constexpr
| | | `-ClassTemplateSpecializationDecl 0x5605abc1d6f0 <line:1853:5, col:42> col:34 struct _List definition implicit_instantiation
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   |-TemplateArgument pack '<>'
| | |   `-CXXRecordDecl 0x5605abc1d8e8 <col:27, col:34> col:34 implicit struct _List
| | |-ClassTemplatePartialSpecializationDecl 0x5605abc17518 <line:1855:5, line:1857:55> line:1856:14 struct _List definition explicit_specialization
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '_List<_Up...>'
| | | |-TemplateArgument pack '<type-parameter-0-0, type-parameter-0-1...>'
| | | | |-TemplateArgument type 'type-parameter-0-0'
| | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | `-TemplateArgument type 'type-parameter-0-1...'
| | | |   `-PackExpansionType 0x5605abbd18b0 'type-parameter-0-1...' dependent
| | | |     `-TemplateTypeParmType 0x5605abb7cff0 'type-parameter-0-1' dependent contains_unexpanded_pack depth 0 index 1 pack
| | | |-TemplateTypeParmDecl 0x5605abc16918 <line:1855:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abc169a8 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Up
| | | |-CXXRecordDecl 0x5605abc17938 <line:1856:7, col:14> col:14 implicit struct _List
| | | `-VarDecl 0x5605abc179f8 <line:1857:9, col:52> col:33 __size 'const size_t':'const unsigned long' static inline constexpr cinit
| | |   `-UnaryExprOrTypeTraitExpr 0x5605abc17a70 <col:42, col:52> 'unsigned long' sizeof '_Tp'
| | |-ClassTemplateDecl 0x5605abc17e20 <line:1859:5, line:1860:14> col:14 __select
| | | |-NonTypeTemplateParmDecl 0x5605abc17ad8 <line:1859:14, col:21> col:21 referenced 'size_t':'unsigned long' depth 0 index 0 _Sz
| | | |-TemplateTypeParmDecl 0x5605abc17b38 <col:26, col:35> col:35 typename depth 0 index 1 _Tp
| | | |-NonTypeTemplateParmDecl 0x5605abc17cc0 <col:40, col:66> col:45 'bool' depth 0 index 2
| | | | `-TemplateArgument <col:47, col:66> expr '(_Sz <= _Tp::__size)'
| | | |   `-ParenExpr 0x5605abc17c88 <col:47, col:66> '<dependent type>'
| | | |     `-BinaryOperator 0x5605abc17c68 <col:48, col:60> '<dependent type>' '<='
| | | |       |-DeclRefExpr 0x5605abc17bc0 <col:48> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abc17ad8 '_Sz' 'size_t':'unsigned long'
| | | |       `-DependentScopeDeclRefExpr 0x5605abc17c30 <col:55, col:60> '<dependent type>' lvalue
| | | |         `-NestedNameSpecifier TypeSpec '_Tp'
| | | |-CXXRecordDecl 0x5605abc17d70 <line:1860:7, col:14> col:14 struct __select
| | | |-ClassTemplateSpecializationDecl 0x5605abc22268 <line:1866:5, line:1869:9> line:1867:14 struct __select definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '__select<4UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long>>':'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>>'
| | | | |-TemplateArgument integral '4UL'
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | | `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |   `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | | | |-TemplateArgument integral 'false'
| | | | `-CXXRecordDecl 0x5605abc247f0 <col:7, col:14> col:14 implicit struct __select
| | | |-ClassTemplateSpecializationDecl 0x5605abc230d8 <line:1866:5, line:1869:9> line:1867:14 struct __select definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '__select<4UL, _List<unsigned int, unsigned long, unsigned long long>>':'std::__make_unsigned_selector_base::__select<4, std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>>'
| | | | |-TemplateArgument integral '4UL'
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | | `-RecordType 0x5605abc1c390 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |   `-ClassTemplateSpecialization 0x5605abc1c298 '_List'
| | | | |-TemplateArgument integral 'false'
| | | | `-CXXRecordDecl 0x5605abc246f8 <col:7, col:14> col:14 implicit struct __select
| | | |-ClassTemplateSpecializationDecl 0x5605abc23e68 <line:1862:5, line:1864:31> line:1863:14 struct __select definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-TemplateArgument integral '4UL'
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>'
| | | | | `-RecordType 0x5605abc1ca60 'std::__make_unsigned_selector_base::_List<unsigned int, unsigned long, unsigned long long>'
| | | | |   `-ClassTemplateSpecialization 0x5605abc1c968 '_List'
| | | | |-TemplateArgument integral 'true'
| | | | |-CXXRecordDecl 0x5605abc24550 <col:7, col:14> col:14 implicit struct __select
| | | | `-TypeAliasDecl 0x5605abc24648 <line:1864:9, col:24> col:15 referenced __type 'unsigned int'
| | | |   `-SubstTemplateTypeParmType 0x5605abc24600 'unsigned int' sugar typename depth 0 index 1 _Uint
| | | |     |-ClassTemplateSpecialization 0x5605abc23e68 '__select'
| | | |     `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-ClassTemplateSpecializationDecl 0x5605abc26dd8 <line:1862:5, line:1864:31> line:1863:14 struct __select definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-TemplateArgument integral '1UL'
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | | `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |   `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | | | |-TemplateArgument integral 'true'
| | | | |-CXXRecordDecl 0x5605abc27b30 <col:7, col:14> col:14 implicit struct __select
| | | | `-TypeAliasDecl 0x5605abc27c28 <line:1864:9, col:24> col:15 referenced __type 'unsigned char'
| | | |   `-SubstTemplateTypeParmType 0x5605abc27be0 'unsigned char' sugar typename depth 0 index 1 _Uint
| | | |     |-ClassTemplateSpecialization 0x5605abc26dd8 '__select'
| | | |     `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-ClassTemplateSpecializationDecl 0x5605abbcda18 <line:1866:5, line:1869:9> line:1867:14 struct __select definition implicit_instantiation
| | | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-public '__select<2UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long>>':'std::__make_unsigned_selector_base::__select<2, std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>>'
| | | | |-TemplateArgument integral '2UL'
| | | | |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | | `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | | |   `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | | | |-TemplateArgument integral 'false'
| | | | `-CXXRecordDecl 0x5605abbcf1b8 <col:7, col:14> col:14 implicit struct __select
| | | `-ClassTemplateSpecializationDecl 0x5605abbce850 <line:1862:5, line:1864:31> line:1863:14 struct __select definition implicit_instantiation
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   |-TemplateArgument integral '2UL'
| | |   |-TemplateArgument type 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | |   | `-RecordType 0x5605abc1c390 'std::__make_unsigned_selector_base::_List<unsigned short, unsigned int, unsigned long, unsigned long long>'
| | |   |   `-ClassTemplateSpecialization 0x5605abc1c298 '_List'
| | |   |-TemplateArgument integral 'true'
| | |   |-CXXRecordDecl 0x5605abbcf010 <col:7, col:14> col:14 implicit struct __select
| | |   `-TypeAliasDecl 0x5605abbcf108 <line:1864:9, col:24> col:15 referenced __type 'unsigned short'
| | |     `-SubstTemplateTypeParmType 0x5605abbcf0c0 'unsigned short' sugar typename depth 0 index 1 _Uint
| | |       |-ClassTemplateSpecialization 0x5605abbce850 '__select'
| | |       `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |-ClassTemplatePartialSpecializationDecl 0x5605abc196f0 <line:1862:5, line:1864:31> line:1863:14 struct __select definition explicit_specialization
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument expr '_Sz'
| | | | `-DeclRefExpr 0x5605abc182f0 <col:23> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abc18148 '_Sz' 'size_t':'unsigned long'
| | | |-TemplateArgument type '_List<type-parameter-0-1, type-parameter-0-2...>'
| | | | `-TemplateSpecializationType 0x5605abc183d0 '_List<type-parameter-0-1, type-parameter-0-2...>' dependent
| | | |   |-name: 'std::__make_unsigned_selector_base::_List'
| | | |   | `-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| | | |   `-TemplateArgument pack '<type-parameter-0-1, type-parameter-0-2...>'
| | | |     |-TemplateArgument type 'type-parameter-0-1'
| | | |     | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |     `-TemplateArgument type 'type-parameter-0-2...'
| | | |       `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| | | |         `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| | | |-TemplateArgument integral 'true'
| | | |-NonTypeTemplateParmDecl 0x5605abc18148 <line:1862:14, col:21> col:21 referenced 'size_t':'unsigned long' depth 0 index 0 _Sz
| | | |-TemplateTypeParmDecl 0x5605abc181a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Uint
| | | |-TemplateTypeParmDecl 0x5605abc18238 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _UInts
| | | |-CXXRecordDecl 0x5605abc19980 <line:1863:7, col:14> col:14 implicit struct __select
| | | `-TypeAliasDecl 0x5605abc19a40 <line:1864:9, col:24> col:15 __type '_Uint'
| | |   `-TemplateTypeParmType 0x5605abc18200 '_Uint' dependent depth 0 index 1
| | |     `-TemplateTypeParm 0x5605abc181a8 '_Uint'
| | `-ClassTemplatePartialSpecializationDecl 0x5605abc19f80 <line:1866:5, line:1869:9> line:1867:14 struct __select definition explicit_specialization
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__select<_Sz, _List<_UInts...>>'
| |   |-TemplateArgument expr '_Sz'
| |   | `-DeclRefExpr 0x5605abc19c90 <col:23> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abc19ae8 '_Sz' 'size_t':'unsigned long'
| |   |-TemplateArgument type '_List<type-parameter-0-1, type-parameter-0-2...>'
| |   | `-TemplateSpecializationType 0x5605abc183d0 '_List<type-parameter-0-1, type-parameter-0-2...>' dependent
| |   |   |-name: 'std::__make_unsigned_selector_base::_List'
| |   |   | `-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| |   |   `-TemplateArgument pack '<type-parameter-0-1, type-parameter-0-2...>'
| |   |     |-TemplateArgument type 'type-parameter-0-1'
| |   |     | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   |     `-TemplateArgument type 'type-parameter-0-2...'
| |   |       `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| |   |         `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| |   |-TemplateArgument integral 'false'
| |   |-NonTypeTemplateParmDecl 0x5605abc19ae8 <line:1866:14, col:21> col:21 referenced 'size_t':'unsigned long' depth 0 index 0 _Sz
| |   |-TemplateTypeParmDecl 0x5605abc19b48 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Uint
| |   |-TemplateTypeParmDecl 0x5605abc19bd8 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _UInts
| |   `-CXXRecordDecl 0x5605abc1a740 <line:1867:7, col:14> col:14 implicit struct __select
| |-ClassTemplatePartialSpecializationDecl 0x5605abc1aa30 <line:1873:3, line:1886:5> line:1874:11 class __make_unsigned_selector definition explicit_specialization
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-private '__make_unsigned_selector_base':'std::__make_unsigned_selector_base'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'true'
| | |-TemplateTypeParmDecl 0x5605abc1a820 <line:1873:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc1ad58 <line:1874:5, col:11> col:11 implicit class __make_unsigned_selector
| | |-TypeAliasDecl 0x5605abc1b1e8 <line:1878:7, line:1879:40> line:1878:13 referenced _UInts '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>':'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | | `-ElaboratedType 0x5605abc1b130 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | |   `-TemplateSpecializationType 0x5605abc1b080 '_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>' sugar
| | |     |-name: '_List':'std::__make_unsigned_selector_base::_List' qualified
| | |     | `-ClassTemplateDecl 0x5605abc16538 <line:1853:5, col:42> col:34 _List
| | |     |-TemplateArgument type 'unsigned char'
| | |     | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |     |-TemplateArgument type 'unsigned short'
| | |     | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |     |-TemplateArgument type 'unsigned int'
| | |     | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |     |-TemplateArgument type 'unsigned long'
| | |     | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | |     |-TemplateArgument type 'unsigned long long'
| | |     | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | |     `-RecordType 0x5605abc1b060 'std::__make_unsigned_selector_base::_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>'
| | |       `-ClassTemplateSpecialization 0x5605abc1af70 '_List'
| | |-TypeAliasDecl 0x5605abc21278 <line:1881:7, col:71> col:13 referenced __unsigned_type 'typename __select<sizeof(_Tp), _UInts>::__type'
| | | `-DependentNameType 0x5605abc21200 'typename __select<sizeof(_Tp), _UInts>::__type' dependent
| | |-AccessSpecDecl 0x5605abc212e0 <line:1883:5, col:11> col:5 public
| | `-TypeAliasDecl 0x5605abc21768 <line:1884:7, line:1885:58> line:1884:13 __type 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type'
| |   `-DependentNameType 0x5605abc216f0 'typename __match_cv_qualifiers<_Tp, __unsigned_type>::__type' dependent
| |-ClassTemplateSpecializationDecl 0x5605abc21828 <line:1892:3, line:1897:5> line:1893:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'wchar_t'
| | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | |-CXXRecordDecl 0x5605abc21a08 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc263a8 <line:1895:7, line:1896:61> line:1895:13 referenced __type 'typename __make_unsigned_selector<wchar_t, false, true>::__type':'unsigned int'
| |   `-ElaboratedType 0x5605abc26330 'typename __make_unsigned_selector<wchar_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc26300 'std::__make_unsigned_selector<wchar_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc26288 '__type'
| |       `-ElaboratedType 0x5605abc26230 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc26200 'std::__match_cv_qualifiers<wchar_t, unsigned int>::__type' sugar
| |           |-TypeAlias 0x5605abc26188 '__type'
| |           `-ElaboratedType 0x5605abc25fa0 'typename __match::__type' sugar
| |             `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |               |-TypeAlias 0x5605abc25ef8 '__type'
| |               `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| |                 |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| |                 `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |-ClassTemplateSpecializationDecl 0x5605abc26468 <line:1900:3, line:1905:5> line:1901:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char8_t'
| | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | |-CXXRecordDecl 0x5605abc26648 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc298e8 <line:1903:7, line:1904:61> line:1903:13 referenced __type 'typename __make_unsigned_selector<char8_t, false, true>::__type':'unsigned char'
| |   `-ElaboratedType 0x5605abc29870 'typename __make_unsigned_selector<char8_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc29840 'std::__make_unsigned_selector<char8_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc297c8 '__type'
| |       `-ElaboratedType 0x5605abc29770 'typename __match_cv_qualifiers<char8_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc29740 'std::__match_cv_qualifiers<char8_t, unsigned char>::__type' sugar
| |           |-TypeAlias 0x5605abc296c8 '__type'
| |           `-ElaboratedType 0x5605abc29670 'typename __match::__type' sugar
| |             `-TypedefType 0x5605abc29640 'std::__cv_selector<unsigned char, false, false>::__type' sugar
| |               |-TypeAlias 0x5605abc295c8 '__type'
| |               `-SubstTemplateTypeParmType 0x5605abc29580 'unsigned char' sugar typename depth 0 index 0 _Unqualified
| |                 |-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| |                 `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |-ClassTemplateSpecializationDecl 0x5605abc299a8 <line:1908:3, line:1913:5> line:1909:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char16_t'
| | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | |-CXXRecordDecl 0x5605abbcd288 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc32218 <line:1911:7, line:1912:62> line:1911:13 referenced __type 'typename __make_unsigned_selector<char16_t, false, true>::__type':'unsigned short'
| |   `-ElaboratedType 0x5605abc321a0 'typename __make_unsigned_selector<char16_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc32170 'std::__make_unsigned_selector<char16_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc320f8 '__type'
| |       `-ElaboratedType 0x5605abc320a0 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc32070 'std::__match_cv_qualifiers<char16_t, unsigned short>::__type' sugar
| |           |-TypeAlias 0x5605abc31ff8 '__type'
| |           `-ElaboratedType 0x5605abc31fa0 'typename __match::__type' sugar
| |             `-TypedefType 0x5605abc31f70 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| |               |-TypeAlias 0x5605abc31ef8 '__type'
| |               `-SubstTemplateTypeParmType 0x5605abc31eb0 'unsigned short' sugar typename depth 0 index 0 _Unqualified
| |                 |-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| |                 `-BuiltinType 0x5605aba9caf0 'unsigned short'
| |-ClassTemplateSpecializationDecl 0x5605abc322d8 <line:1915:3, line:1920:5> line:1916:12 struct __make_unsigned definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char32_t'
| | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | |-CXXRecordDecl 0x5605abc324b8 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypeAliasDecl 0x5605abc34778 <line:1918:7, line:1919:62> line:1918:13 referenced __type 'typename __make_unsigned_selector<char32_t, false, true>::__type':'unsigned int'
| |   `-ElaboratedType 0x5605abc34700 'typename __make_unsigned_selector<char32_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc346d0 'std::__make_unsigned_selector<char32_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc34658 '__type'
| |       `-ElaboratedType 0x5605abc34600 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc345d0 'std::__match_cv_qualifiers<char32_t, unsigned int>::__type' sugar
| |           |-TypeAlias 0x5605abc34558 '__type'
| |           `-ElaboratedType 0x5605abc34500 'typename __match::__type' sugar
| |             `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |               |-TypeAlias 0x5605abc25ef8 '__type'
| |               `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| |                 |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| |                 `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |-ClassTemplateDecl 0x5605abc34968 <line:1927:3, line:1929:68> line:1928:12 make_unsigned
| | |-TemplateTypeParmDecl 0x5605abc34810 <line:1927:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc348b8 <line:1928:5, line:1929:68> line:1928:12 struct make_unsigned definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc34c20 <col:5, col:12> col:12 implicit struct make_unsigned
| | | `-TypeAliasDecl 0x5605abc34fe8 <line:1929:7, col:60> col:13 type 'typename __make_unsigned_selector<_Tp>::__type'
| | |   `-DependentNameType 0x5605abc34f70 'typename __make_unsigned_selector<_Tp>::__type' dependent
| | |-ClassTemplateSpecialization 0x5605abc350a8 'make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc35248 'make_unsigned'
| | |-ClassTemplateSpecialization 0x5605abc35a98 'make_unsigned'
| | `-ClassTemplateSpecialization 0x5605abc35c38 'make_unsigned'
| |-ClassTemplateSpecializationDecl 0x5605abc350a8 <line:1932:3, col:39> col:21 struct make_unsigned explicit_specialization
| | `-TemplateArgument type 'bool'
| |   `-BuiltinType 0x5605aba9c9f0 'bool'
| |-ClassTemplateSpecializationDecl 0x5605abc35248 <line:1933:3, col:45> col:21 struct make_unsigned explicit_specialization
| | `-TemplateArgument type 'const bool'
| |   `-QualType 0x5605aba9c9f1 'const bool' const
| |     `-BuiltinType 0x5605aba9c9f0 'bool'
| |-ClassTemplateSpecializationDecl 0x5605abc35a98 <line:1934:3, col:48> col:21 struct make_unsigned explicit_specialization
| | `-TemplateArgument type 'volatile bool'
| |   `-QualType 0x5605aba9c9f4 'volatile bool' volatile
| |     `-BuiltinType 0x5605aba9c9f0 'bool'
| |-ClassTemplateSpecializationDecl 0x5605abc35c38 <line:1935:3, col:54> col:21 struct make_unsigned explicit_specialization
| | `-TemplateArgument type 'const volatile bool'
| |   `-QualType 0x5605aba9c9f5 'const volatile bool' const volatile
| |     `-BuiltinType 0x5605aba9c9f0 'bool'
| |-ClassTemplateDecl 0x5605abc35f08 <line:1940:3, line:1942:27> line:1941:12 __make_signed
| | |-TemplateTypeParmDecl 0x5605abc35db0 <line:1940:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc35e58 <line:1941:5, line:1942:27> line:1941:12 struct __make_signed definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc361c0 <col:5, col:12> col:12 implicit struct __make_signed
| | | `-TypeAliasDecl 0x5605abc36280 <line:1942:7, col:22> col:13 __type '_Tp'
| | |   `-TemplateTypeParmType 0x5605abc35e00 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abc35db0 '_Tp'
| | |-ClassTemplateSpecialization 0x5605abc36340 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc366a8 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc38008 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc38378 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc386e8 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc38a58 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc3c368 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc41618 '__make_signed'
| | |-ClassTemplateSpecialization 0x5605abc473d8 '__make_signed'
| | `-ClassTemplateSpecialization 0x5605abc4dde8 '__make_signed'
| |-ClassTemplateSpecializationDecl 0x5605abc36340 <line:1944:3, line:1946:35> line:1945:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char'
| | | `-BuiltinType 0x5605aba9ca10 'char'
| | |-CXXRecordDecl 0x5605abc36518 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc365e0 <line:1946:7, col:29> col:13 __type 'signed char'
| |   `-BuiltinType 0x5605aba9ca30 'signed char'
| |-ClassTemplateSpecializationDecl 0x5605abc366a8 <line:1948:3, line:1950:35> line:1949:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'unsigned char'
| | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | |-CXXRecordDecl 0x5605abc36888 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc36950 <line:1950:7, col:29> col:13 referenced __type 'signed char'
| |   `-BuiltinType 0x5605aba9ca30 'signed char'
| |-ClassTemplateSpecializationDecl 0x5605abc38008 <line:1952:3, line:1954:36> line:1953:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'unsigned short'
| | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | |-CXXRecordDecl 0x5605abc381e8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc382b0 <line:1954:7, col:29> col:13 referenced __type 'short'
| |   `-BuiltinType 0x5605aba9ca50 'short'
| |-ClassTemplateSpecializationDecl 0x5605abc38378 <line:1956:3, line:1958:34> line:1957:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'unsigned int'
| | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | |-CXXRecordDecl 0x5605abc38558 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc38620 <line:1958:7, col:29> col:13 referenced __type 'int'
| |   `-BuiltinType 0x5605aba9ca70 'int'
| |-ClassTemplateSpecializationDecl 0x5605abc386e8 <line:1960:3, line:1962:35> line:1961:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'unsigned long'
| | | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | |-CXXRecordDecl 0x5605abc388c8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc38990 <line:1962:7, col:29> col:13 __type 'long'
| |   `-BuiltinType 0x5605aba9ca90 'long'
| |-ClassTemplateSpecializationDecl 0x5605abc38a58 <line:1964:3, line:1966:40> line:1965:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'unsigned long long'
| | | `-BuiltinType 0x5605aba9cb50 'unsigned long long'
| | |-CXXRecordDecl 0x5605abc38c38 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc38d00 <line:1966:7, col:34> col:13 __type 'long long'
| |   `-BuiltinType 0x5605aba9cab0 'long long'
| |-ClassTemplateDecl 0x5605abc392f8 <line:1994:3, line:1997:11> col:11 __make_signed_selector
| | |-TemplateTypeParmDecl 0x5605abc38d98 <line:1994:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abc38f28 <line:1995:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | | `-TemplateArgument <col:19, col:37> expr 'is_integral<_Tp>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abc38ed8 <col:19, col:37> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec 'is_integral<_Tp>'
| | |-NonTypeTemplateParmDecl 0x5605abc39198 <line:1996:5, col:33> col:10 'bool' depth 0 index 2 _IsEnum
| | | `-TemplateArgument <col:20, col:33> expr '__is_enum(_Tp)'
| | |   `-TypeTraitExpr 0x5605abc38fb0 <col:20, col:33> 'bool' __is_enum
| | |     `-TemplateTypeParmType 0x5605abc38df0 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x5605abc38d98 '_Tp'
| | |-CXXRecordDecl 0x5605abc39248 <line:1997:5, col:11> col:11 class __make_signed_selector
| | |-ClassTemplateSpecializationDecl 0x5605abc3c668 <line:2011:3, line:2018:5> line:2012:11 class __make_signed_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'wchar_t'
| | | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abc3c9c8 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x5605abc3e2d8 <line:2014:7, col:71> col:13 referenced __unsigned_type 'typename __make_unsigned_selector<wchar_t>::__type':'unsigned int'
| | | | `-ElaboratedType 0x5605abc3e280 'typename __make_unsigned_selector<wchar_t>::__type' sugar
| | | |   `-TypedefType 0x5605abc3e250 'std::__make_unsigned_selector<wchar_t>::__type' sugar
| | | |     |-TypeAlias 0x5605abc3e1d8 '__type'
| | | |     `-ElaboratedType 0x5605abc3e180 'typename __match_cv_qualifiers<wchar_t, __unsigned_type>::__type' sugar
| | | |       `-TypedefType 0x5605abc26200 'std::__match_cv_qualifiers<wchar_t, unsigned int>::__type' sugar
| | | |         |-TypeAlias 0x5605abc26188 '__type'
| | | |         `-ElaboratedType 0x5605abc25fa0 'typename __match::__type' sugar
| | | |           `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| | | |             |-TypeAlias 0x5605abc25ef8 '__type'
| | | |             `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| | | |               |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| | | |               `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-AccessSpecDecl 0x5605abc3e908 <line:2016:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc41438 <line:2017:7, col:72> col:13 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'int'
| | |   `-ElaboratedType 0x5605abc413e0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc413b0 'std::__make_signed_selector<unsigned int>::__type' sugar
| | |       |-TypeAlias 0x5605abc41338 '__type'
| | |       `-ElaboratedType 0x5605abc412e0 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| | |         `-TypedefType 0x5605abc412b0 'std::__match_cv_qualifiers<unsigned int, int>::__type' sugar
| | |           |-TypeAlias 0x5605abc41238 '__type'
| | |           `-ElaboratedType 0x5605abc411e0 'typename __match::__type' sugar
| | |             `-TypedefType 0x5605abc411b0 'std::__cv_selector<int, false, false>::__type' sugar
| | |               |-TypeAlias 0x5605abc41138 '__type'
| | |               `-SubstTemplateTypeParmType 0x5605abc410f0 'int' sugar typename depth 0 index 0 _Unqualified
| | |                 |-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| | |                 `-BuiltinType 0x5605aba9ca70 'int'
| | |-ClassTemplateSpecializationDecl 0x5605abc3f448 <line:1999:3, line:2008:5> line:2000:11 class __make_signed_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned int'
| | | | `-BuiltinType 0x5605aba9cb10 'unsigned int'
| | | |-TemplateArgument integral 'true'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc3f780 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x5605abc3fb78 <line:2002:7, line:2003:48> line:2002:13 referenced __signed_type 'typename __make_signed<__remove_cv_t<unsigned int>>::__type':'int'
| | | | `-ElaboratedType 0x5605abc3fb20 'typename __make_signed<__remove_cv_t<unsigned int>>::__type' sugar
| | | |   `-TypedefType 0x5605abc3faf0 'std::__make_signed<unsigned int>::__type' sugar
| | | |     |-TypeAlias 0x5605abc38620 '__type'
| | | |     `-BuiltinType 0x5605aba9ca70 'int'
| | | |-AccessSpecDecl 0x5605abc3fbe0 <line:2005:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc41338 <line:2006:7, line:2007:56> line:2006:13 referenced __type 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type':'int'
| | |   `-ElaboratedType 0x5605abc412e0 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| | |     `-TypedefType 0x5605abc412b0 'std::__match_cv_qualifiers<unsigned int, int>::__type' sugar
| | |       |-TypeAlias 0x5605abc41238 '__type'
| | |       `-ElaboratedType 0x5605abc411e0 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc411b0 'std::__cv_selector<int, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc41138 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc410f0 'int' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9ca70 'int'
| | |-ClassTemplateSpecializationDecl 0x5605abc41918 <line:2011:3, line:2018:5> line:2012:11 class __make_signed_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char8_t'
| | | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abc41c78 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x5605abc44308 <line:2014:7, col:71> col:13 referenced __unsigned_type 'typename __make_unsigned_selector<char8_t>::__type':'unsigned char'
| | | | `-ElaboratedType 0x5605abc442b0 'typename __make_unsigned_selector<char8_t>::__type' sugar
| | | |   `-TypedefType 0x5605abc44280 'std::__make_unsigned_selector<char8_t>::__type' sugar
| | | |     |-TypeAlias 0x5605abc44208 '__type'
| | | |     `-ElaboratedType 0x5605abc441b0 'typename __match_cv_qualifiers<char8_t, __unsigned_type>::__type' sugar
| | | |       `-TypedefType 0x5605abc29740 'std::__match_cv_qualifiers<char8_t, unsigned char>::__type' sugar
| | | |         |-TypeAlias 0x5605abc296c8 '__type'
| | | |         `-ElaboratedType 0x5605abc29670 'typename __match::__type' sugar
| | | |           `-TypedefType 0x5605abc29640 'std::__cv_selector<unsigned char, false, false>::__type' sugar
| | | |             |-TypeAlias 0x5605abc295c8 '__type'
| | | |             `-SubstTemplateTypeParmType 0x5605abc29580 'unsigned char' sugar typename depth 0 index 0 _Unqualified
| | | |               |-ClassTemplateSpecialization 0x5605abc28fe8 '__cv_selector'
| | | |               `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-AccessSpecDecl 0x5605abc44370 <line:2016:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc471f8 <line:2017:7, col:72> col:13 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'signed char'
| | |   `-ElaboratedType 0x5605abc471a0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc47170 'std::__make_signed_selector<unsigned char>::__type' sugar
| | |       |-TypeAlias 0x5605abc470f8 '__type'
| | |       `-ElaboratedType 0x5605abc470a0 'typename __match_cv_qualifiers<unsigned char, __signed_type>::__type' sugar
| | |         `-TypedefType 0x5605abc47070 'std::__match_cv_qualifiers<unsigned char, signed char>::__type' sugar
| | |           |-TypeAlias 0x5605abc46ff8 '__type'
| | |           `-ElaboratedType 0x5605abc46fa0 'typename __match::__type' sugar
| | |             `-TypedefType 0x5605abc46f70 'std::__cv_selector<signed char, false, false>::__type' sugar
| | |               |-TypeAlias 0x5605abc46ef8 '__type'
| | |               `-SubstTemplateTypeParmType 0x5605abc46eb0 'signed char' sugar typename depth 0 index 0 _Unqualified
| | |                 |-ClassTemplateSpecialization 0x5605abc46918 '__cv_selector'
| | |                 `-BuiltinType 0x5605aba9ca30 'signed char'
| | |-ClassTemplateSpecializationDecl 0x5605abc44eb8 <line:1999:3, line:2008:5> line:2000:11 class __make_signed_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | |-TemplateArgument integral 'true'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc451f0 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x5605abc455e8 <line:2002:7, line:2003:48> line:2002:13 referenced __signed_type 'typename __make_signed<__remove_cv_t<unsigned char>>::__type':'signed char'
| | | | `-ElaboratedType 0x5605abc45590 'typename __make_signed<__remove_cv_t<unsigned char>>::__type' sugar
| | | |   `-TypedefType 0x5605abc45560 'std::__make_signed<unsigned char>::__type' sugar
| | | |     |-TypeAlias 0x5605abc36950 '__type'
| | | |     `-BuiltinType 0x5605aba9ca30 'signed char'
| | | |-AccessSpecDecl 0x5605abc45650 <line:2005:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc470f8 <line:2006:7, line:2007:56> line:2006:13 referenced __type 'typename __match_cv_qualifiers<unsigned char, __signed_type>::__type':'signed char'
| | |   `-ElaboratedType 0x5605abc470a0 'typename __match_cv_qualifiers<unsigned char, __signed_type>::__type' sugar
| | |     `-TypedefType 0x5605abc47070 'std::__match_cv_qualifiers<unsigned char, signed char>::__type' sugar
| | |       |-TypeAlias 0x5605abc46ff8 '__type'
| | |       `-ElaboratedType 0x5605abc46fa0 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc46f70 'std::__cv_selector<signed char, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc46ef8 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc46eb0 'signed char' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc46918 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9ca30 'signed char'
| | |-ClassTemplateSpecializationDecl 0x5605abc476d8 <line:2011:3, line:2018:5> line:2012:11 class __make_signed_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'char16_t'
| | | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | | |-TemplateArgument integral 'false'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abc47a38 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x5605abc4a8b8 <line:2014:7, col:71> col:13 referenced __unsigned_type 'typename __make_unsigned_selector<char16_t>::__type':'unsigned short'
| | | | `-ElaboratedType 0x5605abc4a860 'typename __make_unsigned_selector<char16_t>::__type' sugar
| | | |   `-TypedefType 0x5605abc4a830 'std::__make_unsigned_selector<char16_t>::__type' sugar
| | | |     |-TypeAlias 0x5605abc4a7b8 '__type'
| | | |     `-ElaboratedType 0x5605abc4a760 'typename __match_cv_qualifiers<char16_t, __unsigned_type>::__type' sugar
| | | |       `-TypedefType 0x5605abc32070 'std::__match_cv_qualifiers<char16_t, unsigned short>::__type' sugar
| | | |         |-TypeAlias 0x5605abc31ff8 '__type'
| | | |         `-ElaboratedType 0x5605abc31fa0 'typename __match::__type' sugar
| | | |           `-TypedefType 0x5605abc31f70 'std::__cv_selector<unsigned short, false, false>::__type' sugar
| | | |             |-TypeAlias 0x5605abc31ef8 '__type'
| | | |             `-SubstTemplateTypeParmType 0x5605abc31eb0 'unsigned short' sugar typename depth 0 index 0 _Unqualified
| | | |               |-ClassTemplateSpecialization 0x5605abbd0108 '__cv_selector'
| | | |               `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-AccessSpecDecl 0x5605abc4a920 <line:2016:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc4dc08 <line:2017:7, col:72> col:13 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'short'
| | |   `-ElaboratedType 0x5605abc4dbb0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| | |     `-TypedefType 0x5605abc4db80 'std::__make_signed_selector<unsigned short>::__type' sugar
| | |       |-TypeAlias 0x5605abc4db08 '__type'
| | |       `-ElaboratedType 0x5605abc4dab0 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| | |         `-TypedefType 0x5605abc4da80 'std::__match_cv_qualifiers<unsigned short, short>::__type' sugar
| | |           |-TypeAlias 0x5605abc4da08 '__type'
| | |           `-ElaboratedType 0x5605abc4d9b0 'typename __match::__type' sugar
| | |             `-TypedefType 0x5605abc4d980 'std::__cv_selector<short, false, false>::__type' sugar
| | |               |-TypeAlias 0x5605abc4d908 '__type'
| | |               `-SubstTemplateTypeParmType 0x5605abc4d8c0 'short' sugar typename depth 0 index 0 _Unqualified
| | |                 |-ClassTemplateSpecialization 0x5605abc4d328 '__cv_selector'
| | |                 `-BuiltinType 0x5605aba9ca50 'short'
| | |-ClassTemplateSpecializationDecl 0x5605abc4b468 <line:1999:3, line:2008:5> line:2000:11 class __make_signed_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-TemplateArgument integral 'true'
| | | |-TemplateArgument integral 'false'
| | | |-CXXRecordDecl 0x5605abc4c210 <col:5, col:11> col:11 implicit class __make_signed_selector
| | | |-TypeAliasDecl 0x5605abc4c608 <line:2002:7, line:2003:48> line:2002:13 referenced __signed_type 'typename __make_signed<__remove_cv_t<unsigned short>>::__type':'short'
| | | | `-ElaboratedType 0x5605abc4c5b0 'typename __make_signed<__remove_cv_t<unsigned short>>::__type' sugar
| | | |   `-TypedefType 0x5605abc4c580 'std::__make_signed<unsigned short>::__type' sugar
| | | |     |-TypeAlias 0x5605abc382b0 '__type'
| | | |     `-BuiltinType 0x5605aba9ca50 'short'
| | | |-AccessSpecDecl 0x5605abc4c670 <line:2005:5, col:11> col:5 public
| | | `-TypeAliasDecl 0x5605abc4db08 <line:2006:7, line:2007:56> line:2006:13 referenced __type 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type':'short'
| | |   `-ElaboratedType 0x5605abc4dab0 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| | |     `-TypedefType 0x5605abc4da80 'std::__match_cv_qualifiers<unsigned short, short>::__type' sugar
| | |       |-TypeAlias 0x5605abc4da08 '__type'
| | |       `-ElaboratedType 0x5605abc4d9b0 'typename __match::__type' sugar
| | |         `-TypedefType 0x5605abc4d980 'std::__cv_selector<short, false, false>::__type' sugar
| | |           |-TypeAlias 0x5605abc4d908 '__type'
| | |           `-SubstTemplateTypeParmType 0x5605abc4d8c0 'short' sugar typename depth 0 index 0 _Unqualified
| | |             |-ClassTemplateSpecialization 0x5605abc4d328 '__cv_selector'
| | |             `-BuiltinType 0x5605aba9ca50 'short'
| | `-ClassTemplateSpecializationDecl 0x5605abc4eb38 <line:2011:3, line:2018:5> line:2012:11 class __make_signed_selector definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'char32_t'
| |   | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| |   |-TemplateArgument integral 'false'
| |   |-TemplateArgument integral 'true'
| |   |-CXXRecordDecl 0x5605abc4ee98 <col:5, col:11> col:11 implicit class __make_signed_selector
| |   |-TypeAliasDecl 0x5605abc506e8 <line:2014:7, col:71> col:13 referenced __unsigned_type 'typename __make_unsigned_selector<char32_t>::__type':'unsigned int'
| |   | `-ElaboratedType 0x5605abc50690 'typename __make_unsigned_selector<char32_t>::__type' sugar
| |   |   `-TypedefType 0x5605abc50660 'std::__make_unsigned_selector<char32_t>::__type' sugar
| |   |     |-TypeAlias 0x5605abc505e8 '__type'
| |   |     `-ElaboratedType 0x5605abc50590 'typename __match_cv_qualifiers<char32_t, __unsigned_type>::__type' sugar
| |   |       `-TypedefType 0x5605abc345d0 'std::__match_cv_qualifiers<char32_t, unsigned int>::__type' sugar
| |   |         |-TypeAlias 0x5605abc34558 '__type'
| |   |         `-ElaboratedType 0x5605abc34500 'typename __match::__type' sugar
| |   |           `-TypedefType 0x5605abc25f70 'std::__cv_selector<unsigned int, false, false>::__type' sugar
| |   |             |-TypeAlias 0x5605abc25ef8 '__type'
| |   |             `-SubstTemplateTypeParmType 0x5605abc25eb0 'unsigned int' sugar typename depth 0 index 0 _Unqualified
| |   |               |-ClassTemplateSpecialization 0x5605abc25918 '__cv_selector'
| |   |               `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |   |-AccessSpecDecl 0x5605abc50750 <line:2016:5, col:11> col:5 public
| |   `-TypeAliasDecl 0x5605abc51068 <line:2017:7, col:72> col:13 referenced __type 'typename __make_signed_selector<__unsigned_type>::__type':'int'
| |     `-ElaboratedType 0x5605abc51010 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |       `-TypedefType 0x5605abc413b0 'std::__make_signed_selector<unsigned int>::__type' sugar
| |         |-TypeAlias 0x5605abc41338 '__type'
| |         `-ElaboratedType 0x5605abc412e0 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |           `-TypedefType 0x5605abc412b0 'std::__match_cv_qualifiers<unsigned int, int>::__type' sugar
| |             |-TypeAlias 0x5605abc41238 '__type'
| |             `-ElaboratedType 0x5605abc411e0 'typename __match::__type' sugar
| |               `-TypedefType 0x5605abc411b0 'std::__cv_selector<int, false, false>::__type' sugar
| |                 |-TypeAlias 0x5605abc41138 '__type'
| |                 `-SubstTemplateTypeParmType 0x5605abc410f0 'int' sugar typename depth 0 index 0 _Unqualified
| |                   |-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| |                   `-BuiltinType 0x5605aba9ca70 'int'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc39830 <line:1999:3, line:2008:5> line:2000:11 class __make_signed_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abc39618 <line:1999:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc39ae0 <line:2000:5, col:11> col:11 implicit class __make_signed_selector
| | |-TypeAliasDecl 0x5605abc39f48 <line:2002:7, line:2003:48> line:2002:13 referenced __signed_type 'typename __make_signed<__remove_cv_t<_Tp>>::__type'
| | | `-DependentNameType 0x5605abc39ed0 'typename __make_signed<__remove_cv_t<_Tp>>::__type' dependent
| | |-AccessSpecDecl 0x5605abc39fb0 <line:2005:5, col:11> col:5 public
| | `-TypeAliasDecl 0x5605abc3a438 <line:2006:7, line:2007:56> line:2006:13 __type 'typename __match_cv_qualifiers<_Tp, __signed_type>::__type'
| |   `-DependentNameType 0x5605abc3a3c0 'typename __match_cv_qualifiers<_Tp, __signed_type>::__type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abc3a6e0 <line:2011:3, line:2018:5> line:2012:11 class __make_signed_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'true'
| | |-TemplateTypeParmDecl 0x5605abc3a4d0 <line:2011:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc3a990 <line:2012:5, col:11> col:11 implicit class __make_signed_selector
| | |-TypeAliasDecl 0x5605abc3ac78 <line:2014:7, col:71> col:13 referenced __unsigned_type 'typename __make_unsigned_selector<_Tp>::__type'
| | | `-DependentNameType 0x5605abc3ac00 'typename __make_unsigned_selector<_Tp>::__type' dependent
| | |-AccessSpecDecl 0x5605abc3ace0 <line:2016:5, col:11> col:5 public
| | `-TypeAliasDecl 0x5605abc3b0d8 <line:2017:7, col:72> col:13 __type 'typename __make_signed_selector<__unsigned_type>::__type'
| |   `-DependentNameType 0x5605abc3b060 'typename __make_signed_selector<__unsigned_type>::__type' dependent
| |-ClassTemplateSpecializationDecl 0x5605abc3c368 <line:2024:3, line:2029:5> line:2025:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'wchar_t'
| | | `-BuiltinType 0x5605aba9cf70 'wchar_t'
| | |-CXXRecordDecl 0x5605abc3c548 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc41558 <line:2027:7, line:2028:59> line:2027:13 __type 'typename __make_signed_selector<wchar_t, false, true>::__type':'int'
| |   `-ElaboratedType 0x5605abc414e0 'typename __make_signed_selector<wchar_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc414b0 'std::__make_signed_selector<wchar_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc41438 '__type'
| |       `-ElaboratedType 0x5605abc413e0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc413b0 'std::__make_signed_selector<unsigned int>::__type' sugar
| |           |-TypeAlias 0x5605abc41338 '__type'
| |           `-ElaboratedType 0x5605abc412e0 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |             `-TypedefType 0x5605abc412b0 'std::__match_cv_qualifiers<unsigned int, int>::__type' sugar
| |               |-TypeAlias 0x5605abc41238 '__type'
| |               `-ElaboratedType 0x5605abc411e0 'typename __match::__type' sugar
| |                 `-TypedefType 0x5605abc411b0 'std::__cv_selector<int, false, false>::__type' sugar
| |                   |-TypeAlias 0x5605abc41138 '__type'
| |                   `-SubstTemplateTypeParmType 0x5605abc410f0 'int' sugar typename depth 0 index 0 _Unqualified
| |                     |-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| |                     `-BuiltinType 0x5605aba9ca70 'int'
| |-ClassTemplateSpecializationDecl 0x5605abc41618 <line:2032:3, line:2037:5> line:2033:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char8_t'
| | | `-BuiltinType 0x5605aba9cf90 'char8_t'
| | |-CXXRecordDecl 0x5605abc417f8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc47318 <line:2035:7, line:2036:59> line:2035:13 __type 'typename __make_signed_selector<char8_t, false, true>::__type':'signed char'
| |   `-ElaboratedType 0x5605abc472a0 'typename __make_signed_selector<char8_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc47270 'std::__make_signed_selector<char8_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc471f8 '__type'
| |       `-ElaboratedType 0x5605abc471a0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc47170 'std::__make_signed_selector<unsigned char>::__type' sugar
| |           |-TypeAlias 0x5605abc470f8 '__type'
| |           `-ElaboratedType 0x5605abc470a0 'typename __match_cv_qualifiers<unsigned char, __signed_type>::__type' sugar
| |             `-TypedefType 0x5605abc47070 'std::__match_cv_qualifiers<unsigned char, signed char>::__type' sugar
| |               |-TypeAlias 0x5605abc46ff8 '__type'
| |               `-ElaboratedType 0x5605abc46fa0 'typename __match::__type' sugar
| |                 `-TypedefType 0x5605abc46f70 'std::__cv_selector<signed char, false, false>::__type' sugar
| |                   |-TypeAlias 0x5605abc46ef8 '__type'
| |                   `-SubstTemplateTypeParmType 0x5605abc46eb0 'signed char' sugar typename depth 0 index 0 _Unqualified
| |                     |-ClassTemplateSpecialization 0x5605abc46918 '__cv_selector'
| |                     `-BuiltinType 0x5605aba9ca30 'signed char'
| |-ClassTemplateSpecializationDecl 0x5605abc473d8 <line:2040:3, line:2045:5> line:2041:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char16_t'
| | | `-BuiltinType 0x5605aba9cfb0 'char16_t'
| | |-CXXRecordDecl 0x5605abc475b8 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc4dd28 <line:2043:7, line:2044:60> line:2043:13 __type 'typename __make_signed_selector<char16_t, false, true>::__type':'short'
| |   `-ElaboratedType 0x5605abc4dcb0 'typename __make_signed_selector<char16_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc4dc80 'std::__make_signed_selector<char16_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc4dc08 '__type'
| |       `-ElaboratedType 0x5605abc4dbb0 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc4db80 'std::__make_signed_selector<unsigned short>::__type' sugar
| |           |-TypeAlias 0x5605abc4db08 '__type'
| |           `-ElaboratedType 0x5605abc4dab0 'typename __match_cv_qualifiers<unsigned short, __signed_type>::__type' sugar
| |             `-TypedefType 0x5605abc4da80 'std::__match_cv_qualifiers<unsigned short, short>::__type' sugar
| |               |-TypeAlias 0x5605abc4da08 '__type'
| |               `-ElaboratedType 0x5605abc4d9b0 'typename __match::__type' sugar
| |                 `-TypedefType 0x5605abc4d980 'std::__cv_selector<short, false, false>::__type' sugar
| |                   |-TypeAlias 0x5605abc4d908 '__type'
| |                   `-SubstTemplateTypeParmType 0x5605abc4d8c0 'short' sugar typename depth 0 index 0 _Unqualified
| |                     |-ClassTemplateSpecialization 0x5605abc4d328 '__cv_selector'
| |                     `-BuiltinType 0x5605aba9ca50 'short'
| |-ClassTemplateSpecializationDecl 0x5605abc4dde8 <line:2047:3, line:2052:5> line:2048:12 struct __make_signed definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'char32_t'
| | | `-BuiltinType 0x5605aba9cfd0 'char32_t'
| | |-CXXRecordDecl 0x5605abc4ea18 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypeAliasDecl 0x5605abc51188 <line:2050:7, line:2051:60> line:2050:13 __type 'typename __make_signed_selector<char32_t, false, true>::__type':'int'
| |   `-ElaboratedType 0x5605abc51110 'typename __make_signed_selector<char32_t, false, true>::__type' sugar
| |     `-TypedefType 0x5605abc510e0 'std::__make_signed_selector<char32_t, false, true>::__type' sugar
| |       |-TypeAlias 0x5605abc51068 '__type'
| |       `-ElaboratedType 0x5605abc51010 'typename __make_signed_selector<__unsigned_type>::__type' sugar
| |         `-TypedefType 0x5605abc413b0 'std::__make_signed_selector<unsigned int>::__type' sugar
| |           |-TypeAlias 0x5605abc41338 '__type'
| |           `-ElaboratedType 0x5605abc412e0 'typename __match_cv_qualifiers<unsigned int, __signed_type>::__type' sugar
| |             `-TypedefType 0x5605abc412b0 'std::__match_cv_qualifiers<unsigned int, int>::__type' sugar
| |               |-TypeAlias 0x5605abc41238 '__type'
| |               `-ElaboratedType 0x5605abc411e0 'typename __match::__type' sugar
| |                 `-TypedefType 0x5605abc411b0 'std::__cv_selector<int, false, false>::__type' sugar
| |                   |-TypeAlias 0x5605abc41138 '__type'
| |                   `-SubstTemplateTypeParmType 0x5605abc410f0 'int' sugar typename depth 0 index 0 _Unqualified
| |                     |-ClassTemplateSpecialization 0x5605abc40b58 '__cv_selector'
| |                     `-BuiltinType 0x5605aba9ca70 'int'
| |-ClassTemplateDecl 0x5605abc51378 <line:2059:3, line:2061:66> line:2060:12 make_signed
| | |-TemplateTypeParmDecl 0x5605abc51220 <line:2059:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc512c8 <line:2060:5, line:2061:66> line:2060:12 struct make_signed definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc51630 <col:5, col:12> col:12 implicit struct make_signed
| | | `-TypeAliasDecl 0x5605abc519d8 <line:2061:7, col:58> col:13 type 'typename __make_signed_selector<_Tp>::__type'
| | |   `-DependentNameType 0x5605abc51960 'typename __make_signed_selector<_Tp>::__type' dependent
| | |-ClassTemplateSpecialization 0x5605abc51a98 'make_signed'
| | |-ClassTemplateSpecialization 0x5605abc51c38 'make_signed'
| | |-ClassTemplateSpecialization 0x5605abc51dd8 'make_signed'
| | `-ClassTemplateSpecialization 0x5605abc51f78 'make_signed'
| |-ClassTemplateSpecializationDecl 0x5605abc51a98 <line:2064:3, col:37> col:21 struct make_signed explicit_specialization
| | `-TemplateArgument type 'bool'
| |   `-BuiltinType 0x5605aba9c9f0 'bool'
| |-ClassTemplateSpecializationDecl 0x5605abc51c38 <line:2065:3, col:43> col:21 struct make_signed explicit_specialization
| | `-TemplateArgument type 'const bool'
| |   `-QualType 0x5605aba9c9f1 'const bool' const
| |     `-BuiltinType 0x5605aba9c9f0 'bool'
| |-ClassTemplateSpecializationDecl 0x5605abc51dd8 <line:2066:3, col:46> col:21 struct make_signed explicit_specialization
| | `-TemplateArgument type 'volatile bool'
| |   `-QualType 0x5605aba9c9f4 'volatile bool' volatile
| |     `-BuiltinType 0x5605aba9c9f0 'bool'
| |-ClassTemplateSpecializationDecl 0x5605abc51f78 <line:2067:3, col:52> col:21 struct make_signed explicit_specialization
| | `-TemplateArgument type 'const volatile bool'
| |   `-QualType 0x5605aba9c9f5 'const volatile bool' const volatile
| |     `-BuiltinType 0x5605aba9c9f0 'bool'
| |-TypeAliasTemplateDecl 0x5605abc52350 <line:2071:3, line:2072:54> col:5 make_signed_t
| | |-TemplateTypeParmDecl 0x5605abc520f0 <line:2071:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc522e8 <line:2072:5, col:54> col:11 make_signed_t 'typename make_signed<_Tp>::type'
| |   `-DependentNameType 0x5605abc52270 'typename make_signed<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc52610 <line:2075:3, line:2076:58> col:5 make_unsigned_t
| | |-TemplateTypeParmDecl 0x5605abc523b0 <line:2075:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc525a8 <line:2076:5, col:58> col:11 make_unsigned_t 'typename make_unsigned<_Tp>::type'
| |   `-DependentNameType 0x5605abc52530 'typename make_unsigned<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc527c8 <line:2082:3, line:2084:25> line:2083:12 remove_extent
| | |-TemplateTypeParmDecl 0x5605abc52670 <line:2082:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc52718 <line:2083:5, line:2084:25> line:2083:12 struct remove_extent definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc52a80 <col:5, col:12> col:12 implicit struct remove_extent
| |   `-TypeAliasDecl 0x5605abc52b40 <line:2084:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc526c0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc52670 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc52e60 <line:2086:3, line:2088:25> line:2087:12 struct remove_extent definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | |-TemplateTypeParmDecl 0x5605abc52bd8 <line:2086:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abc52cb8 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | |-CXXRecordDecl 0x5605abc53dc0 <line:2087:5, col:12> col:12 implicit struct remove_extent
| | `-TypeAliasDecl 0x5605abc53e80 <line:2088:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x5605abc52c30 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abc52bd8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc540b0 <line:2090:3, line:2092:25> line:2091:12 struct remove_extent definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc53f18 <line:2090:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc542a0 <line:2091:5, col:12> col:12 implicit struct remove_extent
| | `-TypeAliasDecl 0x5605abc54360 <line:2092:7, col:20> col:13 type '_Tp'
| |   `-TemplateTypeParmType 0x5605abc53f70 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abc53f18 '_Tp'
| |-ClassTemplateDecl 0x5605abc54540 prev 0x5605abbc03c8 <line:2095:3, line:2097:25> line:2096:12 remove_all_extents
| | |-TemplateTypeParmDecl 0x5605abc543f8 <line:2095:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc544a8 prev 0x5605abbc0318 <line:2096:5, line:2097:25> line:2096:12 struct remove_all_extents definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc54608 <col:5, col:12> col:12 implicit struct remove_all_extents
| |   `-TypeAliasDecl 0x5605abc546c8 <line:2097:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc54450 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc543f8 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc549f0 <line:2099:3, line:2101:60> line:2100:12 struct remove_all_extents definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | |-TemplateTypeParmDecl 0x5605abc54760 <line:2099:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abc54838 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| | |-CXXRecordDecl 0x5605abc54be0 <line:2100:5, col:12> col:12 implicit struct remove_all_extents
| | `-TypeAliasDecl 0x5605abc54da8 <line:2101:7, col:54> col:13 type 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0x5605abc54d30 'typename remove_all_extents<_Tp>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abc54fd0 <line:2103:3, line:2105:60> line:2104:12 struct remove_all_extents definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc54e40 <line:2103:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc551c0 <line:2104:5, col:12> col:12 implicit struct remove_all_extents
| | `-TypeAliasDecl 0x5605abc55388 <line:2105:7, col:54> col:13 type 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0x5605abc55310 'typename remove_all_extents<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc55680 <line:2109:3, line:2110:58> col:5 remove_extent_t
| | |-TemplateTypeParmDecl 0x5605abc55420 <line:2109:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc55618 <line:2110:5, col:58> col:11 remove_extent_t 'typename remove_extent<_Tp>::type'
| |   `-DependentNameType 0x5605abc555a0 'typename remove_extent<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc55900 <line:2113:3, line:2114:68> col:5 remove_all_extents_t
| | |-TemplateTypeParmDecl 0x5605abc556e0 <line:2113:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc55898 <line:2114:5, col:68> col:11 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
| |   `-DependentNameType 0x5605abc55820 'typename remove_all_extents<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc55ab8 <line:2121:3, line:2123:43> line:2122:12 remove_pointer
| | |-TemplateTypeParmDecl 0x5605abc55960 <line:2121:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc55a08 <line:2122:5, line:2123:43> line:2122:12 struct remove_pointer definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc564b0 <col:5, col:12> col:12 implicit struct remove_pointer
| |   `-TypeAliasDecl 0x5605abc56608 <line:2123:7, col:40> col:13 type '__remove_pointer(_Tp)'
| |     `-UnaryTransformType 0x5605abc565b0 '__remove_pointer(_Tp)' dependent remove_pointer
| |       `-TemplateTypeParmType 0x5605abc559b0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abc55960 '_Tp'
| |-ClassTemplateDecl 0x5605abc568c0 <line:2139:3, line:2141:25> line:2140:12 __add_pointer_helper
| | |-TemplateTypeParmDecl 0x5605abc566a0 <line:2139:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc56738 <col:26, col:37> col:35 typename depth 0 index 1
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abc56810 <line:2140:5, line:2141:25> line:2140:12 struct __add_pointer_helper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc56bb0 <col:5, col:12> col:12 implicit struct __add_pointer_helper
| |   `-TypeAliasDecl 0x5605abc56c70 <line:2141:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc566f0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc566a0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc56fb8 <line:2143:3, line:2145:26> line:2144:12 struct __add_pointer_helper definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abc56d08 <line:2143:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc571e0 <line:2144:5, col:12> col:12 implicit struct __add_pointer_helper
| | `-TypeAliasDecl 0x5605abc572a0 <line:2145:7, col:23> col:13 type '_Tp *'
| |   `-PointerType 0x5605abc56dc0 '_Tp *' dependent
| |     `-TemplateTypeParmType 0x5605abc56d60 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc56d08 '_Tp'
| |-ClassTemplateDecl 0x5605abc57498 <line:2148:3, line:2151:7> line:2149:12 add_pointer
| | |-TemplateTypeParmDecl 0x5605abc57338 <line:2148:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc573e8 <line:2149:5, line:2151:7> line:2149:12 struct add_pointer definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__add_pointer_helper<_Tp>'
| | | `-CXXRecordDecl 0x5605abc57838 <col:5, col:12> col:12 implicit struct add_pointer
| | |-ClassTemplateSpecializationDecl 0x5605abeb84e8 <line:2148:3, line:2151:7> line:2149:12 struct add_pointer
| | | `-TemplateArgument type 'long'
| | |   `-BuiltinType 0x5605aba9ca90 'long'
| | |-ClassTemplateSpecializationDecl 0x5605abebf828 <line:2148:3, line:2151:7> line:2149:12 struct add_pointer
| | | `-TemplateArgument type 'ice::error'
| | |   `-RecordType 0x5605abe9a400 'ice::error'
| | |     `-CXXRecord 0x5605abea0860 'error'
| | |-ClassTemplateSpecializationDecl 0x5605abec3228 <line:2148:3, line:2151:7> line:2149:12 struct add_pointer
| | | `-TemplateArgument type 'int'
| | |   `-BuiltinType 0x5605aba9ca70 'int'
| | |-ClassTemplateSpecializationDecl 0x5605abed45e8 <line:2148:3, line:2151:7> line:2149:12 struct add_pointer
| | | `-TemplateArgument type 'consteval_move'
| | |   `-RecordType 0x5605abeccf70 'consteval_move'
| | |     `-CXXRecord 0x5605abeccec8 'consteval_move'
| | `-ClassTemplateSpecializationDecl 0x5605abedf838 <line:2148:3, line:2151:7> line:2149:12 struct add_pointer
| |   `-TemplateArgument type 'move<false>'
| |     `-RecordType 0x5605abede560 'move<false>'
| |       `-ClassTemplateSpecialization 0x5605abede470 'move'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc57a80 <line:2153:3, line:2155:26> line:2154:12 struct add_pointer definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc57900 <line:2153:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc57c60 <line:2154:5, col:12> col:12 implicit struct add_pointer
| | `-TypeAliasDecl 0x5605abc57d58 <line:2155:7, col:23> col:13 type '_Tp *'
| |   `-PointerType 0x5605abc57d10 '_Tp *' dependent
| |     `-TemplateTypeParmType 0x5605abc57950 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc57900 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc57f70 <line:2157:3, line:2159:26> line:2158:12 struct add_pointer definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc57df0 <line:2157:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc58150 <line:2158:5, col:12> col:12 implicit struct add_pointer
| | `-TypeAliasDecl 0x5605abc58248 <line:2159:7, col:23> col:13 type '_Tp *'
| |   `-PointerType 0x5605abc58200 '_Tp *' dependent
| |     `-TemplateTypeParmType 0x5605abc57e40 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc57df0 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abc59040 <line:2163:3, line:2164:60> col:5 remove_pointer_t
| | |-TemplateTypeParmDecl 0x5605abc582e0 <line:2163:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc58fd8 <line:2164:5, col:60> col:11 remove_pointer_t 'typename remove_pointer<_Tp>::type'
| |   `-DependentNameType 0x5605abc58f60 'typename remove_pointer<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc59300 <line:2167:3, line:2168:54> col:5 add_pointer_t
| | |-TemplateTypeParmDecl 0x5605abc590a0 <line:2167:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc59298 <line:2168:5, col:54> col:11 add_pointer_t 'typename add_pointer<_Tp>::type'
| |   `-DependentNameType 0x5605abc59220 'typename add_pointer<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc594e0 <line:2171:3, line:2179:5> line:2172:12 __aligned_storage_msa
| | |-NonTypeTemplateParmDecl 0x5605abc593b0 <line:2171:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | `-CXXRecordDecl 0x5605abc59430 <line:2172:5, line:2179:5> line:2172:12 struct __aligned_storage_msa definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc597b0 <col:5, col:12> col:12 implicit struct __aligned_storage_msa
| |   `-CXXRecordDecl 0x5605abc59860 <line:2174:7, line:2178:7> line:2174:13 union __type definition
| |     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_constexpr_non_copy_move_ctor has_variant_members
| |     | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_implicit
| |     | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_implicit
| |     | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |     |-CXXRecordDecl 0x5605abc599a0 <col:7, col:13> col:13 implicit union __type
| |     |-FieldDecl 0x5605abc59ae0 <line:2176:2, col:27> col:16 __data 'unsigned char[_Len]'
| |     |-CXXRecordDecl 0x5605abc59b38 <line:2177:2, col:40> col:2 struct definition
| |     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveConstructor exists simple trivial needs_implicit
| |     | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_implicit
| |     | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |     | `-AlignedAttr 0x5605abc59c68 <col:24> aligned
| |     |   `-<<<NULL>>>
| |     `-FieldDecl 0x5605abc59d50 <col:2, col:42> col:42 __align 'struct (unnamed struct at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2177:2)':'std::__aligned_storage_msa::__type::(unnamed struct at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2177:2)'
| |-ClassTemplateDecl 0x5605abc5a1d0 <line:2194:3, line:2205:5> line:2198:5 aligned_storage
| | |-NonTypeTemplateParmDecl 0x5605abc59e40 <line:2194:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| | |-NonTypeTemplateParmDecl 0x5605abc5a078 <col:30, line:2195:61> line:2194:42 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Align
| | | `-TemplateArgument <line:2195:5, col:61> expr '__alignof(typename __aligned_storage_msa<_Len>::__type)'
| | |   `-UnaryExprOrTypeTraitExpr 0x5605abc5a030 <col:5, col:61> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| | `-CXXRecordDecl 0x5605abc5a120 <line:2196:5, line:2205:5> line:2198:5 struct aligned_storage definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-DeprecatedAttr 0x5605abc5a4f8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:139:34> "" ""
| |   |-CXXRecordDecl 0x5605abc5a570 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2196:5, line:2198:5> col:5 implicit struct aligned_storage
| |   `-CXXRecordDecl 0x5605abc5a620 <line:2200:7, line:2204:7> line:2200:13 union type definition
| |     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_constexpr_non_copy_move_ctor has_variant_members
| |     | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveConstructor exists simple trivial needs_implicit
| |     | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | |-MoveAssignment exists simple trivial needs_implicit
| |     | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |     |-CXXRecordDecl 0x5605abc5a760 <col:7, col:13> col:13 implicit union type
| |     |-FieldDecl 0x5605abc5a8a0 <line:2202:2, col:27> col:16 __data 'unsigned char[_Len]'
| |     |-CXXRecordDecl 0x5605abc5a980 <line:2203:2, col:50> col:2 struct definition
| |     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveConstructor exists simple trivial needs_implicit
| |     | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |     | | |-MoveAssignment exists simple trivial needs_implicit
| |     | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |     | `-AlignedAttr 0x5605abc5aab8 <col:24, col:44> aligned
| |     |   `-ParenExpr 0x5605abc5a958 <col:36, col:43> 'std::size_t':'unsigned long'
| |     |     `-DeclRefExpr 0x5605abc5a938 <col:37> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x5605abc5a078 '_Align' 'std::size_t':'unsigned long'
| |     `-FieldDecl 0x5605abc5aba0 <col:2, col:52> col:52 __align 'struct (unnamed struct at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2203:2)':'std::aligned_storage::type::(unnamed struct at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2203:2)'
| |-ClassTemplateDecl 0x5605abc5ad98 <line:2207:3, line:2212:5> line:2208:12 __strictest_alignment
| | |-TemplateTypeParmDecl 0x5605abc5ac40 <line:2207:13, col:25> col:25 typename depth 0 index 0 ... _Types
| | `-CXXRecordDecl 0x5605abc5ace8 <line:2208:5, line:2212:5> line:2208:12 struct __strictest_alignment definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc5d350 <col:5, col:12> col:12 implicit struct __strictest_alignment
| |   |-VarDecl 0x5605abc5d410 <line:2210:7, col:42> col:27 _S_alignment 'const size_t':'const unsigned long' static cinit
| |   | `-ImplicitCastExpr 0x5605abc5d4b0 <col:42> 'const size_t':'const unsigned long' <IntegralCast>
| |   |   `-IntegerLiteral 0x5605abc5d478 <col:42> 'int' 0
| |   `-VarDecl 0x5605abc5d528 <line:2211:7, col:37> col:27 _S_size 'const size_t':'const unsigned long' static cinit
| |     `-ImplicitCastExpr 0x5605abc5d5c8 <col:37> 'const size_t':'const unsigned long' <IntegralCast>
| |       `-IntegerLiteral 0x5605abc5d590 <col:37> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0x5605abc5d8f0 <line:2214:3, line:2223:5> line:2215:12 struct __strictest_alignment definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<type-parameter-0-0, type-parameter-0-1...>'
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | `-TemplateArgument type 'type-parameter-0-1...'
| | |   `-PackExpansionType 0x5605abbd18b0 'type-parameter-0-1...' dependent
| | |     `-TemplateTypeParmType 0x5605abb7cff0 'type-parameter-0-1' dependent contains_unexpanded_pack depth 0 index 1 pack
| | |-TemplateTypeParmDecl 0x5605abc5d648 <line:2214:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc5d6d8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Types
| | |-CXXRecordDecl 0x5605abc5db90 <line:2215:5, col:12> col:12 implicit struct __strictest_alignment
| | |-VarDecl 0x5605abc5dc50 <line:2217:7, line:2219:53> line:2217:27 _S_alignment 'const size_t':'const unsigned long' static cinit
| | | `-ConditionalOperator 0x5605abc5dff0 <line:2218:9, line:2219:53> '<dependent type>'
| | |   |-BinaryOperator 0x5605abc5de70 <line:2218:9, col:58> '<dependent type>' '>'
| | |   | |-UnaryExprOrTypeTraitExpr 0x5605abc5dcc8 <col:9, col:20> 'unsigned long' alignof '_Tp'
| | |   | `-DependentScopeDeclRefExpr 0x5605abc5de38 <col:24, col:58> '<dependent type>' lvalue
| | |   |   `-NestedNameSpecifier TypeSpec '__strictest_alignment<_Types...>'
| | |   |-UnaryExprOrTypeTraitExpr 0x5605abc5dea0 <line:2219:4, col:15> 'unsigned long' alignof '_Tp'
| | |   `-DependentScopeDeclRefExpr 0x5605abc5dfb8 <col:19, col:53> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec '__strictest_alignment<_Types...>'
| | `-VarDecl 0x5605abc5e050 <line:2220:7, line:2222:52> line:2220:27 _S_size 'const size_t':'const unsigned long' static cinit
| |   `-ConditionalOperator 0x5605abc5e3a0 <line:2221:9, line:2222:52> '<dependent type>'
| |     |-BinaryOperator 0x5605abc5e220 <line:2221:9, col:57> '<dependent type>' '>'
| |     | |-UnaryExprOrTypeTraitExpr 0x5605abc5e0c8 <col:9, col:19> 'unsigned long' sizeof '_Tp'
| |     | `-DependentScopeDeclRefExpr 0x5605abc5e1e8 <col:23, col:57> '<dependent type>' lvalue
| |     |   `-NestedNameSpecifier TypeSpec '__strictest_alignment<_Types...>'
| |     |-UnaryExprOrTypeTraitExpr 0x5605abc5e250 <line:2222:4, col:14> 'unsigned long' sizeof '_Tp'
| |     `-DependentScopeDeclRefExpr 0x5605abc5e368 <col:18, col:52> '<dependent type>' lvalue
| |       `-NestedNameSpecifier TypeSpec '__strictest_alignment<_Types...>'
| |-ClassTemplateDecl 0x5605abc5e5e0 <line:2240:3, line:2256:5> line:2243:5 aligned_union
| | |-NonTypeTemplateParmDecl 0x5605abc5e418 <line:2240:13, col:20> col:20 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| | |-TemplateTypeParmDecl 0x5605abc5e478 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| | `-CXXRecordDecl 0x5605abc5e530 <line:2241:5, line:2256:5> line:2243:5 struct aligned_union definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-DeprecatedAttr 0x5605abc5e948 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:139:34> "" ""
| |   |-CXXRecordDecl 0x5605abc5e9c0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2241:5, line:2243:5> col:5 implicit struct aligned_union
| |   |-AccessSpecDecl 0x5605abc5ea70 <line:2245:5, col:12> col:5 private
| |   |-StaticAssertDecl 0x5605abc5eb58 <line:2246:7, col:76> col:7
| |   | |-BinaryOperator 0x5605abc5eaf8 <col:21, col:42> 'bool' '!='
| |   | | |-SizeOfPackExpr 0x5605abc5ea98 <col:21, col:37> 'unsigned long' 0x5605abc5e478 _Types
| |   | | `-ImplicitCastExpr 0x5605abc5eae0 <col:42> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5605abc5eac0 <col:42> 'int' 0
| |   | `-StringLiteral 0x5605abc5eb18 <col:45> 'NULL TYPE' lvalue "At least one type is required"
| |   |-TypeAliasDecl 0x5605abc5ecb8 <line:2248:7, col:58> col:13 referenced __strictest '__strictest_alignment<_Types...>'
| |   | `-ElaboratedType 0x5605abc5ec40 '__strictest_alignment<_Types...>' sugar dependent
| |   |   `-TemplateSpecializationType 0x5605abc5ebf0 '__strictest_alignment<_Types...>' dependent
| |   |     |-name: '__strictest_alignment':'std::__strictest_alignment' qualified
| |   |     | `-ClassTemplateDecl 0x5605abc5ad98 <line:2207:3, line:2212:5> line:2208:12 __strictest_alignment
| |   |     `-TemplateArgument type '_Types...':'type-parameter-0-1...'
| |   |       `-PackExpansionType 0x5605abc5e790 '_Types...' dependent
| |   |         `-TemplateTypeParmType 0x5605abc5e4d0 '_Types' dependent contains_unexpanded_pack depth 0 index 1 pack
| |   |           `-TemplateTypeParm 0x5605abc5e478 '_Types'
| |   |-VarDecl 0x5605abc5ed30 <line:2249:7, line:2250:24> line:2249:27 referenced _S_len 'const size_t':'const unsigned long' static cinit
| |   | `-ConditionalOperator 0x5605abc5ef28 <col:36, line:2250:24> '<dependent type>'
| |   |   |-BinaryOperator 0x5605abc5ee78 <line:2249:36, col:56> '<dependent type>' '>'
| |   |   | |-DeclRefExpr 0x5605abc5ed98 <col:36> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abc5e418 '_Len' 'size_t':'unsigned long'
| |   |   | `-DependentScopeDeclRefExpr 0x5605abc5ee40 <col:43, col:56> '<dependent type>' lvalue
| |   |   |   `-NestedNameSpecifier TypeSpec 'std::aligned_union::__strictest':'__strictest_alignment<_Types...>'
| |   |   |-DeclRefExpr 0x5605abc5ee98 <line:2250:4> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abc5e418 '_Len' 'size_t':'unsigned long'
| |   |   `-DependentScopeDeclRefExpr 0x5605abc5eef0 <col:11, col:24> '<dependent type>' lvalue
| |   |     `-NestedNameSpecifier TypeSpec 'std::aligned_union::__strictest':'__strictest_alignment<_Types...>'
| |   |-AccessSpecDecl 0x5605abc5ef78 <line:2251:5, col:11> col:5 public
| |   |-VarDecl 0x5605abc5efb8 <line:2253:7, col:58> col:27 referenced alignment_value 'const size_t':'const unsigned long' static cinit
| |   | `-DependentScopeDeclRefExpr 0x5605abc5f058 <col:45, col:58> '<dependent type>' lvalue
| |   |   `-NestedNameSpecifier TypeSpec 'std::aligned_union::__strictest':'__strictest_alignment<_Types...>'
| |   `-TypeAliasDecl 0x5605abc61e88 <line:2255:7, col:71> col:13 type 'typename aligned_storage<_S_len, alignment_value>::type'
| |     `-DependentNameType 0x5605abc61e10 'typename aligned_storage<_S_len, alignment_value>::type' dependent
| |-VarDecl 0x5605abc623c8 parent 0x5605abc5e530 prev 0x5605abc5efb8 <line:2258:3, line:2259:50> col:50 alignment_value 'const size_t':'const unsigned long'
| | `-NestedNameSpecifier TypeSpec 'aligned_union<_Len, _Types...>'
| |-ClassTemplateDecl 0x5605abc625d8 <line:2266:3, line:2271:7> line:2267:12 __decay_selector
| | |-TemplateTypeParmDecl 0x5605abc62480 <line:2266:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0x5605abc62528 <line:2267:5, line:2271:7> line:2267:12 struct __decay_selector definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__conditional_t<is_const<const _Up>::value, remove_cv<_Up>, add_pointer<_Up>>':'typename __conditional<is_const<const _Up>::value>::template type<remove_cv<_Up>, add_pointer<_Up>>'
| | | `-CXXRecordDecl 0x5605abc63008 <col:5, col:12> col:12 implicit struct __decay_selector
| | |-ClassTemplateSpecializationDecl 0x5605abeb7c58 <line:2266:3, line:2271:7> line:2267:12 struct __decay_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__conditional_t<is_const<const long>::value, remove_cv<long>, add_pointer<long>>':'std::remove_cv<long>'
| | | |-TemplateArgument type 'long'
| | | | `-BuiltinType 0x5605aba9ca90 'long'
| | | `-CXXRecordDecl 0x5605abeb9268 <col:5, col:12> col:12 implicit struct __decay_selector
| | |-ClassTemplateSpecializationDecl 0x5605abebefa8 <line:2266:3, line:2271:7> line:2267:12 struct __decay_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__conditional_t<is_const<const error>::value, remove_cv<error>, add_pointer<error>>':'std::remove_cv<ice::error>'
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | `-CXXRecordDecl 0x5605abec0078 <col:5, col:12> col:12 implicit struct __decay_selector
| | |-ClassTemplateSpecializationDecl 0x5605abec2998 <line:2266:3, line:2271:7> line:2267:12 struct __decay_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__conditional_t<is_const<const int>::value, remove_cv<int>, add_pointer<int>>':'std::remove_cv<int>'
| | | |-TemplateArgument type 'int'
| | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | `-CXXRecordDecl 0x5605abec3a78 <col:5, col:12> col:12 implicit struct __decay_selector
| | |-ClassTemplateSpecializationDecl 0x5605abed3d68 <line:2266:3, line:2271:7> line:2267:12 struct __decay_selector definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__conditional_t<is_const<const consteval_move>::value, remove_cv<consteval_move>, add_pointer<consteval_move>>':'std::remove_cv<consteval_move>'
| | | |-TemplateArgument type 'consteval_move'
| | | | `-RecordType 0x5605abeccf70 'consteval_move'
| | | |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | | `-CXXRecordDecl 0x5605abed5f28 <col:5, col:12> col:12 implicit struct __decay_selector
| | `-ClassTemplateSpecializationDecl 0x5605abedefb8 <line:2266:3, line:2271:7> line:2267:12 struct __decay_selector definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__conditional_t<is_const<const move<false>>::value, remove_cv<move<false>>, add_pointer<move<false>>>':'std::remove_cv<move<false>>'
| |   |-TemplateArgument type 'move<false>'
| |   | `-RecordType 0x5605abede560 'move<false>'
| |   |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| |   `-CXXRecordDecl 0x5605abee0088 <col:5, col:12> col:12 implicit struct __decay_selector
| |-ClassTemplatePartialSpecializationDecl 0x5605abc63310 <line:2273:3, line:2275:26> line:2274:12 struct __decay_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | |-TemplateTypeParmDecl 0x5605abc630d0 <line:2273:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-NonTypeTemplateParmDecl 0x5605abc63168 <col:26, col:33> col:33 referenced 'size_t':'unsigned long' depth 0 index 1 _Nm
| | |-CXXRecordDecl 0x5605abc63500 <line:2274:5, col:12> col:12 implicit struct __decay_selector
| | `-TypeAliasDecl 0x5605abc635f8 <line:2275:7, col:23> col:13 type '_Up *'
| |   `-PointerType 0x5605abc635b0 '_Up *' dependent
| |     `-TemplateTypeParmType 0x5605abc63120 '_Up' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc630d0 '_Up'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc63820 <line:2277:3, line:2279:26> line:2278:12 struct __decay_selector definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc63690 <line:2277:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| | |-CXXRecordDecl 0x5605abc63a10 <line:2278:5, col:12> col:12 implicit struct __decay_selector
| | `-TypeAliasDecl 0x5605abc63b08 <line:2279:7, col:23> col:13 type '_Up *'
| |   `-PointerType 0x5605abc63ac0 '_Up *' dependent
| |     `-TemplateTypeParmType 0x5605abc636e0 '_Up' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc63690 '_Up'
| |-ClassTemplateDecl 0x5605abc64588 <line:2284:3, line:2286:58> line:2285:12 decay
| | |-TemplateTypeParmDecl 0x5605abc63ba0 <line:2284:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc644d8 <line:2285:5, line:2286:58> line:2285:12 struct decay definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc64840 <col:5, col:12> col:12 implicit struct decay
| | | `-TypeAliasDecl 0x5605abc64a48 <line:2286:7, col:52> col:13 type 'typename __decay_selector<_Tp>::type'
| | |   `-DependentNameType 0x5605abc649d0 'typename __decay_selector<_Tp>::type' dependent
| | |-ClassTemplateSpecializationDecl 0x5605abeb78e8 <line:2284:3, line:2286:58> line:2285:12 struct decay definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'long'
| | | | `-BuiltinType 0x5605aba9ca90 'long'
| | | |-CXXRecordDecl 0x5605abeb7b60 <col:5, col:12> col:12 implicit struct decay
| | | `-TypeAliasDecl 0x5605abeb93b8 <line:2286:7, col:52> col:13 referenced type 'typename __decay_selector<long>::type':'long'
| | |   `-ElaboratedType 0x5605abeb9360 'typename __decay_selector<long>::type' sugar
| | |     `-TypedefType 0x5605abeb9330 'std::remove_cv<long>::type' sugar
| | |       |-TypeAlias 0x5605abeb91b8 'type'
| | |       `-UnaryTransformType 0x5605abeb9160 '__remove_cv(long)' sugar remove_cv
| | |         |-SubstTemplateTypeParmType 0x5605abeb9120 'long' sugar typename depth 0 index 0 _Tp
| | |         | |-ClassTemplateSpecialization 0x5605abeb8318 'remove_cv'
| | |         | `-BuiltinType 0x5605aba9ca90 'long'
| | |         `-SubstTemplateTypeParmType 0x5605abeb9120 'long' sugar typename depth 0 index 0 _Tp
| | |           |-ClassTemplateSpecialization 0x5605abeb8318 'remove_cv'
| | |           `-BuiltinType 0x5605aba9ca90 'long'
| | |-ClassTemplateSpecializationDecl 0x5605abebec38 <line:2284:3, line:2286:58> line:2285:12 struct decay definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | |-CXXRecordDecl 0x5605abebeeb0 <col:5, col:12> col:12 implicit struct decay
| | | `-TypeAliasDecl 0x5605abec01c8 <line:2286:7, col:52> col:13 referenced type 'typename __decay_selector<error>::type':'ice::error'
| | |   `-ElaboratedType 0x5605abec0170 'typename __decay_selector<error>::type' sugar
| | |     `-TypedefType 0x5605abec0140 'std::remove_cv<ice::error>::type' sugar
| | |       |-TypeAlias 0x5605abebffc8 'type'
| | |       `-UnaryTransformType 0x5605abebff70 '__remove_cv(ice::error)' sugar remove_cv
| | |         |-SubstTemplateTypeParmType 0x5605abebff30 'ice::error' sugar typename depth 0 index 0 _Tp
| | |         | |-ClassTemplateSpecialization 0x5605abebf658 'remove_cv'
| | |         | `-RecordType 0x5605abe9a400 'ice::error'
| | |         |   `-CXXRecord 0x5605abea0860 'error'
| | |         `-SubstTemplateTypeParmType 0x5605abebff30 'ice::error' sugar typename depth 0 index 0 _Tp
| | |           |-ClassTemplateSpecialization 0x5605abebf658 'remove_cv'
| | |           `-RecordType 0x5605abe9a400 'ice::error'
| | |             `-CXXRecord 0x5605abea0860 'error'
| | |-ClassTemplateSpecializationDecl 0x5605abec2628 <line:2284:3, line:2286:58> line:2285:12 struct decay definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'int'
| | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | |-CXXRecordDecl 0x5605abec28a0 <col:5, col:12> col:12 implicit struct decay
| | | `-TypeAliasDecl 0x5605abec3bc8 <line:2286:7, col:52> col:13 referenced type 'typename __decay_selector<int>::type':'int'
| | |   `-ElaboratedType 0x5605abec3b70 'typename __decay_selector<int>::type' sugar
| | |     `-TypedefType 0x5605abec3b40 'std::remove_cv<int>::type' sugar
| | |       |-TypeAlias 0x5605abec39c8 'type'
| | |       `-UnaryTransformType 0x5605abec3970 '__remove_cv(int)' sugar remove_cv
| | |         |-SubstTemplateTypeParmType 0x5605abec3930 'int' sugar typename depth 0 index 0 _Tp
| | |         | |-ClassTemplateSpecialization 0x5605abec3058 'remove_cv'
| | |         | `-BuiltinType 0x5605aba9ca70 'int'
| | |         `-SubstTemplateTypeParmType 0x5605abec3930 'int' sugar typename depth 0 index 0 _Tp
| | |           |-ClassTemplateSpecialization 0x5605abec3058 'remove_cv'
| | |           `-BuiltinType 0x5605aba9ca70 'int'
| | |-ClassTemplateSpecializationDecl 0x5605abed39f8 <line:2284:3, line:2286:58> line:2285:12 struct decay definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'consteval_move'
| | | | `-RecordType 0x5605abeccf70 'consteval_move'
| | | |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | | |-CXXRecordDecl 0x5605abed3c70 <col:5, col:12> col:12 implicit struct decay
| | | `-TypeAliasDecl 0x5605abed6078 <line:2286:7, col:52> col:13 referenced type 'typename __decay_selector<consteval_move>::type':'consteval_move'
| | |   `-ElaboratedType 0x5605abed6020 'typename __decay_selector<consteval_move>::type' sugar
| | |     `-TypedefType 0x5605abed5ff0 'std::remove_cv<consteval_move>::type' sugar
| | |       |-TypeAlias 0x5605abed5e78 'type'
| | |       `-UnaryTransformType 0x5605abed5e20 '__remove_cv(consteval_move)' sugar remove_cv
| | |         |-SubstTemplateTypeParmType 0x5605abed5de0 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |         | |-ClassTemplateSpecialization 0x5605abed4418 'remove_cv'
| | |         | `-RecordType 0x5605abeccf70 'consteval_move'
| | |         |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |         `-SubstTemplateTypeParmType 0x5605abed5de0 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |           |-ClassTemplateSpecialization 0x5605abed4418 'remove_cv'
| | |           `-RecordType 0x5605abeccf70 'consteval_move'
| | |             `-CXXRecord 0x5605abeccec8 'consteval_move'
| | `-ClassTemplateSpecializationDecl 0x5605abedec48 <line:2284:3, line:2286:58> line:2285:12 struct decay definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'move<false>'
| |   | `-RecordType 0x5605abede560 'move<false>'
| |   |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| |   |-CXXRecordDecl 0x5605abedeec0 <col:5, col:12> col:12 implicit struct decay
| |   `-TypeAliasDecl 0x5605abee01d8 <line:2286:7, col:52> col:13 referenced type 'typename __decay_selector<move<false>>::type':'move<false>'
| |     `-ElaboratedType 0x5605abee0180 'typename __decay_selector<move<false>>::type' sugar
| |       `-TypedefType 0x5605abee0150 'std::remove_cv<move<false>>::type' sugar
| |         |-TypeAlias 0x5605abedffd8 'type'
| |         `-UnaryTransformType 0x5605abedff80 '__remove_cv(move<false>)' sugar remove_cv
| |           |-SubstTemplateTypeParmType 0x5605abedff40 'move<false>' sugar typename depth 0 index 0 _Tp
| |           | |-ClassTemplateSpecialization 0x5605abedf668 'remove_cv'
| |           | `-RecordType 0x5605abede560 'move<false>'
| |           |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| |           `-SubstTemplateTypeParmType 0x5605abedff40 'move<false>' sugar typename depth 0 index 0 _Tp
| |             |-ClassTemplateSpecialization 0x5605abedf668 'remove_cv'
| |             `-RecordType 0x5605abede560 'move<false>'
| |               `-ClassTemplateSpecialization 0x5605abede470 'move'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc64c60 <line:2288:3, line:2290:58> line:2289:12 struct decay definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc64ae0 <line:2288:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc64e40 <line:2289:5, col:12> col:12 implicit struct decay
| | `-TypeAliasDecl 0x5605abc65008 <line:2290:7, col:52> col:13 type 'typename __decay_selector<_Tp>::type'
| |   `-DependentNameType 0x5605abc64f90 'typename __decay_selector<_Tp>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abc65220 <line:2292:3, line:2294:58> line:2293:12 struct decay definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc650a0 <line:2292:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc65400 <line:2293:5, col:12> col:12 implicit struct decay
| | `-TypeAliasDecl 0x5605abc655c8 <line:2294:7, col:52> col:13 type 'typename __decay_selector<_Tp>::type'
| |   `-DependentNameType 0x5605abc65550 'typename __decay_selector<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc657b8 <line:2299:3, line:2303:5> line:2300:12 __strip_reference_wrapper
| | |-TemplateTypeParmDecl 0x5605abc65660 <line:2299:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc65708 <line:2300:5, line:2303:5> line:2300:12 struct __strip_reference_wrapper definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc65a70 <col:5, col:12> col:12 implicit struct __strip_reference_wrapper
| |   `-TypeAliasDecl 0x5605abc65b30 <line:2302:7, col:22> col:13 __type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc656b0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc65660 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc65de0 <line:2305:3, line:2309:5> line:2306:12 struct __strip_reference_wrapper definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| | | `-TemplateSpecializationType 0x5605abb23ba0 'reference_wrapper<type-parameter-0-0>' dependent
| | |   |-name: 'std::reference_wrapper'
| | |   | `-ClassTemplateDecl 0x5605abb23a28 <line:69:3, line:70:11> col:11 reference_wrapper
| | |   `-TemplateArgument type 'type-parameter-0-0'
| | |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc65bc8 <line:2305:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc65fe0 <line:2306:5, col:12> col:12 implicit struct __strip_reference_wrapper
| | `-TypeAliasDecl 0x5605abc660d8 <line:2308:7, col:25> col:13 __type '_Tp &'
| |   `-LValueReferenceType 0x5605abc66090 '_Tp &' dependent
| |     `-TemplateTypeParmType 0x5605abc65c20 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc65bc8 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abc663d0 <line:2312:3, line:2313:44> col:5 __decay_t
| | |-TemplateTypeParmDecl 0x5605abc66170 <line:2312:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc66368 <line:2313:5, col:44> col:11 __decay_t 'typename decay<_Tp>::type'
| |   `-DependentNameType 0x5605abc662f0 'typename decay<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc67320 <line:2315:3, line:2316:71> col:5 __decay_and_strip
| | |-TemplateTypeParmDecl 0x5605abc66430 <line:2315:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc672b8 <line:2316:5, col:71> col:11 __decay_and_strip '__strip_reference_wrapper<__decay_t<_Tp>>'
| |   `-ElaboratedType 0x5605abc67240 '__strip_reference_wrapper<__decay_t<_Tp>>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abc671f0 '__strip_reference_wrapper<__decay_t<_Tp>>' dependent
| |       |-name: '__strip_reference_wrapper':'std::__strip_reference_wrapper' qualified
| |       | `-ClassTemplateDecl 0x5605abc657b8 <line:2299:3, line:2303:5> line:2300:12 __strip_reference_wrapper
| |       `-TemplateArgument type '__decay_t<_Tp>':'typename decay<type-parameter-0-0>::type'
| |         `-ElaboratedType 0x5605abc67130 '__decay_t<_Tp>' sugar dependent
| |           `-TemplateSpecializationType 0x5605abc670e0 '__decay_t<_Tp>' sugar dependent alias
| |             |-name: '__decay_t':'std::__decay_t' qualified
| |             | `-TypeAliasTemplateDecl 0x5605abc663d0 <line:2312:3, line:2313:44> col:5 __decay_t
| |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |             | `-TemplateTypeParmType 0x5605abc66480 '_Tp' dependent depth 0 index 0
| |             |   `-TemplateTypeParm 0x5605abc66430 '_Tp'
| |             `-DependentNameType 0x5605abc67090 'typename decay<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc67950 <line:2322:3, line:2323:59> col:5 _Require
| | |-TemplateTypeParmDecl 0x5605abc67380 <line:2322:12, col:24> col:24 referenced typename depth 0 index 0 ... _Cond
| | `-TypeAliasDecl 0x5605abc678e8 <line:2323:5, col:59> col:11 _Require '__enable_if_t<__and_<_Cond...>::value>':'typename enable_if<__and_<_Cond...>::value, void>::type'
| |   `-ElaboratedType 0x5605abc67870 '__enable_if_t<__and_<_Cond...>::value>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abc67820 '__enable_if_t<__and_<_Cond...>::value>' sugar dependent alias
| |       |-name: '__enable_if_t':'std::__enable_if_t' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abb7a320 <line:137:3, line:138:59> col:5 __enable_if_t
| |       |-TemplateArgument expr '__and_<_Cond...>::value'
| |       | `-ImplicitCastExpr 0x5605abc67598 <line:2323:36, col:54> 'bool' <Dependent>
| |       |   `-DependentScopeDeclRefExpr 0x5605abc67560 <col:36, col:54> '<dependent type>' lvalue
| |       |     `-NestedNameSpecifier TypeSpec '__and_<_Cond...>'
| |       `-DependentNameType 0x5605abc677d0 'typename enable_if<__and_<_Cond...>::value, void>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc67d60 <line:2326:3, line:2328:66> line:2327:5 __remove_cvref_t
| | |-TemplateTypeParmDecl 0x5605abc679b0 <line:2326:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc67cf8 <line:2327:5, line:2328:66> line:2327:11 __remove_cvref_t 'typename remove_cv<typename remove_reference<_Tp>::type>::type'
| |   `-DependentNameType 0x5605abc67c80 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| |-ClassTemplateDecl 0x5605abc68028 <line:2333:3, line:2335:29> line:2334:12 conditional
| | |-NonTypeTemplateParmDecl 0x5605abc67dd0 <line:2333:12, col:17> col:17 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x5605abc67e30 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| | |-TemplateTypeParmDecl 0x5605abc67eb8 <col:42, col:51> col:51 typename depth 0 index 2 _Iffalse
| | `-CXXRecordDecl 0x5605abc67f78 <line:2334:5, line:2335:29> line:2334:12 struct conditional definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc68390 <col:5, col:12> col:12 implicit struct conditional
| |   `-TypeAliasDecl 0x5605abc68450 <line:2335:7, col:20> col:13 type '_Iftrue'
| |     `-TemplateTypeParmType 0x5605abc67e80 '_Iftrue' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abc67e30 '_Iftrue'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc68780 <line:2338:3, line:2340:30> line:2339:12 struct conditional definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abc684e8 <line:2338:12, col:21> col:21 referenced typename depth 0 index 0 _Iftrue
| | |-TemplateTypeParmDecl 0x5605abc68578 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Iffalse
| | |-CXXRecordDecl 0x5605abc68a10 <line:2339:5, col:12> col:12 implicit struct conditional
| | `-TypeAliasDecl 0x5605abc68ad0 <line:2340:7, col:20> col:13 type '_Iffalse'
| |   `-TemplateTypeParmType 0x5605abc685d0 '_Iffalse' dependent depth 0 index 1
| |     `-TemplateTypeParm 0x5605abc68578 '_Iffalse'
| |-ClassTemplateDecl 0x5605abc68cc8 <line:2343:3, line:2344:12> col:12 common_type
| | |-TemplateTypeParmDecl 0x5605abc68b68 <line:2343:12, col:24> col:24 typename depth 0 index 0 ... _Tp
| | |-CXXRecordDecl 0x5605abc68c18 <line:2344:5, col:12> col:12 struct common_type
| | `-ClassTemplateSpecialization 0x5605abc6dc58 'common_type'
| |-ClassTemplateDecl 0x5605abc6ab18 <line:2355:3, line:2357:25> line:2356:12 __success_type
| | |-TemplateTypeParmDecl 0x5605abc6a9b8 <line:2355:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc6aa68 <line:2356:5, line:2357:25> line:2356:12 struct __success_type definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc6add0 <col:5, col:12> col:12 implicit struct __success_type
| |   `-TypeAliasDecl 0x5605abc6ae90 <line:2357:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc6aa10 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc6a9b8 '_Tp'
| |-CXXRecordDecl 0x5605abc6af28 <line:2359:3, line:2360:5> line:2359:10 referenced struct __failure_type definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | `-CXXRecordDecl 0x5605abc6b060 <col:3, col:10> col:10 implicit struct __failure_type
| |-CXXRecordDecl 0x5605abc6b128 <line:2362:3, line:2389:3> line:2362:10 referenced struct __do_common_type_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abc6b260 <col:3, col:10> col:10 implicit struct __do_common_type_impl
| | |-TypeAliasTemplateDecl 0x5605abc6b700 <line:2364:5, line:2366:61> line:2365:7 __cond_t
| | | |-TemplateTypeParmDecl 0x5605abc6b310 <line:2364:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abc6b398 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-TypeAliasDecl 0x5605abc6b698 <line:2365:7, line:2366:61> line:2365:13 __cond_t 'decltype(true ? std::declval<_Tp>() : std::declval<_Up>())'
| | |   `-DecltypeType 0x5605abc6b650 'decltype(true ? std::declval<_Tp>() : std::declval<_Up>())' dependent
| | |     `-ConditionalOperator 0x5605abc6b5e8 <line:2366:13, col:60> '<dependent type>'
| | |       |-CXXBoolLiteralExpr 0x5605abc6b448 <col:13> 'bool' true
| | |       |-CallExpr 0x5605abc6b500 <col:20, col:38> '<dependent type>'
| | |       | `-UnresolvedLookupExpr 0x5605abc6b488 <col:20, col:36> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abbc0190
| | |       |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |       |     `-TemplateTypeParmType 0x5605abc6b360 '_Tp' dependent depth 0 index 0
| | |       |       `-TemplateTypeParm 0x5605abc6b310 '_Tp'
| | |       `-CallExpr 0x5605abc6b5c8 <col:42, col:60> '<dependent type>'
| | |         `-UnresolvedLookupExpr 0x5605abc6b550 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abbc0190
| | |           `-TemplateArgument type '_Up':'type-parameter-0-1'
| | |             `-TemplateTypeParmType 0x5605abc6b3f0 '_Up' dependent depth 0 index 1
| | |               `-TemplateTypeParm 0x5605abc6b398 '_Up'
| | |-FunctionTemplateDecl 0x5605abc6c1c8 <line:2370:5, line:2372:18> col:7 _S_test
| | | |-TemplateTypeParmDecl 0x5605abc6b760 <line:2370:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abc6b7e8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-CXXMethodDecl 0x5605abc6c118 <line:2371:7, line:2372:18> col:7 _S_test '__success_type<__decay_t<__cond_t<_Tp, _Up>>> (int)' static
| | |   `-ParmVarDecl 0x5605abc6bfe0 <col:15> col:18 'int'
| | |-FunctionTemplateDecl 0x5605abc6d358 <line:2377:5, line:2379:20> col:7 _S_test_2
| | | |-TemplateTypeParmDecl 0x5605abc6c248 <line:2377:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abc6c2d8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-CXXMethodDecl 0x5605abc6d2a8 <line:2378:7, line:2379:20> col:7 _S_test_2 '__success_type<__remove_cvref_t<__cond_t<const _Tp &, const _Up &>>> (int)' static
| | |   `-ParmVarDecl 0x5605abc6d170 <col:17> col:20 'int'
| | |-FunctionTemplateDecl 0x5605abc6d6a0 <line:2382:5, line:2384:20> col:7 _S_test_2
| | | |-TemplateTypeParmDecl 0x5605abc6d3d8 <line:2382:14> col:22 typename depth 0 index 0
| | | |-TemplateTypeParmDecl 0x5605abc6d468 <col:24> col:32 typename depth 0 index 1
| | | `-CXXMethodDecl 0x5605abc6d5f0 <line:2383:7, line:2384:20> col:7 _S_test_2 '__failure_type (...)' static
| | `-FunctionTemplateDecl 0x5605abc6db40 <line:2386:5, line:2388:18> col:7 _S_test
| |   |-TemplateTypeParmDecl 0x5605abc6d728 <line:2386:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abc6d7b8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| |   `-CXXMethodDecl 0x5605abc6da90 <line:2387:7, line:2388:18> col:7 _S_test 'decltype(_S_test_2<_Tp, _Up>(0)) (...)' static
| |-ClassTemplateSpecializationDecl 0x5605abc6dc58 <line:2392:3, line:2394:7> line:2393:12 struct common_type definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<>'
| | `-CXXRecordDecl 0x5605abc6de18 <col:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0x5605abc6e060 <line:2397:3, line:2400:7> line:2398:12 struct common_type definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'common_type<_Tp0, _Tp0>'
| | |-TemplateArgument pack '<type-parameter-0-0>'
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc6dee0 <line:2397:12, col:21> col:21 referenced typename depth 0 index 0 _Tp0
| | `-CXXRecordDecl 0x5605abc6e440 <line:2398:5, col:12> col:12 implicit struct common_type
| |-ClassTemplateDecl 0x5605abc6edb8 <line:2403:3, line:2410:5> line:2405:12 __common_type_impl
| | |-TemplateTypeParmDecl 0x5605abc6e508 <line:2403:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abc6e598 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-TemplateTypeParmDecl 0x5605abc6e848 <line:2404:5, col:35> col:14 referenced typename depth 0 index 2 _Dp1
| | | `-TemplateArgument type '__decay_t<_Tp1>':'typename decay<type-parameter-0-0>::type'
| | |   `-ElaboratedType 0x5605abc6e7d0 '__decay_t<_Tp1>' sugar dependent
| | |     `-TemplateSpecializationType 0x5605abc6e780 '__decay_t<_Tp1>' sugar dependent alias
| | |       |-name: '__decay_t':'std::__decay_t' qualified
| | |       | `-TypeAliasTemplateDecl 0x5605abc663d0 <line:2312:3, line:2313:44> col:5 __decay_t
| | |       |-TemplateArgument type '_Tp1':'type-parameter-0-0'
| | |       | `-TemplateTypeParmType 0x5605abc6e560 '_Tp1' dependent depth 0 index 0
| | |       |   `-TemplateTypeParm 0x5605abc6e508 '_Tp1'
| | |       `-DependentNameType 0x5605abc6e730 'typename decay<_Tp1>::type' dependent
| | |-TemplateTypeParmDecl 0x5605abc6ebb8 <line:2404:38, <scratch space>:118:1> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2404:47 referenced typename depth 0 index 3 _Dp2
| | | `-TemplateArgument type '__decay_t<_Tp2>':'typename decay<type-parameter-0-1>::type'
| | |   `-ElaboratedType 0x5605abc6eb40 '__decay_t<_Tp2>' sugar dependent
| | |     `-TemplateSpecializationType 0x5605abc6eaf0 '__decay_t<_Tp2>' sugar dependent alias
| | |       |-name: '__decay_t':'std::__decay_t' qualified
| | |       | `-TypeAliasTemplateDecl 0x5605abc663d0 <line:2312:3, line:2313:44> col:5 __decay_t
| | |       |-TemplateArgument type '_Tp2':'type-parameter-0-1'
| | |       | `-TemplateTypeParmType 0x5605abc6e5f0 '_Tp2' dependent depth 0 index 1
| | |       |   `-TemplateTypeParm 0x5605abc6e598 '_Tp2'
| | |       `-DependentNameType 0x5605abc6eaa0 'typename decay<_Tp2>::type' dependent
| | `-CXXRecordDecl 0x5605abc6ecd0 <line:2405:5, line:2410:5> line:2405:12 struct __common_type_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc6f130 <col:5, col:12> col:12 implicit struct __common_type_impl
| |   `-TypeAliasDecl 0x5605abc6f398 <line:2409:7, col:42> col:13 type 'common_type<_Dp1, _Dp2>'
| |     `-ElaboratedType 0x5605abc6f310 'common_type<_Dp1, _Dp2>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abc6f2b0 'common_type<_Dp1, _Dp2>' dependent
| |         |-name: 'common_type':'std::common_type' qualified
| |         | `-ClassTemplateDecl 0x5605abc68cc8 <line:2343:3, line:2344:12> col:12 common_type
| |         |-TemplateArgument type '_Dp1':'type-parameter-0-2'
| |         | `-TemplateTypeParmType 0x5605abc6e8a0 '_Dp1' dependent depth 0 index 2
| |         |   `-TemplateTypeParm 0x5605abc6e848 '_Dp1'
| |         `-TemplateArgument type '_Dp2':'type-parameter-0-3'
| |           `-TemplateTypeParmType 0x5605abc6ec40 '_Dp2' dependent depth 0 index 3
| |             `-TemplateTypeParm 0x5605abc6ebb8 '_Dp2'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc6f6d8 <line:2412:3, line:2419:5> line:2413:12 struct __common_type_impl definition explicit_specialization
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-private '__do_common_type_impl':'std::__do_common_type_impl'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abc6f430 <line:2412:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abc6f4b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abc6fa08 <line:2413:5, col:12> col:12 implicit struct __common_type_impl
| | `-TypeAliasDecl 0x5605abc6fc48 <line:2418:7, col:51> col:13 type 'decltype(_S_test<_Tp1, _Tp2>(0))'
| |   `-DecltypeType 0x5605abc6fc00 'decltype(_S_test<_Tp1, _Tp2>(0))' dependent
| |     `-CallExpr 0x5605abc6fba8 <col:29, col:50> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x5605abc6fae8 <col:29, col:47> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abc6c1c8 0x5605abc6db40
| |       | |-TemplateArgument type '_Tp1':'type-parameter-0-0'
| |       | | `-TemplateTypeParmType 0x5605abc6f480 '_Tp1' dependent depth 0 index 0
| |       | |   `-TemplateTypeParm 0x5605abc6f430 '_Tp1'
| |       | `-TemplateArgument type '_Tp2':'type-parameter-0-1'
| |       |   `-TemplateTypeParmType 0x5605abc6f510 '_Tp2' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abc6f4b8 '_Tp2'
| |       `-IntegerLiteral 0x5605abc6fb88 <col:49> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0x5605abc6ff40 <line:2422:3, line:2425:7> line:2423:12 struct common_type definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__common_type_impl<_Tp1, _Tp2>::type'
| | |-TemplateArgument pack '<type-parameter-0-0, type-parameter-0-1>'
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abc6fce0 <line:2422:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abc6fd68 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | `-CXXRecordDecl 0x5605abc70828 <line:2423:5, col:12> col:12 implicit struct common_type
| |-ClassTemplateDecl 0x5605abc70a48 <line:2427:3, line:2429:7> line:2428:12 __common_type_pack
| | |-TemplateTypeParmDecl 0x5605abc708f0 <line:2427:12> col:23 typename depth 0 index 0 ...
| | `-CXXRecordDecl 0x5605abc70998 <line:2428:5, line:2429:7> line:2428:12 struct __common_type_pack definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   `-CXXRecordDecl 0x5605abc735f8 <col:5, col:12> col:12 implicit struct __common_type_pack
| |-ClassTemplateDecl 0x5605abc73978 <line:2431:3, line:2432:12> col:12 __common_type_fold
| | |-TemplateTypeParmDecl 0x5605abc736c0 <line:2431:12> col:20 typename depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc73748 <col:22> col:30 typename depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abc737e8 <col:32, col:43> col:41 typename depth 0 index 2
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abc738c8 <line:2432:5, col:12> col:12 struct __common_type_fold
| |-ClassTemplatePartialSpecializationDecl 0x5605abc73fd0 <line:2435:3, line:2439:7> line:2436:12 struct common_type definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__common_type_fold<common_type<_Tp1, _Tp2>, __common_type_pack<_Rp...>>'
| | |-TemplateArgument pack '<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |   `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| | |     `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| | |-TemplateTypeParmDecl 0x5605abc73c58 <line:2435:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abc73ce8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-TemplateTypeParmDecl 0x5605abc73d78 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _Rp
| | `-CXXRecordDecl 0x5605abc74710 <line:2436:5, col:12> col:12 implicit struct common_type
| |-ClassTemplatePartialSpecializationDecl 0x5605abc74d50 <line:2444:3, line:2448:7> line:2445:12 struct __common_type_fold definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'common_type<typename _CTp::type, _Rp...>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type '__common_type_pack<type-parameter-0-1...>'
| | | `-TemplateSpecializationType 0x5605abc749b0 '__common_type_pack<type-parameter-0-1...>' dependent
| | |   |-name: 'std::__common_type_pack'
| | |   | `-ClassTemplateDecl 0x5605abc70a48 <line:2427:3, line:2429:7> line:2428:12 __common_type_pack
| | |   `-TemplateArgument pack '<type-parameter-0-1...>'
| | |     `-TemplateArgument type 'type-parameter-0-1...'
| | |       `-PackExpansionType 0x5605abbd18b0 'type-parameter-0-1...' dependent
| | |         `-TemplateTypeParmType 0x5605abb7cff0 'type-parameter-0-1' dependent contains_unexpanded_pack depth 0 index 1 pack
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abc747d8 <line:2444:12, col:21> col:21 referenced typename depth 0 index 0 _CTp
| | |-TemplateTypeParmDecl 0x5605abc74868 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Rp
| | `-CXXRecordDecl 0x5605abc751e0 <line:2445:5, col:12> col:12 implicit struct __common_type_fold
| |-ClassTemplatePartialSpecializationDecl 0x5605abc75520 <line:2451:3, line:2453:7> line:2452:12 struct __common_type_fold definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abc752a8 <line:2451:12, col:21> col:21 referenced typename depth 0 index 0 _CTp
| | |-TemplateTypeParmDecl 0x5605abc75338 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Rp
| | `-CXXRecordDecl 0x5605abc767c0 <line:2452:5, col:12> col:12 implicit struct __common_type_fold
| |-ClassTemplateDecl 0x5605abc76ab0 <line:2455:3, line:2459:5> line:2456:12 __underlying_type_impl
| | |-TemplateTypeParmDecl 0x5605abc76888 <line:2455:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abc76958 <col:26, col:46> col:31 'bool' depth 0 index 1
| | | `-TemplateArgument <col:33, col:46> expr '__is_enum(_Tp)'
| | |   `-TypeTraitExpr 0x5605abc76920 <col:33, col:46> 'bool' __is_enum
| | |     `-TemplateTypeParmType 0x5605abc768e0 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x5605abc76888 '_Tp'
| | |-CXXRecordDecl 0x5605abc76a00 <line:2456:5, line:2459:5> line:2456:12 struct __underlying_type_impl definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc76dc0 <col:5, col:12> col:12 implicit struct __underlying_type_impl
| | | `-TypeAliasDecl 0x5605abc76f18 <line:2458:7, col:41> col:13 type '__underlying_type(_Tp)'
| | |   `-UnaryTransformType 0x5605abc76ec0 '__underlying_type(_Tp)' dependent underlying_type
| | |     `-TemplateTypeParmType 0x5605abc768e0 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x5605abc76888 '_Tp'
| | |-ClassTemplateSpecializationDecl 0x5605abeae318 <line:2455:3, line:2459:5> line:2456:12 struct __underlying_type_impl definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'ice::errc'
| | | | `-EnumType 0x5605abe9f270 'ice::errc'
| | | |   `-Enum 0x5605abe9f1b8 'errc'
| | | |-TemplateArgument integral 'true'
| | | |-CXXRecordDecl 0x5605abeb0b50 <col:5, col:12> col:12 implicit struct __underlying_type_impl
| | | `-TypeAliasDecl 0x5605abeb0c98 <line:2458:7, col:41> col:13 referenced type '__underlying_type(ice::errc)':'unsigned char'
| | |   `-UnaryTransformType 0x5605abeb0c40 '__underlying_type(ice::errc)' sugar underlying_type
| | |     |-SubstTemplateTypeParmType 0x5605abeb0c00 'ice::errc' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abeae318 '__underlying_type_impl'
| | |     | `-EnumType 0x5605abe9f270 'ice::errc'
| | |     |   `-Enum 0x5605abe9f1b8 'errc'
| | |     `-ElaboratedType 0x5605abe9f140 'std::uint8_t' sugar
| | |       `-UsingType 0x5605abe9f110 'uint8_t' sugar
| | |         |-UsingShadow 0x5605abdfc140 'uint8_t'
| | |         `-TypedefType 0x5605abe9f0e0 'uint8_t' sugar
| | |           |-Typedef 0x5605abdfa518 'uint8_t'
| | |           `-ElaboratedType 0x5605abde9a80 '__uint8_t' sugar
| | |             `-TypedefType 0x5605abde9a50 '__uint8_t' sugar
| | |               |-Typedef 0x5605abde9658 '__uint8_t'
| | |               `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | `-ClassTemplateSpecializationDecl 0x5605abece968 <line:2455:3, line:2459:5> line:2456:12 struct __underlying_type_impl definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'errc'
| |   | `-EnumType 0x5605abec9650 'errc'
| |   |   `-Enum 0x5605abec9590 'errc'
| |   |-TemplateArgument integral 'true'
| |   |-CXXRecordDecl 0x5605abecebd0 <col:5, col:12> col:12 implicit struct __underlying_type_impl
| |   `-TypeAliasDecl 0x5605abeced18 <line:2458:7, col:41> col:13 referenced type '__underlying_type(errc)':'int'
| |     `-UnaryTransformType 0x5605abececc0 '__underlying_type(errc)' sugar underlying_type
| |       |-SubstTemplateTypeParmType 0x5605abecec80 'errc' sugar typename depth 0 index 0 _Tp
| |       | |-ClassTemplateSpecialization 0x5605abece968 '__underlying_type_impl'
| |       | `-EnumType 0x5605abec9650 'errc'
| |       |   `-Enum 0x5605abec9590 'errc'
| |       `-BuiltinType 0x5605aba9ca70 'int'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc77158 <line:2461:3, line:2463:7> line:2462:12 struct __underlying_type_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral 'false'
| | |-TemplateTypeParmDecl 0x5605abc76fb0 <line:2461:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc773a0 <line:2462:5, col:12> col:12 implicit struct __underlying_type_impl
| |-ClassTemplateDecl 0x5605abc775c8 <line:2467:3, line:2470:7> line:2468:12 underlying_type
| | |-TemplateTypeParmDecl 0x5605abc77468 <line:2467:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc77518 <line:2468:5, line:2470:7> line:2468:12 struct underlying_type definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__underlying_type_impl<_Tp>'
| | | `-CXXRecordDecl 0x5605abc779f8 <col:5, col:12> col:12 implicit struct underlying_type
| | |-ClassTemplateSpecializationDecl 0x5605abeae070 <line:2467:3, line:2470:7> line:2468:12 struct underlying_type definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__underlying_type_impl<errc>':'std::__underlying_type_impl<ice::errc>'
| | | |-TemplateArgument type 'ice::errc'
| | | | `-EnumType 0x5605abe9f270 'ice::errc'
| | | |   `-Enum 0x5605abe9f1b8 'errc'
| | | `-CXXRecordDecl 0x5605abeb0d48 <col:5, col:12> col:12 implicit struct underlying_type
| | `-ClassTemplateSpecializationDecl 0x5605abece6b8 <line:2467:3, line:2470:7> line:2468:12 struct underlying_type definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__underlying_type_impl<errc>':'std::__underlying_type_impl<errc>'
| |   |-TemplateArgument type 'errc'
| |   | `-EnumType 0x5605abec9650 'errc'
| |   |   `-Enum 0x5605abec9590 'errc'
| |   `-CXXRecordDecl 0x5605abecedc8 <col:5, col:12> col:12 implicit struct underlying_type
| |-ClassTemplateDecl 0x5605abc77c18 <line:2473:3, line:2477:5> line:2474:12 __declval_protector
| | |-TemplateTypeParmDecl 0x5605abc77ac0 <line:2473:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc77b68 <line:2474:5, line:2477:5> line:2474:12 struct __declval_protector definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc77ed0 <col:5, col:12> col:12 implicit struct __declval_protector
| |   `-VarDecl 0x5605abc77f90 <line:2476:7, col:34> col:25 __stop 'const bool' static cinit
| |     `-CXXBoolLiteralExpr 0x5605abc77ff8 <col:34> 'bool' false
| |-FunctionTemplateDecl 0x5605abc78370 prev 0x5605abbc0190 <line:2484:3, line:2490:5> line:2485:10 declval
| | |-TemplateTypeParmDecl 0x5605abc78088 <line:2484:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x5605abc782c0 prev 0x5605abbc00e0 <line:2485:5, line:2490:5> line:2485:10 declval 'auto () noexcept -> decltype(__declval<_Tp>(0))'
| | | `-CompoundStmt 0x5605abc79b18 <line:2486:5, line:2490:5>
| | |   |-DeclStmt 0x5605abc78540 <line:2487:7, line:2488:37>
| | |   | `-StaticAssertDecl 0x5605abc78500 <line:2487:7, line:2488:36> line:2487:7
| | |   |   |-DependentScopeDeclRefExpr 0x5605abc78488 <col:21, col:47> '<dependent type>' lvalue
| | |   |   | `-NestedNameSpecifier TypeSpec '__declval_protector<_Tp>'
| | |   |   `-StringLiteral 0x5605abc784c0 <line:2488:7> 'NULL TYPE' lvalue "declval() must not be used!"
| | |   `-ReturnStmt 0x5605abc79b08 <line:2489:7, col:30>
| | |     `-CallExpr 0x5605abc79ae0 <col:14, col:30> '<dependent type>'
| | |       |-UnresolvedLookupExpr 0x5605abc78580 <col:14, col:27> '<dependent type>' lvalue (ADL) = '__declval' 0x5605abbbfd58 0x5605abbbf9d8
| | |       | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |       |   `-TemplateTypeParmType 0x5605abc780e0 '_Tp' dependent depth 0 index 0
| | |       |     `-TemplateTypeParm 0x5605abc78088 '_Tp'
| | |       `-IntegerLiteral 0x5605abc79ac0 <col:29> 'int' 0
| | |-Function 0x5605abc02c40 'declval' 'auto () noexcept -> decltype(__declval<void *>(0))'
| | |-Function 0x5605abd27300 'declval' 'auto () noexcept -> decltype(__declval<const std::ranges::__swap::_Swap &>(0))'
| | |-Function 0x5605abdbb5a0 'declval' 'auto () noexcept -> decltype(__declval<bool>(0))'
| | |-Function 0x5605abdcc240 'declval' 'auto () noexcept -> decltype(__declval<void *const &(&)()>(0))'
| | `-Function 0x5605abdd4110 'declval' 'auto () noexcept -> decltype(__declval<void *const &>(0))'
| |-ClassTemplateDecl 0x5605abc79c98 <line:2493:3, line:2494:12> col:12 result_of
| | |-TemplateTypeParmDecl 0x5605abc79b40 <line:2493:12, col:21> col:21 typename depth 0 index 0 _Signature
| | `-CXXRecordDecl 0x5605abc79be8 <line:2494:5, col:12> col:12 struct result_of
| |-CXXRecordDecl 0x5605abc79ee8 <line:2499:3, col:32> col:10 referenced struct __invoke_memfun_ref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | `-CXXRecordDecl 0x5605abc7a020 <col:3, col:10> col:10 implicit struct __invoke_memfun_ref
| |-CXXRecordDecl 0x5605abc7a0e8 <line:2500:3, col:34> col:10 referenced struct __invoke_memfun_deref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | `-CXXRecordDecl 0x5605abc7a220 <col:3, col:10> col:10 implicit struct __invoke_memfun_deref
| |-CXXRecordDecl 0x5605abc7a2e8 <line:2501:3, col:32> col:10 referenced struct __invoke_memobj_ref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | `-CXXRecordDecl 0x5605abc7a420 <col:3, col:10> col:10 implicit struct __invoke_memobj_ref
| |-CXXRecordDecl 0x5605abc7a4e8 <line:2502:3, col:34> col:10 referenced struct __invoke_memobj_deref definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | `-CXXRecordDecl 0x5605abc7a620 <col:3, col:10> col:10 implicit struct __invoke_memobj_deref
| |-CXXRecordDecl 0x5605abc7a6e8 <line:2503:3, col:27> col:10 referenced struct __invoke_other definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | `-CXXRecordDecl 0x5605abc7a820 <col:3, col:10> col:10 implicit struct __invoke_other
| |-ClassTemplateDecl 0x5605abc7aae0 <line:2506:3, line:2508:35> line:2507:12 __result_of_success
| | |-TemplateTypeParmDecl 0x5605abc7a8e8 <line:2506:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc7a978 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tag
| | `-CXXRecordDecl 0x5605abc7aa30 <line:2507:5, line:2508:35> line:2507:12 struct __result_of_success definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__success_type<_Tp>'
| |   |-CXXRecordDecl 0x5605abc7aeb8 <col:5, col:12> col:12 implicit struct __result_of_success
| |   `-TypeAliasDecl 0x5605abc7af78 <line:2508:7, col:29> col:13 __invoke_type '_Tag'
| |     `-TemplateTypeParmType 0x5605abc7a9d0 '_Tag' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abc7a978 '_Tag'
| |-CXXRecordDecl 0x5605abc7b010 <line:2511:3, line:2520:3> line:2511:10 referenced struct __result_of_memfun_ref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abc7b150 <col:3, col:10> col:10 implicit struct __result_of_memfun_ref_impl
| | |-FunctionTemplateDecl 0x5605abc7d018 <line:2513:5, line:2516:42> col:31 _S_test
| | | |-TemplateTypeParmDecl 0x5605abc7b200 <line:2513:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x5605abc7b288 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | |-TemplateTypeParmDecl 0x5605abc7b318 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | | `-CXXMethodDecl 0x5605abc7cf68 <line:2514:7, line:2516:42> col:31 _S_test '__result_of_success<decltype((std::declval<_Tp1>() .* std::declval<_Fp>())(std::declval<_Args>()...)), __invoke_memfun_ref> (int)' static
| | |   `-ParmVarDecl 0x5605abc7b8c8 <col:39> col:42 'int'
| | `-FunctionTemplateDecl 0x5605abc7d218 <line:2518:5, line:2519:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x5605abc7d098 <line:2518:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0x5605abc7d168 <line:2519:7, col:40> col:29 _S_test '__failure_type (...)' static
| |-ClassTemplateDecl 0x5605abc7d578 <line:2522:3, line:2527:5> line:2523:12 __result_of_memfun_ref
| | |-TemplateTypeParmDecl 0x5605abc7d2e8 <line:2522:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc7d378 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x5605abc7d408 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x5605abc7d4c8 <line:2523:5, line:2527:5> line:2523:12 struct __result_of_memfun_ref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-private '__result_of_memfun_ref_impl':'std::__result_of_memfun_ref_impl'
| |   |-CXXRecordDecl 0x5605abc7d998 <col:5, col:12> col:12 implicit struct __result_of_memfun_ref
| |   `-TypeAliasDecl 0x5605abc7dc18 <line:2526:7, col:64> col:13 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
| |     `-DecltypeType 0x5605abc7dbd0 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
| |       `-CallExpr 0x5605abc7db78 <col:29, col:63> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abc7da98 <col:29, col:60> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abc7d018 0x5605abc7d218
| |         | |-TemplateArgument type '_MemPtr':'type-parameter-0-0'
| |         | | `-TemplateTypeParmType 0x5605abc7d340 '_MemPtr' dependent depth 0 index 0
| |         | |   `-TemplateTypeParm 0x5605abc7d2e8 '_MemPtr'
| |         | |-TemplateArgument type '_Arg':'type-parameter-0-1'
| |         | | `-TemplateTypeParmType 0x5605abc7d3d0 '_Arg' dependent depth 0 index 1
| |         | |   `-TemplateTypeParm 0x5605abc7d378 '_Arg'
| |         | `-TemplateArgument type '_Args...':'type-parameter-0-2...'
| |         |   `-PackExpansionType 0x5605abc7d720 '_Args...' dependent
| |         |     `-TemplateTypeParmType 0x5605abc7d460 '_Args' dependent contains_unexpanded_pack depth 0 index 2 pack
| |         |       `-TemplateTypeParm 0x5605abc7d408 '_Args'
| |         `-IntegerLiteral 0x5605abc7db58 <col:62> 'int' 0
| |-CXXRecordDecl 0x5605abc7dcb0 <line:2530:3, line:2539:3> line:2530:10 referenced struct __result_of_memfun_deref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abc7ddf0 <col:3, col:10> col:10 implicit struct __result_of_memfun_deref_impl
| | |-FunctionTemplateDecl 0x5605abc7e7a0 <line:2532:5, line:2535:44> col:33 _S_test
| | | |-TemplateTypeParmDecl 0x5605abc7dea0 <line:2532:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x5605abc7df28 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | |-TemplateTypeParmDecl 0x5605abc7dfb8 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | | `-CXXMethodDecl 0x5605abc7e6f0 <line:2533:7, line:2535:44> col:33 _S_test '__result_of_success<decltype(((*std::declval<_Tp1>()) .* std::declval<_Fp>())(std::declval<_Args>()...)), __invoke_memfun_deref> (int)' static
| | |   `-ParmVarDecl 0x5605abc7e578 <col:41> col:44 'int'
| | `-FunctionTemplateDecl 0x5605abc7e998 <line:2537:5, line:2538:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x5605abc7e820 <line:2537:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0x5605abc7e8e8 <line:2538:7, col:40> col:29 _S_test '__failure_type (...)' static
| |-ClassTemplateDecl 0x5605abc7ecf8 <line:2541:3, line:2546:5> line:2542:12 __result_of_memfun_deref
| | |-TemplateTypeParmDecl 0x5605abc7ea68 <line:2541:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc7eaf8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x5605abc7eb88 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x5605abc7ec48 <line:2542:5, line:2546:5> line:2542:12 struct __result_of_memfun_deref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-private '__result_of_memfun_deref_impl':'std::__result_of_memfun_deref_impl'
| |   |-CXXRecordDecl 0x5605abc7f9c8 <col:5, col:12> col:12 implicit struct __result_of_memfun_deref
| |   `-TypeAliasDecl 0x5605abc7fc18 <line:2545:7, col:64> col:13 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
| |     `-DecltypeType 0x5605abc7fbd0 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
| |       `-CallExpr 0x5605abc7fba8 <col:29, col:63> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abc7fac8 <col:29, col:60> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abc7e7a0 0x5605abc7e998
| |         | |-TemplateArgument type '_MemPtr':'type-parameter-0-0'
| |         | | `-TemplateTypeParmType 0x5605abc7eac0 '_MemPtr' dependent depth 0 index 0
| |         | |   `-TemplateTypeParm 0x5605abc7ea68 '_MemPtr'
| |         | |-TemplateArgument type '_Arg':'type-parameter-0-1'
| |         | | `-TemplateTypeParmType 0x5605abc7eb50 '_Arg' dependent depth 0 index 1
| |         | |   `-TemplateTypeParm 0x5605abc7eaf8 '_Arg'
| |         | `-TemplateArgument type '_Args...':'type-parameter-0-2...'
| |         |   `-PackExpansionType 0x5605abc7eea0 '_Args...' dependent
| |         |     `-TemplateTypeParmType 0x5605abc7ebe0 '_Args' dependent contains_unexpanded_pack depth 0 index 2 pack
| |         |       `-TemplateTypeParm 0x5605abc7eb88 '_Args'
| |         `-IntegerLiteral 0x5605abc7fb88 <col:62> 'int' 0
| |-CXXRecordDecl 0x5605abc7fcb0 <line:2549:3, line:2558:3> line:2549:10 referenced struct __result_of_memobj_ref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abc7fdf0 <col:3, col:10> col:10 implicit struct __result_of_memobj_ref_impl
| | |-FunctionTemplateDecl 0x5605abc805a0 <line:2551:5, line:2554:42> col:31 _S_test
| | | |-TemplateTypeParmDecl 0x5605abc7fea0 <line:2551:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x5605abc7ff28 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | `-CXXMethodDecl 0x5605abc804f0 <line:2552:7, line:2554:42> col:31 _S_test '__result_of_success<decltype(std::declval<_Tp1>() .* std::declval<_Fp>()), __invoke_memobj_ref> (int)' static
| | |   `-ParmVarDecl 0x5605abc80378 <col:39> col:42 'int'
| | `-FunctionTemplateDecl 0x5605abc80830 <line:2556:5, line:2557:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x5605abc80620 <line:2556:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0x5605abc806a8 <col:24> col:32 typename depth 0 index 1
| |   `-CXXMethodDecl 0x5605abc80780 <line:2557:7, col:40> col:29 _S_test '__failure_type (...)' static
| |-ClassTemplateDecl 0x5605abc80af0 <line:2560:3, line:2565:5> line:2561:12 __result_of_memobj_ref
| | |-TemplateTypeParmDecl 0x5605abc80900 <line:2560:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc80988 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x5605abc80a40 <line:2561:5, line:2565:5> line:2561:12 struct __result_of_memobj_ref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-private '__result_of_memobj_ref_impl':'std::__result_of_memobj_ref_impl'
| |   |-CXXRecordDecl 0x5605abc80e58 <col:5, col:12> col:12 implicit struct __result_of_memobj_ref
| |   `-TypeAliasDecl 0x5605abc81068 <line:2564:7, col:54> col:13 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
| |     `-DecltypeType 0x5605abc81020 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
| |       `-CallExpr 0x5605abc80ff8 <col:29, col:53> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abc80f38 <col:29, col:50> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abc805a0 0x5605abc80830
| |         | |-TemplateArgument type '_MemPtr':'type-parameter-0-0'
| |         | | `-TemplateTypeParmType 0x5605abc80950 '_MemPtr' dependent depth 0 index 0
| |         | |   `-TemplateTypeParm 0x5605abc80900 '_MemPtr'
| |         | `-TemplateArgument type '_Arg':'type-parameter-0-1'
| |         |   `-TemplateTypeParmType 0x5605abc809e0 '_Arg' dependent depth 0 index 1
| |         |     `-TemplateTypeParm 0x5605abc80988 '_Arg'
| |         `-IntegerLiteral 0x5605abc80fd8 <col:52> 'int' 0
| |-CXXRecordDecl 0x5605abc81100 <line:2568:3, line:2577:3> line:2568:10 referenced struct __result_of_memobj_deref_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abc81240 <col:3, col:10> col:10 implicit struct __result_of_memobj_deref_impl
| | |-FunctionTemplateDecl 0x5605abc81f20 <line:2570:5, line:2573:44> col:33 _S_test
| | | |-TemplateTypeParmDecl 0x5605abc812f0 <line:2570:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | | |-TemplateTypeParmDecl 0x5605abc81378 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | | `-CXXMethodDecl 0x5605abc81e70 <line:2571:7, line:2573:44> col:33 _S_test '__result_of_success<decltype((*std::declval<_Tp1>()) .* std::declval<_Fp>()), __invoke_memobj_deref> (int)' static
| | |   `-ParmVarDecl 0x5605abc81cf8 <col:41> col:44 'int'
| | `-FunctionTemplateDecl 0x5605abc821b0 <line:2575:5, line:2576:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x5605abc81fa0 <line:2575:14> col:22 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0x5605abc82028 <col:24> col:32 typename depth 0 index 1
| |   `-CXXMethodDecl 0x5605abc82100 <line:2576:7, col:40> col:29 _S_test '__failure_type (...)' static
| |-ClassTemplateDecl 0x5605abc82470 <line:2579:3, line:2584:5> line:2580:12 __result_of_memobj_deref
| | |-TemplateTypeParmDecl 0x5605abc82280 <line:2579:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc82308 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x5605abc823c0 <line:2580:5, line:2584:5> line:2580:12 struct __result_of_memobj_deref definition
| |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-private '__result_of_memobj_deref_impl':'std::__result_of_memobj_deref_impl'
| |   |-CXXRecordDecl 0x5605abc827d8 <col:5, col:12> col:12 implicit struct __result_of_memobj_deref
| |   `-TypeAliasDecl 0x5605abc829e8 <line:2583:7, col:54> col:13 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
| |     `-DecltypeType 0x5605abc829a0 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
| |       `-CallExpr 0x5605abc82978 <col:29, col:53> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abc828b8 <col:29, col:50> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abc81f20 0x5605abc821b0
| |         | |-TemplateArgument type '_MemPtr':'type-parameter-0-0'
| |         | | `-TemplateTypeParmType 0x5605abc822d0 '_MemPtr' dependent depth 0 index 0
| |         | |   `-TemplateTypeParm 0x5605abc82280 '_MemPtr'
| |         | `-TemplateArgument type '_Arg':'type-parameter-0-1'
| |         |   `-TemplateTypeParmType 0x5605abc82360 '_Arg' dependent depth 0 index 1
| |         |     `-TemplateTypeParm 0x5605abc82308 '_Arg'
| |         `-IntegerLiteral 0x5605abc82958 <col:52> 'int' 0
| |-ClassTemplateDecl 0x5605abc82c70 <line:2586:3, line:2587:12> col:12 __result_of_memobj
| | |-TemplateTypeParmDecl 0x5605abc82a80 <line:2586:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc82b08 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x5605abc82bc0 <line:2587:5, col:12> col:12 struct __result_of_memobj
| |-ClassTemplatePartialSpecializationDecl 0x5605abc83268 <line:2589:3, line:2599:5> line:2590:12 struct __result_of_memobj definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | | `-MemberPointerType 0x5605abc830f0 'type-parameter-0-0 type-parameter-0-1::*' dependent
| | |   |-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-2'
| | | `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| | |-TemplateTypeParmDecl 0x5605abc82ef8 <line:2589:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x5605abc82f88 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| | |-TemplateTypeParmDecl 0x5605abc83018 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| | |-CXXRecordDecl 0x5605abc834a0 <line:2590:5, col:12> col:12 implicit struct __result_of_memobj
| | |-TypeAliasDecl 0x5605abc839e8 <line:2592:7, col:44> col:13 referenced _Argval '__remove_cvref_t<_Arg>':'typename remove_cv<typename remove_reference<_Arg>::type>::type'
| | | `-ElaboratedType 0x5605abc83970 '__remove_cvref_t<_Arg>' sugar dependent
| | |   `-TemplateSpecializationType 0x5605abc83920 '__remove_cvref_t<_Arg>' sugar dependent alias
| | |     |-name: '__remove_cvref_t':'std::__remove_cvref_t' qualified
| | |     | `-TypeAliasTemplateDecl 0x5605abc67d60 <line:2326:3, line:2328:66> line:2327:5 __remove_cvref_t
| | |     |-TemplateArgument type '_Arg':'type-parameter-0-2'
| | |     | `-TemplateTypeParmType 0x5605abc83070 '_Arg' dependent depth 0 index 2
| | |     |   `-TemplateTypeParm 0x5605abc83018 '_Arg'
| | |     `-DependentNameType 0x5605abc838d0 'typename remove_cv<typename remove_reference<_Arg>::type>::type' dependent
| | |-TypeAliasDecl 0x5605abc83a98 <line:2593:7, col:36> col:13 referenced _MemPtr '_Res _Class::*'
| | | `-MemberPointerType 0x5605abc83120 '_Res _Class::*' dependent
| | |   |-TemplateTypeParmType 0x5605abc82fe0 '_Class' dependent depth 0 index 1
| | |   | `-TemplateTypeParm 0x5605abc82f88 '_Class'
| | |   `-TemplateTypeParmType 0x5605abc82f50 '_Res' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abc82ef8 '_Res'
| | `-TypeAliasDecl 0x5605abc855b8 <line:2594:7, line:2598:10> line:2594:13 type 'typename __conditional_t<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval>>::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg>>::type'
| |   `-DependentNameType 0x5605abc85540 'typename __conditional_t<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval>>::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg>>::type' dependent
| |-ClassTemplateDecl 0x5605abc858d8 <line:2601:3, line:2602:12> col:12 __result_of_memfun
| | |-TemplateTypeParmDecl 0x5605abc85650 <line:2601:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc856d8 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x5605abc85768 <col:45, col:57> col:57 typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x5605abc85828 <line:2602:5, col:12> col:12 struct __result_of_memfun
| |-ClassTemplatePartialSpecializationDecl 0x5605abc86110 <line:2604:3, line:2613:5> line:2605:12 struct __result_of_memfun definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| | | `-MemberPointerType 0x5605abc830f0 'type-parameter-0-0 type-parameter-0-1::*' dependent
| | |   |-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-2'
| | | `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| | |-TemplateArgument pack '<type-parameter-0-3...>'
| | | `-TemplateArgument type 'type-parameter-0-3...'
| | |   `-PackExpansionType 0x5605abc85f70 'type-parameter-0-3...' dependent
| | |     `-TemplateTypeParmType 0x5605abc85e20 'type-parameter-0-3' dependent contains_unexpanded_pack depth 0 index 3 pack
| | |-TemplateTypeParmDecl 0x5605abc85c18 <line:2604:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| | |-TemplateTypeParmDecl 0x5605abc85ca8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| | |-TemplateTypeParmDecl 0x5605abc85d38 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| | |-TemplateTypeParmDecl 0x5605abc85dc8 <col:59, col:71> col:71 referenced typename depth 0 index 3 ... _Args
| | |-CXXRecordDecl 0x5605abc863d8 <line:2605:5, col:12> col:12 implicit struct __result_of_memfun
| | |-TypeAliasDecl 0x5605abc86598 <line:2607:7, col:56> col:13 referenced _Argval 'typename remove_reference<_Arg>::type'
| | | `-DependentNameType 0x5605abc86520 'typename remove_reference<_Arg>::type' dependent
| | |-TypeAliasDecl 0x5605abc86648 <line:2608:7, col:36> col:13 referenced _MemPtr '_Res _Class::*'
| | | `-MemberPointerType 0x5605abc85ee0 '_Res _Class::*' dependent
| | |   |-TemplateTypeParmType 0x5605abc85d00 '_Class' dependent depth 0 index 1
| | |   | `-TemplateTypeParm 0x5605abc85ca8 '_Class'
| | |   `-TemplateTypeParmType 0x5605abc85c70 '_Res' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abc85c18 '_Res'
| | `-TypeAliasDecl 0x5605abc87d48 <line:2609:7, line:2612:10> line:2609:13 type 'typename __conditional_t<is_base_of<_Class, _Argval>::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...>>::type'
| |   `-DependentNameType 0x5605abc87cd0 'typename __conditional_t<is_base_of<_Class, _Argval>::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...>>::type' dependent
| |-ClassTemplateDecl 0x5605abc88340 <line:2620:3, line:2624:5> line:2621:12 __inv_unwrap
| | |-TemplateTypeParmDecl 0x5605abc87de0 <line:2620:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc881b8 <col:26, <scratch space>:122:1> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2620:35 typename depth 0 index 1 _Up
| | | `-TemplateArgument type '__remove_cvref_t<_Tp>':'typename remove_cv<typename remove_reference<type-parameter-0-0>::type>::type'
| | |   `-ElaboratedType 0x5605abc88140 '__remove_cvref_t<_Tp>' sugar dependent
| | |     `-TemplateSpecializationType 0x5605abc880f0 '__remove_cvref_t<_Tp>' sugar dependent alias
| | |       |-name: '__remove_cvref_t':'std::__remove_cvref_t' qualified
| | |       | `-TypeAliasTemplateDecl 0x5605abc67d60 <line:2326:3, line:2328:66> line:2327:5 __remove_cvref_t
| | |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |       | `-TemplateTypeParmType 0x5605abc87e30 '_Tp' dependent depth 0 index 0
| | |       |   `-TemplateTypeParm 0x5605abc87de0 '_Tp'
| | |       `-DependentNameType 0x5605abc880a0 'typename remove_cv<typename remove_reference<_Tp>::type>::type' dependent
| | `-CXXRecordDecl 0x5605abc88290 <line:2621:5, line:2624:5> line:2621:12 struct __inv_unwrap definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc88630 <col:5, col:12> col:12 implicit struct __inv_unwrap
| |   `-TypeAliasDecl 0x5605abc886f0 <line:2623:7, col:20> col:13 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abc87e30 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc87de0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc88ac8 <line:2626:3, line:2630:5> line:2627:12 struct __inv_unwrap definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'reference_wrapper<type-parameter-0-1>'
| | | `-TemplateSpecializationType 0x5605abc888f0 'reference_wrapper<type-parameter-0-1>' dependent
| | |   |-name: 'std::reference_wrapper'
| | |   | `-ClassTemplateDecl 0x5605abb23a28 <line:69:3, line:70:11> col:11 reference_wrapper
| | |   `-TemplateArgument type 'type-parameter-0-1'
| | |     `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abc88788 <line:2626:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc88818 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0x5605abc88d10 <line:2627:5, col:12> col:12 implicit struct __inv_unwrap
| | `-TypeAliasDecl 0x5605abc88e38 <line:2629:7, col:23> col:13 type '_Up &'
| |   `-LValueReferenceType 0x5605abc88df0 '_Up &' dependent
| |     `-TemplateTypeParmType 0x5605abc88870 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abc88818 '_Up'
| |-ClassTemplateDecl 0x5605abc891b0 <line:2632:3, line:2636:5> line:2633:12 __result_of_impl
| | |-NonTypeTemplateParmDecl 0x5605abc88ee0 <line:2632:12> col:16 'bool' depth 0 index 0
| | |-NonTypeTemplateParmDecl 0x5605abc88f50 <col:18> col:22 'bool' depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abc88fb0 <col:24, col:33> col:33 typename depth 0 index 2 _Functor
| | |-TemplateTypeParmDecl 0x5605abc89038 <col:43, col:55> col:55 typename depth 0 index 3 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abc89100 <line:2633:5, line:2636:5> line:2633:12 struct __result_of_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc8a170 <col:5, col:12> col:12 implicit struct __result_of_impl
| |   `-TypeAliasDecl 0x5605abc8a230 <line:2635:7, col:20> col:13 type '__failure_type':'std::__failure_type'
| |     `-ElaboratedType 0x5605abc6d520 '__failure_type' sugar
| |       `-RecordType 0x5605abc6afd0 'std::__failure_type'
| |         `-CXXRecord 0x5605abc6af28 '__failure_type'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc8a5e8 <line:2638:3, line:2642:7> line:2639:12 struct __result_of_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__result_of_memobj<__decay_t<_MemPtr>, typename __inv_unwrap<_Arg>::type>'
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument pack '<type-parameter-0-1>'
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abc8a2c8 <line:2638:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc8a358 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | `-CXXRecordDecl 0x5605abc8b2b0 <line:2639:5, col:12> col:12 implicit struct __result_of_impl
| |-ClassTemplatePartialSpecializationDecl 0x5605abc8b7a8 <line:2644:3, line:2648:7> line:2645:12 struct __result_of_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__result_of_memfun<__decay_t<_MemPtr>, typename __inv_unwrap<_Arg>::type, _Args...>'
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument pack '<type-parameter-0-1, type-parameter-0-2...>'
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |   `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| | |     `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| | |-TemplateTypeParmDecl 0x5605abc8b378 <line:2644:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| | |-TemplateTypeParmDecl 0x5605abc8b408 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x5605abc8b498 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x5605abc8d4b8 <line:2645:5, col:12> col:12 implicit struct __result_of_impl
| |-CXXRecordDecl 0x5605abc8d580 <line:2651:3, line:2660:3> line:2651:10 referenced struct __result_of_other_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abc8d6c0 <col:3, col:10> col:10 implicit struct __result_of_other_impl
| | |-FunctionTemplateDecl 0x5605abc8de90 <line:2653:5, line:2656:37> col:26 _S_test
| | | |-TemplateTypeParmDecl 0x5605abc8d770 <line:2653:14, col:23> col:23 referenced typename depth 0 index 0 _Fn
| | | |-TemplateTypeParmDecl 0x5605abc8d7f8 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Args
| | | `-CXXMethodDecl 0x5605abc8dde0 <line:2654:7, line:2656:37> col:26 _S_test '__result_of_success<decltype(std::declval<_Fn>()(std::declval<_Args>()...)), __invoke_other> (int)' static
| | |   `-ParmVarDecl 0x5605abc8dc68 <col:34> col:37 'int'
| | `-FunctionTemplateDecl 0x5605abc8e088 <line:2658:5, line:2659:40> col:29 _S_test
| |   |-TemplateTypeParmDecl 0x5605abc8df10 <line:2658:14> col:25 typename depth 0 index 0 ...
| |   `-CXXMethodDecl 0x5605abc8dfd8 <line:2659:7, col:40> col:29 _S_test '__failure_type (...)' static
| |-ClassTemplatePartialSpecializationDecl 0x5605abc8e4b8 <line:2662:3, line:2667:5> line:2663:12 struct __result_of_impl definition explicit_specialization
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-private '__result_of_other_impl':'std::__result_of_other_impl'
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument pack '<type-parameter-0-1...>'
| | | `-TemplateArgument type 'type-parameter-0-1...'
| | |   `-PackExpansionType 0x5605abbd18b0 'type-parameter-0-1...' dependent
| | |     `-TemplateTypeParmType 0x5605abb7cff0 'type-parameter-0-1' dependent contains_unexpanded_pack depth 0 index 1 pack
| | |-TemplateTypeParmDecl 0x5605abc8e158 <line:2662:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0x5605abc8e1e8 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | |-CXXRecordDecl 0x5605abc8e868 <line:2663:5, col:12> col:12 implicit struct __result_of_impl
| | `-TypeAliasDecl 0x5605abc8eab8 <line:2666:7, col:63> col:13 type 'decltype(_S_test<_Functor, _ArgTypes...>(0))'
| |   `-DecltypeType 0x5605abc8ea70 'decltype(_S_test<_Functor, _ArgTypes...>(0))' dependent
| |     `-CallExpr 0x5605abc8ea18 <col:29, col:62> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x5605abc8e958 <col:29, col:59> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abc8de90 0x5605abc8e088
| |       | |-TemplateArgument type '_Functor':'type-parameter-0-0'
| |       | | `-TemplateTypeParmType 0x5605abc8e1b0 '_Functor' dependent depth 0 index 0
| |       | |   `-TemplateTypeParm 0x5605abc8e158 '_Functor'
| |       | `-TemplateArgument type '_ArgTypes...':'type-parameter-0-1...'
| |       |   `-PackExpansionType 0x5605abc8e2e0 '_ArgTypes...' dependent
| |       |     `-TemplateTypeParmType 0x5605abc8e240 '_ArgTypes' dependent contains_unexpanded_pack depth 0 index 1 pack
| |       |       `-TemplateTypeParm 0x5605abc8e1e8 '_ArgTypes'
| |       `-IntegerLiteral 0x5605abc8e9f8 <col:61> 'int' 0
| |-ClassTemplateDecl 0x5605abc8ed40 <line:2670:3, line:2681:7> line:2671:12 __invoke_result
| | |-TemplateTypeParmDecl 0x5605abc8eb50 <line:2670:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0x5605abc8ebd8 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abc8ec90 <line:2671:5, line:2681:7> line:2671:12 struct __invoke_result definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__result_of_impl<is_member_object_pointer<typename remove_reference<_Functor>::type>::value, is_member_function_pointer<typename remove_reference<_Functor>::type>::value, _Functor, _ArgTypes...>::type'
| |   `-CXXRecordDecl 0x5605abc8fdf8 <col:5, col:12> col:12 implicit struct __invoke_result
| |-TypeAliasTemplateDecl 0x5605abc90260 <line:2684:3, line:2685:72> col:5 __invoke_result_t
| | |-TemplateTypeParmDecl 0x5605abc8fec0 <line:2684:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abc8ff48 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x5605abc901f8 <line:2685:5, col:72> col:11 __invoke_result_t 'typename __invoke_result<_Fn, _Args...>::type'
| |   `-DependentNameType 0x5605abc90180 'typename __invoke_result<_Fn, _Args...>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abc90610 <line:2688:3, line:2691:7> line:2689:12 struct result_of definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__invoke_result<_Functor, _ArgTypes...>'
| | |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| | | `-FunctionProtoType 0x5605abc904d0 'type-parameter-0-0 (type-parameter-0-1...)' dependent cdecl
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-PackExpansionType 0x5605abbd18b0 'type-parameter-0-1...' dependent
| | |     `-TemplateTypeParmType 0x5605abb7cff0 'type-parameter-0-1' dependent contains_unexpanded_pack depth 0 index 1 pack
| | |-TemplateTypeParmDecl 0x5605abc902c0 <line:2688:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0x5605abc90348 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | |-DeprecatedAttr 0x5605abc90a38 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:100:19, col:58> "use 'std::invoke_result' instead" ""
| | `-CXXRecordDecl 0x5605abc90950 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2689:5, col:12> col:12 implicit struct result_of
| |-TypeAliasTemplateDecl 0x5605abc90fd0 <line:2697:3, line:2699:93> col:5 aligned_storage_t
| | |-NonTypeTemplateParmDecl 0x5605abc90af8 <line:2697:12, col:19> col:19 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| | |-NonTypeTemplateParmDecl 0x5605abc90ca8 <col:25, line:2698:62> line:2697:32 referenced 'size_t':'unsigned long' depth 0 index 1 _Align
| | | `-TemplateArgument <line:2698:6, col:62> expr '__alignof(typename __aligned_storage_msa<_Len>::__type)'
| | |   `-UnaryExprOrTypeTraitExpr 0x5605abc90c70 <col:6, col:62> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| | `-TypeAliasDecl 0x5605abc90ef8 <line:2699:5, col:93> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
| |   |-DependentNameType 0x5605abc90e80 'typename aligned_storage<_Len, _Align>::type' dependent
| |   `-DeprecatedAttr 0x5605abc90f58 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:139:34> "" ""
| |-TypeAliasTemplateDecl 0x5605abc91430 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2701:3, line:2702:92> col:5 aligned_union_t
| | |-NonTypeTemplateParmDecl 0x5605abc91040 <line:2701:13, col:20> col:20 referenced 'size_t':'unsigned long' depth 0 index 0 _Len
| | |-TemplateTypeParmDecl 0x5605abc910a0 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| | `-TypeAliasDecl 0x5605abc91358 <line:2702:5, col:92> col:11 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
| |   |-DependentNameType 0x5605abc912e0 'typename aligned_union<_Len, _Types...>::type' dependent
| |   `-DeprecatedAttr 0x5605abc913b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:139:34> "" ""
| |-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| | |-TemplateTypeParmDecl 0x5605abc91490 <line:2706:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc91bd8 <line:2707:5, col:42> col:11 decay_t 'typename decay<_Tp>::type'
| |   `-DependentNameType 0x5605abc915d0 'typename decay<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc91fb0 <line:2710:3, line:2711:57> col:5 enable_if_t
| | |-NonTypeTemplateParmDecl 0x5605abc91cb0 <line:2710:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x5605abc91d20 <col:24, col:39> col:33 referenced typename depth 0 index 1 _Tp
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-TypeAliasDecl 0x5605abc91f48 <line:2711:5, col:57> col:11 enable_if_t 'typename enable_if<_Cond, _Tp>::type'
| |   `-DependentNameType 0x5605abc91ed0 'typename enable_if<_Cond, _Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc923f0 <line:2714:3, line:2715:75> col:5 conditional_t
| | |-NonTypeTemplateParmDecl 0x5605abc92020 <line:2714:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| | |-TemplateTypeParmDecl 0x5605abc92080 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| | |-TemplateTypeParmDecl 0x5605abc92108 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Iffalse
| | `-TypeAliasDecl 0x5605abc92388 <line:2715:5, col:75> col:11 conditional_t 'typename conditional<_Cond, _Iftrue, _Iffalse>::type'
| |   `-DependentNameType 0x5605abc92310 'typename conditional<_Cond, _Iftrue, _Iffalse>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc92720 <line:2718:3, line:2719:57> col:5 common_type_t
| | |-TemplateTypeParmDecl 0x5605abc92450 <line:2718:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tp
| | `-TypeAliasDecl 0x5605abc926b8 <line:2719:5, col:57> col:11 common_type_t 'typename common_type<_Tp...>::type'
| |   `-DependentNameType 0x5605abc92640 'typename common_type<_Tp...>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc929e0 <line:2722:3, line:2723:62> col:5 underlying_type_t
| | |-TemplateTypeParmDecl 0x5605abc92780 <line:2722:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc92978 <line:2723:5, col:62> col:11 underlying_type_t 'typename underlying_type<_Tp>::type'
| |   `-DependentNameType 0x5605abc92900 'typename underlying_type<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc92ca0 <line:2726:3, line:2727:50> col:5 result_of_t
| | |-TemplateTypeParmDecl 0x5605abc92a40 <line:2726:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc92c38 <line:2727:5, col:50> col:11 result_of_t 'typename result_of<_Tp>::type'
| |   `-DependentNameType 0x5605abc92bc0 'typename result_of<_Tp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc92e20 <line:2732:3, col:40> col:25 void_t
| | |-TemplateTypeParmDecl 0x5605abc92d00 <col:12> col:23 typename depth 0 index 0 ...
| | `-TypeAliasDecl 0x5605abc92db8 <col:25, col:40> col:31 void_t 'void'
| |   `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplateDecl 0x5605abc931b8 <line:2742:3, line:2747:5> line:2743:12 __detected_or
| | |-TemplateTypeParmDecl 0x5605abc92e80 <line:2742:12, col:21> col:21 referenced typename depth 0 index 0 _Def
| | |-TemplateTemplateParmDecl 0x5605abc92fe8 <col:27, col:55> col:55 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0x5605abc92f08 <col:36> col:47 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0x5605abc93048 <col:60, col:72> col:72 typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x5605abc93108 <line:2743:5, line:2747:5> line:2743:12 struct __detected_or definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc93690 <col:5, col:12> col:12 implicit struct __detected_or
| |   |-TypeAliasDecl 0x5605abc93750 <line:2745:7, col:20> col:13 type '_Def'
| |   | `-TemplateTypeParmType 0x5605abc92ed0 '_Def' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abc92e80 '_Def'
| |   `-TypeAliasDecl 0x5605abc937c8 <line:2746:7, col:29> col:13 __is_detected 'false_type':'std::integral_constant<bool, false>'
| |     `-ElaboratedType 0x5605abb7d300 'false_type' sugar
| |       `-TypedefType 0x5605abb7d2d0 'std::false_type' sugar
| |         |-TypeAlias 0x5605abb57a98 'false_type'
| |         `-ElaboratedType 0x5605abb57a20 '__bool_constant<false>' sugar
| |           `-TemplateSpecializationType 0x5605abb579d0 '__bool_constant<false>' sugar alias
| |             |-name: '__bool_constant':'std::__bool_constant' qualified
| |             | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |             |-TemplateArgument expr 'false'
| |             | `-ConstantExpr 0x5605abb57708 <line:114:38> 'bool'
| |             |   |-value: Int 0
| |             |   `-CXXBoolLiteralExpr 0x5605abb576f8 <col:38> 'bool' false
| |             `-ElaboratedType 0x5605abb57970 'integral_constant<bool, false>' sugar
| |               `-TemplateSpecializationType 0x5605abb57910 'integral_constant<bool, false>' sugar
| |                 |-name: 'integral_constant':'std::integral_constant' qualified
| |                 | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |                 |-TemplateArgument type 'bool'
| |                 | `-BuiltinType 0x5605aba9c9f0 'bool'
| |                 |-TemplateArgument expr 'false'
| |                 | `-ConstantExpr 0x5605abb577b8 <line:107:53> 'bool'
| |                 |   |-value: Int 0
| |                 |   `-SubstNonTypeTemplateParmExpr 0x5605abb57770 <col:53> 'bool'
| |                 |     |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |                 |     `-CXXBoolLiteralExpr 0x5605abb57760 <line:107:53> 'bool' false
| |                 `-RecordType 0x5605abb578f0 'std::integral_constant<bool, false>'
| |                   `-ClassTemplateSpecialization 0x5605abb577e0 'integral_constant'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc94f20 <line:2750:3, line:2756:5> line:2752:12 struct __detected_or definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument template 'template-parameter-0-1'
| | | `-TemplateTemplateParmDecl 0x5605abc93468 <<invalid sloc>> <invalid sloc> depth 0 index 1
| | |-TemplateArgument pack '<type-parameter-0-2...>'
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |   `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| | |     `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| | |-TemplateTypeParmDecl 0x5605abc93878 <line:2750:12, col:21> col:21 referenced typename depth 0 index 0 _Def
| | |-TemplateTemplateParmDecl 0x5605abc939b8 <col:27, col:55> col:55 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0x5605abc93908 <col:36> col:47 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0x5605abc93a18 <col:60, col:72> col:72 referenced typename depth 0 index 2 ... _Args
| | |-RequiresExpr 0x5605abc94ae8 <line:2751:14, col:49> 'bool'
| | | `-TypeRequirement 0x5605abc94ad0 dependent
| | |   `-ElaboratedType 0x5605abc94a70 'typename _Op<_Args...>' sugar dependent
| | |     `-TemplateSpecializationType 0x5605abc94a20 '_Op<_Args...>' dependent
| | |       |-name: '_Op':'template-parameter-0-1' qualified
| | |       | `-TemplateTemplateParmDecl 0x5605abc939b8 <line:2750:27, col:55> col:55 depth 0 index 1 _Op
| | |       `-TemplateArgument type '_Args...':'type-parameter-0-2...'
| | |         `-PackExpansionType 0x5605abc93b20 '_Args...' dependent
| | |           `-TemplateTypeParmType 0x5605abc93a70 '_Args' dependent contains_unexpanded_pack depth 0 index 2 pack
| | |             `-TemplateTypeParm 0x5605abc93a18 '_Args'
| | |-CXXRecordDecl 0x5605abc958c0 <line:2752:5, col:12> col:12 implicit struct __detected_or
| | |-TypeAliasDecl 0x5605abc95ab8 <line:2754:7, col:32> col:13 type '_Op<_Args...>'
| | | `-ElaboratedType 0x5605abc95a40 '_Op<_Args...>' sugar dependent
| | |   `-TemplateSpecializationType 0x5605abc959f0 '_Op<_Args...>' dependent
| | |     |-name: '_Op':'template-parameter-0-1' qualified
| | |     | `-TemplateTemplateParmDecl 0x5605abc939b8 <line:2750:27, col:55> col:55 depth 0 index 1 _Op
| | |     `-TemplateArgument type '_Args...':'type-parameter-0-2...'
| | |       `-PackExpansionType 0x5605abc93b20 '_Args...' dependent
| | |         `-TemplateTypeParmType 0x5605abc93a70 '_Args' dependent contains_unexpanded_pack depth 0 index 2 pack
| | |           `-TemplateTypeParm 0x5605abc93a18 '_Args'
| | `-TypeAliasDecl 0x5605abc95b30 <line:2755:7, col:29> col:13 __is_detected 'true_type':'std::integral_constant<bool, true>'
| |   `-ElaboratedType 0x5605abb7dcd0 'true_type' sugar
| |     `-TypedefType 0x5605abb7dca0 'std::true_type' sugar
| |       |-TypeAlias 0x5605abb57698 'true_type'
| |       `-ElaboratedType 0x5605abb54bf0 '__bool_constant<true>' sugar
| |         `-TemplateSpecializationType 0x5605abb54ba0 '__bool_constant<true>' sugar alias
| |           |-name: '__bool_constant':'std::__bool_constant' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |           |-TemplateArgument expr 'true'
| |           | `-ConstantExpr 0x5605abb548d8 <line:111:38> 'bool'
| |           |   |-value: Int 1
| |           |   `-CXXBoolLiteralExpr 0x5605abb548b0 <col:38> 'bool' true
| |           `-ElaboratedType 0x5605abb54b40 'integral_constant<bool, true>' sugar
| |             `-TemplateSpecializationType 0x5605abb54ae0 'integral_constant<bool, true>' sugar
| |               |-name: 'integral_constant':'std::integral_constant' qualified
| |               | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |               |-TemplateArgument type 'bool'
| |               | `-BuiltinType 0x5605aba9c9f0 'bool'
| |               |-TemplateArgument expr 'true'
| |               | `-ConstantExpr 0x5605abb54988 <line:107:53> 'bool'
| |               |   |-value: Int 1
| |               |   `-SubstNonTypeTemplateParmExpr 0x5605abb54940 <col:53> 'bool'
| |               |     |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               |     `-CXXBoolLiteralExpr 0x5605abb54930 <line:107:53> 'bool' true
| |               `-RecordType 0x5605abb54ac0 'std::integral_constant<bool, true>'
| |                 `-ClassTemplateSpecialization 0x5605abb549b0 'integral_constant'
| |-TypeAliasTemplateDecl 0x5605abc96350 <line:2782:3, line:2785:58> line:2784:5 __detected_or_t
| | |-TemplateTypeParmDecl 0x5605abc95be0 <line:2782:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| | |-TemplateTemplateParmDecl 0x5605abc95d18 <col:31, col:59> col:59 depth 0 index 1 _Op
| | | `-TemplateTypeParmDecl 0x5605abc95c68 <col:40> col:51 typename depth 1 index 0 ...
| | |-TemplateTypeParmDecl 0x5605abc95d78 <line:2783:5, col:17> col:17 referenced typename depth 0 index 2 ... _Args
| | `-TypeAliasDecl 0x5605abc962e8 <line:2784:5, line:2785:58> line:2784:11 __detected_or_t 'typename __detected_or<_Default, _Op, _Args...>::type'
| |   `-DependentNameType 0x5605abc96270 'typename __detected_or<_Default, _Op, _Args...>::type' dependent
| |-ClassTemplateDecl 0x5605abc96508 <line:2801:3, line:2802:12> col:12 __is_swappable
| | |-TemplateTypeParmDecl 0x5605abc963b0 <line:2801:13, col:22> col:22 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc96458 <line:2802:5, col:12> col:12 struct __is_swappable
| |-ClassTemplateDecl 0x5605abc968b8 <line:2804:3, line:2805:12> col:12 __is_nothrow_swappable
| | |-TemplateTypeParmDecl 0x5605abc96758 <line:2804:13, col:22> col:22 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc96808 <line:2805:5, col:12> col:12 struct __is_nothrow_swappable
| |-ClassTemplateDecl 0x5605abc97548 <line:2807:3, line:2809:7> line:2808:12 __is_tuple_like_impl
| | |-TemplateTypeParmDecl 0x5605abc973e8 <line:2807:12> col:20 typename depth 0 index 0
| | `-CXXRecordDecl 0x5605abc97498 <line:2808:5, line:2809:7> line:2808:12 struct __is_tuple_like_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   `-CXXRecordDecl 0x5605abc97840 <col:5, col:12> col:12 implicit struct __is_tuple_like_impl
| |-ClassTemplateDecl 0x5605abc97a68 <line:2812:3, line:2815:7> line:2813:12 __is_tuple_like
| | |-TemplateTypeParmDecl 0x5605abc97908 <line:2812:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc979b8 <line:2813:5, line:2815:7> line:2813:12 struct __is_tuple_like definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_tuple_like_impl<__remove_cvref_t<_Tp>>::type'
| |   `-CXXRecordDecl 0x5605abc98238 <col:5, col:12> col:12 implicit struct __is_tuple_like
| |-FunctionTemplateDecl 0x5605abc9a578 <line:2818:3, line:2826:53> line:2824:5 swap
| | |-TemplateTypeParmDecl 0x5605abc98300 <line:2818:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abc9a4c8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:191:32, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2826:53> line:2824:5 constexpr swap '_Require<__not_<__is_tuple_like<_Tp>>, is_move_constructible<_Tp>, is_move_assignable<_Tp>> (_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp>>::value)' inline
| |   |-ParmVarDecl 0x5605abc98f08 <col:10, col:13> col:14 '_Tp &'
| |   `-ParmVarDecl 0x5605abc98f88 <col:16, col:19> col:20 '_Tp &'
| |-FunctionTemplateDecl 0x5605abc9b188 <line:2828:3, line:2833:48> line:2832:5 swap
| | |-TemplateTypeParmDecl 0x5605abc9a668 <line:2828:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abc9a708 <col:26, col:33> col:33 referenced 'size_t':'unsigned long' depth 0 index 1 _Nm
| | `-FunctionDecl 0x5605abc9b0d8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:191:32, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2833:48> line:2832:5 constexpr swap '__enable_if_t<__is_swappable<_Tp>::value> (_Tp (&)[_Nm], _Tp (&)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
| |   |-ParmVarDecl 0x5605abc9ace8 <col:10, col:24> col:16 __a '_Tp (&)[_Nm]'
| |   `-ParmVarDecl 0x5605abc9ae48 <col:27, col:41> col:33 __b '_Tp (&)[_Nm]'
| |-NamespaceDecl 0x5605abc9b288 <line:2836:3, line:2860:3> line:2836:13 __swappable_details
| | |-UsingDecl 0x5605abc9b320 <line:2837:5, col:16> col:16 std::swap
| | | `-NestedNameSpecifier Namespace 0x5605abb237d0 'std'
| | |-UsingShadowDecl 0x5605abc9b380 <col:16> col:16 implicit FunctionTemplate 0x5605abc9a578 'swap'
| | |-UsingShadowDecl 0x5605abc9b3f0 <col:16> col:16 implicit FunctionTemplate 0x5605abc9b188 'swap'
| | |-CXXRecordDecl 0x5605abc9b480 <line:2839:5, line:2847:5> line:2839:12 referenced struct __do_is_swappable_impl definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abc9b5c0 <col:5, col:12> col:12 implicit struct __do_is_swappable_impl
| | | |-FunctionTemplateDecl 0x5605abc9bc28 <line:2841:7, line:2843:36> col:26 __test
| | | | |-TemplateTypeParmDecl 0x5605abc9b670 <line:2841:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abc9b9a8 <col:30, line:2842:75> col:16 typename depth 0 index 1
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))'
| | | | |   `-DecltypeType 0x5605abc9b960 'decltype(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))' dependent
| | | | |     `-CallExpr 0x5605abc9b900 <col:27, col:74> '<dependent type>'
| | | | |       |-UnresolvedLookupExpr 0x5605abc9b6f0 <col:27> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5605abc9b3f0 0x5605abc9b380
| | | | |       |-CallExpr 0x5605abc9b818 <col:32, col:51> '<dependent type>'
| | | | |       | `-UnresolvedLookupExpr 0x5605abc9b7a0 <col:32, col:49> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | | |       |   `-TemplateArgument type '_Tp &':'type-parameter-0-0 &'
| | | | |       |     `-LValueReferenceType 0x5605abc9b740 '_Tp &' dependent
| | | | |       |       `-TemplateTypeParmType 0x5605abc9b6c0 '_Tp' dependent depth 0 index 0
| | | | |       |         `-TemplateTypeParm 0x5605abc9b670 '_Tp'
| | | | |       `-CallExpr 0x5605abc9b8e0 <col:54, col:73> '<dependent type>'
| | | | |         `-UnresolvedLookupExpr 0x5605abc9b868 <col:54, col:71> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | | |           `-TemplateArgument type '_Tp &':'type-parameter-0-0 &'
| | | | |             `-LValueReferenceType 0x5605abc9b740 '_Tp &' dependent
| | | | |               `-TemplateTypeParmType 0x5605abc9b6c0 '_Tp' dependent depth 0 index 0
| | | | |                 `-TemplateTypeParm 0x5605abc9b670 '_Tp'
| | | | `-CXXMethodDecl 0x5605abc9bb78 <line:2843:9, col:36> col:26 __test 'true_type (int)' static
| | | |   `-ParmVarDecl 0x5605abc9ba98 <col:33> col:36 'int'
| | | `-FunctionTemplateDecl 0x5605abc9be28 <line:2845:7, line:2846:37> col:27 __test
| | |   |-TemplateTypeParmDecl 0x5605abc9bca8 <line:2845:16> col:24 typename depth 0 index 0
| | |   `-CXXMethodDecl 0x5605abc9bd78 <line:2846:9, col:37> col:27 __test 'false_type (...)' static
| | `-CXXRecordDecl 0x5605abc9bef8 <line:2849:5, line:2858:5> line:2849:12 referenced struct __do_is_nothrow_swappable_impl definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc9c030 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_impl
| |   |-FunctionTemplateDecl 0x5605abc9e548 <line:2851:7, line:2854:21> col:11 __test
| |   | |-TemplateTypeParmDecl 0x5605abc9c0e0 <line:2851:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   | `-CXXMethodDecl 0x5605abc9e498 <line:2852:9, line:2854:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))> (int)' static
| |   |   `-ParmVarDecl 0x5605abc9e320 <col:18> col:21 'int'
| |   `-FunctionTemplateDecl 0x5605abc9e748 <line:2856:7, line:2857:37> col:27 __test
| |     |-TemplateTypeParmDecl 0x5605abc9e5c8 <line:2856:16> col:24 typename depth 0 index 0
| |     `-CXXMethodDecl 0x5605abc9e698 <line:2857:9, col:37> col:27 __test 'false_type (...)' static
| |-ClassTemplateDecl 0x5605abc9e978 <line:2862:3, line:2867:5> line:2863:12 __is_swappable_impl
| | |-TemplateTypeParmDecl 0x5605abc9e818 <line:2862:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc9e8c8 <line:2863:5, line:2867:5> line:2863:12 struct __is_swappable_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
| |   |-CXXRecordDecl 0x5605abc9ecf0 <col:5, col:12> col:12 implicit struct __is_swappable_impl
| |   `-TypeAliasDecl 0x5605abc9eed8 <line:2866:7, col:43> col:13 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x5605abc9ee90 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x5605abc9ee60 <col:29, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abc9edc0 <col:29, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abc9bc28 0x5605abc9be28
| |         | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         |   `-TemplateTypeParmType 0x5605abc9e870 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abc9e818 '_Tp'
| |         `-IntegerLiteral 0x5605abc9ee40 <col:41> 'int' 0
| |-ClassTemplateDecl 0x5605abc9f0c8 <line:2869:3, line:2874:5> line:2870:12 __is_nothrow_swappable_impl
| | |-TemplateTypeParmDecl 0x5605abc9ef70 <line:2869:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc9f018 <line:2870:5, line:2874:5> line:2870:12 struct __is_nothrow_swappable_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
| |   |-CXXRecordDecl 0x5605abc9f430 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_impl
| |   `-TypeAliasDecl 0x5605abc9f618 <line:2873:7, col:43> col:13 type 'decltype(__test<_Tp>(0))'
| |     `-DecltypeType 0x5605abc9f5d0 'decltype(__test<_Tp>(0))' dependent
| |       `-CallExpr 0x5605abc9f5a0 <col:29, col:42> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abc9f500 <col:29, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abc9e548 0x5605abc9e748
| |         | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         |   `-TemplateTypeParmType 0x5605abc9efc0 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abc9ef70 '_Tp'
| |         `-IntegerLiteral 0x5605abc9f580 <col:41> 'int' 0
| |-ClassTemplateDecl 0x5605abc9f7f0 prev 0x5605abc96508 <line:2876:3, line:2879:7> line:2877:12 __is_swappable
| | |-TemplateTypeParmDecl 0x5605abc9f6b0 <line:2876:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc9f758 prev 0x5605abc96458 <line:2877:5, line:2879:7> line:2877:12 struct __is_swappable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0x5605abc9fa38 <col:5, col:12> col:12 implicit struct __is_swappable
| |-ClassTemplateDecl 0x5605abc9fc40 prev 0x5605abc968b8 <line:2881:3, line:2884:7> line:2882:12 __is_nothrow_swappable
| | |-TemplateTypeParmDecl 0x5605abc9fb00 <line:2881:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc9fba8 prev 0x5605abc96808 <line:2882:5, line:2884:7> line:2882:12 struct __is_nothrow_swappable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_swappable_impl<_Tp>::type'
| |   `-CXXRecordDecl 0x5605abca08b8 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable
| |-ClassTemplateDecl 0x5605abca0ad8 <line:2891:3, line:2897:5> line:2892:12 is_swappable
| | |-TemplateTypeParmDecl 0x5605abca0980 <line:2891:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abca0a28 <line:2892:5, line:2897:5> line:2892:12 struct is_swappable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_swappable_impl<_Tp>::type'
| |   |-CXXRecordDecl 0x5605abca0ed8 <col:5, col:12> col:12 implicit struct is_swappable
| |   `-StaticAssertDecl 0x5605abca11b0 <line:2895:7, line:2896:68> line:2895:7
| |     |-CallExpr 0x5605abca1128 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abca0fa0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abca1100 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abca10c0 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abca1150 <line:2896:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abca1368 <line:2900:3, line:2906:5> line:2901:12 is_nothrow_swappable
| | |-TemplateTypeParmDecl 0x5605abca1210 <line:2900:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abca12b8 <line:2901:5, line:2906:5> line:2901:12 struct is_nothrow_swappable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_swappable_impl<_Tp>::type'
| |   |-CXXRecordDecl 0x5605abca1768 <col:5, col:12> col:12 implicit struct is_nothrow_swappable
| |   `-StaticAssertDecl 0x5605abca1a40 <line:2904:7, line:2905:68> line:2904:7
| |     |-CallExpr 0x5605abca19b8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abca1830 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abca1990 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abca1950 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abca19e0 <line:2905:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-VarTemplateDecl 0x5605abca1bc8 <line:2910:3, line:2912:26> line:2911:38 is_swappable_v
| | |-TemplateTypeParmDecl 0x5605abca1aa0 <line:2910:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abca1b58 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:207:29, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2912:26> line:2911:38 is_swappable_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abca1cd8 <line:2912:7, col:26> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_swappable<_Tp>'
| |-VarTemplateDecl 0x5605abca1e58 <line:2915:3, line:2917:34> line:2916:38 is_nothrow_swappable_v
| | |-TemplateTypeParmDecl 0x5605abca1d30 <line:2915:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abca1de8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:207:29, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2917:34> line:2916:38 is_nothrow_swappable_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abca1f68 <line:2917:7, col:34> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_nothrow_swappable<_Tp>'
| |-NamespaceDecl 0x5605abca1fc0 <line:2921:3, line:2949:3> line:2921:13 __swappable_with_details
| | |-UsingDecl 0x5605abca2058 <line:2922:5, col:16> col:16 std::swap
| | | `-NestedNameSpecifier Namespace 0x5605abb237d0 'std'
| | |-UsingShadowDecl 0x5605abca20b8 <col:16> col:16 implicit FunctionTemplate 0x5605abc9a578 'swap'
| | |-UsingShadowDecl 0x5605abca2128 <col:16> col:16 implicit FunctionTemplate 0x5605abc9b188 'swap'
| | |-CXXRecordDecl 0x5605abca21b8 <line:2924:5, line:2934:5> line:2924:12 referenced struct __do_is_swappable_with_impl definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abca22f0 <col:5, col:12> col:12 implicit struct __do_is_swappable_with_impl
| | | |-FunctionTemplateDecl 0x5605abca47b8 <line:2926:7, line:2930:36> col:26 __test
| | | | |-TemplateTypeParmDecl 0x5605abca23a0 <line:2926:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abca2428 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | |-TemplateTypeParmDecl 0x5605abca2738 <col:44, line:2927:73> col:16 typename depth 0 index 2
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp>(), std::declval<_Up>()))'
| | | | |   `-DecltypeType 0x5605abca26f0 'decltype(swap(std::declval<_Tp>(), std::declval<_Up>()))' dependent
| | | | |     `-CallExpr 0x5605abca2690 <col:27, col:72> '<dependent type>'
| | | | |       |-UnresolvedLookupExpr 0x5605abca24b0 <col:27> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5605abca2128 0x5605abca20b8
| | | | |       |-CallExpr 0x5605abca25a8 <col:32, col:50> '<dependent type>'
| | | | |       | `-UnresolvedLookupExpr 0x5605abca2530 <col:32, col:48> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | | |       |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | | |       |     `-TemplateTypeParmType 0x5605abca23f0 '_Tp' dependent depth 0 index 0
| | | | |       |       `-TemplateTypeParm 0x5605abca23a0 '_Tp'
| | | | |       `-CallExpr 0x5605abca2670 <col:53, col:71> '<dependent type>'
| | | | |         `-UnresolvedLookupExpr 0x5605abca25f8 <col:53, col:69> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | | |           `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | | |             `-TemplateTypeParmType 0x5605abca2480 '_Up' dependent depth 0 index 1
| | | | |               `-TemplateTypeParm 0x5605abca2428 '_Up'
| | | | |-TemplateTypeParmDecl 0x5605abca4528 <line:2928:16, line:2929:73> col:16 typename depth 0 index 3
| | | | | `-TemplateArgument type 'decltype(swap(std::declval<_Up>(), std::declval<_Tp>()))'
| | | | |   `-DecltypeType 0x5605abca44e0 'decltype(swap(std::declval<_Up>(), std::declval<_Tp>()))' dependent
| | | | |     `-CallExpr 0x5605abca4480 <col:27, col:72> '<dependent type>'
| | | | |       |-UnresolvedLookupExpr 0x5605abca27e0 <col:27> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5605abca2128 0x5605abca20b8
| | | | |       |-CallExpr 0x5605abca4398 <col:32, col:50> '<dependent type>'
| | | | |       | `-UnresolvedLookupExpr 0x5605abca4320 <col:32, col:48> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | | |       |   `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | | |       |     `-TemplateTypeParmType 0x5605abca2480 '_Up' dependent depth 0 index 1
| | | | |       |       `-TemplateTypeParm 0x5605abca2428 '_Up'
| | | | |       `-CallExpr 0x5605abca4460 <col:53, col:71> '<dependent type>'
| | | | |         `-UnresolvedLookupExpr 0x5605abca43e8 <col:53, col:69> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | | |           `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | | |             `-TemplateTypeParmType 0x5605abca23f0 '_Tp' dependent depth 0 index 0
| | | | |               `-TemplateTypeParm 0x5605abca23a0 '_Tp'
| | | | `-CXXMethodDecl 0x5605abca4708 <line:2930:9, col:36> col:26 __test 'true_type (int)' static
| | | |   `-ParmVarDecl 0x5605abca4628 <col:33> col:36 'int'
| | | `-FunctionTemplateDecl 0x5605abca4a50 <line:2932:7, line:2933:37> col:27 __test
| | |   |-TemplateTypeParmDecl 0x5605abca4838 <line:2932:16> col:24 typename depth 0 index 0
| | |   |-TemplateTypeParmDecl 0x5605abca48c8 <col:26> col:34 typename depth 0 index 1
| | |   `-CXXMethodDecl 0x5605abca49a0 <line:2933:9, col:37> col:27 __test 'false_type (...)' static
| | `-CXXRecordDecl 0x5605abca4b20 <line:2936:5, line:2947:5> line:2936:12 referenced struct __do_is_nothrow_swappable_with_impl definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abca4c60 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_with_impl
| |   |-FunctionTemplateDecl 0x5605abca5758 <line:2938:7, line:2943:21> col:11 __test
| |   | |-TemplateTypeParmDecl 0x5605abca4d10 <line:2938:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x5605abca4d98 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| |   | `-CXXMethodDecl 0x5605abca56a8 <line:2939:9, line:2943:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp>(), std::declval<_Up>())) && noexcept(swap(std::declval<_Up>(), std::declval<_Tp>()))> (int)' static
| |   |   `-ParmVarDecl 0x5605abca5530 <col:18> col:21 'int'
| |   `-FunctionTemplateDecl 0x5605abca59f0 <line:2945:7, line:2946:37> col:27 __test
| |     |-TemplateTypeParmDecl 0x5605abca57d8 <line:2945:16> col:24 typename depth 0 index 0
| |     |-TemplateTypeParmDecl 0x5605abca5868 <col:26> col:34 typename depth 0 index 1
| |     `-CXXMethodDecl 0x5605abca5940 <line:2946:9, col:37> col:27 __test 'false_type (...)' static
| |-ClassTemplateDecl 0x5605abca5cb0 <line:2951:3, line:2956:5> line:2952:12 __is_swappable_with_impl
| | |-TemplateTypeParmDecl 0x5605abca5ac0 <line:2951:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abca5b48 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abca5c00 <line:2952:5, line:2956:5> line:2952:12 struct __is_swappable_with_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__swappable_with_details::__do_is_swappable_with_impl':'std::__swappable_with_details::__do_is_swappable_with_impl'
| |   |-CXXRecordDecl 0x5605abca6060 <col:5, col:12> col:12 implicit struct __is_swappable_with_impl
| |   `-TypeAliasDecl 0x5605abca62a8 <line:2955:7, col:48> col:13 type 'decltype(__test<_Tp, _Up>(0))'
| |     `-DecltypeType 0x5605abca6260 'decltype(__test<_Tp, _Up>(0))' dependent
| |       `-CallExpr 0x5605abca6200 <col:29, col:47> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abca6140 <col:29, col:44> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abca47b8 0x5605abca4a50
| |         | |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | | `-TemplateTypeParmType 0x5605abca5b10 '_Tp' dependent depth 0 index 0
| |         | |   `-TemplateTypeParm 0x5605abca5ac0 '_Tp'
| |         | `-TemplateArgument type '_Up':'type-parameter-0-1'
| |         |   `-TemplateTypeParmType 0x5605abca5ba0 '_Up' dependent depth 0 index 1
| |         |     `-TemplateTypeParm 0x5605abca5b48 '_Up'
| |         `-IntegerLiteral 0x5605abca61e0 <col:46> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0x5605abca7148 <line:2959:3, line:2964:5> line:2960:12 struct __is_swappable_with_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abca6f90 <line:2959:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abca73e8 <line:2960:5, col:12> col:12 implicit struct __is_swappable_with_impl
| | `-TypeAliasDecl 0x5605abca75f8 <line:2963:7, col:44> col:13 type 'decltype(__test<_Tp &>(0))'
| |   `-DecltypeType 0x5605abca75b0 'decltype(__test<_Tp &>(0))' dependent
| |     `-CallExpr 0x5605abca7558 <col:29, col:43> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x5605abca74b8 <col:29, col:40> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abc9bc28 0x5605abc9be28
| |       | `-TemplateArgument type '_Tp &':'type-parameter-0-0 &'
| |       |   `-LValueReferenceType 0x5605abca7030 '_Tp &' dependent
| |       |     `-TemplateTypeParmType 0x5605abca6fe0 '_Tp' dependent depth 0 index 0
| |       |       `-TemplateTypeParm 0x5605abca6f90 '_Tp'
| |       `-IntegerLiteral 0x5605abca7538 <col:42> 'int' 0
| |-ClassTemplateDecl 0x5605abca7880 <line:2966:3, line:2971:5> line:2967:12 __is_nothrow_swappable_with_impl
| | |-TemplateTypeParmDecl 0x5605abca7690 <line:2966:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abca7718 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abca77d0 <line:2967:5, line:2971:5> line:2967:12 struct __is_nothrow_swappable_with_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__swappable_with_details::__do_is_nothrow_swappable_with_impl':'std::__swappable_with_details::__do_is_nothrow_swappable_with_impl'
| |   |-CXXRecordDecl 0x5605abca7c20 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
| |   `-TypeAliasDecl 0x5605abca7e38 <line:2970:7, col:48> col:13 type 'decltype(__test<_Tp, _Up>(0))'
| |     `-DecltypeType 0x5605abca7df0 'decltype(__test<_Tp, _Up>(0))' dependent
| |       `-CallExpr 0x5605abca7dc0 <col:29, col:47> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abca7d00 <col:29, col:44> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abca5758 0x5605abca59f0
| |         | |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | | `-TemplateTypeParmType 0x5605abca76e0 '_Tp' dependent depth 0 index 0
| |         | |   `-TemplateTypeParm 0x5605abca7690 '_Tp'
| |         | `-TemplateArgument type '_Up':'type-parameter-0-1'
| |         |   `-TemplateTypeParmType 0x5605abca7770 '_Up' dependent depth 0 index 1
| |         |     `-TemplateTypeParm 0x5605abca7718 '_Up'
| |         `-IntegerLiteral 0x5605abca7da0 <col:46> 'int' 0
| |-ClassTemplatePartialSpecializationDecl 0x5605abca8088 <line:2974:3, line:2979:5> line:2975:12 struct __is_nothrow_swappable_with_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abca7ed0 <line:2974:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abca8328 <line:2975:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
| | `-TypeAliasDecl 0x5605abca8508 <line:2978:7, col:44> col:13 type 'decltype(__test<_Tp &>(0))'
| |   `-DecltypeType 0x5605abca84c0 'decltype(__test<_Tp &>(0))' dependent
| |     `-CallExpr 0x5605abca8498 <col:29, col:43> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x5605abca83f8 <col:29, col:40> '<dependent type>' lvalue (no ADL) = '__test' 0x5605abc9e548 0x5605abc9e748
| |       | `-TemplateArgument type '_Tp &':'type-parameter-0-0 &'
| |       |   `-LValueReferenceType 0x5605abca7f70 '_Tp &' dependent
| |       |     `-TemplateTypeParmType 0x5605abca7f20 '_Tp' dependent depth 0 index 0
| |       |       `-TemplateTypeParm 0x5605abca7ed0 '_Tp'
| |       `-IntegerLiteral 0x5605abca8478 <col:42> 'int' 0
| |-ClassTemplateDecl 0x5605abca8790 <line:2983:3, line:2991:5> line:2984:12 is_swappable_with
| | |-TemplateTypeParmDecl 0x5605abca85a0 <line:2983:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abca8628 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abca86e0 <line:2984:5, line:2991:5> line:2984:12 struct is_swappable_with definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_swappable_with_impl<_Tp, _Up>::type'
| |   |-CXXRecordDecl 0x5605abca8c38 <col:5, col:12> col:12 implicit struct is_swappable_with
| |   |-StaticAssertDecl 0x5605abca8f18 <line:2987:7, line:2988:74> line:2987:7
| |   | |-CallExpr 0x5605abca8e88 <col:21, col:75> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5605abca8d00 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | `-CXXUnresolvedConstructExpr 0x5605abca8e60 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |   | |   `-InitListExpr 0x5605abca8e20 <col:73, col:74> 'void'
| |   | `-StringLiteral 0x5605abca8eb0 <line:2988:2> 'NULL TYPE' lvalue "first template argument must be a complete class or an unbounded array"
| |   `-StaticAssertDecl 0x5605abca9bf8 <line:2989:7, line:2990:75> line:2989:7
| |     |-CallExpr 0x5605abca9b68 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abca9990 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abca9b40 <col:53, col:74> '__type_identity<_Up>' '__type_identity<_Up>' list
| |     |   `-InitListExpr 0x5605abca9b00 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abca9b90 <line:2990:2> 'NULL TYPE' lvalue "second template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abca9e50 <line:2994:3, line:3002:5> line:2995:12 is_nothrow_swappable_with
| | |-TemplateTypeParmDecl 0x5605abca9c58 <line:2994:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abca9ce8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abca9da0 <line:2995:5, line:3002:5> line:2995:12 struct is_nothrow_swappable_with definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_nothrow_swappable_with_impl<_Tp, _Up>::type'
| |   |-CXXRecordDecl 0x5605abcaa2f8 <col:5, col:12> col:12 implicit struct is_nothrow_swappable_with
| |   |-StaticAssertDecl 0x5605abcaa5d8 <line:2998:7, line:2999:74> line:2998:7
| |   | |-CallExpr 0x5605abcaa548 <col:21, col:75> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5605abcaa3c0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | `-CXXUnresolvedConstructExpr 0x5605abcaa520 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |   | |   `-InitListExpr 0x5605abcaa4e0 <col:73, col:74> 'void'
| |   | `-StringLiteral 0x5605abcaa570 <line:2999:2> 'NULL TYPE' lvalue "first template argument must be a complete class or an unbounded array"
| |   `-StaticAssertDecl 0x5605abcaa858 <line:3000:7, line:3001:75> line:3000:7
| |     |-CallExpr 0x5605abcaa7c8 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abcaa638 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abcaa7a0 <col:53, col:74> '__type_identity<_Up>' '__type_identity<_Up>' list
| |     |   `-InitListExpr 0x5605abcaa760 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abcaa7f0 <line:3001:2> 'NULL TYPE' lvalue "second template argument must be a complete class or an unbounded array"
| |-VarTemplateDecl 0x5605abcaaa80 <line:3006:3, line:3008:36> line:3007:38 is_swappable_with_v
| | |-TemplateTypeParmDecl 0x5605abcaa8b8 <line:3006:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcaa948 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abcaaa10 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:207:29, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3008:36> line:3007:38 is_swappable_with_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcaabc8 <line:3008:7, col:36> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_swappable_with<_Tp, _Up>'
| |-VarTemplateDecl 0x5605abcaade0 <line:3011:3, line:3013:44> line:3012:38 is_nothrow_swappable_with_v
| | |-TemplateTypeParmDecl 0x5605abcaac20 <line:3011:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcaaca8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abcaad70 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:207:29, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3013:44> line:3012:38 is_nothrow_swappable_with_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcaaf28 <line:3013:7, col:44> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_nothrow_swappable_with<_Tp, _Up>'
| |-ClassTemplateDecl 0x5605abcab3c0 <line:3023:3, line:3029:5> line:3025:12 __is_invocable_impl
| | |-TemplateTypeParmDecl 0x5605abcaaf80 <line:3023:12, col:21> col:21 typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x5605abcab008 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | |-NonTypeTemplateParmDecl 0x5605abcab198 <line:3024:5, col:27> col:10 'bool' depth 0 index 2
| | | `-TemplateArgument <col:12, col:27> expr 'is_void<_Ret>::value'
| | |   `-DependentScopeDeclRefExpr 0x5605abcab148 <col:12, col:27> '<dependent type>' lvalue
| | |     `-NestedNameSpecifier TypeSpec 'is_void<_Ret>'
| | |-TemplateTypeParmDecl 0x5605abcab228 <col:34, col:45> col:43 typename depth 0 index 3
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | `-CXXRecordDecl 0x5605abcab310 <line:3025:5, line:3029:5> line:3025:12 struct __is_invocable_impl definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'false_type':'std::integral_constant<bool, false>'
| |   |-CXXRecordDecl 0x5605abcab7a0 <col:5, col:12> col:12 implicit struct __is_invocable_impl
| |   `-TypeAliasDecl 0x5605abcab860 <line:3028:7, col:30> col:13 __nothrow_conv 'false_type':'std::integral_constant<bool, false>'
| |     `-ElaboratedType 0x5605abb7d300 'false_type' sugar
| |       `-TypedefType 0x5605abb7d2d0 'std::false_type' sugar
| |         |-TypeAlias 0x5605abb57a98 'false_type'
| |         `-ElaboratedType 0x5605abb57a20 '__bool_constant<false>' sugar
| |           `-TemplateSpecializationType 0x5605abb579d0 '__bool_constant<false>' sugar alias
| |             |-name: '__bool_constant':'std::__bool_constant' qualified
| |             | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |             |-TemplateArgument expr 'false'
| |             | `-ConstantExpr 0x5605abb57708 <line:114:38> 'bool'
| |             |   |-value: Int 0
| |             |   `-CXXBoolLiteralExpr 0x5605abb576f8 <col:38> 'bool' false
| |             `-ElaboratedType 0x5605abb57970 'integral_constant<bool, false>' sugar
| |               `-TemplateSpecializationType 0x5605abb57910 'integral_constant<bool, false>' sugar
| |                 |-name: 'integral_constant':'std::integral_constant' qualified
| |                 | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |                 |-TemplateArgument type 'bool'
| |                 | `-BuiltinType 0x5605aba9c9f0 'bool'
| |                 |-TemplateArgument expr 'false'
| |                 | `-ConstantExpr 0x5605abb577b8 <line:107:53> 'bool'
| |                 |   |-value: Int 0
| |                 |   `-SubstNonTypeTemplateParmExpr 0x5605abb57770 <col:53> 'bool'
| |                 |     |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |                 |     `-CXXBoolLiteralExpr 0x5605abb57760 <line:107:53> 'bool' false
| |                 `-RecordType 0x5605abb578f0 'std::integral_constant<bool, false>'
| |                   `-ClassTemplateSpecialization 0x5605abb577e0 'integral_constant'
| |-ClassTemplatePartialSpecializationDecl 0x5605abcac6e8 <line:3032:3, line:3039:5> line:3033:12 struct __is_invocable_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'true_type':'std::integral_constant<bool, true>'
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral 'true'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abcab8f8 <line:3032:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x5605abcac328 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | |-CXXRecordDecl 0x5605abcaca00 <line:3033:5, col:12> col:12 implicit struct __is_invocable_impl
| | `-TypeAliasDecl 0x5605abcacac0 <line:3038:7, col:30> col:13 __nothrow_conv 'true_type':'std::integral_constant<bool, true>'
| |   `-ElaboratedType 0x5605abb7dcd0 'true_type' sugar
| |     `-TypedefType 0x5605abb7dca0 'std::true_type' sugar
| |       |-TypeAlias 0x5605abb57698 'true_type'
| |       `-ElaboratedType 0x5605abb54bf0 '__bool_constant<true>' sugar
| |         `-TemplateSpecializationType 0x5605abb54ba0 '__bool_constant<true>' sugar alias
| |           |-name: '__bool_constant':'std::__bool_constant' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abb54840 <line:106:3, line:107:56> col:5 __bool_constant
| |           |-TemplateArgument expr 'true'
| |           | `-ConstantExpr 0x5605abb548d8 <line:111:38> 'bool'
| |           |   |-value: Int 1
| |           |   `-CXXBoolLiteralExpr 0x5605abb548b0 <col:38> 'bool' true
| |           `-ElaboratedType 0x5605abb54b40 'integral_constant<bool, true>' sugar
| |             `-TemplateSpecializationType 0x5605abb54ae0 'integral_constant<bool, true>' sugar
| |               |-name: 'integral_constant':'std::integral_constant' qualified
| |               | `-ClassTemplateDecl 0x5605abb23eb0 <line:86:3, line:97:5> line:87:12 integral_constant
| |               |-TemplateArgument type 'bool'
| |               | `-BuiltinType 0x5605aba9c9f0 'bool'
| |               |-TemplateArgument expr 'true'
| |               | `-ConstantExpr 0x5605abb54988 <line:107:53> 'bool'
| |               |   |-value: Int 1
| |               |   `-SubstNonTypeTemplateParmExpr 0x5605abb54940 <col:53> 'bool'
| |               |     |-NonTypeTemplateParmDecl 0x5605abb545c0 <line:106:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| |               |     `-CXXBoolLiteralExpr 0x5605abb54930 <line:107:53> 'bool' true
| |               `-RecordType 0x5605abb54ac0 'std::integral_constant<bool, true>'
| |                 `-ClassTemplateSpecialization 0x5605abb549b0 'integral_constant'
| |-ClassTemplatePartialSpecializationDecl 0x5605abcacfa8 <line:3044:3, line:3084:5> line:3045:12 struct __is_invocable_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral 'false'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abcacb58 <line:3044:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x5605abcacbe8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | |-CXXRecordDecl 0x5605abcad280 <line:3045:5, col:12> col:12 implicit struct __is_invocable_impl
| | |-AccessSpecDecl 0x5605abcad330 <line:3049:5, col:12> col:5 private
| | |-TypeAliasDecl 0x5605abcad3b8 <line:3051:7, col:40> col:13 referenced _Res_t 'typename _Result::type'
| | | `-DependentNameType 0x5605abcacd00 'typename _Result::type' dependent
| | |-CXXMethodDecl 0x5605abcad540 <line:3055:7, col:30> col:21 referenced _S_get '_Res_t () noexcept' static
| | |-FunctionTemplateDecl 0x5605abcadb90 <line:3058:7, line:3059:46> col:14 _S_conv
| | | |-TemplateTypeParmDecl 0x5605abcad608 <line:3058:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | `-CXXMethodDecl 0x5605abcadae0 <line:3059:2, col:46> col:14 _S_conv 'void (__type_identity_t<_Tp>) noexcept' static
| | |   `-ParmVarDecl 0x5605abcad9a8 <col:22, col:43> col:44 '__type_identity_t<_Tp>':'typename __type_identity<_Tp>::type'
| | |-FunctionTemplateDecl 0x5605abcaeb88 <line:3062:7, line:3072:13> col:2 _S_test
| | | |-TemplateTypeParmDecl 0x5605abcadc10 <line:3062:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
| | | |-NonTypeTemplateParmDecl 0x5605abcaddd0 <line:3063:9, col:56> col:14 referenced 'bool' depth 1 index 1 _Nothrow
| | | | `-TemplateArgument <col:25, col:56> expr 'noexcept(_S_conv<_Tp>(_S_get()))'
| | | |   `-CXXNoexceptExpr 0x5605abcadd98 <col:25, col:56> 'bool'
| | | |     `-CallExpr 0x5605abcadd70 <col:34, col:55> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x5605abcadcb8 <col:34, col:45> '<dependent type>' lvalue (no ADL) = '_S_conv' 0x5605abcadb90
| | | |       | `-TemplateArgument type '_Tp':'type-parameter-1-0'
| | | |       |   `-TemplateTypeParmType 0x5605abcadc60 '_Tp' dependent depth 1 index 0
| | | |       |     `-TemplateTypeParm 0x5605abcadc10 '_Tp'
| | | |       `-CallExpr 0x5605abcadd50 <col:47, col:54> '<dependent type>'
| | | |         `-DeclRefExpr 0x5605abcadd30 <col:47> '_Res_t () noexcept' lvalue CXXMethod 0x5605abcad540 '_S_get' '_Res_t () noexcept' non_odr_use_unevaluated
| | | |-TemplateTypeParmDecl 0x5605abcadfb8 <line:3064:9, col:51> col:18 typename depth 1 index 2
| | | | `-TemplateArgument type 'decltype(_S_conv<_Tp>(_S_get()))'
| | | |   `-DecltypeType 0x5605abcadf70 'decltype(_S_conv<_Tp>(_S_get()))' dependent
| | | |     `-CallExpr 0x5605abcadf10 <col:29, col:50> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x5605abcade58 <col:29, col:40> '<dependent type>' lvalue (no ADL) = '_S_conv' 0x5605abcadb90
| | | |       | `-TemplateArgument type '_Tp':'type-parameter-1-0'
| | | |       |   `-TemplateTypeParmType 0x5605abcadc60 '_Tp' dependent depth 1 index 0
| | | |       |     `-TemplateTypeParm 0x5605abcadc10 '_Tp'
| | | |       `-CallExpr 0x5605abcadef0 <col:42, col:49> '<dependent type>'
| | | |         `-DeclRefExpr 0x5605abcaded0 <col:42> '_Res_t () noexcept' lvalue CXXMethod 0x5605abcad540 '_S_get' '_Res_t () noexcept' non_odr_use_unevaluated
| | | |-NonTypeTemplateParmDecl 0x5605abcae0f0 <line:3066:9, col:71> col:14 referenced 'bool' depth 1 index 3 _Dangle
| | | | `-TemplateArgument <col:24, col:71> expr '__reference_converts_from_temporary(_Tp, _Res_t)'
| | | |   `-TypeTraitExpr 0x5605abcae0b0 <col:24, col:71> 'bool' __reference_converts_from_temporary
| | | |     |-TemplateTypeParmType 0x5605abcadc60 '_Tp' dependent depth 1 index 0
| | | |     | `-TemplateTypeParm 0x5605abcadc10 '_Tp'
| | | |     `-ElaboratedType 0x5605abcad450 '_Res_t' sugar dependent
| | | |       `-TypedefType 0x5605abcad420 'std::__is_invocable_impl<type-parameter-0-0, type-parameter-0-1, false>::_Res_t' sugar dependent
| | | |         |-TypeAlias 0x5605abcad3b8 '_Res_t'
| | | |         `-DependentNameType 0x5605abcacd00 'typename _Result::type' dependent
| | | `-CXXMethodDecl 0x5605abcaead8 <line:3071:2, line:3072:13> col:2 _S_test '__bool_constant<_Nothrow && !_Dangle> (int)' static
| | |   `-ParmVarDecl 0x5605abcae9a0 <col:10> col:13 'int'
| | |-FunctionTemplateDecl 0x5605abcaee30 <line:3074:7, line:3076:13> col:2 _S_test
| | | |-TemplateTypeParmDecl 0x5605abcaec08 <line:3074:16, col:25> col:25 typename depth 1 index 0 _Tp
| | | |-NonTypeTemplateParmDecl 0x5605abcaecb8 <col:30, col:37> col:35 'bool' depth 1 index 1
| | | | `-TemplateArgument <col:37> expr 'false'
| | | |   `-CXXBoolLiteralExpr 0x5605abcaec90 <col:37> 'bool' false
| | | `-CXXMethodDecl 0x5605abcaed80 <line:3075:2, line:3076:13> col:2 _S_test 'false_type (...)' static
| | |-AccessSpecDecl 0x5605abcaeeb8 <line:3078:5, col:11> col:5 public
| | |-TypeAliasDecl 0x5605abcaf078 <line:3080:7, col:67> col:13 type 'decltype(_S_test<_Ret, true>(1))'
| | | `-DecltypeType 0x5605abcaf030 'decltype(_S_test<_Ret, true>(1))' dependent
| | |   `-CallExpr 0x5605abcaefd8 <col:29, col:66> '<dependent type>'
| | |     |-UnresolvedLookupExpr 0x5605abcaef18 <col:29, col:63> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abcaee30 0x5605abcaeb88
| | |     | |-TemplateArgument type '_Ret':'type-parameter-0-1'
| | |     | | `-TemplateTypeParmType 0x5605abcacc40 '_Ret' dependent depth 0 index 1
| | |     | |   `-TemplateTypeParm 0x5605abcacbe8 '_Ret'
| | |     | `-TemplateArgument expr 'true'
| | |     |   `-CXXBoolLiteralExpr 0x5605abcaef08 <col:59> 'bool' true
| | |     `-IntegerLiteral 0x5605abcaefb8 <col:65> 'int' 1
| | `-TypeAliasDecl 0x5605abcaf248 <line:3083:7, col:55> col:13 __nothrow_conv 'decltype(_S_test<_Ret>(1))'
| |   `-DecltypeType 0x5605abcaf200 'decltype(_S_test<_Ret>(1))' dependent
| |     `-CallExpr 0x5605abcaf1a0 <col:39, col:54> '<dependent type>'
| |       |-UnresolvedLookupExpr 0x5605abcaf100 <col:39, col:51> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5605abcaee30 0x5605abcaeb88
| |       | `-TemplateArgument type '_Ret':'type-parameter-0-1'
| |       |   `-TemplateTypeParmType 0x5605abcacc40 '_Ret' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abcacbe8 '_Ret'
| |       `-IntegerLiteral 0x5605abcaf180 <col:53> 'int' 1
| |-ClassTemplateDecl 0x5605abcaf530 <line:3087:3, line:3090:7> line:3088:12 __is_invocable
| | |-TemplateTypeParmDecl 0x5605abcaf340 <line:3087:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcaf3c8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abcaf480 <line:3088:5, line:3090:7> line:3088:12 struct __is_invocable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, void>::type'
| |   `-CXXRecordDecl 0x5605abcafd38 <col:5, col:12> col:12 implicit struct __is_invocable
| |-FunctionTemplateDecl 0x5605abcb01c8 <line:3092:3, line:3098:5> line:3093:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x5605abcafe00 <line:3092:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcafe88 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x5605abcaff18 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| | `-FunctionDecl 0x5605abcb0118 <line:3093:5, line:3098:5> line:3093:20 constexpr __call_is_nt 'bool (__invoke_memfun_ref)' implicit-inline
| |   |-ParmVarDecl 0x5605abcaffe8 <col:33> col:52 '__invoke_memfun_ref':'std::__invoke_memfun_ref'
| |   `-CompoundStmt 0x5605abcb21c0 <line:3094:5, line:3098:5>
| |     |-DeclStmt 0x5605abcb0758 <line:3095:7, col:51>
| |     | `-TypeAliasDecl 0x5605abcb06f8 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
| |     |   `-DependentNameType 0x5605abcb0680 'typename __inv_unwrap<_Tp>::type' dependent
| |     `-ReturnStmt 0x5605abcb21b0 <line:3096:7, line:3097:31>
| |       `-CXXNoexceptExpr 0x5605abcb2190 <line:3096:14, line:3097:31> 'bool'
| |         `-CallExpr 0x5605abcb2168 <line:3096:23, line:3097:30> '<dependent type>'
| |           |-ParenExpr 0x5605abcb2060 <line:3096:23, col:64> '<dependent type>'
| |           | `-BinaryOperator 0x5605abcb2040 <col:24, col:63> '<dependent type>' '.*'
| |           |   |-CallExpr 0x5605abcb1f58 <col:24, col:42> '<dependent type>'
| |           |   | `-UnresolvedLookupExpr 0x5605abcb1ee0 <col:24, col:40> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |           |   |   `-TemplateArgument type '_Up':'typename __inv_unwrap<type-parameter-0-1, typename remove_cv<typename remove_reference<type-parameter-0-1>::type>::type>::type'
| |           |   |     `-ElaboratedType 0x5605abcb07a0 '_Up' sugar dependent
| |           |   |       `-TypedefType 0x5605abcb0770 '_Up' sugar dependent
| |           |   |         |-TypeAlias 0x5605abcb06f8 '_Up'
| |           |   |         `-DependentNameType 0x5605abcb0680 'typename __inv_unwrap<_Tp>::type' dependent
| |           |   `-CallExpr 0x5605abcb2020 <col:45, col:63> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0x5605abcb1fa8 <col:45, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |           |       `-TemplateArgument type '_Fn':'type-parameter-0-0'
| |           |         `-TemplateTypeParmType 0x5605abcafe50 '_Fn' dependent depth 0 index 0
| |           |           `-TemplateTypeParm 0x5605abcafe00 '_Fn'
| |           `-PackExpansionExpr 0x5605abcb2148 <line:3097:6, col:27> '<dependent type>'
| |             `-CallExpr 0x5605abcb2128 <col:6, col:26> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x5605abcb20b0 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |                 `-TemplateArgument type '_Args':'type-parameter-0-2'
| |                   `-TemplateTypeParmType 0x5605abcaff70 '_Args' dependent contains_unexpanded_pack depth 0 index 2 pack
| |                     `-TemplateTypeParm 0x5605abcaff18 '_Args'
| |-FunctionTemplateDecl 0x5605abcb25b8 <line:3100:3, line:3105:5> line:3101:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x5605abcb21e8 <line:3100:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcb2278 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x5605abcb2308 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| | `-FunctionDecl 0x5605abcb2508 <line:3101:5, line:3105:5> line:3101:20 constexpr __call_is_nt 'bool (__invoke_memfun_deref)' implicit-inline
| |   |-ParmVarDecl 0x5605abcb23d8 <col:33> col:54 '__invoke_memfun_deref':'std::__invoke_memfun_deref'
| |   `-CompoundStmt 0x5605abcb29f0 <line:3102:5, line:3105:5>
| |     `-ReturnStmt 0x5605abcb29e0 <line:3103:7, line:3104:31>
| |       `-CXXNoexceptExpr 0x5605abcb29c0 <line:3103:14, line:3104:31> 'bool'
| |         `-CallExpr 0x5605abcb2998 <line:3103:23, line:3104:30> '<dependent type>'
| |           |-ParenExpr 0x5605abcb2890 <line:3103:23, col:67> '<dependent type>'
| |           | `-BinaryOperator 0x5605abcb2870 <col:24, col:66> '<dependent type>' '.*'
| |           |   |-ParenExpr 0x5605abcb2788 <col:24, col:45> '<dependent type>' lvalue
| |           |   | `-UnaryOperator 0x5605abcb2770 <col:25, col:44> '<dependent type>' lvalue prefix '*' cannot overflow
| |           |   |   `-CallExpr 0x5605abcb2750 <col:26, col:44> '<dependent type>'
| |           |   |     `-UnresolvedLookupExpr 0x5605abcb26d8 <col:26, col:42> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |           |   |       `-TemplateArgument type '_Tp':'type-parameter-0-1'
| |           |   |         `-TemplateTypeParmType 0x5605abcb22d0 '_Tp' dependent depth 0 index 1
| |           |   |           `-TemplateTypeParm 0x5605abcb2278 '_Tp'
| |           |   `-CallExpr 0x5605abcb2850 <col:48, col:66> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0x5605abcb27d8 <col:48, col:64> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |           |       `-TemplateArgument type '_Fn':'type-parameter-0-0'
| |           |         `-TemplateTypeParmType 0x5605abcb2240 '_Fn' dependent depth 0 index 0
| |           |           `-TemplateTypeParm 0x5605abcb21e8 '_Fn'
| |           `-PackExpansionExpr 0x5605abcb2978 <line:3104:6, col:27> '<dependent type>'
| |             `-CallExpr 0x5605abcb2958 <col:6, col:26> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x5605abcb28e0 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |                 `-TemplateArgument type '_Args':'type-parameter-0-2'
| |                   `-TemplateTypeParmType 0x5605abcb2360 '_Args' dependent contains_unexpanded_pack depth 0 index 2 pack
| |                     `-TemplateTypeParm 0x5605abcb2308 '_Args'
| |-FunctionTemplateDecl 0x5605abcb2d38 <line:3107:3, line:3112:5> line:3108:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x5605abcb2a10 <line:3107:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcb2a98 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x5605abcb2c88 <line:3108:5, line:3112:5> line:3108:20 constexpr __call_is_nt 'bool (__invoke_memobj_ref)' implicit-inline
| |   |-ParmVarDecl 0x5605abcb2b60 <col:33> col:52 '__invoke_memobj_ref':'std::__invoke_memobj_ref'
| |   `-CompoundStmt 0x5605abcb3530 <line:3109:5, line:3112:5>
| |     |-DeclStmt 0x5605abcb32d8 <line:3110:7, col:51>
| |     | `-TypeAliasDecl 0x5605abcb3278 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
| |     |   `-DependentNameType 0x5605abcb3200 'typename __inv_unwrap<_Tp>::type' dependent
| |     `-ReturnStmt 0x5605abcb3520 <line:3111:7, col:63>
| |       `-CXXNoexceptExpr 0x5605abcb3500 <col:14, col:63> 'bool'
| |         `-BinaryOperator 0x5605abcb34e0 <col:23, col:62> '<dependent type>' '.*'
| |           |-CallExpr 0x5605abcb33f8 <col:23, col:41> '<dependent type>'
| |           | `-UnresolvedLookupExpr 0x5605abcb3380 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |           |   `-TemplateArgument type '_Up':'typename __inv_unwrap<type-parameter-0-1, typename remove_cv<typename remove_reference<type-parameter-0-1>::type>::type>::type'
| |           |     `-ElaboratedType 0x5605abcb3320 '_Up' sugar dependent
| |           |       `-TypedefType 0x5605abcb32f0 '_Up' sugar dependent
| |           |         |-TypeAlias 0x5605abcb3278 '_Up'
| |           |         `-DependentNameType 0x5605abcb3200 'typename __inv_unwrap<_Tp>::type' dependent
| |           `-CallExpr 0x5605abcb34c0 <col:44, col:62> '<dependent type>'
| |             `-UnresolvedLookupExpr 0x5605abcb3448 <col:44, col:60> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |               `-TemplateArgument type '_Fn':'type-parameter-0-0'
| |                 `-TemplateTypeParmType 0x5605abcb2a60 '_Fn' dependent depth 0 index 0
| |                   `-TemplateTypeParm 0x5605abcb2a10 '_Fn'
| |-FunctionTemplateDecl 0x5605abcb3888 <line:3114:3, line:3118:5> line:3115:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x5605abcb3558 <line:3114:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcb35e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| | `-FunctionDecl 0x5605abcb37d8 <line:3115:5, line:3118:5> line:3115:20 constexpr __call_is_nt 'bool (__invoke_memobj_deref)' implicit-inline
| |   |-ParmVarDecl 0x5605abcb36b0 <col:33> col:54 '__invoke_memobj_deref':'std::__invoke_memobj_deref'
| |   `-CompoundStmt 0x5605abcb3b90 <line:3116:5, line:3118:5>
| |     `-ReturnStmt 0x5605abcb3b80 <line:3117:7, col:66>
| |       `-CXXNoexceptExpr 0x5605abcb3b60 <col:14, col:66> 'bool'
| |         `-BinaryOperator 0x5605abcb3b40 <col:23, col:65> '<dependent type>' '.*'
| |           |-ParenExpr 0x5605abcb3a58 <col:23, col:44> '<dependent type>' lvalue
| |           | `-UnaryOperator 0x5605abcb3a40 <col:24, col:43> '<dependent type>' lvalue prefix '*' cannot overflow
| |           |   `-CallExpr 0x5605abcb3a20 <col:25, col:43> '<dependent type>'
| |           |     `-UnresolvedLookupExpr 0x5605abcb39a8 <col:25, col:41> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |           |       `-TemplateArgument type '_Tp':'type-parameter-0-1'
| |           |         `-TemplateTypeParmType 0x5605abcb3640 '_Tp' dependent depth 0 index 1
| |           |           `-TemplateTypeParm 0x5605abcb35e8 '_Tp'
| |           `-CallExpr 0x5605abcb3b20 <col:47, col:65> '<dependent type>'
| |             `-UnresolvedLookupExpr 0x5605abcb3aa8 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |               `-TemplateArgument type '_Fn':'type-parameter-0-0'
| |                 `-TemplateTypeParmType 0x5605abcb35b0 '_Fn' dependent depth 0 index 0
| |                   `-TemplateTypeParm 0x5605abcb3558 '_Fn'
| |-FunctionTemplateDecl 0x5605abcb4528 <line:3120:3, line:3124:5> line:3121:20 __call_is_nt
| | |-TemplateTypeParmDecl 0x5605abcb3bb0 <line:3120:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcb3c38 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-FunctionDecl 0x5605abcb3e28 <line:3121:5, line:3124:5> line:3121:20 constexpr __call_is_nt 'bool (__invoke_other)' implicit-inline
| |   |-ParmVarDecl 0x5605abcb3d00 <col:33> col:47 '__invoke_other':'std::__invoke_other'
| |   `-CompoundStmt 0x5605abcb4820 <line:3122:5, line:3124:5>
| |     `-ReturnStmt 0x5605abcb4810 <line:3123:7, col:68>
| |       `-CXXNoexceptExpr 0x5605abcb47f0 <col:14, col:68> 'bool'
| |         `-CallExpr 0x5605abcb47c8 <col:23, col:67> '<dependent type>'
| |           |-CallExpr 0x5605abcb46c0 <col:23, col:41> '<dependent type>'
| |           | `-UnresolvedLookupExpr 0x5605abcb4648 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |           |   `-TemplateArgument type '_Fn':'type-parameter-0-0'
| |           |     `-TemplateTypeParmType 0x5605abcb3c00 '_Fn' dependent depth 0 index 0
| |           |       `-TemplateTypeParm 0x5605abcb3bb0 '_Fn'
| |           `-PackExpansionExpr 0x5605abcb47a8 <col:43, col:64> '<dependent type>'
| |             `-CallExpr 0x5605abcb4788 <col:43, col:63> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x5605abcb4710 <col:43, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |                 `-TemplateArgument type '_Args':'type-parameter-0-1'
| |                   `-TemplateTypeParmType 0x5605abcb3c90 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |                     `-TemplateTypeParm 0x5605abcb3c38 '_Args'
| |-ClassTemplateDecl 0x5605abcb4ac8 <line:3126:3, line:3131:7> line:3127:12 __call_is_nothrow
| | |-TemplateTypeParmDecl 0x5605abcb4840 <line:3126:12, col:21> col:21 typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x5605abcb48c8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Fn
| | |-TemplateTypeParmDecl 0x5605abcb4958 <col:44, col:56> col:56 referenced typename depth 0 index 2 ... _Args
| | `-CXXRecordDecl 0x5605abcb4a18 <line:3127:5, line:3131:7> line:3127:12 struct __call_is_nothrow definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__bool_constant<std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type{})>':'integral_constant<bool, std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type{})>'
| |   `-CXXRecordDecl 0x5605abcb53a8 <col:5, col:12> col:12 implicit struct __call_is_nothrow
| |-TypeAliasTemplateDecl 0x5605abcb5980 <line:3133:3, line:3135:72> line:3134:5 __call_is_nothrow_
| | |-TemplateTypeParmDecl 0x5605abcb5470 <line:3133:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcb54f8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x5605abcb5918 <line:3134:5, line:3135:72> line:3134:11 __call_is_nothrow_ '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>'
| |   `-ElaboratedType 0x5605abcb5880 '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abcb5800 '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>' dependent
| |       |-name: '__call_is_nothrow':'std::__call_is_nothrow' qualified
| |       | `-ClassTemplateDecl 0x5605abcb4ac8 <line:3126:3, line:3131:7> line:3127:12 __call_is_nothrow
| |       |-TemplateArgument type '__invoke_result<_Fn, _Args...>':'__invoke_result<type-parameter-0-0, type-parameter-0-1...>'
| |       | `-ElaboratedType 0x5605abcb56a0 '__invoke_result<_Fn, _Args...>' sugar dependent
| |       |   `-TemplateSpecializationType 0x5605abcb5640 '__invoke_result<_Fn, _Args...>' dependent
| |       |     |-name: '__invoke_result':'std::__invoke_result' qualified
| |       |     | `-ClassTemplateDecl 0x5605abc8ed40 <line:2670:3, line:2681:7> line:2671:12 __invoke_result
| |       |     |-TemplateArgument type '_Fn':'type-parameter-0-0'
| |       |     | `-TemplateTypeParmType 0x5605abcb54c0 '_Fn' dependent depth 0 index 0
| |       |     |   `-TemplateTypeParm 0x5605abcb5470 '_Fn'
| |       |     `-TemplateArgument type '_Args...':'type-parameter-0-1...'
| |       |       `-PackExpansionType 0x5605abcb55d0 '_Args...' dependent
| |       |         `-TemplateTypeParmType 0x5605abcb5550 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |       |           `-TemplateTypeParm 0x5605abcb54f8 '_Args'
| |       |-TemplateArgument type '_Fn':'type-parameter-0-0'
| |       | `-TemplateTypeParmType 0x5605abcb54c0 '_Fn' dependent depth 0 index 0
| |       |   `-TemplateTypeParm 0x5605abcb5470 '_Fn'
| |       `-TemplateArgument type '_Args...':'type-parameter-0-1...'
| |         `-PackExpansionType 0x5605abcb55d0 '_Args...' dependent
| |           `-TemplateTypeParmType 0x5605abcb5550 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |             `-TemplateTypeParm 0x5605abcb54f8 '_Args'
| |-ClassTemplateDecl 0x5605abcb5bd0 <line:3138:3, line:3142:7> line:3139:12 __is_nothrow_invocable
| | |-TemplateTypeParmDecl 0x5605abcb59e0 <line:3138:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcb5a68 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-CXXRecordDecl 0x5605abcb5b20 <line:3139:5, line:3142:7> line:3139:12 struct __is_nothrow_invocable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__and_<__is_invocable<_Fn, _Args...>, __call_is_nothrow_<_Fn, _Args...>>::type'
| |   `-CXXRecordDecl 0x5605abcb7238 <col:5, col:12> col:12 implicit struct __is_nothrow_invocable
| |-CXXRecordDecl 0x5605abcb7300 <line:3146:3, col:26> col:10 referenced struct __nonesuchbase definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment simple trivial has_const_param implicit_has_const_param
| | | |-MoveAssignment exists simple trivial
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abcb7440 <col:3, col:10> col:10 implicit struct __nonesuchbase
| | |-CXXConstructorDecl 0x5605abcb7dd8 <col:10> col:10 implicit constexpr __nonesuchbase 'void (const __nonesuchbase &)' inline default trivial noexcept-unevaluated 0x5605abcb7dd8
| | | `-ParmVarDecl 0x5605abcb7f18 <col:10> col:10 'const __nonesuchbase &'
| | |-CXXConstructorDecl 0x5605abcb7ff8 <col:10> col:10 implicit constexpr __nonesuchbase 'void (__nonesuchbase &&)' inline default trivial noexcept-unevaluated 0x5605abcb7ff8
| | | `-ParmVarDecl 0x5605abcb8138 <col:10> col:10 '__nonesuchbase &&'
| | |-CXXMethodDecl 0x5605abcb8228 <col:10> col:10 implicit constexpr operator= '__nonesuchbase &(const __nonesuchbase &)' inline default trivial noexcept-unevaluated 0x5605abcb8228
| | | `-ParmVarDecl 0x5605abcb8358 <col:10> col:10 'const __nonesuchbase &'
| | `-CXXMethodDecl 0x5605abcb83d0 <col:10> col:10 implicit constexpr operator= '__nonesuchbase &(__nonesuchbase &&)' inline default trivial noexcept-unevaluated 0x5605abcb83d0
| |   `-ParmVarDecl 0x5605abcb8508 <col:10> col:10 '__nonesuchbase &&'
| |-CXXRecordDecl 0x5605abcb7508 <line:3147:3, line:3151:3> line:3147:10 struct __nonesuch definition
| | |-DefinitionData empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor defaulted_is_constexpr
| | | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
| | | |-MoveConstructor
| | | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
| | | |-MoveAssignment
| | | `-Destructor trivial user_declared
| | |-private '__nonesuchbase':'std::__nonesuchbase'
| | |-CXXRecordDecl 0x5605abcb76b8 <col:3, col:10> col:10 implicit referenced struct __nonesuch
| | |-CXXDestructorDecl 0x5605abcb7810 <line:3148:5, col:26> col:5 ~__nonesuch 'void ()' delete trivial noexcept-unevaluated 0x5605abcb7810 implicit-inline
| | |-CXXConstructorDecl 0x5605abcb7ae8 <line:3149:5, col:42> col:5 __nonesuch 'void (const __nonesuch &)' delete trivial implicit-inline
| | | `-ParmVarDecl 0x5605abcb79a0 <col:16, col:32> col:33 'const __nonesuch &'
| | `-CXXMethodDecl 0x5605abcb7c88 <line:3150:5, col:46> col:10 operator= 'void (const __nonesuch &)' delete trivial implicit-inline
| |   `-ParmVarDecl 0x5605abcb7bd8 <col:20, col:36> col:37 'const __nonesuch &'
| |-ClassTemplateDecl 0x5605abcb8780 <line:3157:3, line:3166:5> line:3158:12 invoke_result
| | |-TemplateTypeParmDecl 0x5605abcb8590 <line:3157:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| | |-TemplateTypeParmDecl 0x5605abcb8618 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abcb86d0 <line:3158:5, line:3166:5> line:3158:12 struct invoke_result definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__invoke_result<_Functor, _ArgTypes...>'
| |   |-CXXRecordDecl 0x5605abcb8c20 <col:5, col:12> col:12 implicit struct invoke_result
| |   |-StaticAssertDecl 0x5605abcb8ef8 <line:3161:7, line:3162:59> line:3161:7
| |   | |-CallExpr 0x5605abcb8e78 <col:21, col:80> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5605abcb8ce8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | `-CXXUnresolvedConstructExpr 0x5605abcb8e50 <col:53, col:79> '__type_identity<_Functor>' '__type_identity<_Functor>' list
| |   | |   `-InitListExpr 0x5605abcb8e10 <col:78, col:79> 'void'
| |   | `-StringLiteral 0x5605abcb8ea0 <line:3162:2> 'NULL TYPE' lvalue "_Functor must be a complete class or an unbounded array"
| |   `-StaticAssertDecl 0x5605abcba028 <line:3163:7, line:3165:69> line:3163:7
| |     |-CXXFoldExpr 0x5605abcb9f80 <col:21, line:3164:38> '<dependent type>'
| |     | |-<<<NULL>>>
| |     | |-CallExpr 0x5605abcb9f58 <line:3163:22, line:3164:30> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x5605abcb8f58 <line:3163:22, col:27> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | | `-CXXUnresolvedConstructExpr 0x5605abcb9f30 <line:3164:2, col:29> '__type_identity<_ArgTypes>' '__type_identity<_ArgTypes>' list
| |     | |   `-InitListExpr 0x5605abcb9ef0 <col:28, col:29> 'void'
| |     | `-<<<NULL>>>
| |     `-StringLiteral 0x5605abcb9fc0 <line:3165:2> 'NULL TYPE' lvalue "each argument type must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abcba430 <line:3169:3, line:3170:68> col:5 invoke_result_t
| | |-TemplateTypeParmDecl 0x5605abcba088 <line:3169:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcba118 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-TypeAliasDecl 0x5605abcba3c8 <line:3170:5, col:68> col:11 invoke_result_t 'typename invoke_result<_Fn, _Args...>::type'
| |   `-DependentNameType 0x5605abcba350 'typename invoke_result<_Fn, _Args...>::type' dependent
| |-ClassTemplateDecl 0x5605abcba680 <line:3173:3, line:3182:5> line:3174:12 is_invocable
| | |-TemplateTypeParmDecl 0x5605abcba490 <line:3173:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcba518 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abcba5d0 <line:3174:5, line:3182:5> line:3174:12 struct is_invocable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, void>::type'
| |   |-CXXRecordDecl 0x5605abcbadb8 <col:5, col:12> col:12 implicit struct is_invocable
| |   |-StaticAssertDecl 0x5605abcbb088 <line:3177:7, line:3178:54> line:3177:7
| |   | |-CallExpr 0x5605abcbb008 <col:21, col:75> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5605abcbae80 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | `-CXXUnresolvedConstructExpr 0x5605abcbafe0 <col:53, col:74> '__type_identity<_Fn>' '__type_identity<_Fn>' list
| |   | |   `-InitListExpr 0x5605abcbafa0 <col:73, col:74> 'void'
| |   | `-StringLiteral 0x5605abcbb030 <line:3178:2> 'NULL TYPE' lvalue "_Fn must be a complete class or an unbounded array"
| |   `-StaticAssertDecl 0x5605abcbb348 <line:3179:7, line:3181:69> line:3179:7
| |     |-CXXFoldExpr 0x5605abcbb2a0 <col:21, line:3180:38> '<dependent type>'
| |     | |-<<<NULL>>>
| |     | |-CallExpr 0x5605abcbb278 <line:3179:22, line:3180:30> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x5605abcbb0e8 <line:3179:22, col:27> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | | `-CXXUnresolvedConstructExpr 0x5605abcbb250 <line:3180:2, col:29> '__type_identity<_ArgTypes>' '__type_identity<_ArgTypes>' list
| |     | |   `-InitListExpr 0x5605abcbb210 <col:28, col:29> 'void'
| |     | `-<<<NULL>>>
| |     `-StringLiteral 0x5605abcbb2e0 <line:3181:2> 'NULL TYPE' lvalue "each argument type must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abcbb638 <line:3185:3, line:3196:5> line:3186:12 is_invocable_r
| | |-TemplateTypeParmDecl 0x5605abcbb3a8 <line:3185:12, col:21> col:21 referenced typename depth 0 index 0 _Ret
| | |-TemplateTypeParmDecl 0x5605abcbb438 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Fn
| | |-TemplateTypeParmDecl 0x5605abcbb4c8 <col:41, col:53> col:53 referenced typename depth 0 index 2 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abcbb588 <line:3186:5, line:3196:5> line:3186:12 struct is_invocable_r definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__is_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, _Ret>::type'
| |   |-CXXRecordDecl 0x5605abcbdb98 <col:5, col:12> col:12 implicit struct is_invocable_r
| |   |-StaticAssertDecl 0x5605abcbde68 <line:3189:7, line:3190:54> line:3189:7
| |   | |-CallExpr 0x5605abcbdde8 <col:21, col:75> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5605abcbdc60 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | `-CXXUnresolvedConstructExpr 0x5605abcbddc0 <col:53, col:74> '__type_identity<_Fn>' '__type_identity<_Fn>' list
| |   | |   `-InitListExpr 0x5605abcbdd80 <col:73, col:74> 'void'
| |   | `-StringLiteral 0x5605abcbde10 <line:3190:2> 'NULL TYPE' lvalue "_Fn must be a complete class or an unbounded array"
| |   |-StaticAssertDecl 0x5605abcbe178 <line:3191:7, line:3193:69> line:3191:7
| |   | |-CXXFoldExpr 0x5605abcbe0d0 <col:21, line:3192:38> '<dependent type>'
| |   | | |-<<<NULL>>>
| |   | | |-CallExpr 0x5605abcbe0a8 <line:3191:22, line:3192:30> '<dependent type>'
| |   | | | |-UnresolvedLookupExpr 0x5605abcbdec8 <line:3191:22, col:27> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | | `-CXXUnresolvedConstructExpr 0x5605abcbe080 <line:3192:2, col:29> '__type_identity<_ArgTypes>' '__type_identity<_ArgTypes>' list
| |   | | |   `-InitListExpr 0x5605abcbe040 <col:28, col:29> 'void'
| |   | | `-<<<NULL>>>
| |   | `-StringLiteral 0x5605abcbe110 <line:3193:2> 'NULL TYPE' lvalue "each argument type must be a complete class or an unbounded array"
| |   `-StaticAssertDecl 0x5605abcbe3e8 <line:3194:7, line:3195:55> line:3194:7
| |     |-CallExpr 0x5605abcbe368 <col:21, col:76> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abcbe1d8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abcbe340 <col:53, col:75> '__type_identity<_Ret>' '__type_identity<_Ret>' list
| |     |   `-InitListExpr 0x5605abcbe300 <col:74, col:75> 'void'
| |     `-StringLiteral 0x5605abcbe390 <line:3195:2> 'NULL TYPE' lvalue "_Ret must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abcbe640 <line:3199:3, line:3209:5> line:3200:12 is_nothrow_invocable
| | |-TemplateTypeParmDecl 0x5605abcbe448 <line:3199:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcbe4d8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abcbe590 <line:3200:5, line:3209:5> line:3200:12 struct is_nothrow_invocable definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__and_<__is_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, void>, __call_is_nothrow_<_Fn, _ArgTypes...>>::type'
| |   |-CXXRecordDecl 0x5605abcbf3b8 <col:5, col:12> col:12 implicit struct is_nothrow_invocable
| |   |-StaticAssertDecl 0x5605abcbf688 <line:3204:7, line:3205:54> line:3204:7
| |   | |-CallExpr 0x5605abcbf608 <col:21, col:75> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5605abcbf480 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | `-CXXUnresolvedConstructExpr 0x5605abcbf5e0 <col:53, col:74> '__type_identity<_Fn>' '__type_identity<_Fn>' list
| |   | |   `-InitListExpr 0x5605abcbf5a0 <col:73, col:74> 'void'
| |   | `-StringLiteral 0x5605abcbf630 <line:3205:2> 'NULL TYPE' lvalue "_Fn must be a complete class or an unbounded array"
| |   `-StaticAssertDecl 0x5605abcbf948 <line:3206:7, line:3208:69> line:3206:7
| |     |-CXXFoldExpr 0x5605abcbf8a0 <col:21, line:3207:38> '<dependent type>'
| |     | |-<<<NULL>>>
| |     | |-CallExpr 0x5605abcbf878 <line:3206:22, line:3207:30> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x5605abcbf6e8 <line:3206:22, col:27> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | | `-CXXUnresolvedConstructExpr 0x5605abcbf850 <line:3207:2, col:29> '__type_identity<_ArgTypes>' '__type_identity<_ArgTypes>' list
| |     | |   `-InitListExpr 0x5605abcbf810 <col:28, col:29> 'void'
| |     | `-<<<NULL>>>
| |     `-StringLiteral 0x5605abcbf8e0 <line:3208:2> 'NULL TYPE' lvalue "each argument type must be a complete class or an unbounded array"
| |-TypeAliasTemplateDecl 0x5605abcc00b0 <line:3215:3, line:3217:54> line:3216:5 __is_nt_invocable_impl
| | |-TemplateTypeParmDecl 0x5605abcbf9a8 <line:3215:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| | |-TemplateTypeParmDecl 0x5605abcbfa38 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| | `-TypeAliasDecl 0x5605abcc0048 <line:3216:5, line:3217:54> line:3216:11 __is_nt_invocable_impl 'typename __is_invocable_impl<_Result, _Ret>::__nothrow_conv'
| |   `-DependentNameType 0x5605abcbffd0 'typename __is_invocable_impl<_Result, _Ret>::__nothrow_conv' dependent
| |-ClassTemplateDecl 0x5605abcc0398 <line:3221:3, line:3233:5> line:3222:12 is_nothrow_invocable_r
| | |-TemplateTypeParmDecl 0x5605abcc0110 <line:3221:12, col:21> col:21 referenced typename depth 0 index 0 _Ret
| | |-TemplateTypeParmDecl 0x5605abcc0198 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Fn
| | |-TemplateTypeParmDecl 0x5605abcc0228 <col:41, col:53> col:53 referenced typename depth 0 index 2 ... _ArgTypes
| | `-CXXRecordDecl 0x5605abcc02e8 <line:3222:5, line:3233:5> line:3222:12 struct is_nothrow_invocable_r definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__and_<__is_nt_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, _Ret>, __call_is_nothrow_<_Fn, _ArgTypes...>>::type'
| |   |-CXXRecordDecl 0x5605abcc13d8 <col:5, col:12> col:12 implicit struct is_nothrow_invocable_r
| |   |-StaticAssertDecl 0x5605abcc16a8 <line:3226:7, line:3227:54> line:3226:7
| |   | |-CallExpr 0x5605abcc1628 <col:21, col:75> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5605abcc14a0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | `-CXXUnresolvedConstructExpr 0x5605abcc1600 <col:53, col:74> '__type_identity<_Fn>' '__type_identity<_Fn>' list
| |   | |   `-InitListExpr 0x5605abcc15c0 <col:73, col:74> 'void'
| |   | `-StringLiteral 0x5605abcc1650 <line:3227:2> 'NULL TYPE' lvalue "_Fn must be a complete class or an unbounded array"
| |   |-StaticAssertDecl 0x5605abcc1968 <line:3228:7, line:3230:69> line:3228:7
| |   | |-CXXFoldExpr 0x5605abcc18c0 <col:21, line:3229:38> '<dependent type>'
| |   | | |-<<<NULL>>>
| |   | | |-CallExpr 0x5605abcc1898 <line:3228:22, line:3229:30> '<dependent type>'
| |   | | | |-UnresolvedLookupExpr 0x5605abcc1708 <line:3228:22, col:27> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |   | | | `-CXXUnresolvedConstructExpr 0x5605abcc1870 <line:3229:2, col:29> '__type_identity<_ArgTypes>' '__type_identity<_ArgTypes>' list
| |   | | |   `-InitListExpr 0x5605abcc1830 <col:28, col:29> 'void'
| |   | | `-<<<NULL>>>
| |   | `-StringLiteral 0x5605abcc1900 <line:3230:2> 'NULL TYPE' lvalue "each argument type must be a complete class or an unbounded array"
| |   `-StaticAssertDecl 0x5605abcc1bd8 <line:3231:7, line:3232:55> line:3231:7
| |     |-CallExpr 0x5605abcc1b58 <col:21, col:76> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abcc19c8 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abcc1b30 <col:53, col:75> '__type_identity<_Ret>' '__type_identity<_Ret>' list
| |     |   `-InitListExpr 0x5605abcc1af0 <col:74, col:75> 'void'
| |     `-StringLiteral 0x5605abcc1b80 <line:3232:2> 'NULL TYPE' lvalue "_Ret must be a complete class or an unbounded array"
| |-VarTemplateDecl 0x5605abcc31a8 <line:3251:1, line:3252:51> col:25 is_void_v
| | |-TemplateTypeParmDecl 0x5605abcc1c38 <line:3251:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc3138 <line:3252:3, col:51> col:25 is_void_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc32b8 <col:37, col:51> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_void<_Tp>'
| |-VarTemplateDecl 0x5605abcc3438 <line:3253:1, line:3254:67> col:25 is_null_pointer_v
| | |-TemplateTypeParmDecl 0x5605abcc3310 <line:3253:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc33c8 <line:3254:3, col:67> col:25 is_null_pointer_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc3548 <col:45, col:67> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_null_pointer<_Tp>'
| |-VarTemplateDecl 0x5605abcc36c8 <line:3255:1, line:3256:59> col:25 is_integral_v
| | |-TemplateTypeParmDecl 0x5605abcc35a0 <line:3255:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc3658 <line:3256:3, col:59> col:25 is_integral_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc37d8 <col:41, col:59> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_integral<_Tp>'
| |-VarTemplateDecl 0x5605abcc3958 <line:3257:1, line:3258:71> col:25 is_floating_point_v
| | |-TemplateTypeParmDecl 0x5605abcc3830 <line:3257:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc38e8 <line:3258:3, col:71> col:25 is_floating_point_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc3a68 <col:47, col:71> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_floating_point<_Tp>'
| |-VarTemplateDecl 0x5605abcc3be8 <line:3261:1, line:3262:52> col:25 is_array_v
| | |-TemplateTypeParmDecl 0x5605abcc3ac0 <line:3261:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc3b78 <line:3262:3, col:52> col:25 is_array_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc3c50 <col:38, col:52> 'bool' __is_array
| |     `-TemplateTypeParmType 0x5605abcc3b10 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc3ac0 '_Tp'
| |-VarTemplateDecl 0x5605abcc3db8 <line:3272:1, line:3273:57> col:25 is_pointer_v
| | |-TemplateTypeParmDecl 0x5605abcc3c90 <line:3272:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc3d48 <line:3273:3, col:57> col:25 is_pointer_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc3ec8 <col:40, col:57> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_pointer<_Tp>'
| |-VarTemplateDecl 0x5605abcc4048 <line:3274:1, line:3275:49> col:25 is_lvalue_reference_v
| | |-TemplateTypeParmDecl 0x5605abcc3f20 <line:3274:11, col:20> col:20 typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc3fd8 <line:3275:3, col:49> col:25 is_lvalue_reference_v 'const bool' inline constexpr cinit
| |   |-value: Int 0
| |   `-CXXBoolLiteralExpr 0x5605abcc40a0 <col:49> 'bool' false
| |-VarTemplatePartialSpecializationDecl 0x5605abcc4318 <line:3276:1, line:3277:55> col:25 is_lvalue_reference_v 'const bool' explicit_specialization inline constexpr cinit
| | |-value: Int 1
| | |-TemplateTypeParmDecl 0x5605abcc4118 <line:3276:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-CXXBoolLiteralExpr 0x5605abcc4568 <line:3277:55> 'bool' true
| |-VarTemplateDecl 0x5605abcc4708 <line:3278:1, line:3279:49> col:25 is_rvalue_reference_v
| | |-TemplateTypeParmDecl 0x5605abcc45e0 <line:3278:11, col:20> col:20 typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc4698 <line:3279:3, col:49> col:25 is_rvalue_reference_v 'const bool' inline constexpr cinit
| |   |-value: Int 0
| |   `-CXXBoolLiteralExpr 0x5605abcc4760 <col:49> 'bool' false
| |-VarTemplatePartialSpecializationDecl 0x5605abcc49d8 <line:3280:1, line:3281:56> col:25 is_rvalue_reference_v 'const bool' explicit_specialization inline constexpr cinit
| | |-value: Int 1
| | |-TemplateTypeParmDecl 0x5605abcc47d8 <line:3280:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-CXXBoolLiteralExpr 0x5605abcc4c28 <line:3281:56> 'bool' true
| |-VarTemplateDecl 0x5605abcc4dc8 <line:3284:1, line:3286:35> line:3285:25 is_member_object_pointer_v
| | |-TemplateTypeParmDecl 0x5605abcc4ca0 <line:3284:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc4d58 <line:3285:3, line:3286:35> line:3285:25 is_member_object_pointer_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc4e30 <line:3286:5, col:35> 'bool' __is_member_object_pointer
| |     `-TemplateTypeParmType 0x5605abcc4cf0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc4ca0 '_Tp'
| |-VarTemplateDecl 0x5605abcc4f98 <line:3294:1, line:3296:37> line:3295:25 is_member_function_pointer_v
| | |-TemplateTypeParmDecl 0x5605abcc4e70 <line:3294:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc4f28 <line:3295:3, line:3296:37> line:3295:25 is_member_function_pointer_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc5000 <line:3296:5, col:37> 'bool' __is_member_function_pointer
| |     `-TemplateTypeParmType 0x5605abcc4ec0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc4e70 '_Tp'
| |-VarTemplateDecl 0x5605abcc5b28 <line:3303:1, line:3304:50> col:25 is_enum_v
| | |-TemplateTypeParmDecl 0x5605abcc5040 <line:3303:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-VarDecl 0x5605abcc5ab8 <line:3304:3, col:50> col:25 is_enum_v 'const bool' inline constexpr cinit
| | | `-TypeTraitExpr 0x5605abcc5b90 <col:37, col:50> 'bool' __is_enum
| | |   `-TemplateTypeParmType 0x5605abcc5090 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abcc5040 '_Tp'
| | |-VarTemplateSpecializationDecl 0x5605abeaafa0 <line:3303:1, line:3304:50> col:25 used is_enum_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 0
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | `-TypeTraitExpr 0x5605abeab140 <col:37, col:50> 'bool' __is_enum
| | |   `-SubstTemplateTypeParmType 0x5605abeab100 'ice::error' sugar typename depth 0 index 0 _Tp
| | |     |-VarTemplate 0x5605abcc5b28 'is_enum_v'
| | |     `-RecordType 0x5605abe9a400 'ice::error'
| | |       `-CXXRecord 0x5605abea0860 'error'
| | |-VarTemplateSpecializationDecl 0x5605abeadd98 <line:3303:1, line:3304:50> col:25 used is_enum_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'ice::errc'
| | | | `-EnumType 0x5605abe9f270 'ice::errc'
| | | |   `-Enum 0x5605abe9f1b8 'errc'
| | | `-TypeTraitExpr 0x5605abeadf40 <col:37, col:50> 'bool' __is_enum
| | |   `-SubstTemplateTypeParmType 0x5605abeadf00 'ice::errc' sugar typename depth 0 index 0 _Tp
| | |     |-VarTemplate 0x5605abcc5b28 'is_enum_v'
| | |     `-EnumType 0x5605abe9f270 'ice::errc'
| | |       `-Enum 0x5605abe9f1b8 'errc'
| | `-VarTemplateSpecializationDecl 0x5605abece3f8 <line:3303:1, line:3304:50> col:25 used is_enum_v 'const bool' implicit_instantiation inline constexpr cinit
| |   |-value: Int 1
| |   |-TemplateArgument type 'errc'
| |   | `-EnumType 0x5605abec9650 'errc'
| |   |   `-Enum 0x5605abec9590 'errc'
| |   `-TypeTraitExpr 0x5605abece5a0 <col:37, col:50> 'bool' __is_enum
| |     `-SubstTemplateTypeParmType 0x5605abece560 'errc' sugar typename depth 0 index 0 _Tp
| |       |-VarTemplate 0x5605abcc5b28 'is_enum_v'
| |       `-EnumType 0x5605abec9650 'errc'
| |         `-Enum 0x5605abec9590 'errc'
| |-VarTemplateDecl 0x5605abcc5cf8 <line:3305:1, line:3306:52> col:25 is_union_v
| | |-TemplateTypeParmDecl 0x5605abcc5bd0 <line:3305:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc5c88 <line:3306:3, col:52> col:25 is_union_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc5d60 <col:38, col:52> 'bool' __is_union
| |     `-TemplateTypeParmType 0x5605abcc5c20 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc5bd0 '_Tp'
| |-VarTemplateDecl 0x5605abcc5ec8 <line:3307:1, line:3308:52> col:25 is_class_v
| | |-TemplateTypeParmDecl 0x5605abcc5da0 <line:3307:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc5e58 <line:3308:3, col:52> col:25 is_class_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc5f30 <col:38, col:52> 'bool' __is_class
| |     `-TemplateTypeParmType 0x5605abcc5df0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc5da0 '_Tp'
| |-VarTemplateDecl 0x5605abcc6098 <line:3312:1, line:3313:60> col:25 is_reference_v
| | |-TemplateTypeParmDecl 0x5605abcc5f70 <line:3312:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-VarDecl 0x5605abcc6028 <line:3313:3, col:60> col:25 is_reference_v 'const bool' inline constexpr cinit
| | | `-TypeTraitExpr 0x5605abcc6100 <col:42, col:60> 'bool' __is_reference
| | |   `-TemplateTypeParmType 0x5605abcc5fc0 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abcc5f70 '_Tp'
| | `-VarTemplateSpecializationDecl 0x5605abdcefa8 <line:3312:1, line:3313:60> col:25 referenced is_reference_v 'const bool' implicit_instantiation inline constexpr cinit
| |   |-value: Int 1
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-TypeTraitExpr 0x5605abdcf140 <col:42, col:60> 'bool' __is_reference
| |     `-SubstTemplateTypeParmType 0x5605abdcf100 'void *const &' sugar typename depth 0 index 0 _Tp
| |       |-VarTemplate 0x5605abcc6098 'is_reference_v'
| |       `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |         `-QualType 0x5605aba9d151 'void *const' const
| |           `-PointerType 0x5605aba9d150 'void *'
| |             `-BuiltinType 0x5605aba9c9d0 'void'
| |-VarTemplateDecl 0x5605abcc6268 <line:3323:1, line:3324:63> col:25 is_arithmetic_v
| | |-TemplateTypeParmDecl 0x5605abcc6140 <line:3323:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc61f8 <line:3324:3, col:63> col:25 is_arithmetic_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc6378 <col:43, col:63> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_arithmetic<_Tp>'
| |-VarTemplateDecl 0x5605abcc64f8 <line:3325:1, line:3326:65> col:25 is_fundamental_v
| | |-TemplateTypeParmDecl 0x5605abcc63d0 <line:3325:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc6488 <line:3326:3, col:65> col:25 is_fundamental_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc6608 <col:44, col:65> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_fundamental<_Tp>'
| |-VarTemplateDecl 0x5605abcc6788 <line:3329:1, line:3330:54> col:25 is_object_v
| | |-TemplateTypeParmDecl 0x5605abcc6660 <line:3329:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc6718 <line:3330:3, col:54> col:25 is_object_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc67f0 <col:39, col:54> 'bool' __is_object
| |     `-TemplateTypeParmType 0x5605abcc66b0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc6660 '_Tp'
| |-VarTemplateDecl 0x5605abcc6958 <line:3336:1, line:3337:55> col:25 is_scalar_v
| | |-TemplateTypeParmDecl 0x5605abcc6830 <line:3336:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc68e8 <line:3337:3, col:55> col:25 is_scalar_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc6a68 <col:39, col:55> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_scalar<_Tp>'
| |-VarTemplateDecl 0x5605abcc6be8 <line:3338:1, line:3339:62> col:25 is_compound_v
| | |-TemplateTypeParmDecl 0x5605abcc6ac0 <line:3338:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc6b78 <line:3339:3, col:62> col:25 is_compound_v 'const bool' inline constexpr cinit
| |   `-UnaryOperator 0x5605abcc6cf8 <col:41, col:62> '<dependent type>' prefix '!' cannot overflow
| |     `-UnresolvedLookupExpr 0x5605abcc6c80 <col:42, col:62> '<dependent type>' lvalue (no ADL) = 'is_fundamental_v' 0x5605abcc64f8
| |       `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         `-TemplateTypeParmType 0x5605abcc6b10 '_Tp' dependent depth 0 index 0
| |           `-TemplateTypeParm 0x5605abcc6ac0 '_Tp'
| |-VarTemplateDecl 0x5605abcc6e58 <line:3342:1, line:3343:70> col:25 is_member_pointer_v
| | |-TemplateTypeParmDecl 0x5605abcc6d30 <line:3342:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc6de8 <line:3343:3, col:70> col:25 is_member_pointer_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc6ec0 <col:47, col:70> 'bool' __is_member_pointer
| |     `-TemplateTypeParmType 0x5605abcc6d80 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc6d30 '_Tp'
| |-VarTemplateDecl 0x5605abcc7028 <line:3349:1, line:3350:38> col:25 is_const_v
| | |-TemplateTypeParmDecl 0x5605abcc6f00 <line:3349:11, col:20> col:20 typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc6fb8 <line:3350:3, col:38> col:25 is_const_v 'const bool' inline constexpr cinit
| |   |-value: Int 0
| |   `-CXXBoolLiteralExpr 0x5605abcc7080 <col:38> 'bool' false
| |-VarTemplatePartialSpecializationDecl 0x5605abcc72c0 <line:3351:1, line:3352:49> col:25 is_const_v 'const bool' explicit_specialization inline constexpr cinit
| | |-value: Int 1
| | |-TemplateTypeParmDecl 0x5605abcc70f8 <line:3351:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'const type-parameter-0-0'
| | | `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-CXXBoolLiteralExpr 0x5605abcc7518 <line:3352:49> 'bool' true
| |-VarTemplateDecl 0x5605abcc76b8 <line:3355:1, line:3356:58> col:25 is_function_v
| | |-TemplateTypeParmDecl 0x5605abcc7590 <line:3355:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc7648 <line:3356:3, col:58> col:25 is_function_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc7720 <col:41, col:58> 'bool' __is_function
| |     `-TemplateTypeParmType 0x5605abcc75e0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc7590 '_Tp'
| |-VarTemplateDecl 0x5605abcc7888 <line:3366:1, line:3367:41> col:25 is_volatile_v
| | |-TemplateTypeParmDecl 0x5605abcc7760 <line:3366:11, col:20> col:20 typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc7818 <line:3367:3, col:41> col:25 is_volatile_v 'const bool' inline constexpr cinit
| |   |-value: Int 0
| |   `-CXXBoolLiteralExpr 0x5605abcc78e0 <col:41> 'bool' false
| |-VarTemplatePartialSpecializationDecl 0x5605abcc8110 <line:3368:1, line:3369:55> col:25 is_volatile_v 'const bool' explicit_specialization inline constexpr cinit
| | |-value: Int 1
| | |-TemplateTypeParmDecl 0x5605abcc7958 <line:3368:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'volatile type-parameter-0-0'
| | | `-QualType 0x5605abb238f4 'volatile type-parameter-0-0' volatile
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-CXXBoolLiteralExpr 0x5605abcc8368 <line:3369:55> 'bool' true
| |-VarTemplateDecl 0x5605abcc8508 <line:3371:1, line:3372:56> col:25 is_trivial_v
| | |-TemplateTypeParmDecl 0x5605abcc83e0 <line:3371:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc8498 <line:3372:3, col:56> col:25 is_trivial_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc8570 <col:40, col:56> 'bool' __is_trivial
| |     `-TemplateTypeParmType 0x5605abcc8430 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc83e0 '_Tp'
| |-VarTemplateDecl 0x5605abcc86d8 <line:3373:1, line:3374:78> col:25 is_trivially_copyable_v
| | |-TemplateTypeParmDecl 0x5605abcc85b0 <line:3373:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc8668 <line:3374:3, col:78> col:25 is_trivially_copyable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc8740 <col:51, col:78> 'bool' __is_trivially_copyable
| |     `-TemplateTypeParmType 0x5605abcc8600 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc85b0 '_Tp'
| |-VarTemplateDecl 0x5605abcc88a8 <line:3375:1, line:3376:72> col:25 is_standard_layout_v
| | |-TemplateTypeParmDecl 0x5605abcc8780 <line:3375:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc8838 <line:3376:3, col:72> col:25 is_standard_layout_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc8910 <col:48, col:72> 'bool' __is_standard_layout
| |     `-TemplateTypeParmType 0x5605abcc87d0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc8780 '_Tp'
| |-VarTemplateDecl 0x5605abcc8ad0 <line:3377:1, line:3379:48> col:25 is_pod_v
| | |-TemplateTypeParmDecl 0x5605abcc8950 <line:3377:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc8a60 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:100:3, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3379:48> col:25 is_pod_v 'const bool' inline constexpr cinit
| |   |-TypeTraitExpr 0x5605abcc8be0 <col:36, col:48> 'bool' __is_pod
| |   | `-TemplateTypeParmType 0x5605abcc89a0 '_Tp' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abcc8950 '_Tp'
| |   `-DeprecatedAttr 0x5605abcc8b28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:100:19, col:58> "use 'is_standard_layout_v && is_trivial_v' instead" ""
| |-VarTemplateDecl 0x5605abcc8d48 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3380:1, line:3382:66> col:25 is_literal_type_v
| | |-TemplateTypeParmDecl 0x5605abcc8c20 <line:3380:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc8cd8 <line:3382:3, col:66> col:25 is_literal_type_v 'const bool' inline constexpr cinit
| |   |-TypeTraitExpr 0x5605abcc8e20 <col:45, col:66> 'bool' __is_literal
| |   | `-TemplateTypeParmType 0x5605abcc8c70 '_Tp' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abcc8c20 '_Tp'
| |   `-DeprecatedAttr 0x5605abcc8da0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:123:34> "" ""
| |-VarTemplateDecl 0x5605abcc8f88 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3383:1, line:3384:52> col:25 is_empty_v
| | |-TemplateTypeParmDecl 0x5605abcc8e60 <line:3383:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc8f18 <line:3384:3, col:52> col:25 is_empty_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc8ff0 <col:38, col:52> 'bool' __is_empty
| |     `-TemplateTypeParmType 0x5605abcc8eb0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc8e60 '_Tp'
| |-VarTemplateDecl 0x5605abcc9158 <line:3385:1, line:3386:64> col:25 is_polymorphic_v
| | |-TemplateTypeParmDecl 0x5605abcc9030 <line:3385:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc90e8 <line:3386:3, col:64> col:25 is_polymorphic_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc91c0 <col:44, col:64> 'bool' __is_polymorphic
| |     `-TemplateTypeParmType 0x5605abcc9080 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc9030 '_Tp'
| |-VarTemplateDecl 0x5605abcc9328 <line:3387:1, line:3388:58> col:25 is_abstract_v
| | |-TemplateTypeParmDecl 0x5605abcc9200 <line:3387:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc92b8 <line:3388:3, col:58> col:25 is_abstract_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc9390 <col:41, col:58> 'bool' __is_abstract
| |     `-TemplateTypeParmType 0x5605abcc9250 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc9200 '_Tp'
| |-VarTemplateDecl 0x5605abcc94f8 <line:3389:1, line:3390:52> col:25 is_final_v
| | |-TemplateTypeParmDecl 0x5605abcc93d0 <line:3389:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc9488 <line:3390:3, col:52> col:25 is_final_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc9560 <col:38, col:52> 'bool' __is_final
| |     `-TemplateTypeParmType 0x5605abcc9420 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc93d0 '_Tp'
| |-VarTemplateDecl 0x5605abcc96c8 <line:3392:1, line:3393:55> col:25 is_signed_v
| | |-TemplateTypeParmDecl 0x5605abcc95a0 <line:3392:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc9658 <line:3393:3, col:55> col:25 is_signed_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc97d8 <col:39, col:55> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_signed<_Tp>'
| |-VarTemplateDecl 0x5605abcc9958 <line:3394:1, line:3395:59> col:25 is_unsigned_v
| | |-TemplateTypeParmDecl 0x5605abcc9830 <line:3394:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc98e8 <line:3395:3, col:59> col:25 is_unsigned_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcc9a68 <col:41, col:59> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_unsigned<_Tp>'
| |-VarTemplateDecl 0x5605abcc9c80 <line:3397:1, line:3398:78> col:25 is_constructible_v
| | |-TemplateTypeParmDecl 0x5605abcc9ac0 <line:3397:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcc9b48 <col:25, col:37> col:37 referenced typename depth 0 index 1 ... _Args
| | `-VarDecl 0x5605abcc9c10 <line:3398:3, col:78> col:25 is_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc9d40 <col:46, col:78> 'bool' __is_constructible
| |     |-TemplateTypeParmType 0x5605abcc9b10 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcc9ac0 '_Tp'
| |     `-PackExpansionType 0x5605abcc9d00 '_Args...' dependent
| |       `-TemplateTypeParmType 0x5605abcc9ba0 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |         `-TemplateTypeParm 0x5605abcc9b48 '_Args'
| |-VarTemplateDecl 0x5605abcc9eb8 <line:3399:1, line:3400:76> col:25 is_default_constructible_v
| | |-TemplateTypeParmDecl 0x5605abcc9d88 <line:3399:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcc9e48 <line:3400:3, col:76> col:25 is_default_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcc9f20 <col:54, col:76> 'bool' __is_constructible
| |     `-TemplateTypeParmType 0x5605abcc9de0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcc9d88 '_Tp'
| |-VarTemplateDecl 0x5605abccbd08 <line:3401:1, line:3403:58> line:3402:25 is_copy_constructible_v
| | |-TemplateTypeParmDecl 0x5605abcc9f60 <line:3401:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccbc98 <line:3402:3, line:3403:58> line:3402:25 is_copy_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccbf90 <line:3403:7, col:58> 'bool' __is_constructible
| |     |-TemplateTypeParmType 0x5605abcc9fb0 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcc9f60 '_Tp'
| |     `-ElaboratedType 0x5605abccbf20 '__add_lval_ref_t<const _Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abccbed0 '__add_lval_ref_t<const _Tp>' sugar dependent alias
| |         |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |         |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |         | `-QualType 0x5605abcc9fb1 'const _Tp' const
| |         |   `-TemplateTypeParmType 0x5605abcc9fb0 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abcc9f60 '_Tp'
| |         `-DependentNameType 0x5605abccbe80 'typename __add_lvalue_reference_helper<const _Tp>::type' dependent
| |-VarTemplateDecl 0x5605abccc108 <line:3404:1, line:3406:52> line:3405:25 is_move_constructible_v
| | |-TemplateTypeParmDecl 0x5605abccbfd8 <line:3404:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccc098 <line:3405:3, line:3406:52> line:3405:25 is_move_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccc390 <line:3406:7, col:52> 'bool' __is_constructible
| |     |-TemplateTypeParmType 0x5605abccc030 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abccbfd8 '_Tp'
| |     `-ElaboratedType 0x5605abccc320 '__add_rval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abccc2d0 '__add_rval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_rval_ref_t':'std::__add_rval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abccc030 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abccbfd8 '_Tp'
| |         `-DependentNameType 0x5605abccc280 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-VarTemplateDecl 0x5605abccc5a0 <line:3408:1, line:3409:67> col:25 is_assignable_v
| | |-TemplateTypeParmDecl 0x5605abccc3d8 <line:3408:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abccc468 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abccc530 <line:3409:3, col:67> col:25 is_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccc618 <col:43, col:67> 'bool' __is_assignable
| |     |-TemplateTypeParmType 0x5605abccc430 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abccc3d8 '_Tp'
| |     `-TemplateTypeParmType 0x5605abccc4c0 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abccc468 '_Up'
| |-VarTemplateDecl 0x5605abccc788 <line:3410:1, line:3412:73> line:3411:25 is_copy_assignable_v
| | |-TemplateTypeParmDecl 0x5605abccc660 <line:3410:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccc718 <line:3411:3, line:3412:73> line:3411:25 is_copy_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcccc20 <line:3412:7, col:73> 'bool' __is_assignable
| |     |-ElaboratedType 0x5605abccc990 '__add_lval_ref_t<_Tp>' sugar dependent
| |     | `-TemplateSpecializationType 0x5605abccc940 '__add_lval_ref_t<_Tp>' sugar dependent alias
| |     |   |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |     |   | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |     |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |   | `-TemplateTypeParmType 0x5605abccc6b0 '_Tp' dependent depth 0 index 0
| |     |   |   `-TemplateTypeParm 0x5605abccc660 '_Tp'
| |     |   `-DependentNameType 0x5605abccc8f0 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |     `-ElaboratedType 0x5605abcccbb0 '__add_lval_ref_t<const _Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcccb60 '__add_lval_ref_t<const _Tp>' sugar dependent alias
| |         |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |         |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |         | `-QualType 0x5605abccc6b1 'const _Tp' const
| |         |   `-TemplateTypeParmType 0x5605abccc6b0 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abccc660 '_Tp'
| |         `-DependentNameType 0x5605abcccb10 'typename __add_lvalue_reference_helper<const _Tp>::type' dependent
| |-VarTemplateDecl 0x5605abcccd98 <line:3413:1, line:3415:67> line:3414:25 is_move_assignable_v
| | |-TemplateTypeParmDecl 0x5605abcccc68 <line:3413:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcccd28 <line:3414:3, line:3415:67> line:3414:25 is_move_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccd230 <line:3415:7, col:67> 'bool' __is_assignable
| |     |-ElaboratedType 0x5605abcccfa0 '__add_lval_ref_t<_Tp>' sugar dependent
| |     | `-TemplateSpecializationType 0x5605abcccf50 '__add_lval_ref_t<_Tp>' sugar dependent alias
| |     |   |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |     |   | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |     |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |   | `-TemplateTypeParmType 0x5605abccccc0 '_Tp' dependent depth 0 index 0
| |     |   |   `-TemplateTypeParm 0x5605abcccc68 '_Tp'
| |     |   `-DependentNameType 0x5605abcccf00 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |     `-ElaboratedType 0x5605abccd1c0 '__add_rval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abccd170 '__add_rval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_rval_ref_t':'std::__add_rval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abccccc0 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abcccc68 '_Tp'
| |         `-DependentNameType 0x5605abccd120 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-VarTemplateDecl 0x5605abccd3a8 <line:3417:1, line:3418:67> col:25 is_destructible_v
| | |-TemplateTypeParmDecl 0x5605abccd278 <line:3417:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccd338 <line:3418:3, col:67> col:25 is_destructible_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abccd4b8 <col:45, col:67> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_destructible<_Tp>'
| |-VarTemplateDecl 0x5605abccd6d0 <line:3420:1, line:3422:49> line:3421:25 is_trivially_constructible_v
| | |-TemplateTypeParmDecl 0x5605abccd510 <line:3420:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abccd598 <col:25, col:37> col:37 referenced typename depth 0 index 1 ... _Args
| | `-VarDecl 0x5605abccd660 <line:3421:3, line:3422:49> line:3421:25 is_trivially_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccd790 <line:3422:7, col:49> 'bool' __is_trivially_constructible
| |     |-TemplateTypeParmType 0x5605abccd560 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abccd510 '_Tp'
| |     `-PackExpansionType 0x5605abccd750 '_Args...' dependent
| |       `-TemplateTypeParmType 0x5605abccd5f0 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |         `-TemplateTypeParm 0x5605abccd598 '_Args'
| |-VarTemplateDecl 0x5605abccd908 <line:3423:1, line:3425:39> line:3424:25 is_trivially_default_constructible_v
| | |-TemplateTypeParmDecl 0x5605abccd7d8 <line:3423:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccd898 <line:3424:3, line:3425:39> line:3424:25 is_trivially_default_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccd970 <line:3425:7, col:39> 'bool' __is_trivially_constructible
| |     `-TemplateTypeParmType 0x5605abccd830 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abccd7d8 '_Tp'
| |-VarTemplateDecl 0x5605abccdad8 <line:3426:1, line:3428:68> line:3427:25 is_trivially_copy_constructible_v
| | |-TemplateTypeParmDecl 0x5605abccd9b0 <line:3426:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccda68 <line:3427:3, line:3428:68> line:3427:25 is_trivially_copy_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccdd80 <line:3428:7, col:68> 'bool' __is_trivially_constructible
| |     |-TemplateTypeParmType 0x5605abccda00 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abccd9b0 '_Tp'
| |     `-ElaboratedType 0x5605abccdd10 '__add_lval_ref_t<const _Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abccdcc0 '__add_lval_ref_t<const _Tp>' sugar dependent alias
| |         |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |         |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |         | `-QualType 0x5605abccda01 'const _Tp' const
| |         |   `-TemplateTypeParmType 0x5605abccda00 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abccd9b0 '_Tp'
| |         `-DependentNameType 0x5605abccdc50 'typename __add_lvalue_reference_helper<const _Tp>::type' dependent
| |-VarTemplateDecl 0x5605abccdef8 <line:3429:1, line:3431:62> line:3430:25 is_trivially_move_constructible_v
| | |-TemplateTypeParmDecl 0x5605abccddc8 <line:3429:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccde88 <line:3430:3, line:3431:62> line:3430:25 is_trivially_move_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcce180 <line:3431:7, col:62> 'bool' __is_trivially_constructible
| |     |-TemplateTypeParmType 0x5605abccde20 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abccddc8 '_Tp'
| |     `-ElaboratedType 0x5605abcce110 '__add_rval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcce0c0 '__add_rval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_rval_ref_t':'std::__add_rval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abccde20 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abccddc8 '_Tp'
| |         `-DependentNameType 0x5605abcce070 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-VarTemplateDecl 0x5605abcce390 <line:3433:1, line:3435:41> line:3434:25 is_trivially_assignable_v
| | |-TemplateTypeParmDecl 0x5605abcce1c8 <line:3433:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcce258 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abcce320 <line:3434:3, line:3435:41> line:3434:25 is_trivially_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcce408 <line:3435:7, col:41> 'bool' __is_trivially_assignable
| |     |-TemplateTypeParmType 0x5605abcce220 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcce1c8 '_Tp'
| |     `-TemplateTypeParmType 0x5605abcce2b0 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abcce258 '_Up'
| |-VarTemplateDecl 0x5605abcce578 <line:3436:1, line:3439:32> line:3437:25 is_trivially_copy_assignable_v
| | |-TemplateTypeParmDecl 0x5605abcce450 <line:3436:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcce508 <line:3437:3, line:3439:32> line:3437:25 is_trivially_copy_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccea10 <line:3438:7, line:3439:32> 'bool' __is_trivially_assignable
| |     |-ElaboratedType 0x5605abcce780 '__add_lval_ref_t<_Tp>' sugar dependent
| |     | `-TemplateSpecializationType 0x5605abcce730 '__add_lval_ref_t<_Tp>' sugar dependent alias
| |     |   |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |     |   | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |     |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |   | `-TemplateTypeParmType 0x5605abcce4a0 '_Tp' dependent depth 0 index 0
| |     |   |   `-TemplateTypeParm 0x5605abcce450 '_Tp'
| |     |   `-DependentNameType 0x5605abcce6e0 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |     `-ElaboratedType 0x5605abcce9a0 '__add_lval_ref_t<const _Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcce950 '__add_lval_ref_t<const _Tp>' sugar dependent alias
| |         |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |         |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |         | `-QualType 0x5605abcce4a1 'const _Tp' const
| |         |   `-TemplateTypeParmType 0x5605abcce4a0 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abcce450 '_Tp'
| |         `-DependentNameType 0x5605abcce900 'typename __add_lvalue_reference_helper<const _Tp>::type' dependent
| |-VarTemplateDecl 0x5605abcceb88 <line:3440:1, line:3443:26> line:3441:25 is_trivially_move_assignable_v
| | |-TemplateTypeParmDecl 0x5605abccea58 <line:3440:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcceb18 <line:3441:3, line:3443:26> line:3441:25 is_trivially_move_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abccf020 <line:3442:7, line:3443:26> 'bool' __is_trivially_assignable
| |     |-ElaboratedType 0x5605abcced90 '__add_lval_ref_t<_Tp>' sugar dependent
| |     | `-TemplateSpecializationType 0x5605abcced40 '__add_lval_ref_t<_Tp>' sugar dependent alias
| |     |   |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |     |   | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |     |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |   | `-TemplateTypeParmType 0x5605abcceab0 '_Tp' dependent depth 0 index 0
| |     |   |   `-TemplateTypeParm 0x5605abccea58 '_Tp'
| |     |   `-DependentNameType 0x5605abccecf0 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |     `-ElaboratedType 0x5605abccefb0 '__add_rval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abccef60 '__add_rval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_rval_ref_t':'std::__add_rval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abcceab0 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abccea58 '_Tp'
| |         `-DependentNameType 0x5605abccef10 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-VarTemplateDecl 0x5605abccf198 <line:3446:1, line:3447:55> col:25 is_trivially_destructible_v
| | |-TemplateTypeParmDecl 0x5605abccf068 <line:3446:11, col:20> col:20 typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abccf128 <line:3447:3, col:55> col:25 is_trivially_destructible_v 'const bool' inline constexpr cinit
| |   |-value: Int 0
| |   `-CXXBoolLiteralExpr 0x5605abccf1f0 <col:55> 'bool' false
| |-VarTemplatePartialSpecializationDecl 0x5605abccf770 <line:3449:1, line:3452:35> line:3451:25 is_trivially_destructible_v 'const bool' explicit_specialization inline constexpr cinit
| | |-TemplateTypeParmDecl 0x5605abccf268 <line:3449:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-BinaryOperator 0x5605abccf608 <line:3450:12, col:72> '<dependent type>' '&&'
| | | |-ParenExpr 0x5605abccf3c0 <col:12, col:33> '<dependent type>'
| | | | `-UnaryOperator 0x5605abccf3a8 <col:13, col:32> '<dependent type>' prefix '!' cannot overflow
| | | |   `-UnresolvedLookupExpr 0x5605abccf330 <col:14, col:32> '<dependent type>' lvalue (no ADL) = 'is_reference_v' 0x5605abcc6098
| | | |     `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |       `-TemplateTypeParmType 0x5605abccf2c0 '_Tp' dependent depth 0 index 0
| | | |         `-TemplateTypeParm 0x5605abccf268 '_Tp'
| | | `-RequiresExpr 0x5605abccf5c8 <col:38, col:72> 'bool'
| | |   |-ParmVarDecl 0x5605abccf428 <col:48, col:53> col:53 referenced __t '_Tp &'
| | |   `-SimpleRequirement 0x5605abccf598 dependent
| | |     `-CallExpr 0x5605abccf578 <col:60, col:69> 'void'
| | |       `-CXXPseudoDestructorExpr 0x5605abccf528 <col:60, col:65> '<bound member function type>'
| | |         `-DeclRefExpr 0x5605abccf4f8 <col:60> '_Tp' lvalue ParmVar 0x5605abccf428 '__t' '_Tp &' non_odr_use_unevaluated
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-TypeTraitExpr 0x5605abccf9e8 <line:3452:7, col:35> 'bool' __has_trivial_destructor
| |   `-TemplateTypeParmType 0x5605abccf2c0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abccf268 '_Tp'
| |-VarTemplatePartialSpecializationDecl 0x5605abccfb28 <line:3453:1, line:3454:61> col:25 is_trivially_destructible_v 'const bool' explicit_specialization inline constexpr cinit
| | |-value: Int 1
| | |-TemplateTypeParmDecl 0x5605abccfa28 <line:3453:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-CXXBoolLiteralExpr 0x5605abcd0228 <line:3454:61> 'bool' true
| |-VarTemplatePartialSpecializationDecl 0x5605abcd0398 <line:3455:1, line:3456:62> col:25 is_trivially_destructible_v 'const bool' explicit_specialization inline constexpr cinit
| | |-value: Int 1
| | |-TemplateTypeParmDecl 0x5605abcd02a0 <line:3455:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-CXXBoolLiteralExpr 0x5605abcd0588 <line:3456:62> 'bool' true
| |-VarTemplatePartialSpecializationDecl 0x5605abcd07b8 <line:3457:1, line:3459:38> line:3458:25 is_trivially_destructible_v 'const bool' explicit_specialization inline constexpr cinit
| | |-TemplateTypeParmDecl 0x5605abcd0600 <line:3457:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abcd0698 <col:25, col:32> col:32 referenced 'size_t':'unsigned long' depth 0 index 1 _Nm
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | `-UnresolvedLookupExpr 0x5605abcd09c8 <line:3459:7, col:38> '<dependent type>' lvalue (no ADL) = 'is_trivially_destructible_v' 0x5605abccf198
| |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     `-TemplateTypeParmType 0x5605abcd0650 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcd0600 '_Tp'
| |-VarTemplateDecl 0x5605abcd0c20 <line:3466:1, line:3468:47> line:3467:25 is_nothrow_constructible_v
| | |-TemplateTypeParmDecl 0x5605abcd0a60 <line:3466:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcd0ae8 <col:25, col:37> col:37 referenced typename depth 0 index 1 ... _Args
| | `-VarDecl 0x5605abcd0bb0 <line:3467:3, line:3468:47> line:3467:25 is_nothrow_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd0ce0 <line:3468:7, col:47> 'bool' __is_nothrow_constructible
| |     |-TemplateTypeParmType 0x5605abcd0ab0 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcd0a60 '_Tp'
| |     `-PackExpansionType 0x5605abcd0ca0 '_Args...' dependent
| |       `-TemplateTypeParmType 0x5605abcd0b40 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |         `-TemplateTypeParm 0x5605abcd0ae8 '_Args'
| |-VarTemplateDecl 0x5605abcd0e58 <line:3469:1, line:3471:37> line:3470:25 is_nothrow_default_constructible_v
| | |-TemplateTypeParmDecl 0x5605abcd0d28 <line:3469:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd0de8 <line:3470:3, line:3471:37> line:3470:25 is_nothrow_default_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd0ec0 <line:3471:7, col:37> 'bool' __is_nothrow_constructible
| |     `-TemplateTypeParmType 0x5605abcd0d80 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcd0d28 '_Tp'
| |-VarTemplateDecl 0x5605abcd1028 <line:3472:1, line:3474:66> line:3473:25 is_nothrow_copy_constructible_v
| | |-TemplateTypeParmDecl 0x5605abcd0f00 <line:3472:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd0fb8 <line:3473:3, line:3474:66> line:3473:25 is_nothrow_copy_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd12b0 <line:3474:7, col:66> 'bool' __is_nothrow_constructible
| |     |-TemplateTypeParmType 0x5605abcd0f50 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcd0f00 '_Tp'
| |     `-ElaboratedType 0x5605abcd1240 '__add_lval_ref_t<const _Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcd11f0 '__add_lval_ref_t<const _Tp>' sugar dependent alias
| |         |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |         |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |         | `-QualType 0x5605abcd0f51 'const _Tp' const
| |         |   `-TemplateTypeParmType 0x5605abcd0f50 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abcd0f00 '_Tp'
| |         `-DependentNameType 0x5605abcd11a0 'typename __add_lvalue_reference_helper<const _Tp>::type' dependent
| |-VarTemplateDecl 0x5605abcd1428 <line:3475:1, line:3477:60> line:3476:25 is_nothrow_move_constructible_v
| | |-TemplateTypeParmDecl 0x5605abcd12f8 <line:3475:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd13b8 <line:3476:3, line:3477:60> line:3476:25 is_nothrow_move_constructible_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd16b0 <line:3477:7, col:60> 'bool' __is_nothrow_constructible
| |     |-TemplateTypeParmType 0x5605abcd1350 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcd12f8 '_Tp'
| |     `-ElaboratedType 0x5605abcd1640 '__add_rval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcd15f0 '__add_rval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_rval_ref_t':'std::__add_rval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abcd1350 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abcd12f8 '_Tp'
| |         `-DependentNameType 0x5605abcd15a0 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-VarTemplateDecl 0x5605abcd18c0 <line:3479:1, line:3481:39> line:3480:25 is_nothrow_assignable_v
| | |-TemplateTypeParmDecl 0x5605abcd16f8 <line:3479:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcd1788 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abcd1850 <line:3480:3, line:3481:39> line:3480:25 is_nothrow_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd1938 <line:3481:7, col:39> 'bool' __is_nothrow_assignable
| |     |-TemplateTypeParmType 0x5605abcd1750 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcd16f8 '_Tp'
| |     `-TemplateTypeParmType 0x5605abcd17e0 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abcd1788 '_Up'
| |-VarTemplateDecl 0x5605abcd1aa8 <line:3482:1, line:3485:37> line:3483:25 is_nothrow_copy_assignable_v
| | |-TemplateTypeParmDecl 0x5605abcd1980 <line:3482:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd1a38 <line:3483:3, line:3485:37> line:3483:25 is_nothrow_copy_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd1f40 <line:3484:7, line:3485:37> 'bool' __is_nothrow_assignable
| |     |-ElaboratedType 0x5605abcd1cb0 '__add_lval_ref_t<_Tp>' sugar dependent
| |     | `-TemplateSpecializationType 0x5605abcd1c60 '__add_lval_ref_t<_Tp>' sugar dependent alias
| |     |   |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |     |   | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |     |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |   | `-TemplateTypeParmType 0x5605abcd19d0 '_Tp' dependent depth 0 index 0
| |     |   |   `-TemplateTypeParm 0x5605abcd1980 '_Tp'
| |     |   `-DependentNameType 0x5605abcd1c10 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |     `-ElaboratedType 0x5605abcd1ed0 '__add_lval_ref_t<const _Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcd1e80 '__add_lval_ref_t<const _Tp>' sugar dependent alias
| |         |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |         |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |         | `-QualType 0x5605abcd19d1 'const _Tp' const
| |         |   `-TemplateTypeParmType 0x5605abcd19d0 '_Tp' dependent depth 0 index 0
| |         |     `-TemplateTypeParm 0x5605abcd1980 '_Tp'
| |         `-DependentNameType 0x5605abcd1e30 'typename __add_lvalue_reference_helper<const _Tp>::type' dependent
| |-VarTemplateDecl 0x5605abcd20b8 <line:3486:1, line:3488:75> line:3487:25 is_nothrow_move_assignable_v
| | |-TemplateTypeParmDecl 0x5605abcd1f88 <line:3486:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd2048 <line:3487:3, line:3488:75> line:3487:25 is_nothrow_move_assignable_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd3570 <line:3488:7, col:75> 'bool' __is_nothrow_assignable
| |     |-ElaboratedType 0x5605abcd32e0 '__add_lval_ref_t<_Tp>' sugar dependent
| |     | `-TemplateSpecializationType 0x5605abcd3290 '__add_lval_ref_t<_Tp>' sugar dependent alias
| |     |   |-name: '__add_lval_ref_t':'std::__add_lval_ref_t' qualified
| |     |   | `-TypeAliasTemplateDecl 0x5605abbd54a0 <line:1140:3, line:1141:75> col:5 __add_lval_ref_t
| |     |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |   | `-TemplateTypeParmType 0x5605abcd1fe0 '_Tp' dependent depth 0 index 0
| |     |   |   `-TemplateTypeParm 0x5605abcd1f88 '_Tp'
| |     |   `-DependentNameType 0x5605abcd3240 'typename __add_lvalue_reference_helper<_Tp>::type' dependent
| |     `-ElaboratedType 0x5605abcd3500 '__add_rval_ref_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcd34b0 '__add_rval_ref_t<_Tp>' sugar dependent alias
| |         |-name: '__add_rval_ref_t':'std::__add_rval_ref_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abbd78e0 <line:1162:3, line:1163:75> col:5 __add_rval_ref_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abcd1fe0 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abcd1f88 '_Tp'
| |         `-DependentNameType 0x5605abcd3460 'typename __add_rvalue_reference_helper<_Tp>::type' dependent
| |-VarTemplateDecl 0x5605abcd36e8 <line:3490:1, line:3492:35> line:3491:25 is_nothrow_destructible_v
| | |-TemplateTypeParmDecl 0x5605abcd35b8 <line:3490:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd3678 <line:3491:3, line:3492:35> line:3491:25 is_nothrow_destructible_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcd37f8 <line:3492:5, col:35> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_nothrow_destructible<_Tp>'
| |-VarTemplateDecl 0x5605abcd3978 <line:3494:1, line:3496:35> line:3495:25 has_virtual_destructor_v
| | |-TemplateTypeParmDecl 0x5605abcd3850 <line:3494:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd3908 <line:3495:3, line:3496:35> line:3495:25 has_virtual_destructor_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd39e0 <line:3496:7, col:35> 'bool' __has_virtual_destructor
| |     `-TemplateTypeParmType 0x5605abcd38a0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcd3850 '_Tp'
| |-VarTemplateDecl 0x5605abcd3b48 <line:3498:1, line:3499:63> col:27 alignment_of_v
| | |-TemplateTypeParmDecl 0x5605abcd3a20 <line:3498:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd3ad8 <line:3499:3, col:63> col:27 alignment_of_v 'const size_t':'const unsigned long' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcd3c58 <col:44, col:63> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'alignment_of<_Tp>'
| |-VarTemplateDecl 0x5605abcd3dd8 <line:3501:1, line:3502:36> col:27 rank_v
| | |-TemplateTypeParmDecl 0x5605abcd3cb0 <line:3501:11, col:20> col:20 typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd3d68 <line:3502:3, col:36> col:27 rank_v 'const size_t':'const unsigned long' inline constexpr cinit
| |   |-value: Int 0
| |   `-ImplicitCastExpr 0x5605abcd3e50 <col:36> 'const size_t':'const unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5605abcd3e30 <col:36> 'int' 0
| |-VarTemplatePartialSpecializationDecl 0x5605abcd4178 <line:3503:1, line:3504:62> col:27 rank_v 'const size_t':'const unsigned long' explicit_specialization inline constexpr cinit
| | |-TemplateTypeParmDecl 0x5605abcd3ed0 <line:3503:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abcd3f68 <col:25, col:32> col:32 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | `-BinaryOperator 0x5605abcd4480 <line:3504:48, col:62> '<dependent type>' '+'
| |   |-IntegerLiteral 0x5605abcd43d8 <col:48> 'int' 1
| |   `-UnresolvedLookupExpr 0x5605abcd4408 <col:52, col:62> '<dependent type>' lvalue (no ADL) = 'rank_v' 0x5605abcd3dd8
| |     `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abcd3f20 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abcd3ed0 '_Tp'
| |-VarTemplatePartialSpecializationDecl 0x5605abcd45c8 <line:3505:1, line:3506:57> col:27 rank_v 'const size_t':'const unsigned long' explicit_specialization inline constexpr cinit
| | |-TemplateTypeParmDecl 0x5605abcd44c0 <line:3505:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-BinaryOperator 0x5605abcd4870 <line:3506:43, col:57> '<dependent type>' '+'
| |   |-IntegerLiteral 0x5605abcd47c8 <col:43> 'int' 1
| |   `-UnresolvedLookupExpr 0x5605abcd47f8 <col:47, col:57> '<dependent type>' lvalue (no ADL) = 'rank_v' 0x5605abcd3dd8
| |     `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abcd4510 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abcd44c0 '_Tp'
| |-VarTemplateDecl 0x5605abcd4a98 <line:3508:1, line:3509:38> col:27 extent_v
| | |-TemplateTypeParmDecl 0x5605abcd48b0 <line:3508:11, col:20> col:20 typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abcd4970 <col:25, col:41> col:34 'unsigned int' depth 0 index 1 _Idx
| | | `-TemplateArgument <col:41> expr '0'
| | |   `-IntegerLiteral 0x5605abcd4930 <col:41> 'int' 0
| | `-VarDecl 0x5605abcd4a28 <line:3509:3, col:38> col:27 extent_v 'const size_t':'const unsigned long' inline constexpr cinit
| |   |-value: Int 0
| |   `-ImplicitCastExpr 0x5605abcd4b10 <col:38> 'const size_t':'const unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5605abcd4af0 <col:38> 'int' 0
| |-VarTemplatePartialSpecializationDecl 0x5605abcd4e90 <line:3510:1, line:3511:53> col:27 extent_v 'const size_t':'const unsigned long' explicit_specialization inline constexpr cinit
| | |-TemplateTypeParmDecl 0x5605abcd4b90 <line:3510:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abcd4c28 <col:25, col:32> col:32 referenced 'size_t':'unsigned long' depth 0 index 1 _Size
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   <line:985:39, col:45>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| | |-TemplateArgument integral '0U'
| | `-DeclRefExpr 0x5605abcd5d30 <line:3511:53> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abcd4c28 '_Size' 'size_t':'unsigned long'
| |-VarTemplatePartialSpecializationDecl 0x5605abcd5fc8 <line:3512:1, line:3513:78> col:27 extent_v 'const size_t':'const unsigned long' explicit_specialization inline constexpr cinit
| | |-TemplateTypeParmDecl 0x5605abcd5d70 <line:3512:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abcd5e10 <col:25, col:34> col:34 referenced 'unsigned int' depth 0 index 1 _Idx
| | |-NonTypeTemplateParmDecl 0x5605abcd5e80 <col:40, col:47> col:47 referenced 'size_t':'unsigned long' depth 0 index 2 _Size
| | |-TemplateArgument type 'type-parameter-0-0[_Size]'
| | | `-DependentSizedArrayType 0x5605abbf9c90 'type-parameter-0-0[_Size]' dependent   <line:1458:22, col:28>
| | |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   `-DeclRefExpr 0x5605abbf9c68 <col:23> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbf9be0 '_Size' 'size_t':'unsigned long'
| | |-TemplateArgument expr '_Idx'
| | | `-DeclRefExpr 0x5605abcd5f90 <line:3513:48> 'unsigned int' NonTypeTemplateParm 0x5605abcd5e10 '_Idx' 'unsigned int'
| | `-UnresolvedLookupExpr 0x5605abcd62b8 <col:56, col:78> '<dependent type>' lvalue (no ADL) = 'extent_v' 0x5605abcd4a98
| |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abcd5dc0 '_Tp' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abcd5d70 '_Tp'
| |   `-TemplateArgument expr '_Idx - 1'
| |     `-BinaryOperator 0x5605abcd6298 <col:70, col:77> 'unsigned int' '-'
| |       |-DeclRefExpr 0x5605abcd6240 <col:70> 'unsigned int' NonTypeTemplateParm 0x5605abcd5e10 '_Idx' 'unsigned int'
| |       `-ImplicitCastExpr 0x5605abcd6280 <col:77> 'unsigned int' <IntegralCast>
| |         `-IntegerLiteral 0x5605abcd6260 <col:77> 'int' 1
| |-VarTemplatePartialSpecializationDecl 0x5605abcd64d0 <line:3514:1, line:3515:48> col:27 extent_v 'const size_t':'const unsigned long' explicit_specialization inline constexpr cinit
| | |-value: Int 0
| | |-TemplateTypeParmDecl 0x5605abcd6370 <line:3514:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument integral '0U'
| | `-ImplicitCastExpr 0x5605abcd67a0 <line:3515:48> 'const size_t':'const unsigned long' <IntegralCast>
| |   `-IntegerLiteral 0x5605abcd6780 <col:48> 'int' 0
| |-VarTemplatePartialSpecializationDecl 0x5605abcd69c8 <line:3516:1, line:3517:73> col:27 extent_v 'const size_t':'const unsigned long' explicit_specialization inline constexpr cinit
| | |-TemplateTypeParmDecl 0x5605abcd6820 <line:3516:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-NonTypeTemplateParmDecl 0x5605abcd68c0 <col:25, col:34> col:34 referenced 'unsigned int' depth 0 index 1 _Idx
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument expr '_Idx'
| | | `-DeclRefExpr 0x5605abcd6990 <line:3517:43> 'unsigned int' NonTypeTemplateParm 0x5605abcd68c0 '_Idx' 'unsigned int'
| | `-UnresolvedLookupExpr 0x5605abcd6cb8 <col:51, col:73> '<dependent type>' lvalue (no ADL) = 'extent_v' 0x5605abcd4a98
| |   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abcd6870 '_Tp' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abcd6820 '_Tp'
| |   `-TemplateArgument expr '_Idx - 1'
| |     `-BinaryOperator 0x5605abcd6c98 <col:65, col:72> 'unsigned int' '-'
| |       |-DeclRefExpr 0x5605abcd6c40 <col:65> 'unsigned int' NonTypeTemplateParm 0x5605abcd68c0 '_Idx' 'unsigned int'
| |       `-ImplicitCastExpr 0x5605abcd6c80 <col:72> 'unsigned int' <IntegralCast>
| |         `-IntegerLiteral 0x5605abcd6c60 <col:72> 'int' 1
| |-VarTemplateDecl 0x5605abcd6f30 <line:3520:1, line:3521:55> col:25 is_same_v
| | |-TemplateTypeParmDecl 0x5605abcd6d70 <line:3520:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcd6df8 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Up
| | |-VarDecl 0x5605abcd6ec0 <line:3521:3, col:55> col:25 is_same_v 'const bool' inline constexpr cinit
| | | `-TypeTraitExpr 0x5605abcd6fa8 <col:37, col:55> 'bool' __is_same
| | |   |-TemplateTypeParmType 0x5605abcd6dc0 '_Tp' dependent depth 0 index 0
| | |   | `-TemplateTypeParm 0x5605abcd6d70 '_Tp'
| | |   `-TemplateTypeParmType 0x5605abcd6e50 '_Up' dependent depth 0 index 1
| | |     `-TemplateTypeParm 0x5605abcd6df8 '_Up'
| | |-VarTemplateSpecializationDecl 0x5605abdc71f0 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'std::partial_ordering'
| | | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | |-TemplateArgument type 'std::partial_ordering'
| | | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | `-TypeTraitExpr 0x5605abdc7430 <col:37, col:55> 'bool' __is_same
| | |   |-SubstTemplateTypeParmType 0x5605abdc73b0 'std::partial_ordering' sugar typename depth 0 index 0 _Tp
| | |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |   | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |   |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | |   `-SubstTemplateTypeParmType 0x5605abdc73f0 'std::partial_ordering' sugar typename depth 0 index 1 _Up
| | |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |     `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |       `-CXXRecord 0x5605abd39720 'partial_ordering'
| | |-VarTemplateSpecializationDecl 0x5605abdd24f8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'void *const &'
| | | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |   `-QualType 0x5605aba9d151 'void *const' const
| | | |     `-PointerType 0x5605aba9d150 'void *'
| | | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-TemplateArgument type 'void *const &'
| | | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |   `-QualType 0x5605aba9d151 'void *const' const
| | | |     `-PointerType 0x5605aba9d150 'void *'
| | | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-TypeTraitExpr 0x5605abdd2730 <col:37, col:55> 'bool' __is_same
| | |   |-SubstTemplateTypeParmType 0x5605abdd26b0 'void *const &' sugar typename depth 0 index 0 _Tp
| | |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |   |   `-QualType 0x5605aba9d151 'void *const' const
| | |   |     `-PointerType 0x5605aba9d150 'void *'
| | |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| | |   `-SubstTemplateTypeParmType 0x5605abdd26f0 'void *const &' sugar typename depth 0 index 1 _Up
| | |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |       `-QualType 0x5605aba9d151 'void *const' const
| | |         `-PointerType 0x5605aba9d150 'void *'
| | |           `-BuiltinType 0x5605aba9c9d0 'void'
| | |-VarTemplateSpecializationDecl 0x5605abeb19b8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'ice::error_type'
| | | | `-EnumType 0x5605abe9f520 'ice::error_type'
| | | |   `-Enum 0x5605abe9f460 'error_type'
| | | |-TemplateArgument type 'ice::error_type'
| | | | `-EnumType 0x5605abe9f520 'ice::error_type'
| | | |   `-Enum 0x5605abe9f460 'error_type'
| | | `-TypeTraitExpr 0x5605abeb1bf0 <col:37, col:55> 'bool' __is_same
| | |   |-SubstTemplateTypeParmType 0x5605abeb1b70 'ice::error_type' sugar typename depth 0 index 0 _Tp
| | |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |   | `-EnumType 0x5605abe9f520 'ice::error_type'
| | |   |   `-Enum 0x5605abe9f460 'error_type'
| | |   `-SubstTemplateTypeParmType 0x5605abeb1bb0 'ice::error_type' sugar typename depth 0 index 1 _Up
| | |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |     `-EnumType 0x5605abe9f520 'ice::error_type'
| | |       `-Enum 0x5605abe9f460 'error_type'
| | |-VarTemplateSpecializationDecl 0x5605abeb9728 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 0
| | | |-TemplateArgument type 'long'
| | | | `-BuiltinType 0x5605aba9ca90 'long'
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | `-TypeTraitExpr 0x5605abeb9960 <col:37, col:55> 'bool' __is_same
| | |   |-SubstTemplateTypeParmType 0x5605abeb98e0 'long' sugar typename depth 0 index 0 _Tp
| | |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |   | `-BuiltinType 0x5605aba9ca90 'long'
| | |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| | |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |     `-RecordType 0x5605abe9a400 'ice::error'
| | |       `-CXXRecord 0x5605abea0860 'error'
| | |-VarTemplateSpecializationDecl 0x5605abec04d8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | `-TypeTraitExpr 0x5605abec06e0 <col:37, col:55> 'bool' __is_same
| | |   |-SubstTemplateTypeParmType 0x5605abec0690 'ice::error' sugar typename depth 0 index 0 _Tp
| | |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |   | `-RecordType 0x5605abe9a400 'ice::error'
| | |   |   `-CXXRecord 0x5605abea0860 'error'
| | |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| | |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |     `-RecordType 0x5605abe9a400 'ice::error'
| | |       `-CXXRecord 0x5605abea0860 'error'
| | |-VarTemplateSpecializationDecl 0x5605abec3ed8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 0
| | | |-TemplateArgument type 'int'
| | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | `-TypeTraitExpr 0x5605abec40e0 <col:37, col:55> 'bool' __is_same
| | |   |-SubstTemplateTypeParmType 0x5605abec4090 'int' sugar typename depth 0 index 0 _Tp
| | |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |   | `-BuiltinType 0x5605aba9ca70 'int'
| | |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| | |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |     `-RecordType 0x5605abe9a400 'ice::error'
| | |       `-CXXRecord 0x5605abea0860 'error'
| | |-VarTemplateSpecializationDecl 0x5605abed6388 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 0
| | | |-TemplateArgument type 'consteval_move'
| | | | `-RecordType 0x5605abeccf70 'consteval_move'
| | | |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | | |-TemplateArgument type 'ice::error'
| | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | |   `-CXXRecord 0x5605abea0860 'error'
| | | `-TypeTraitExpr 0x5605abed6590 <col:37, col:55> 'bool' __is_same
| | |   |-SubstTemplateTypeParmType 0x5605abed6540 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |   | `-RecordType 0x5605abeccf70 'consteval_move'
| | |   |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| | |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| | |     `-RecordType 0x5605abe9a400 'ice::error'
| | |       `-CXXRecord 0x5605abea0860 'error'
| | `-VarTemplateSpecializationDecl 0x5605abee0578 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| |   |-value: Int 0
| |   |-TemplateArgument type 'move<false>'
| |   | `-RecordType 0x5605abede560 'move<false>'
| |   |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| |   |-TemplateArgument type 'ice::error'
| |   | `-RecordType 0x5605abe9a400 'ice::error'
| |   |   `-CXXRecord 0x5605abea0860 'error'
| |   `-TypeTraitExpr 0x5605abee0780 <col:37, col:55> 'bool' __is_same
| |     |-SubstTemplateTypeParmType 0x5605abee0730 'move<false>' sugar typename depth 0 index 0 _Tp
| |     | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     | `-RecordType 0x5605abede560 'move<false>'
| |     |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| |     `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| |       |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |       `-RecordType 0x5605abe9a400 'ice::error'
| |         `-CXXRecord 0x5605abea0860 'error'
| |-VarTemplateDecl 0x5605abcd71b0 <line:3528:1, line:3529:68> col:25 is_base_of_v
| | |-TemplateTypeParmDecl 0x5605abcd6ff0 <line:3528:11, col:20> col:20 referenced typename depth 0 index 0 _Base
| | |-TemplateTypeParmDecl 0x5605abcd7078 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Derived
| | `-VarDecl 0x5605abcd7140 <line:3529:3, col:68> col:25 is_base_of_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcd7228 <col:40, col:68> 'bool' __is_base_of
| |     |-TemplateTypeParmType 0x5605abcd7040 '_Base' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcd6ff0 '_Base'
| |     `-TemplateTypeParmType 0x5605abcd70d0 '_Derived' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abcd7078 '_Derived'
| |-VarTemplateDecl 0x5605abcd7430 <line:3531:1, line:3532:71> col:25 is_convertible_v
| | |-TemplateTypeParmDecl 0x5605abcd7270 <line:3531:11, col:20> col:20 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x5605abcd72f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _To
| | |-VarDecl 0x5605abcd73c0 <line:3532:3, col:71> col:25 is_convertible_v 'const bool' inline constexpr cinit
| | | `-TypeTraitExpr 0x5605abcd74a8 <col:44, col:71> 'bool' __is_convertible
| | |   |-TemplateTypeParmType 0x5605abcd72c0 '_From' dependent depth 0 index 0
| | |   | `-TemplateTypeParm 0x5605abcd7270 '_From'
| | |   `-TemplateTypeParmType 0x5605abcd7350 '_To' dependent depth 0 index 1
| | |     `-TemplateTypeParm 0x5605abcd72f8 '_To'
| | |-VarTemplateSpecializationDecl 0x5605abdba310 <line:3531:1, line:3532:71> col:25 used is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'bool'
| | | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | | |-TemplateArgument type 'bool'
| | | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | | `-TypeTraitExpr 0x5605abdba5b8 <col:44, col:71> 'bool' __is_convertible
| | |   |-SubstTemplateTypeParmType 0x5605abdba4c0 'bool' sugar typename depth 0 index 0 _From
| | |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |   | `-BuiltinType 0x5605aba9c9f0 'bool'
| | |   `-SubstTemplateTypeParmType 0x5605abdba500 'bool' sugar typename depth 0 index 1 _To
| | |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |     `-BuiltinType 0x5605aba9c9f0 'bool'
| | |-VarTemplateSpecializationDecl 0x5605abdd2f08 <line:3531:1, line:3532:71> col:25 used is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'void *const &'
| | | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |   `-QualType 0x5605aba9d151 'void *const' const
| | | |     `-PointerType 0x5605aba9d150 'void *'
| | | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-TemplateArgument type 'void *const &'
| | | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | | |   `-QualType 0x5605aba9d151 'void *const' const
| | | |     `-PointerType 0x5605aba9d150 'void *'
| | | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-TypeTraitExpr 0x5605abdd3130 <col:44, col:71> 'bool' __is_convertible
| | |   |-SubstTemplateTypeParmType 0x5605abdd30b0 'void *const &' sugar typename depth 0 index 0 _From
| | |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |   |   `-QualType 0x5605aba9d151 'void *const' const
| | |   |     `-PointerType 0x5605aba9d150 'void *'
| | |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| | |   `-SubstTemplateTypeParmType 0x5605abdd30f0 'void *const &' sugar typename depth 0 index 1 _To
| | |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |       `-QualType 0x5605aba9d151 'void *const' const
| | |         `-PointerType 0x5605aba9d150 'void *'
| | |           `-BuiltinType 0x5605aba9c9d0 'void'
| | |-VarTemplateSpecializationDecl 0x5605abddcaa8 <line:3531:1, line:3532:71> col:25 used is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 1
| | | |-TemplateArgument type 'void *'
| | | | `-PointerType 0x5605aba9d150 'void *'
| | | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-TemplateArgument type 'const volatile void *'
| | | | `-PointerType 0x5605abd78ff0 'const volatile void *'
| | | |   `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| | | |     `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-TypeTraitExpr 0x5605abddcd30 <col:44, col:71> 'bool' __is_convertible
| | |   |-SubstTemplateTypeParmType 0x5605abddcc50 'void *' sugar typename depth 0 index 0 _From
| | |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |   | `-PointerType 0x5605aba9d150 'void *'
| | |   |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |   `-SubstTemplateTypeParmType 0x5605abddcc90 'const volatile void *' sugar typename depth 0 index 1 _To
| | |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |     `-PointerType 0x5605abd78ff0 'const volatile void *'
| | |       `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| | |         `-BuiltinType 0x5605aba9c9d0 'void'
| | |-VarTemplateSpecializationDecl 0x5605abeb0f48 <line:3531:1, line:3532:71> col:25 referenced is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | | |-value: Int 0
| | | |-TemplateArgument type 'ice::errc'
| | | | `-EnumType 0x5605abe9f270 'ice::errc'
| | | |   `-Enum 0x5605abe9f1b8 'errc'
| | | |-TemplateArgument type 'unsigned char'
| | | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | | `-TypeTraitExpr 0x5605abeb11e0 <col:44, col:71> 'bool' __is_convertible
| | |   |-SubstTemplateTypeParmType 0x5605abeb1100 'ice::errc' sugar typename depth 0 index 0 _From
| | |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |   | `-EnumType 0x5605abe9f270 'ice::errc'
| | |   |   `-Enum 0x5605abe9f1b8 'errc'
| | |   `-SubstTemplateTypeParmType 0x5605abeb1140 'unsigned char' sugar typename depth 0 index 1 _To
| | |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| | |     `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | `-VarTemplateSpecializationDecl 0x5605abecefc8 <line:3531:1, line:3532:71> col:25 referenced is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| |   |-value: Int 0
| |   |-TemplateArgument type 'errc'
| |   | `-EnumType 0x5605abec9650 'errc'
| |   |   `-Enum 0x5605abec9590 'errc'
| |   |-TemplateArgument type 'int'
| |   | `-BuiltinType 0x5605aba9ca70 'int'
| |   `-TypeTraitExpr 0x5605abecf260 <col:44, col:71> 'bool' __is_convertible
| |     |-SubstTemplateTypeParmType 0x5605abecf180 'errc' sugar typename depth 0 index 0 _From
| |     | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |     | `-EnumType 0x5605abec9650 'errc'
| |     |   `-Enum 0x5605abec9590 'errc'
| |     `-SubstTemplateTypeParmType 0x5605abecf1c0 'int' sugar typename depth 0 index 1 _To
| |       |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |       `-BuiltinType 0x5605aba9ca70 'int'
| |-VarTemplateDecl 0x5605abcd76b0 <line:3537:1, line:3538:71> col:25 is_invocable_v
| | |-TemplateTypeParmDecl 0x5605abcd74f0 <line:3537:10, col:19> col:19 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcd7578 <col:24, col:36> col:36 referenced typename depth 0 index 1 ... _Args
| | `-VarDecl 0x5605abcd7640 <line:3538:3, col:71> col:25 is_invocable_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcd7868 <col:42, col:71> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_invocable<_Fn, _Args...>'
| |-VarTemplateDecl 0x5605abcd7a80 <line:3539:1, line:3541:44> line:3540:25 is_nothrow_invocable_v
| | |-TemplateTypeParmDecl 0x5605abcd78c0 <line:3539:10, col:19> col:19 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abcd7948 <col:24, col:36> col:36 referenced typename depth 0 index 1 ... _Args
| | `-VarDecl 0x5605abcd7a10 <line:3540:3, line:3541:44> line:3540:25 is_nothrow_invocable_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcd7c38 <line:3541:7, col:44> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_nothrow_invocable<_Fn, _Args...>'
| |-VarTemplateDecl 0x5605abcd8398 <line:3542:1, line:3544:44> line:3543:25 is_invocable_r_v
| | |-TemplateTypeParmDecl 0x5605abcd8138 <line:3542:10, col:19> col:19 referenced typename depth 0 index 0 _Ret
| | |-TemplateTypeParmDecl 0x5605abcd81c8 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Fn
| | |-TemplateTypeParmDecl 0x5605abcd8258 <col:39, col:51> col:51 referenced typename depth 0 index 2 ... _Args
| | `-VarDecl 0x5605abcd8328 <line:3543:3, line:3544:44> line:3543:25 is_invocable_r_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcd8578 <line:3544:7, col:44> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_invocable_r<_Ret, _Fn, _Args...>'
| |-VarTemplateDecl 0x5605abcd8828 <line:3545:1, line:3547:52> line:3546:25 is_nothrow_invocable_r_v
| | |-TemplateTypeParmDecl 0x5605abcd85d0 <line:3545:10, col:19> col:19 referenced typename depth 0 index 0 _Ret
| | |-TemplateTypeParmDecl 0x5605abcd8658 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Fn
| | |-TemplateTypeParmDecl 0x5605abcd86e8 <col:39, col:51> col:51 referenced typename depth 0 index 2 ... _Args
| | `-VarDecl 0x5605abcd87b8 <line:3546:3, line:3547:52> line:3546:25 is_nothrow_invocable_r_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcd8a08 <line:3547:7, col:52> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'is_nothrow_invocable_r<_Ret, _Fn, _Args...>'
| |-ClassTemplateDecl 0x5605abcd8bb8 <line:3554:3, line:3562:5> line:3555:12 has_unique_object_representations
| | |-TemplateTypeParmDecl 0x5605abcd8a60 <line:3554:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abcd8b08 <line:3555:5, line:3562:5> line:3555:12 struct has_unique_object_representations definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<__has_unique_object_representations(remove_cv_t<remove_all_extents_t<_Tp>>)>':'integral_constant<bool, __has_unique_object_representations(remove_cv_t<remove_all_extents_t<_Tp>>)>'
| |   |-CXXRecordDecl 0x5605abcd9748 <col:5, col:12> col:12 implicit struct has_unique_object_representations
| |   `-StaticAssertDecl 0x5605abcd9a20 <line:3560:7, line:3561:68> line:3560:7
| |     |-CallExpr 0x5605abcd9998 <col:21, col:75> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abcd9810 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | `-CXXUnresolvedConstructExpr 0x5605abcd9970 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     |   `-InitListExpr 0x5605abcd9930 <col:73, col:74> 'void'
| |     `-StringLiteral 0x5605abcd99c0 <line:3561:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-VarTemplateDecl 0x5605abcd9ba8 <line:3566:3, line:3568:49> line:3567:27 has_unique_object_representations_v
| | |-TemplateTypeParmDecl 0x5605abcd9a80 <line:3566:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcd9b38 <line:3567:5, line:3568:49> line:3567:27 has_unique_object_representations_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcd9cb8 <line:3568:9, col:49> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'has_unique_object_representations<_Tp>'
| |-ClassTemplateDecl 0x5605abcd9e68 <line:3575:3, line:3578:7> line:3576:12 is_aggregate
| | |-TemplateTypeParmDecl 0x5605abcd9d10 <line:3575:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abcd9db8 <line:3576:5, line:3578:7> line:3576:12 struct is_aggregate definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<__is_aggregate(remove_cv_t<_Tp>)>':'integral_constant<bool, __is_aggregate(remove_cv_t<_Tp>)>'
| |   `-CXXRecordDecl 0x5605abcdbb08 <col:5, col:12> col:12 implicit struct is_aggregate
| |-VarTemplateDecl 0x5605abcdbcf8 <line:3585:3, line:3586:75> col:27 is_aggregate_v
| | |-TemplateTypeParmDecl 0x5605abcdbbd0 <line:3585:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcdbc88 <line:3586:5, col:75> col:27 is_aggregate_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcdbf70 <col:44, col:75> 'bool' __is_aggregate
| |     `-ElaboratedType 0x5605abcdbf00 'remove_cv_t<_Tp>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcdbeb0 'remove_cv_t<_Tp>' sugar dependent alias
| |         |-name: 'remove_cv_t':'std::remove_cv_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abc08820 <line:1683:3, line:1684:50> col:5 remove_cv_t
| |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         | `-TemplateTypeParmType 0x5605abcdbc20 '_Tp' dependent depth 0 index 0
| |         |   `-TemplateTypeParm 0x5605abcdbbd0 '_Tp'
| |         `-DependentNameType 0x5605abcdbe60 'typename remove_cv<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abcdc108 <line:3596:3, line:3598:41> line:3597:12 remove_cvref
| | |-TemplateTypeParmDecl 0x5605abcdbfb0 <line:3596:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abcdc058 <line:3597:5, line:3598:41> line:3597:12 struct remove_cvref definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abcdc3c0 <col:5, col:12> col:12 implicit struct remove_cvref
| | | `-TypeAliasDecl 0x5605abcdc518 <line:3598:7, col:38> col:13 type '__remove_cvref(_Tp)'
| | |   `-UnaryTransformType 0x5605abcdc4c0 '__remove_cvref(_Tp)' dependent remove_cvref
| | |     `-TemplateTypeParmType 0x5605abcdc000 '_Tp' dependent depth 0 index 0
| | |       `-TemplateTypeParm 0x5605abcdbfb0 '_Tp'
| | |-ClassTemplateSpecializationDecl 0x5605abeb9d80 <line:3596:3, line:3598:41> line:3597:12 struct remove_cvref definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'long'
| | | | `-BuiltinType 0x5605aba9ca90 'long'
| | | |-CXXRecordDecl 0x5605abeb9f90 <col:5, col:12> col:12 implicit struct remove_cvref
| | | `-TypeAliasDecl 0x5605abeba0d8 <line:3598:7, col:38> col:13 referenced type '__remove_cvref(long)':'long'
| | |   `-UnaryTransformType 0x5605abeba080 '__remove_cvref(long)' sugar remove_cvref
| | |     |-SubstTemplateTypeParmType 0x5605abeba040 'long' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abeb9d80 'remove_cvref'
| | |     | `-BuiltinType 0x5605aba9ca90 'long'
| | |     `-SubstTemplateTypeParmType 0x5605abeba040 'long' sugar typename depth 0 index 0 _Tp
| | |       |-ClassTemplateSpecialization 0x5605abeb9d80 'remove_cvref'
| | |       `-BuiltinType 0x5605aba9ca90 'long'
| | |-ClassTemplateSpecializationDecl 0x5605abed69b0 <line:3596:3, line:3598:41> line:3597:12 struct remove_cvref definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'consteval_move'
| | | | `-RecordType 0x5605abeccf70 'consteval_move'
| | | |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | | |-CXXRecordDecl 0x5605abed6bc0 <col:5, col:12> col:12 implicit struct remove_cvref
| | | `-TypeAliasDecl 0x5605abed6d08 <line:3598:7, col:38> col:13 referenced type '__remove_cvref(consteval_move)':'consteval_move'
| | |   `-UnaryTransformType 0x5605abed6cb0 '__remove_cvref(consteval_move)' sugar remove_cvref
| | |     |-SubstTemplateTypeParmType 0x5605abed6c70 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abed69b0 'remove_cvref'
| | |     | `-RecordType 0x5605abeccf70 'consteval_move'
| | |     |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |     `-SubstTemplateTypeParmType 0x5605abed6c70 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |       |-ClassTemplateSpecialization 0x5605abed69b0 'remove_cvref'
| | |       `-RecordType 0x5605abeccf70 'consteval_move'
| | |         `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |-ClassTemplateSpecializationDecl 0x5605abee0ba0 <line:3596:3, line:3598:41> line:3597:12 struct remove_cvref definition implicit_instantiation
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'move<false>'
| | | | `-RecordType 0x5605abede560 'move<false>'
| | | |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| | | |-CXXRecordDecl 0x5605abee0db0 <col:5, col:12> col:12 implicit struct remove_cvref
| | | `-TypeAliasDecl 0x5605abee0ef8 <line:3598:7, col:38> col:13 referenced type '__remove_cvref(move<false>)':'move<false>'
| | |   `-UnaryTransformType 0x5605abee0ea0 '__remove_cvref(move<false>)' sugar remove_cvref
| | |     |-SubstTemplateTypeParmType 0x5605abee0e60 'move<false>' sugar typename depth 0 index 0 _Tp
| | |     | |-ClassTemplateSpecialization 0x5605abee0ba0 'remove_cvref'
| | |     | `-RecordType 0x5605abede560 'move<false>'
| | |     |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| | |     `-SubstTemplateTypeParmType 0x5605abee0e60 'move<false>' sugar typename depth 0 index 0 _Tp
| | |       |-ClassTemplateSpecialization 0x5605abee0ba0 'remove_cvref'
| | |       `-RecordType 0x5605abede560 'move<false>'
| | |         `-ClassTemplateSpecialization 0x5605abede470 'move'
| | `-ClassTemplateSpecializationDecl 0x5605abce3de8 <line:3596:3, line:3598:41> line:3597:12 struct remove_cvref definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'int'
| |   | `-BuiltinType 0x5605aba9ca70 'int'
| |   |-CXXRecordDecl 0x5605abce4000 <col:5, col:12> col:12 implicit struct remove_cvref
| |   `-TypeAliasDecl 0x5605abce4148 <line:3598:7, col:38> col:13 referenced type '__remove_cvref(int)':'int'
| |     `-UnaryTransformType 0x5605abce40f0 '__remove_cvref(int)' sugar remove_cvref
| |       |-SubstTemplateTypeParmType 0x5605abce40b0 'int' sugar typename depth 0 index 0 _Tp
| |       | |-ClassTemplateSpecialization 0x5605abce3de8 'remove_cvref'
| |       | `-BuiltinType 0x5605aba9ca70 'int'
| |       `-SubstTemplateTypeParmType 0x5605abce40b0 'int' sugar typename depth 0 index 0 _Tp
| |         |-ClassTemplateSpecialization 0x5605abce3de8 'remove_cvref'
| |         `-BuiltinType 0x5605aba9ca70 'int'
| |-TypeAliasTemplateDecl 0x5605abcdc810 <line:3613:3, line:3614:56> col:5 remove_cvref_t
| | |-TemplateTypeParmDecl 0x5605abcdc5b0 <line:3613:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abcdc7a8 <line:3614:5, col:56> col:11 remove_cvref_t 'typename remove_cvref<_Tp>::type'
| |   `-DependentNameType 0x5605abcdc730 'typename remove_cvref<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abcdc9c8 <line:3623:3, line:3624:46> col:12 type_identity
| | |-TemplateTypeParmDecl 0x5605abcdc870 <line:3623:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abcdc918 <line:3624:5, col:46> col:12 struct type_identity definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abcdcc80 <col:5, col:12> col:12 implicit struct type_identity
| |   `-TypeAliasDecl 0x5605abcdcd40 <col:28, col:41> col:34 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abcdc8c0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcdc870 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abcdd040 <line:3626:3, line:3627:58> col:5 type_identity_t
| | |-TemplateTypeParmDecl 0x5605abcdcdd8 <line:3626:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abcdcfd8 <line:3627:5, col:58> col:11 type_identity_t 'typename type_identity<_Tp>::type'
| |   `-DependentNameType 0x5605abcdcf60 'typename type_identity<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abcdd1f8 <line:3636:3, line:3637:49> col:12 unwrap_reference
| | |-TemplateTypeParmDecl 0x5605abcdd0a0 <line:3636:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abcdd148 <line:3637:5, col:49> col:12 struct unwrap_reference definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abcdd4b0 <col:5, col:12> col:12 implicit struct unwrap_reference
| |   `-TypeAliasDecl 0x5605abc2a968 <col:31, col:44> col:37 type '_Tp'
| |     `-TemplateTypeParmType 0x5605abcdd0f0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcdd0a0 '_Tp'
| |-ClassTemplatePartialSpecializationDecl 0x5605abc2ac10 <line:3639:3, line:3640:74> col:12 struct unwrap_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| | | `-TemplateSpecializationType 0x5605abb23ba0 'reference_wrapper<type-parameter-0-0>' dependent
| | |   |-name: 'std::reference_wrapper'
| | |   | `-ClassTemplateDecl 0x5605abb23a28 <line:69:3, line:70:11> col:11 reference_wrapper
| | |   `-TemplateArgument type 'type-parameter-0-0'
| | |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abc2aa00 <line:3639:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abc2ae10 <line:3640:5, col:12> col:12 implicit struct unwrap_reference
| | `-TypeAliasDecl 0x5605abc2af08 <col:55, col:71> col:61 type '_Tp &'
| |   `-LValueReferenceType 0x5605abc2aec0 '_Tp &' dependent
| |     `-TemplateTypeParmType 0x5605abc2aa50 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc2aa00 '_Tp'
| |-TypeAliasTemplateDecl 0x5605abc2b200 <line:3642:3, line:3643:64> col:5 unwrap_reference_t
| | |-TemplateTypeParmDecl 0x5605abc2afa0 <line:3642:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc2b198 <line:3643:5, col:64> col:11 unwrap_reference_t 'typename unwrap_reference<_Tp>::type'
| |   `-DependentNameType 0x5605abc2b120 'typename unwrap_reference<_Tp>::type' dependent
| |-ClassTemplateDecl 0x5605abc2b3b8 <line:3650:3, line:3651:78> col:12 unwrap_ref_decay
| | |-TemplateTypeParmDecl 0x5605abc2b260 <line:3650:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc2b308 <line:3651:5, col:78> col:12 struct unwrap_ref_decay definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abc2b670 <col:5, col:12> col:12 implicit struct unwrap_ref_decay
| |   `-TypeAliasDecl 0x5605abc2bc78 <col:31, col:75> col:37 type 'unwrap_reference_t<decay_t<_Tp>>':'typename unwrap_reference<decay_t<_Tp>>::type'
| |     `-ElaboratedType 0x5605abc2bc00 'unwrap_reference_t<decay_t<_Tp>>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abc2bbb0 'unwrap_reference_t<decay_t<_Tp>>' sugar dependent alias
| |         |-name: 'unwrap_reference_t':'std::unwrap_reference_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abc2b200 <line:3642:3, line:3643:64> col:5 unwrap_reference_t
| |         |-TemplateArgument type 'decay_t<_Tp>':'typename decay<type-parameter-0-0>::type'
| |         | `-ElaboratedType 0x5605abc2b910 'decay_t<_Tp>' sugar dependent
| |         |   `-TemplateSpecializationType 0x5605abc2b8c0 'decay_t<_Tp>' sugar dependent alias
| |         |     |-name: 'decay_t':'std::decay_t' qualified
| |         |     | `-TypeAliasTemplateDecl 0x5605abc91c40 <line:2706:3, line:2707:42> col:5 decay_t
| |         |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         |     | `-TemplateTypeParmType 0x5605abc2b2b0 '_Tp' dependent depth 0 index 0
| |         |     |   `-TemplateTypeParm 0x5605abc2b260 '_Tp'
| |         |     `-DependentNameType 0x5605abc2b870 'typename decay<_Tp>::type' dependent
| |         `-DependentNameType 0x5605abc2bb60 'typename unwrap_reference<decay_t<_Tp>>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abc2bf70 <line:3653:3, line:3654:64> col:5 unwrap_ref_decay_t
| | |-TemplateTypeParmDecl 0x5605abc2bd10 <line:3653:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-TypeAliasDecl 0x5605abc2bf08 <line:3654:5, col:64> col:11 unwrap_ref_decay_t 'typename unwrap_ref_decay<_Tp>::type'
| |   `-DependentNameType 0x5605abc2be90 'typename unwrap_ref_decay<_Tp>::type' dependent
| |-VarTemplateDecl 0x5605abc2c0f8 <line:3663:3, line:3664:70> col:27 is_bounded_array_v
| | |-TemplateTypeParmDecl 0x5605abc2bfd0 <line:3663:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abc2c088 <line:3664:5, col:70> col:27 is_bounded_array_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abc2c160 <col:48, col:70> 'bool' __is_bounded_array
| |     `-TemplateTypeParmType 0x5605abc2c020 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abc2bfd0 '_Tp'
| |-VarTemplateDecl 0x5605abc2c2c8 <line:3676:3, line:3677:50> col:27 is_unbounded_array_v
| | |-TemplateTypeParmDecl 0x5605abc2c1a0 <line:3676:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abc2c258 <line:3677:5, col:50> col:27 is_unbounded_array_v 'const bool' inline constexpr cinit
| |   |-value: Int 0
| |   `-CXXBoolLiteralExpr 0x5605abc2c320 <col:50> 'bool' false
| |-VarTemplatePartialSpecializationDecl 0x5605abc2c5a8 <line:3679:3, line:3680:57> col:27 is_unbounded_array_v 'const bool' explicit_specialization inline constexpr cinit
| | |-value: Int 1
| | |-TemplateTypeParmDecl 0x5605abc2c398 <line:3679:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateArgument type 'type-parameter-0-0[]'
| | | `-IncompleteArrayType 0x5605abbc1ef0 'type-parameter-0-0[]' dependent 
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | `-CXXBoolLiteralExpr 0x5605abc2c808 <line:3680:57> 'bool' true
| |-ClassTemplateDecl 0x5605abc2d2d8 <line:3684:3, line:3687:7> line:3685:12 is_bounded_array
| | |-TemplateTypeParmDecl 0x5605abc2c880 <line:3684:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc2d228 <line:3685:5, line:3687:7> line:3685:12 struct is_bounded_array definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<is_bounded_array_v<_Tp>>':'integral_constant<bool, is_bounded_array_v<_Tp>>'
| |   `-CXXRecordDecl 0x5605abc2d9b8 <col:5, col:12> col:12 implicit struct is_bounded_array
| |-ClassTemplateDecl 0x5605abc2dbd8 <line:3691:3, line:3694:7> line:3692:12 is_unbounded_array
| | |-TemplateTypeParmDecl 0x5605abc2da80 <line:3691:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abc2db28 <line:3692:5, line:3694:7> line:3692:12 struct is_unbounded_array definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<is_unbounded_array_v<_Tp>>':'integral_constant<bool, is_unbounded_array_v<_Tp>>'
| |   `-CXXRecordDecl 0x5605abc2e288 <col:5, col:12> col:12 implicit struct is_unbounded_array
| |-ClassTemplateDecl 0x5605abc2e540 <line:3700:3, line:3703:7> line:3701:12 is_layout_compatible
| | |-TemplateTypeParmDecl 0x5605abc2e350 <line:3700:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc2e3d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abc2e490 <line:3701:5, line:3703:7> line:3701:12 struct is_layout_compatible definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<__is_layout_compatible(_Tp, _Up)>':'integral_constant<bool, __is_layout_compatible(_Tp, _Up)>'
| |   `-CXXRecordDecl 0x5605abc2ebd8 <col:5, col:12> col:12 implicit struct is_layout_compatible
| |-VarTemplateDecl 0x5605abc2ee60 <line:3707:3, line:3709:40> line:3708:20 is_layout_compatible_v
| | |-TemplateTypeParmDecl 0x5605abc2eca0 <line:3707:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abc2ed28 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abc2edf0 <line:3708:5, line:3709:40> line:3708:20 is_layout_compatible_v 'const bool' constexpr cinit
| |   `-TypeTraitExpr 0x5605abc2eed8 <line:3709:9, col:40> 'bool' __is_layout_compatible
| |     |-TemplateTypeParmType 0x5605abc2ecf0 '_Tp' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abc2eca0 '_Tp'
| |     `-TemplateTypeParmType 0x5605abc2ed80 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abc2ed28 '_Up'
| |-ClassTemplateDecl 0x5605abc2f110 <line:3728:3, line:3731:7> line:3729:12 is_pointer_interconvertible_base_of
| | |-TemplateTypeParmDecl 0x5605abc2ef20 <line:3728:12, col:21> col:21 referenced typename depth 0 index 0 _Base
| | |-TemplateTypeParmDecl 0x5605abc2efa8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Derived
| | `-CXXRecordDecl 0x5605abc2f060 <line:3729:5, line:3731:7> line:3729:12 struct is_pointer_interconvertible_base_of definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<__is_pointer_interconvertible_base_of(_Base, _Derived)>':'integral_constant<bool, __is_pointer_interconvertible_base_of(_Base, _Derived)>'
| |   `-CXXRecordDecl 0x5605abcedba8 <col:5, col:12> col:12 implicit struct is_pointer_interconvertible_base_of
| |-VarTemplateDecl 0x5605abcede30 <line:3735:3, line:3737:62> line:3736:20 is_pointer_interconvertible_base_of_v
| | |-TemplateTypeParmDecl 0x5605abcedc70 <line:3735:12, col:21> col:21 referenced typename depth 0 index 0 _Base
| | |-TemplateTypeParmDecl 0x5605abcedcf8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Derived
| | `-VarDecl 0x5605abceddc0 <line:3736:5, line:3737:62> line:3736:20 is_pointer_interconvertible_base_of_v 'const bool' constexpr cinit
| |   `-TypeTraitExpr 0x5605abcedea8 <line:3737:9, col:62> 'bool' __is_pointer_interconvertible_base_of
| |     |-TemplateTypeParmType 0x5605abcedcc0 '_Base' dependent depth 0 index 0
| |     | `-TemplateTypeParm 0x5605abcedc70 '_Base'
| |     `-TemplateTypeParmType 0x5605abcedd50 '_Derived' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abcedcf8 '_Derived'
| |-ClassTemplateDecl 0x5605abcee048 <line:3759:3, line:3762:7> line:3760:12 is_scoped_enum
| | |-TemplateTypeParmDecl 0x5605abcedef0 <line:3759:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abcedf98 <line:3760:5, line:3762:7> line:3760:12 struct is_scoped_enum definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<__is_scoped_enum(_Tp)>':'integral_constant<bool, __is_scoped_enum(_Tp)>'
| |   `-CXXRecordDecl 0x5605abcee688 <col:5, col:12> col:12 implicit struct is_scoped_enum
| |-VarTemplateDecl 0x5605abcee878 <line:3780:3, line:3781:66> col:27 is_scoped_enum_v
| | |-TemplateTypeParmDecl 0x5605abcee750 <line:3780:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-VarDecl 0x5605abcee808 <line:3781:5, col:66> col:27 is_scoped_enum_v 'const bool' inline constexpr cinit
| |   `-TypeTraitExpr 0x5605abcee8e0 <col:46, col:66> 'bool' __is_scoped_enum
| |     `-TemplateTypeParmType 0x5605abcee7a0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abcee750 '_Tp'
| |-ClassTemplateDecl 0x5605abceeb10 <line:3793:3, line:3800:5> line:3794:12 reference_constructs_from_temporary
| | |-TemplateTypeParmDecl 0x5605abcee920 <line:3793:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcee9a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abceea60 <line:3794:5, line:3800:5> line:3794:12 struct reference_constructs_from_temporary definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<__reference_constructs_from_temporary(_Tp, _Up)>':'integral_constant<bool, __reference_constructs_from_temporary(_Tp, _Up)>'
| |   |-CXXRecordDecl 0x5605abcef1a8 <col:5, col:12> col:12 implicit struct reference_constructs_from_temporary
| |   `-StaticAssertDecl 0x5605abcf06b0 <line:3797:7, line:3799:68> line:3797:7
| |     |-BinaryOperator 0x5605abcf0630 <col:21, line:3798:64> '<dependent type>' '&&'
| |     | |-CallExpr 0x5605abcef3f8 <line:3797:21, col:75> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x5605abcef270 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | | `-CXXUnresolvedConstructExpr 0x5605abcef3d0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     | |   `-InitListExpr 0x5605abcef390 <col:73, col:74> 'void'
| |     | `-CallExpr 0x5605abcf0608 <line:3798:10, col:64> '<dependent type>'
| |     |   |-UnresolvedLookupExpr 0x5605abcef440 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     |   `-CXXUnresolvedConstructExpr 0x5605abcf05e0 <col:42, col:63> '__type_identity<_Up>' '__type_identity<_Up>' list
| |     |     `-InitListExpr 0x5605abcf05a0 <col:62, col:63> 'void'
| |     `-StringLiteral 0x5605abcf0650 <line:3799:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-ClassTemplateDecl 0x5605abcf0900 <line:3806:3, line:3813:5> line:3807:12 reference_converts_from_temporary
| | |-TemplateTypeParmDecl 0x5605abcf0710 <line:3806:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcf0798 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abcf0850 <line:3807:5, line:3813:5> line:3807:12 struct reference_converts_from_temporary definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'bool_constant<__reference_converts_from_temporary(_Tp, _Up)>':'integral_constant<bool, __reference_converts_from_temporary(_Tp, _Up)>'
| |   |-CXXRecordDecl 0x5605abcf0f98 <col:5, col:12> col:12 implicit struct reference_converts_from_temporary
| |   `-StaticAssertDecl 0x5605abcf1460 <line:3810:7, line:3812:68> line:3810:7
| |     |-BinaryOperator 0x5605abcf13e0 <col:21, line:3811:64> '<dependent type>' '&&'
| |     | |-CallExpr 0x5605abcf11e8 <line:3810:21, col:75> '<dependent type>'
| |     | | |-UnresolvedLookupExpr 0x5605abcf1060 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     | | `-CXXUnresolvedConstructExpr 0x5605abcf11c0 <col:53, col:74> '__type_identity<_Tp>' '__type_identity<_Tp>' list
| |     | |   `-InitListExpr 0x5605abcf1180 <col:73, col:74> 'void'
| |     | `-CallExpr 0x5605abcf13b8 <line:3811:10, col:64> '<dependent type>'
| |     |   |-UnresolvedLookupExpr 0x5605abcf1230 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__is_complete_or_unbounded' 0x5605abb8e758 0x5605abb8fc38
| |     |   `-CXXUnresolvedConstructExpr 0x5605abcf1390 <col:42, col:63> '__type_identity<_Up>' '__type_identity<_Up>' list
| |     |     `-InitListExpr 0x5605abcf1350 <col:62, col:63> 'void'
| |     `-StringLiteral 0x5605abcf1400 <line:3812:2> 'NULL TYPE' lvalue "template argument must be a complete class or an unbounded array"
| |-VarTemplateDecl 0x5605abcf1680 <line:3817:3, line:3819:56> line:3818:27 reference_constructs_from_temporary_v
| | |-TemplateTypeParmDecl 0x5605abcf14c0 <line:3817:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcf1548 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abcf1610 <line:3818:5, line:3819:56> line:3818:27 reference_constructs_from_temporary_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcf17c8 <line:3819:9, col:56> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'reference_constructs_from_temporary<_Tp, _Up>'
| |-VarTemplateDecl 0x5605abcf19e0 <line:3823:3, line:3825:54> line:3824:27 reference_converts_from_temporary_v
| | |-TemplateTypeParmDecl 0x5605abcf1820 <line:3823:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcf18a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-VarDecl 0x5605abcf1970 <line:3824:5, line:3825:54> line:3824:27 reference_converts_from_temporary_v 'const bool' inline constexpr cinit
| |   `-DependentScopeDeclRefExpr 0x5605abcf1b28 <line:3825:9, col:54> '<dependent type>' lvalue
| |     `-NestedNameSpecifier TypeSpec 'reference_converts_from_temporary<_Tp, _Up>'
| |-FunctionDecl 0x5605abcf1ba8 <line:3831:3, line:3839:3> line:3832:3 constexpr is_constant_evaluated 'bool () noexcept' inline
| | `-CompoundStmt 0x5605abcf1d08 <line:3833:3, line:3839:3>
| |   `-IfStmt 0x5605abcf1cd8 <line:3835:5, col:56> has_else consteval
| |     |-CompoundStmt 0x5605abcf1c88 <col:18, col:33>
| |     | `-ReturnStmt 0x5605abcf1c78 <col:20, col:27>
| |     |   `-CXXBoolLiteralExpr 0x5605abcf1c68 <col:27> 'bool' true
| |     `-CompoundStmt 0x5605abcf1cc0 <col:40, col:56>
| |       `-ReturnStmt 0x5605abcf1cb0 <col:42, col:49>
| |         `-CXXBoolLiteralExpr 0x5605abcf1ca0 <col:49> 'bool' false
| |-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| | |-TemplateTypeParmDecl 0x5605abcf1d28 <line:3844:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x5605abcf1db8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | `-TypeAliasDecl 0x5605abcf2268 <line:3845:5, col:67> col:11 __copy_cv 'typename __match_cv_qualifiers<_From, _To>::__type'
| |   `-DependentNameType 0x5605abcf21f0 'typename __match_cv_qualifiers<_From, _To>::__type' dependent
| |-TypeAliasTemplateDecl 0x5605abcf39a0 <line:3847:3, line:3849:71> line:3848:5 __cond_res
| | |-TemplateTypeParmDecl 0x5605abcf2330 <line:3847:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcf23b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | `-TypeAliasDecl 0x5605abcf3938 <line:3848:5, line:3849:71> line:3848:11 __cond_res 'decltype(false ? declval<_Xp (&)()>()() : declval<_Yp (&)()>()())'
| |   `-DecltypeType 0x5605abcf38f0 'decltype(false ? declval<_Xp (&)()>()() : declval<_Yp (&)()>()())' dependent
| |     `-ConditionalOperator 0x5605abcf3888 <line:3849:18, col:70> '<dependent type>'
| |       |-CXXBoolLiteralExpr 0x5605abcf2468 <col:18> 'bool' false
| |       |-CallExpr 0x5605abcf3688 <col:26, col:46> '<dependent type>'
| |       | `-CallExpr 0x5605abcf3668 <col:26, col:44> '<dependent type>'
| |       |   `-UnresolvedLookupExpr 0x5605abcf35f0 <col:26, col:42> '<dependent type>' lvalue (ADL) = 'declval' 0x5605abc78370
| |       |     `-TemplateArgument type '_Xp (&)()':'type-parameter-0-0 (&)()'
| |       |       `-LValueReferenceType 0x5605abcf2550 '_Xp (&)()' dependent
| |       |         `-ParenType 0x5605abcf24f0 '_Xp ()' sugar dependent
| |       |           `-FunctionProtoType 0x5605abcf24c0 '_Xp ()' dependent cdecl
| |       |             `-TemplateTypeParmType 0x5605abcf2380 '_Xp' dependent depth 0 index 0
| |       |               `-TemplateTypeParm 0x5605abcf2330 '_Xp'
| |       `-CallExpr 0x5605abcf3868 <col:50, col:70> '<dependent type>'
| |         `-CallExpr 0x5605abcf3848 <col:50, col:68> '<dependent type>'
| |           `-UnresolvedLookupExpr 0x5605abcf37d0 <col:50, col:66> '<dependent type>' lvalue (ADL) = 'declval' 0x5605abc78370
| |             `-TemplateArgument type '_Yp (&)()':'type-parameter-0-1 (&)()'
| |               `-LValueReferenceType 0x5605abcf3770 '_Yp (&)()' dependent
| |                 `-ParenType 0x5605abcf3710 '_Yp ()' sugar dependent
| |                   `-FunctionProtoType 0x5605abcf36e0 '_Yp ()' dependent cdecl
| |                     `-TemplateTypeParmType 0x5605abcf2410 '_Yp' dependent depth 0 index 1
| |                       `-TemplateTypeParm 0x5605abcf23b8 '_Yp'
| |-ClassTemplateDecl 0x5605abcf3cb8 <line:3851:3, line:3853:7> line:3852:12 __common_ref_impl
| | |-TemplateTypeParmDecl 0x5605abcf3a00 <line:3851:12, col:21> col:21 typename depth 0 index 0 _Ap
| | |-TemplateTypeParmDecl 0x5605abcf3a88 <col:26, col:35> col:35 typename depth 0 index 1 _Bp
| | |-TemplateTypeParmDecl 0x5605abcf3b28 <col:40, col:51> col:49 typename depth 0 index 2
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |-CXXRecordDecl 0x5605abcf3c08 <line:3852:5, line:3853:7> line:3852:12 struct __common_ref_impl definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | `-CXXRecordDecl 0x5605abcf4000 <col:5, col:12> col:12 implicit struct __common_ref_impl
| | `-ClassTemplateSpecializationDecl 0x5605abdc9138 <line:3865:3, line:3869:7> line:3866:12 struct __common_ref_impl definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public 'enable_if<is_reference_v<__condres_cvref<void *const, void *const>>, __condres_cvref<void *const, void *const>>':'std::enable_if<true, void *const &>'
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument type 'void'
| |   | `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-CXXRecordDecl 0x5605abdd1448 <col:5, col:12> col:12 implicit struct __common_ref_impl
| |-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| | |-TemplateTypeParmDecl 0x5605abcf40c8 <line:3856:12, col:21> col:21 referenced typename depth 0 index 0 _Ap
| | |-TemplateTypeParmDecl 0x5605abcf4158 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Bp
| | `-TypeAliasDecl 0x5605abcf4418 <line:3857:5, col:64> col:11 __common_ref 'typename __common_ref_impl<_Ap, _Bp>::type'
| |   `-DependentNameType 0x5605abcf43a0 'typename __common_ref_impl<_Ap, _Bp>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abcf5cb0 <line:3860:3, line:3862:62> line:3861:5 __condres_cvref
| | |-TemplateTypeParmDecl 0x5605abcf44e0 <line:3860:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcf4568 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | `-TypeAliasDecl 0x5605abcf5c48 <line:3861:5, line:3862:62> line:3861:11 __condres_cvref '__cond_res<__copy_cv<_Xp, _Yp> &, __copy_cv<_Yp, _Xp> &>':'decltype(false ? declval<__copy_cv<_Xp, _Yp> &(&)()>()() : declval<__copy_cv<_Yp, _Xp> &(&)()>()())'
| |   `-ElaboratedType 0x5605abcf5bc0 '__cond_res<__copy_cv<_Xp, _Yp> &, __copy_cv<_Yp, _Xp> &>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abcf5b50 '__cond_res<__copy_cv<_Xp, _Yp> &, __copy_cv<_Yp, _Xp> &>' sugar dependent alias
| |       |-name: '__cond_res':'std::__cond_res' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf39a0 <line:3847:3, line:3849:71> line:3848:5 __cond_res
| |       |-TemplateArgument type '__copy_cv<_Xp, _Yp> &':'typename __match_cv_qualifiers<type-parameter-0-0, type-parameter-0-1, is_const<_From>::value, is_volatile<_From>::value>::__type &'
| |       | `-LValueReferenceType 0x5605abcf4b00 '__copy_cv<_Xp, _Yp> &' dependent
| |       |   `-ElaboratedType 0x5605abcf4a70 '__copy_cv<_Xp, _Yp>' sugar dependent
| |       |     `-TemplateSpecializationType 0x5605abcf4a00 '__copy_cv<_Xp, _Yp>' sugar dependent alias
| |       |       |-name: '__copy_cv':'std::__copy_cv' qualified
| |       |       | `-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| |       |       |-TemplateArgument type '_Xp':'type-parameter-0-0'
| |       |       | `-TemplateTypeParmType 0x5605abcf4530 '_Xp' dependent depth 0 index 0
| |       |       |   `-TemplateTypeParm 0x5605abcf44e0 '_Xp'
| |       |       |-TemplateArgument type '_Yp':'type-parameter-0-1'
| |       |       | `-TemplateTypeParmType 0x5605abcf45c0 '_Yp' dependent depth 0 index 1
| |       |       |   `-TemplateTypeParm 0x5605abcf4568 '_Yp'
| |       |       `-DependentNameType 0x5605abcf49b0 'typename __match_cv_qualifiers<_Xp, _Yp>::__type' dependent
| |       |-TemplateArgument type '__copy_cv<_Yp, _Xp> &':'typename __match_cv_qualifiers<type-parameter-0-1, type-parameter-0-0, is_const<_Yp>::value, is_volatile<_Yp>::value>::__type &'
| |       | `-LValueReferenceType 0x5605abcf51b0 '__copy_cv<_Yp, _Xp> &' dependent
| |       |   `-ElaboratedType 0x5605abcf5120 '__copy_cv<_Yp, _Xp>' sugar dependent
| |       |     `-TemplateSpecializationType 0x5605abcf50b0 '__copy_cv<_Yp, _Xp>' sugar dependent alias
| |       |       |-name: '__copy_cv':'std::__copy_cv' qualified
| |       |       | `-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| |       |       |-TemplateArgument type '_Yp':'type-parameter-0-1'
| |       |       | `-TemplateTypeParmType 0x5605abcf45c0 '_Yp' dependent depth 0 index 1
| |       |       |   `-TemplateTypeParm 0x5605abcf4568 '_Yp'
| |       |       |-TemplateArgument type '_Xp':'type-parameter-0-0'
| |       |       | `-TemplateTypeParmType 0x5605abcf4530 '_Xp' dependent depth 0 index 0
| |       |       |   `-TemplateTypeParm 0x5605abcf44e0 '_Xp'
| |       |       `-DependentNameType 0x5605abcf5060 'typename __match_cv_qualifiers<_Yp, _Xp>::__type' dependent
| |       `-DecltypeType 0x5605abcf5b10 'decltype(false ? declval<__copy_cv<_Xp, _Yp> &(&)()>()() : declval<__copy_cv<_Yp, _Xp> &(&)()>()())' dependent
| |         `-ConditionalOperator 0x5605abcf5aa8 <line:3849:18, col:70> '<dependent type>'
| |           |-CXXBoolLiteralExpr 0x5605abcf2468 <col:18> 'bool' false
| |           |-CallExpr 0x5605abcf5438 <col:26, col:46> '<dependent type>'
| |           | `-CallExpr 0x5605abcf5418 <col:26, col:44> '<dependent type>'
| |           |   `-UnresolvedLookupExpr 0x5605abcf53a0 <col:26, col:42> '<dependent type>' lvalue (ADL) = 'declval' 0x5605abc78370
| |           |     `-TemplateArgument type '__copy_cv<_Xp, _Yp> &(&)()':'typename __match_cv_qualifiers<type-parameter-0-0, type-parameter-0-1, is_const<_From>::value, is_volatile<_From>::value>::__type &(&)()'
| |           |       `-LValueReferenceType 0x5605abcf5320 '__copy_cv<_Xp, _Yp> &(&)()' dependent
| |           |         `-ParenType 0x5605abcf52c0 '__copy_cv<_Xp, _Yp> &()' sugar dependent
| |           |           `-FunctionProtoType 0x5605abcf5290 '__copy_cv<_Xp, _Yp> &()' dependent cdecl
| |           |             `-LValueReferenceType 0x5605abcf4b00 '__copy_cv<_Xp, _Yp> &' dependent
| |           |               `-ElaboratedType 0x5605abcf4a70 '__copy_cv<_Xp, _Yp>' sugar dependent
| |           |                 `-TemplateSpecializationType 0x5605abcf4a00 '__copy_cv<_Xp, _Yp>' sugar dependent alias
| |           |                   |-name: '__copy_cv':'std::__copy_cv' qualified
| |           |                   | `-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| |           |                   |-TemplateArgument type '_Xp':'type-parameter-0-0'
| |           |                   | `-TemplateTypeParmType 0x5605abcf4530 '_Xp' dependent depth 0 index 0
| |           |                   |   `-TemplateTypeParm 0x5605abcf44e0 '_Xp'
| |           |                   |-TemplateArgument type '_Yp':'type-parameter-0-1'
| |           |                   | `-TemplateTypeParmType 0x5605abcf45c0 '_Yp' dependent depth 0 index 1
| |           |                   |   `-TemplateTypeParm 0x5605abcf4568 '_Yp'
| |           |                   `-DependentNameType 0x5605abcf49b0 'typename __match_cv_qualifiers<_Xp, _Yp>::__type' dependent
| |           `-CallExpr 0x5605abcf5a88 <line:3849:50, col:70> '<dependent type>'
| |             `-CallExpr 0x5605abcf5a68 <col:50, col:68> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x5605abcf59f0 <col:50, col:66> '<dependent type>' lvalue (ADL) = 'declval' 0x5605abc78370
| |                 `-TemplateArgument type '__copy_cv<_Yp, _Xp> &(&)()':'typename __match_cv_qualifiers<type-parameter-0-1, type-parameter-0-0, is_const<_Yp>::value, is_volatile<_Yp>::value>::__type &(&)()'
| |                   `-LValueReferenceType 0x5605abcf5540 '__copy_cv<_Yp, _Xp> &(&)()' dependent
| |                     `-ParenType 0x5605abcf54e0 '__copy_cv<_Yp, _Xp> &()' sugar dependent
| |                       `-FunctionProtoType 0x5605abcf54b0 '__copy_cv<_Yp, _Xp> &()' dependent cdecl
| |                         `-LValueReferenceType 0x5605abcf51b0 '__copy_cv<_Yp, _Xp> &' dependent
| |                           `-ElaboratedType 0x5605abcf5120 '__copy_cv<_Yp, _Xp>' sugar dependent
| |                             `-TemplateSpecializationType 0x5605abcf50b0 '__copy_cv<_Yp, _Xp>' sugar dependent alias
| |                               |-name: '__copy_cv':'std::__copy_cv' qualified
| |                               | `-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| |                               |-TemplateArgument type '_Yp':'type-parameter-0-1'
| |                               | `-TemplateTypeParmType 0x5605abcf45c0 '_Yp' dependent depth 0 index 1
| |                               |   `-TemplateTypeParm 0x5605abcf4568 '_Yp'
| |                               |-TemplateArgument type '_Xp':'type-parameter-0-0'
| |                               | `-TemplateTypeParmType 0x5605abcf4530 '_Xp' dependent depth 0 index 0
| |                               |   `-TemplateTypeParm 0x5605abcf44e0 '_Xp'
| |                               `-DependentNameType 0x5605abcf5060 'typename __match_cv_qualifiers<_Yp, _Xp>::__type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abcf70d0 <line:3865:3, line:3869:7> line:3866:12 struct __common_ref_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'enable_if<is_reference_v<__condres_cvref<_Xp, _Yp>>, __condres_cvref<_Xp, _Yp>>'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abcf5d10 <line:3865:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcf5d98 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | `-CXXRecordDecl 0x5605abcf9520 <line:3866:5, col:12> col:12 implicit struct __common_ref_impl
| |-TypeAliasTemplateDecl 0x5605abcf9ed8 <line:3872:3, line:3873:72> col:5 __common_ref_C
| | |-TemplateTypeParmDecl 0x5605abcf95e8 <line:3872:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcf9678 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | `-TypeAliasDecl 0x5605abcf9e70 <line:3873:5, col:72> col:11 __common_ref_C 'remove_reference_t<__common_ref<_Xp &, _Yp &>> &&'
| |   `-RValueReferenceType 0x5605abcf9e10 'remove_reference_t<__common_ref<_Xp &, _Yp &>> &&' dependent
| |     `-ElaboratedType 0x5605abcf9d90 'remove_reference_t<__common_ref<_Xp &, _Yp &>>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abcf9d40 'remove_reference_t<__common_ref<_Xp &, _Yp &>>' sugar dependent alias
| |         |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abc0d4a0 <line:1732:3, line:1733:64> col:5 remove_reference_t
| |         |-TemplateArgument type '__common_ref<_Xp &, _Yp &>':'typename __common_ref_impl<type-parameter-0-0 &, type-parameter-0-1 &, void>::type'
| |         | `-ElaboratedType 0x5605abcf9a80 '__common_ref<_Xp &, _Yp &>' sugar dependent
| |         |   `-TemplateSpecializationType 0x5605abcf9a10 '__common_ref<_Xp &, _Yp &>' sugar dependent alias
| |         |     |-name: '__common_ref':'std::__common_ref' qualified
| |         |     | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |         |     |-TemplateArgument type '_Xp &':'type-parameter-0-0 &'
| |         |     | `-LValueReferenceType 0x5605abcf9760 '_Xp &' dependent
| |         |     |   `-TemplateTypeParmType 0x5605abcf9640 '_Xp' dependent depth 0 index 0
| |         |     |     `-TemplateTypeParm 0x5605abcf95e8 '_Xp'
| |         |     |-TemplateArgument type '_Yp &':'type-parameter-0-1 &'
| |         |     | `-LValueReferenceType 0x5605abcf97a0 '_Yp &' dependent
| |         |     |   `-TemplateTypeParmType 0x5605abcf96d0 '_Yp' dependent depth 0 index 1
| |         |     |     `-TemplateTypeParm 0x5605abcf9678 '_Yp'
| |         |     `-DependentNameType 0x5605abcf9990 'typename __common_ref_impl<_Xp &, _Yp &>::type' dependent
| |         `-DependentNameType 0x5605abcf9cf0 'typename remove_reference<__common_ref<_Xp &, _Yp &>>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abcfba28 <line:3876:3, line:3880:46> line:3877:12 struct __common_ref_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &&'
| | | `-RValueReferenceType 0x5605abcfa0c0 'type-parameter-0-1 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument type 'typename enable_if<__and_<is_convertible<_Xp &&, __common_ref_C<_Xp, _Yp>>, is_convertible<_Yp &&, __common_ref_C<_Xp, _Yp>>>::value, void>::type'
| | | `-DependentNameType 0x5605abcfb670 'typename enable_if<__and_<is_convertible<_Xp &&, __common_ref_C<_Xp, _Yp>>, is_convertible<_Yp &&, __common_ref_C<_Xp, _Yp>>>::value, void>::type' dependent
| | |-TemplateTypeParmDecl 0x5605abcf9f38 <line:3876:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcf9fc8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | |-CXXRecordDecl 0x5605abcfbcf8 <line:3877:5, col:12> col:12 implicit struct __common_ref_impl
| | `-TypeAliasDecl 0x5605abcfc418 <line:3880:7, col:43> col:13 type '__common_ref_C<_Xp, _Yp>':'remove_reference_t<__common_ref<_Xp &, _Yp &>> &&'
| |   `-ElaboratedType 0x5605abcfc390 '__common_ref_C<_Xp, _Yp>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abcfc320 '__common_ref_C<_Xp, _Yp>' sugar dependent alias
| |       |-name: '__common_ref_C':'std::__common_ref_C' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf9ed8 <line:3872:3, line:3873:72> col:5 __common_ref_C
| |       |-TemplateArgument type '_Xp':'type-parameter-0-0'
| |       | `-TemplateTypeParmType 0x5605abcf9f90 '_Xp' dependent depth 0 index 0
| |       |   `-TemplateTypeParm 0x5605abcf9f38 '_Xp'
| |       |-TemplateArgument type '_Yp':'type-parameter-0-1'
| |       | `-TemplateTypeParmType 0x5605abcfa020 '_Yp' dependent depth 0 index 1
| |       |   `-TemplateTypeParm 0x5605abcf9fc8 '_Yp'
| |       `-RValueReferenceType 0x5605abcfc2c0 'remove_reference_t<__common_ref<_Xp &, _Yp &>> &&' dependent
| |         `-ElaboratedType 0x5605abcfc290 'remove_reference_t<__common_ref<_Xp &, _Yp &>>' sugar dependent
| |           `-TemplateSpecializationType 0x5605abcfc240 'remove_reference_t<__common_ref<_Xp &, _Yp &>>' sugar dependent alias
| |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 <line:1732:3, line:1733:64> col:5 remove_reference_t
| |             |-TemplateArgument type '__common_ref<_Xp &, _Yp &>':'typename __common_ref_impl<type-parameter-0-0 &, type-parameter-0-1 &, void>::type'
| |             | `-ElaboratedType 0x5605abcfc060 '__common_ref<_Xp &, _Yp &>' sugar dependent
| |             |   `-TemplateSpecializationType 0x5605abcfbff0 '__common_ref<_Xp &, _Yp &>' sugar dependent alias
| |             |     |-name: '__common_ref':'std::__common_ref' qualified
| |             |     | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |             |     |-TemplateArgument type '_Xp &':'type-parameter-0-0 &'
| |             |     | `-LValueReferenceType 0x5605abcfa200 '_Xp &' dependent
| |             |     |   `-TemplateTypeParmType 0x5605abcf9f90 '_Xp' dependent depth 0 index 0
| |             |     |     `-TemplateTypeParm 0x5605abcf9f38 '_Xp'
| |             |     |-TemplateArgument type '_Yp &':'type-parameter-0-1 &'
| |             |     | `-LValueReferenceType 0x5605abcfa240 '_Yp &' dependent
| |             |     |   `-TemplateTypeParmType 0x5605abcfa020 '_Yp' dependent depth 0 index 1
| |             |     |     `-TemplateTypeParm 0x5605abcf9fc8 '_Yp'
| |             |     `-DependentNameType 0x5605abcfbfa0 'typename __common_ref_impl<_Xp &, _Yp &>::type' dependent
| |             `-DependentNameType 0x5605abcfc1f0 'typename remove_reference<__common_ref<_Xp &, _Yp &>>::type' dependent
| |-TypeAliasTemplateDecl 0x5605abcfca40 <line:3883:3, line:3884:57> col:5 __common_ref_D
| | |-TemplateTypeParmDecl 0x5605abcfc4b0 <line:3883:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcfc538 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | `-TypeAliasDecl 0x5605abcfc9d8 <line:3884:5, col:57> col:11 __common_ref_D '__common_ref<const _Xp &, _Yp &>':'typename __common_ref_impl<const _Xp &, _Yp &>::type'
| |   `-ElaboratedType 0x5605abcfc950 '__common_ref<const _Xp &, _Yp &>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abcfc8e0 '__common_ref<const _Xp &, _Yp &>' sugar dependent alias
| |       |-name: '__common_ref':'std::__common_ref' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |       |-TemplateArgument type 'const _Xp &':'const type-parameter-0-0 &'
| |       | `-LValueReferenceType 0x5605abcfc5f0 'const _Xp &' dependent
| |       |   `-QualType 0x5605abcfc501 'const _Xp' const
| |       |     `-TemplateTypeParmType 0x5605abcfc500 '_Xp' dependent depth 0 index 0
| |       |       `-TemplateTypeParm 0x5605abcfc4b0 '_Xp'
| |       |-TemplateArgument type '_Yp &':'type-parameter-0-1 &'
| |       | `-LValueReferenceType 0x5605abcfc630 '_Yp &' dependent
| |       |   `-TemplateTypeParmType 0x5605abcfc590 '_Yp' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abcfc538 '_Yp'
| |       `-DependentNameType 0x5605abcfc890 'typename __common_ref_impl<const _Xp &, _Yp &>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abcfd910 <line:3887:3, line:3890:46> line:3888:12 struct __common_ref_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument type 'typename enable_if<__and_<is_convertible<_Xp &&, __common_ref_D<_Xp, _Yp>>>::value, void>::type'
| | | `-DependentNameType 0x5605abcfd630 'typename enable_if<__and_<is_convertible<_Xp &&, __common_ref_D<_Xp, _Yp>>>::value, void>::type' dependent
| | |-TemplateTypeParmDecl 0x5605abcfcaa0 <line:3887:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcfcb28 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | |-CXXRecordDecl 0x5605abcfdc18 <line:3888:5, col:12> col:12 implicit struct __common_ref_impl
| | `-TypeAliasDecl 0x5605abcfe0a8 <line:3890:7, col:43> col:13 type '__common_ref_D<_Xp, _Yp>':'typename __common_ref_impl<const _Xp &, _Yp &>::type'
| |   `-ElaboratedType 0x5605abcfe020 '__common_ref_D<_Xp, _Yp>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abcfdfb0 '__common_ref_D<_Xp, _Yp>' sugar dependent alias
| |       |-name: '__common_ref_D':'std::__common_ref_D' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcfca40 <line:3883:3, line:3884:57> col:5 __common_ref_D
| |       |-TemplateArgument type '_Xp':'type-parameter-0-0'
| |       | `-TemplateTypeParmType 0x5605abcfcaf0 '_Xp' dependent depth 0 index 0
| |       |   `-TemplateTypeParm 0x5605abcfcaa0 '_Xp'
| |       |-TemplateArgument type '_Yp':'type-parameter-0-1'
| |       | `-TemplateTypeParmType 0x5605abcfcb80 '_Yp' dependent depth 0 index 1
| |       |   `-TemplateTypeParm 0x5605abcfcb28 '_Yp'
| |       `-ElaboratedType 0x5605abcfdf50 '__common_ref<const _Xp &, _Yp &>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abcfdee0 '__common_ref<const _Xp &, _Yp &>' sugar dependent alias
| |           |-name: '__common_ref':'std::__common_ref' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |           |-TemplateArgument type 'const _Xp &':'const type-parameter-0-0 &'
| |           | `-LValueReferenceType 0x5605abcfcd10 'const _Xp &' dependent
| |           |   `-QualType 0x5605abcfcaf1 'const _Xp' const
| |           |     `-TemplateTypeParmType 0x5605abcfcaf0 '_Xp' dependent depth 0 index 0
| |           |       `-TemplateTypeParm 0x5605abcfcaa0 '_Xp'
| |           |-TemplateArgument type '_Yp &':'type-parameter-0-1 &'
| |           | `-LValueReferenceType 0x5605abcfcc20 '_Yp &' dependent
| |           |   `-TemplateTypeParmType 0x5605abcfcb80 '_Yp' dependent depth 0 index 1
| |           |     `-TemplateTypeParm 0x5605abcfcb28 '_Yp'
| |           `-DependentNameType 0x5605abcfde90 'typename __common_ref_impl<const _Xp &, _Yp &>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abcfe400 <line:3893:3, line:3896:7> line:3894:12 struct __common_ref_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__common_ref_impl<_Yp &&, _Xp &>'
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &&'
| | | `-RValueReferenceType 0x5605abcfa0c0 'type-parameter-0-1 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abcfe140 <line:3893:12, col:21> col:21 referenced typename depth 0 index 0 _Xp
| | |-TemplateTypeParmDecl 0x5605abcfe1c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Yp
| | `-CXXRecordDecl 0x5605abcfe7e0 <line:3894:5, col:12> col:12 implicit struct __common_ref_impl
| |-ClassTemplateDecl 0x5605abcfecd0 <line:3899:3, line:3902:7> line:3901:12 basic_common_reference
| | |-TemplateTypeParmDecl 0x5605abcfe8a8 <line:3899:12, col:21> col:21 typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abcfe938 <col:26, col:35> col:35 typename depth 0 index 1 _Up
| | |-TemplateTemplateParmDecl 0x5605abcfea78 <line:3900:5, col:30> col:30 depth 0 index 2 _TQual
| | | `-TemplateTypeParmDecl 0x5605abcfe9c8 <col:14> col:22 typename depth 1 index 0
| | |-TemplateTemplateParmDecl 0x5605abcfeb88 <col:38, col:63> col:63 depth 0 index 3 _UQual
| | | `-TemplateTypeParmDecl 0x5605abcfead8 <col:47> col:55 typename depth 1 index 0
| | `-CXXRecordDecl 0x5605abcfec20 <line:3901:5, line:3902:7> line:3901:12 struct basic_common_reference definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   `-CXXRecordDecl 0x5605abcff2b0 <col:5, col:12> col:12 implicit struct basic_common_reference
| |-ClassTemplateDecl 0x5605abcff4d8 <line:3905:3, line:3907:66> line:3906:12 __xref
| | |-TemplateTypeParmDecl 0x5605abcff378 <line:3905:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abcff428 <line:3906:5, line:3907:66> line:3906:12 struct __xref definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abcff790 <col:5, col:12> col:12 implicit struct __xref
| |   `-TypeAliasTemplateDecl 0x5605abd008d0 <line:3907:7, col:63> col:30 __type
| |     |-TemplateTypeParmDecl 0x5605abcff840 <col:16, col:25> col:25 referenced typename depth 1 index 0 _Up
| |     `-TypeAliasDecl 0x5605abd00868 <col:30, col:63> col:36 __type '__copy_cv<_Tp, _Up>':'typename __match_cv_qualifiers<_Tp, _Up>::__type'
| |       `-ElaboratedType 0x5605abd007e0 '__copy_cv<_Tp, _Up>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abd00770 '__copy_cv<_Tp, _Up>' sugar dependent alias
| |           |-name: '__copy_cv':'std::__copy_cv' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| |           |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           | `-TemplateTypeParmType 0x5605abcff3d0 '_Tp' dependent depth 0 index 0
| |           |   `-TemplateTypeParm 0x5605abcff378 '_Tp'
| |           |-TemplateArgument type '_Up':'type-parameter-1-0'
| |           | `-TemplateTypeParmType 0x5605abcff890 '_Up' dependent depth 1 index 0
| |           |   `-TemplateTypeParm 0x5605abcff840 '_Up'
| |           `-DependentNameType 0x5605abd00720 'typename __match_cv_qualifiers<_Tp, _Up>::__type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd00ae0 <line:3909:3, line:3911:67> line:3910:12 struct __xref definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abd00960 <line:3909:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abd00cc0 <line:3910:5, col:12> col:12 implicit struct __xref
| | `-TypeAliasTemplateDecl 0x5605abd01380 <line:3911:7, col:64> col:30 __type
| |   |-TemplateTypeParmDecl 0x5605abd00d70 <col:16, col:25> col:25 referenced typename depth 1 index 0 _Up
| |   `-TypeAliasDecl 0x5605abd01318 <col:30, col:64> col:36 __type '__copy_cv<_Tp, _Up> &'
| |     `-LValueReferenceType 0x5605abd012b0 '__copy_cv<_Tp, _Up> &' dependent
| |       `-ElaboratedType 0x5605abd01220 '__copy_cv<_Tp, _Up>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abd011b0 '__copy_cv<_Tp, _Up>' sugar dependent alias
| |           |-name: '__copy_cv':'std::__copy_cv' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| |           |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           | `-TemplateTypeParmType 0x5605abd009b0 '_Tp' dependent depth 0 index 0
| |           |   `-TemplateTypeParm 0x5605abd00960 '_Tp'
| |           |-TemplateArgument type '_Up':'type-parameter-1-0'
| |           | `-TemplateTypeParmType 0x5605abd00dc0 '_Up' dependent depth 1 index 0
| |           |   `-TemplateTypeParm 0x5605abd00d70 '_Up'
| |           `-DependentNameType 0x5605abd01160 'typename __match_cv_qualifiers<_Tp, _Up>::__type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd01590 <line:3913:3, line:3915:68> line:3914:12 struct __xref definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abd01410 <line:3913:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abd01770 <line:3914:5, col:12> col:12 implicit struct __xref
| | `-TypeAliasTemplateDecl 0x5605abd01e30 <line:3915:7, col:64> col:30 __type
| |   |-TemplateTypeParmDecl 0x5605abd01820 <col:16, col:25> col:25 referenced typename depth 1 index 0 _Up
| |   `-TypeAliasDecl 0x5605abd01dc8 <col:30, col:64> col:36 __type '__copy_cv<_Tp, _Up> &&'
| |     `-RValueReferenceType 0x5605abd01d60 '__copy_cv<_Tp, _Up> &&' dependent
| |       `-ElaboratedType 0x5605abd01cd0 '__copy_cv<_Tp, _Up>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abd01c60 '__copy_cv<_Tp, _Up>' sugar dependent alias
| |           |-name: '__copy_cv':'std::__copy_cv' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abcf22d0 <line:3844:3, line:3845:67> col:5 __copy_cv
| |           |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           | `-TemplateTypeParmType 0x5605abd01460 '_Tp' dependent depth 0 index 0
| |           |   `-TemplateTypeParm 0x5605abd01410 '_Tp'
| |           |-TemplateArgument type '_Up':'type-parameter-1-0'
| |           | `-TemplateTypeParmType 0x5605abd01870 '_Up' dependent depth 1 index 0
| |           |   `-TemplateTypeParm 0x5605abd01820 '_Up'
| |           `-DependentNameType 0x5605abd01c10 'typename __match_cv_qualifiers<_Tp, _Up>::__type' dependent
| |-TypeAliasTemplateDecl 0x5605abd02cb0 <line:3917:3, line:3922:38> line:3918:5 __basic_common_ref
| | |-TemplateTypeParmDecl 0x5605abd01ec0 <line:3917:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd01f48 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | `-TypeAliasDecl 0x5605abd02c48 <line:3918:5, line:3922:38> line:3918:11 __basic_common_ref 'typename basic_common_reference<remove_cvref_t<_Tp1>, remove_cvref_t<_Tp2>, __xref<_Tp1>::template __type, __xref<_Tp2>::template __type>::type'
| |   `-DependentNameType 0x5605abd02bd0 'typename basic_common_reference<remove_cvref_t<_Tp1>, remove_cvref_t<_Tp2>, __xref<_Tp1>::template __type, __xref<_Tp2>::template __type>::type' dependent
| |-ClassTemplateDecl 0x5605abd02e68 <line:3925:3, line:3926:12> col:12 common_reference
| | |-TemplateTypeParmDecl 0x5605abd02d10 <line:3925:12, col:24> col:24 typename depth 0 index 0 ... _Tp
| | |-CXXRecordDecl 0x5605abd02db8 <line:3926:5, col:12> col:12 struct common_reference
| | |-ClassTemplateSpecialization 0x5605abd03468 'common_reference'
| | `-ClassTemplateSpecializationDecl 0x5605abdc8258 <line:3948:3, line:3951:7> line:3949:12 struct common_reference definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__common_reference_impl<void *const &, void *const &>':'std::__common_reference_impl<void *const &, void *const &>'
| |   |-TemplateArgument pack '<void *const &, void *const &>'
| |   | |-TemplateArgument type 'void *const &'
| |   | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   | |   `-QualType 0x5605aba9d151 'void *const' const
| |   | |     `-PointerType 0x5605aba9d150 'void *'
| |   | |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   | `-TemplateArgument type 'void *const &'
| |   |   `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |     `-QualType 0x5605aba9d151 'void *const' const
| |   |       `-PointerType 0x5605aba9d150 'void *'
| |   |         `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-CXXRecordDecl 0x5605abdd1de0 <col:5, col:12> col:12 implicit struct common_reference
| |-TypeAliasTemplateDecl 0x5605abd033f0 <line:3928:3, line:3929:67> col:5 common_reference_t
| | |-TemplateTypeParmDecl 0x5605abd03118 <line:3928:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tp
| | `-TypeAliasDecl 0x5605abd03388 <line:3929:5, col:67> col:11 common_reference_t 'typename common_reference<_Tp...>::type'
| |   `-DependentNameType 0x5605abd03310 'typename common_reference<_Tp...>::type' dependent
| |-ClassTemplateSpecializationDecl 0x5605abd03468 <line:3932:3, line:3934:7> line:3933:12 struct common_reference definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<>'
| | `-CXXRecordDecl 0x5605abd03628 <col:5, col:12> col:12 implicit struct common_reference
| |-ClassTemplatePartialSpecializationDecl 0x5605abd03870 <line:3937:3, line:3939:26> line:3938:12 struct common_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<type-parameter-0-0>'
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abd036f0 <line:3937:12, col:21> col:21 referenced typename depth 0 index 0 _Tp0
| | |-CXXRecordDecl 0x5605abd03a98 <line:3938:5, col:12> col:12 implicit struct common_reference
| | `-TypeAliasDecl 0x5605abd03b58 <line:3939:7, col:20> col:13 type '_Tp0'
| |   `-TemplateTypeParmType 0x5605abd03740 '_Tp0' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5605abd036f0 '_Tp0'
| |-ClassTemplateDecl 0x5605abd03f60 <line:3942:3, line:3945:7> line:3943:12 __common_reference_impl
| | |-TemplateTypeParmDecl 0x5605abd03bf0 <line:3942:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd03c78 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-NonTypeTemplateParmDecl 0x5605abd03d40 <col:42, col:56> col:46 referenced 'int' depth 0 index 2 _Bullet
| | | `-TemplateArgument <col:56> expr '1'
| | |   `-IntegerLiteral 0x5605abd03d00 <col:56> 'int' 1
| | |-TemplateTypeParmDecl 0x5605abd03dd0 <col:59, col:70> col:68 typename depth 0 index 3
| | | `-TemplateArgument type 'void'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |-CXXRecordDecl 0x5605abd03eb0 <line:3943:5, line:3945:7> line:3943:12 struct __common_reference_impl definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-public '__common_reference_impl<_Tp1, _Tp2, _Bullet + 1>'
| | | `-CXXRecordDecl 0x5605abd05e38 <col:5, col:12> col:12 implicit struct __common_reference_impl
| | `-ClassTemplateSpecializationDecl 0x5605abdc8d78 <line:3954:3, line:3957:48> line:3955:12 struct __common_reference_impl definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument type 'void *const &'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-TemplateArgument integral '1'
| |   |-TemplateArgument type 'void'
| |   | `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-CXXRecordDecl 0x5605abdd1930 <col:5, col:12> col:12 implicit struct __common_reference_impl
| |   `-TypeAliasDecl 0x5605abdd1d30 <line:3957:7, col:45> col:13 referenced type '__common_ref<void *const &, void *const &>':'void *const &'
| |     `-ElaboratedType 0x5605abdd1cd0 '__common_ref<void *const &, void *const &>' sugar
| |       `-TemplateSpecializationType 0x5605abdd1c60 '__common_ref<void *const &, void *const &>' sugar alias
| |         |-name: '__common_ref':'std::__common_ref' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |         |-TemplateArgument type 'void *const &'
| |         | `-LValueReferenceType 0x5605abdd1a10 'void *const &'
| |         |   `-SubstTemplateTypeParmType 0x5605abdd19e0 'void *const' sugar typename depth 0 index 0 _Tp1
| |         |     |-ClassTemplateSpecialization 0x5605abdc8d78 '__common_reference_impl'
| |         |     `-QualType 0x5605aba9d151 'void *const' const
| |         |       `-PointerType 0x5605aba9d150 'void *'
| |         |         `-BuiltinType 0x5605aba9c9d0 'void'
| |         |-TemplateArgument type 'void *const &'
| |         | `-LValueReferenceType 0x5605abdd1a80 'void *const &'
| |         |   `-SubstTemplateTypeParmType 0x5605abdd1a50 'void *const' sugar typename depth 0 index 1 _Tp2
| |         |     |-ClassTemplateSpecialization 0x5605abdc8d78 '__common_reference_impl'
| |         |     `-QualType 0x5605aba9d151 'void *const' const
| |         |       `-PointerType 0x5605aba9d150 'void *'
| |         |         `-BuiltinType 0x5605aba9c9d0 'void'
| |         `-ElaboratedType 0x5605abdd1c10 'typename __common_ref_impl<void *const &, void *const &>::type' sugar
| |           `-TypedefType 0x5605abdd1520 'std::enable_if<true, void *const &>::type' sugar
| |             |-TypeAlias 0x5605abdd1398 'type'
| |             `-SubstTemplateTypeParmType 0x5605abdd1350 'void *const &' sugar typename depth 0 index 0 _Tp
| |               |-ClassTemplateSpecialization 0x5605abdd0fb8 'enable_if'
| |               `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |                 `-QualType 0x5605aba9d151 'void *const' const
| |                   `-PointerType 0x5605aba9d150 'void *'
| |                     `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplatePartialSpecializationDecl 0x5605abd06160 <line:3948:3, line:3951:7> line:3949:12 struct common_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__common_reference_impl<_Tp1, _Tp2>'
| | |-TemplateArgument pack '<type-parameter-0-0, type-parameter-0-1>'
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | `-TemplateArgument type 'type-parameter-0-1'
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abd05f00 <line:3948:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd05f88 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | `-CXXRecordDecl 0x5605abd065c0 <line:3949:5, col:12> col:12 implicit struct common_reference
| |-ClassTemplatePartialSpecializationDecl 0x5605abd06d88 <line:3954:3, line:3957:48> line:3955:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '1'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd06688 <line:3954:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd06718 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abd07070 <line:3955:5, col:12> col:12 implicit struct __common_reference_impl
| | `-TypeAliasDecl 0x5605abd073c8 <line:3957:7, col:45> col:13 type '__common_ref<_Tp1 &, _Tp2 &>':'typename __common_ref_impl<_Tp1 &, _Tp2 &>::type'
| |   `-ElaboratedType 0x5605abd07340 '__common_ref<_Tp1 &, _Tp2 &>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abd072d0 '__common_ref<_Tp1 &, _Tp2 &>' sugar dependent alias
| |       |-name: '__common_ref':'std::__common_ref' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |       |-TemplateArgument type '_Tp1 &':'type-parameter-0-0 &'
| |       | `-LValueReferenceType 0x5605abd067d0 '_Tp1 &' dependent
| |       |   `-TemplateTypeParmType 0x5605abd066e0 '_Tp1' dependent depth 0 index 0
| |       |     `-TemplateTypeParm 0x5605abd06688 '_Tp1'
| |       |-TemplateArgument type '_Tp2 &':'type-parameter-0-1 &'
| |       | `-LValueReferenceType 0x5605abd06810 '_Tp2 &' dependent
| |       |   `-TemplateTypeParmType 0x5605abd06770 '_Tp2' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abd06718 '_Tp2'
| |       `-DependentNameType 0x5605abd07280 'typename __common_ref_impl<_Tp1 &, _Tp2 &>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd07bf8 <line:3959:3, line:3962:50> line:3960:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &&'
| | | `-RValueReferenceType 0x5605abcfa0c0 'type-parameter-0-1 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '1'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd07460 <line:3959:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd074e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abd09190 <line:3960:5, col:12> col:12 implicit struct __common_reference_impl
| | `-TypeAliasDecl 0x5605abd094e8 <line:3962:7, col:47> col:13 type '__common_ref<_Tp1 &&, _Tp2 &&>':'typename __common_ref_impl<_Tp1 &&, _Tp2 &&>::type'
| |   `-ElaboratedType 0x5605abd09460 '__common_ref<_Tp1 &&, _Tp2 &&>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abd093f0 '__common_ref<_Tp1 &&, _Tp2 &&>' sugar dependent alias
| |       |-name: '__common_ref':'std::__common_ref' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |       |-TemplateArgument type '_Tp1 &&':'type-parameter-0-0 &&'
| |       | `-RValueReferenceType 0x5605abd075a0 '_Tp1 &&' dependent
| |       |   `-TemplateTypeParmType 0x5605abd074b0 '_Tp1' dependent depth 0 index 0
| |       |     `-TemplateTypeParm 0x5605abd07460 '_Tp1'
| |       |-TemplateArgument type '_Tp2 &&':'type-parameter-0-1 &&'
| |       | `-RValueReferenceType 0x5605abd075e0 '_Tp2 &&' dependent
| |       |   `-TemplateTypeParmType 0x5605abd07540 '_Tp2' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abd074e8 '_Tp2'
| |       `-DependentNameType 0x5605abd093a0 'typename __common_ref_impl<_Tp1 &&, _Tp2 &&>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd09c98 <line:3964:3, line:3967:49> line:3965:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &&'
| | | `-RValueReferenceType 0x5605abcfa0c0 'type-parameter-0-1 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '1'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd09580 <line:3964:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd09608 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abd09f80 <line:3965:5, col:12> col:12 implicit struct __common_reference_impl
| | `-TypeAliasDecl 0x5605abd0a2d8 <line:3967:7, col:46> col:13 type '__common_ref<_Tp1 &, _Tp2 &&>':'typename __common_ref_impl<_Tp1 &, _Tp2 &&>::type'
| |   `-ElaboratedType 0x5605abd0a250 '__common_ref<_Tp1 &, _Tp2 &&>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abd0a1e0 '__common_ref<_Tp1 &, _Tp2 &&>' sugar dependent alias
| |       |-name: '__common_ref':'std::__common_ref' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |       |-TemplateArgument type '_Tp1 &':'type-parameter-0-0 &'
| |       | `-LValueReferenceType 0x5605abd096c0 '_Tp1 &' dependent
| |       |   `-TemplateTypeParmType 0x5605abd095d0 '_Tp1' dependent depth 0 index 0
| |       |     `-TemplateTypeParm 0x5605abd09580 '_Tp1'
| |       |-TemplateArgument type '_Tp2 &&':'type-parameter-0-1 &&'
| |       | `-RValueReferenceType 0x5605abd09700 '_Tp2 &&' dependent
| |       |   `-TemplateTypeParmType 0x5605abd09660 '_Tp2' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abd09608 '_Tp2'
| |       `-DependentNameType 0x5605abd0a190 'typename __common_ref_impl<_Tp1 &, _Tp2 &&>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd0ab08 <line:3969:3, line:3972:49> line:3970:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '1'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd0a370 <line:3969:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd0a3f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abd0adf0 <line:3970:5, col:12> col:12 implicit struct __common_reference_impl
| | `-TypeAliasDecl 0x5605abd0b1b8 <line:3972:7, col:46> col:13 type '__common_ref<_Tp1 &&, _Tp2 &>':'typename __common_ref_impl<_Tp1 &&, _Tp2 &>::type'
| |   `-ElaboratedType 0x5605abd0b130 '__common_ref<_Tp1 &&, _Tp2 &>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abd0b0c0 '__common_ref<_Tp1 &&, _Tp2 &>' sugar dependent alias
| |       |-name: '__common_ref':'std::__common_ref' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf4480 <line:3856:3, line:3857:64> col:5 __common_ref
| |       |-TemplateArgument type '_Tp1 &&':'type-parameter-0-0 &&'
| |       | `-RValueReferenceType 0x5605abd0a4b0 '_Tp1 &&' dependent
| |       |   `-TemplateTypeParmType 0x5605abd0a3c0 '_Tp1' dependent depth 0 index 0
| |       |     `-TemplateTypeParm 0x5605abd0a370 '_Tp1'
| |       |-TemplateArgument type '_Tp2 &':'type-parameter-0-1 &'
| |       | `-LValueReferenceType 0x5605abd0a4f0 '_Tp2 &' dependent
| |       |   `-TemplateTypeParmType 0x5605abd0a450 '_Tp2' dependent depth 0 index 1
| |       |     `-TemplateTypeParm 0x5605abd0a3f8 '_Tp2'
| |       `-DependentNameType 0x5605abd0b000 'typename __common_ref_impl<_Tp1 &&, _Tp2 &>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd0c108 <line:3975:3, line:3978:52> line:3976:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '2'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd0b250 <line:3975:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd0b2d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abd0c3f0 <line:3976:5, col:12> col:12 implicit struct __common_reference_impl
| | `-TypeAliasDecl 0x5605abd0cf78 <line:3978:7, col:49> col:13 type '__basic_common_ref<_Tp1, _Tp2>':'typename basic_common_reference<remove_cvref_t<_Tp1>, remove_cvref_t<_Tp2>, __xref<_Tp1>::template __type, __xref<_Tp2>::template __type>::type'
| |   `-ElaboratedType 0x5605abd0cef0 '__basic_common_ref<_Tp1, _Tp2>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abd0ce80 '__basic_common_ref<_Tp1, _Tp2>' sugar dependent alias
| |       |-name: '__basic_common_ref':'std::__basic_common_ref' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abd02cb0 <line:3917:3, line:3922:38> line:3918:5 __basic_common_ref
| |       |-TemplateArgument type '_Tp1':'type-parameter-0-0'
| |       | `-TemplateTypeParmType 0x5605abd0b2a0 '_Tp1' dependent depth 0 index 0
| |       |   `-TemplateTypeParm 0x5605abd0b250 '_Tp1'
| |       |-TemplateArgument type '_Tp2':'type-parameter-0-1'
| |       | `-TemplateTypeParmType 0x5605abd0b330 '_Tp2' dependent depth 0 index 1
| |       |   `-TemplateTypeParm 0x5605abd0b2d8 '_Tp2'
| |       `-DependentNameType 0x5605abd0ce30 'typename basic_common_reference<remove_cvref_t<_Tp1>, remove_cvref_t<_Tp2>, __xref<_Tp1>::template __type, __xref<_Tp2>::template __type>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd0e0a8 <line:3981:3, line:3984:44> line:3982:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '3'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd0d010 <line:3981:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd0d8e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abd0e390 <line:3982:5, col:12> col:12 implicit struct __common_reference_impl
| | `-TypeAliasDecl 0x5605abd0e7a8 <line:3984:7, col:41> col:13 type '__cond_res<_Tp1, _Tp2>':'decltype(false ? declval<_Tp1 (&)()>()() : declval<_Tp2 (&)()>()())'
| |   `-ElaboratedType 0x5605abd0e720 '__cond_res<_Tp1, _Tp2>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abd0e6b0 '__cond_res<_Tp1, _Tp2>' sugar dependent alias
| |       |-name: '__cond_res':'std::__cond_res' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abcf39a0 <line:3847:3, line:3849:71> line:3848:5 __cond_res
| |       |-TemplateArgument type '_Tp1':'type-parameter-0-0'
| |       | `-TemplateTypeParmType 0x5605abd0d060 '_Tp1' dependent depth 0 index 0
| |       |   `-TemplateTypeParm 0x5605abd0d010 '_Tp1'
| |       |-TemplateArgument type '_Tp2':'type-parameter-0-1'
| |       | `-TemplateTypeParmType 0x5605abd0d940 '_Tp2' dependent depth 0 index 1
| |       |   `-TemplateTypeParm 0x5605abd0d8e8 '_Tp2'
| |       `-DecltypeType 0x5605abd0e670 'decltype(false ? declval<_Tp1 (&)()>()() : declval<_Tp2 (&)()>()())' dependent
| |         `-ConditionalOperator 0x5605abd0e638 <line:3849:18, col:70> '<dependent type>'
| |           |-CXXBoolLiteralExpr 0x5605abcf2468 <col:18> 'bool' false
| |           |-CallExpr 0x5605abd0e530 <col:26, col:46> '<dependent type>'
| |           | `-CallExpr 0x5605abd0e510 <col:26, col:44> '<dependent type>'
| |           |   `-UnresolvedLookupExpr 0x5605abd0e498 <col:26, col:42> '<dependent type>' lvalue (ADL) = 'declval' 0x5605abc78370
| |           |     `-TemplateArgument type '_Tp1 (&)()':'type-parameter-0-0 (&)()'
| |           |       `-LValueReferenceType 0x5605abd0da70 '_Tp1 (&)()' dependent
| |           |         `-ParenType 0x5605abd0da40 '_Tp1 ()' sugar dependent
| |           |           `-FunctionProtoType 0x5605abd0da10 '_Tp1 ()' dependent cdecl
| |           |             `-TemplateTypeParmType 0x5605abd0d060 '_Tp1' dependent depth 0 index 0
| |           |               `-TemplateTypeParm 0x5605abd0d010 '_Tp1'
| |           `-CallExpr 0x5605abd0e618 <col:50, col:70> '<dependent type>'
| |             `-CallExpr 0x5605abd0e5f8 <col:50, col:68> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x5605abd0e580 <col:50, col:66> '<dependent type>' lvalue (ADL) = 'declval' 0x5605abc78370
| |                 `-TemplateArgument type '_Tp2 (&)()':'type-parameter-0-1 (&)()'
| |                   `-LValueReferenceType 0x5605abd0dbf0 '_Tp2 (&)()' dependent
| |                     `-ParenType 0x5605abd0dbc0 '_Tp2 ()' sugar dependent
| |                       `-FunctionProtoType 0x5605abd0db90 '_Tp2 ()' dependent cdecl
| |                         `-TemplateTypeParmType 0x5605abd0d940 '_Tp2' dependent depth 0 index 1
| |                           `-TemplateTypeParm 0x5605abd0d8e8 '_Tp2'
| |-ClassTemplatePartialSpecializationDecl 0x5605abd0efd8 <line:3987:3, line:3990:47> line:3988:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '4'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd0e840 <line:3987:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd0e8c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-CXXRecordDecl 0x5605abd0f2c0 <line:3988:5, col:12> col:12 implicit struct __common_reference_impl
| | `-TypeAliasDecl 0x5605abd0f6d8 <line:3990:7, col:44> col:13 type 'common_type_t<_Tp1, _Tp2>':'typename common_type<_Tp1, _Tp2>::type'
| |   `-ElaboratedType 0x5605abd0f650 'common_type_t<_Tp1, _Tp2>' sugar dependent
| |     `-TemplateSpecializationType 0x5605abd0f5e0 'common_type_t<_Tp1, _Tp2>' sugar dependent alias
| |       |-name: 'common_type_t':'std::common_type_t' qualified
| |       | `-TypeAliasTemplateDecl 0x5605abc92720 <line:2718:3, line:2719:57> col:5 common_type_t
| |       |-TemplateArgument type '_Tp1':'type-parameter-0-0'
| |       | `-TemplateTypeParmType 0x5605abd0e890 '_Tp1' dependent depth 0 index 0
| |       |   `-TemplateTypeParm 0x5605abd0e840 '_Tp1'
| |       |-TemplateArgument type '_Tp2':'type-parameter-0-1'
| |       | `-TemplateTypeParmType 0x5605abd0e920 '_Tp2' dependent depth 0 index 1
| |       |   `-TemplateTypeParm 0x5605abd0e8c8 '_Tp2'
| |       `-DependentNameType 0x5605abd0f590 'typename common_type<_Tp1, _Tp2>::type' dependent
| |-ClassTemplatePartialSpecializationDecl 0x5605abd0fa68 <line:3993:3, line:3995:7> line:3994:12 struct __common_reference_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0'
| | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1'
| | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument integral '5'
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd0f770 <line:3993:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd0f7f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | `-CXXRecordDecl 0x5605abd0fd50 <line:3994:5, col:12> col:12 implicit struct __common_reference_impl
| |-ClassTemplatePartialSpecializationDecl 0x5605abd10190 <line:3998:3, line:4002:7> line:3999:12 struct common_reference definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public '__common_type_fold<common_reference<_Tp1, _Tp2>, __common_type_pack<_Rest...>>'
| | |-TemplateArgument pack '<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2...>'
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |-TemplateArgument type 'type-parameter-0-1'
| | | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | `-TemplateArgument type 'type-parameter-0-2...'
| | |   `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| | |     `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| | |-TemplateTypeParmDecl 0x5605abd0fe18 <line:3998:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd0fea8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-TemplateTypeParmDecl 0x5605abd0ff38 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _Rest
| | `-CXXRecordDecl 0x5605abd10880 <line:3999:5, col:12> col:12 implicit struct common_reference
| |-ClassTemplatePartialSpecializationDecl 0x5605abd11310 <line:4005:3, line:4010:7> line:4006:12 struct __common_type_fold definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-public 'common_reference<common_reference_t<_Tp1, _Tp2>, _Rest...>'
| | |-TemplateArgument type 'common_reference<type-parameter-0-0, type-parameter-0-1>'
| | | `-TemplateSpecializationType 0x5605abd060c0 'common_reference<type-parameter-0-0, type-parameter-0-1>' dependent
| | |   |-name: 'std::common_reference'
| | |   | `-ClassTemplateDecl 0x5605abd02e68 <line:3925:3, line:3926:12> col:12 common_reference
| | |   `-TemplateArgument pack '<type-parameter-0-0, type-parameter-0-1>'
| | |     |-TemplateArgument type 'type-parameter-0-0'
| | |     | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |     `-TemplateArgument type 'type-parameter-0-1'
| | |       `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateArgument type '__common_type_pack<type-parameter-0-2...>'
| | | `-TemplateSpecializationType 0x5605abc74490 '__common_type_pack<type-parameter-0-2...>' dependent
| | |   |-name: 'std::__common_type_pack'
| | |   | `-ClassTemplateDecl 0x5605abc70a48 <line:2427:3, line:2429:7> line:2428:12 __common_type_pack
| | |   `-TemplateArgument pack '<type-parameter-0-2...>'
| | |     `-TemplateArgument type 'type-parameter-0-2...'
| | |       `-PackExpansionType 0x5605abb82de0 'type-parameter-0-2...' dependent
| | |         `-TemplateTypeParmType 0x5605abb82240 'type-parameter-0-2' dependent contains_unexpanded_pack depth 0 index 2 pack
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateTypeParmDecl 0x5605abd10948 <line:4005:12, col:21> col:21 referenced typename depth 0 index 0 _Tp1
| | |-TemplateTypeParmDecl 0x5605abd109d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp2
| | |-TemplateTypeParmDecl 0x5605abd10a68 <col:42, col:54> col:54 referenced typename depth 0 index 2 ... _Rest
| | `-CXXRecordDecl 0x5605abd11af0 <line:4006:5, col:12> col:12 implicit struct __common_type_fold
| |-VarTemplateSpecializationDecl 0x5605abdba310 <line:3531:1, line:3532:71> col:25 used is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'bool'
| | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | |-TemplateArgument type 'bool'
| | | `-BuiltinType 0x5605aba9c9f0 'bool'
| | `-TypeTraitExpr 0x5605abdba5b8 <col:44, col:71> 'bool' __is_convertible
| |   |-SubstTemplateTypeParmType 0x5605abdba4c0 'bool' sugar typename depth 0 index 0 _From
| |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |   | `-BuiltinType 0x5605aba9c9f0 'bool'
| |   `-SubstTemplateTypeParmType 0x5605abdba500 'bool' sugar typename depth 0 index 1 _To
| |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |     `-BuiltinType 0x5605aba9c9f0 'bool'
| |-VarTemplateSpecializationDecl 0x5605abdc71f0 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'std::partial_ordering'
| | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | |-TemplateArgument type 'std::partial_ordering'
| | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | `-TypeTraitExpr 0x5605abdc7430 <col:37, col:55> 'bool' __is_same
| |   |-SubstTemplateTypeParmType 0x5605abdc73b0 'std::partial_ordering' sugar typename depth 0 index 0 _Tp
| |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |   | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| |   |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| |   `-SubstTemplateTypeParmType 0x5605abdc73f0 'std::partial_ordering' sugar typename depth 0 index 1 _Up
| |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     `-RecordType 0x5605abd397d0 'std::partial_ordering'
| |       `-CXXRecord 0x5605abd39720 'partial_ordering'
| |-VarTemplateSpecializationDecl 0x5605abdcefa8 <line:3312:1, line:3313:60> col:25 referenced is_reference_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'void *const &'
| | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |   `-QualType 0x5605aba9d151 'void *const' const
| | |     `-PointerType 0x5605aba9d150 'void *'
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | `-TypeTraitExpr 0x5605abdcf140 <col:42, col:60> 'bool' __is_reference
| |   `-SubstTemplateTypeParmType 0x5605abdcf100 'void *const &' sugar typename depth 0 index 0 _Tp
| |     |-VarTemplate 0x5605abcc6098 'is_reference_v'
| |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |       `-QualType 0x5605aba9d151 'void *const' const
| |         `-PointerType 0x5605aba9d150 'void *'
| |           `-BuiltinType 0x5605aba9c9d0 'void'
| |-VarTemplateSpecializationDecl 0x5605abdd24f8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'void *const &'
| | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |   `-QualType 0x5605aba9d151 'void *const' const
| | |     `-PointerType 0x5605aba9d150 'void *'
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateArgument type 'void *const &'
| | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |   `-QualType 0x5605aba9d151 'void *const' const
| | |     `-PointerType 0x5605aba9d150 'void *'
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | `-TypeTraitExpr 0x5605abdd2730 <col:37, col:55> 'bool' __is_same
| |   |-SubstTemplateTypeParmType 0x5605abdd26b0 'void *const &' sugar typename depth 0 index 0 _Tp
| |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-SubstTemplateTypeParmType 0x5605abdd26f0 'void *const &' sugar typename depth 0 index 1 _Up
| |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |       `-QualType 0x5605aba9d151 'void *const' const
| |         `-PointerType 0x5605aba9d150 'void *'
| |           `-BuiltinType 0x5605aba9c9d0 'void'
| |-VarTemplateSpecializationDecl 0x5605abdd2f08 <line:3531:1, line:3532:71> col:25 used is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'void *const &'
| | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |   `-QualType 0x5605aba9d151 'void *const' const
| | |     `-PointerType 0x5605aba9d150 'void *'
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateArgument type 'void *const &'
| | | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| | |   `-QualType 0x5605aba9d151 'void *const' const
| | |     `-PointerType 0x5605aba9d150 'void *'
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | `-TypeTraitExpr 0x5605abdd3130 <col:44, col:71> 'bool' __is_convertible
| |   |-SubstTemplateTypeParmType 0x5605abdd30b0 'void *const &' sugar typename depth 0 index 0 _From
| |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |   | `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |   |   `-QualType 0x5605aba9d151 'void *const' const
| |   |     `-PointerType 0x5605aba9d150 'void *'
| |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-SubstTemplateTypeParmType 0x5605abdd30f0 'void *const &' sugar typename depth 0 index 1 _To
| |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |     `-LValueReferenceType 0x5605abdb8780 'void *const &'
| |       `-QualType 0x5605aba9d151 'void *const' const
| |         `-PointerType 0x5605aba9d150 'void *'
| |           `-BuiltinType 0x5605aba9c9d0 'void'
| |-VarTemplateSpecializationDecl 0x5605abddcaa8 <line:3531:1, line:3532:71> col:25 used is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'void *'
| | | `-PointerType 0x5605aba9d150 'void *'
| | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TemplateArgument type 'const volatile void *'
| | | `-PointerType 0x5605abd78ff0 'const volatile void *'
| | |   `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| | |     `-BuiltinType 0x5605aba9c9d0 'void'
| | `-TypeTraitExpr 0x5605abddcd30 <col:44, col:71> 'bool' __is_convertible
| |   |-SubstTemplateTypeParmType 0x5605abddcc50 'void *' sugar typename depth 0 index 0 _From
| |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |   | `-PointerType 0x5605aba9d150 'void *'
| |   |   `-BuiltinType 0x5605aba9c9d0 'void'
| |   `-SubstTemplateTypeParmType 0x5605abddcc90 'const volatile void *' sugar typename depth 0 index 1 _To
| |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |     `-PointerType 0x5605abd78ff0 'const volatile void *'
| |       `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| |         `-BuiltinType 0x5605aba9c9d0 'void'
| |-VarTemplateSpecializationDecl 0x5605abeaafa0 <line:3303:1, line:3304:50> col:25 used is_enum_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 0
| | |-TemplateArgument type 'ice::error'
| | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   `-CXXRecord 0x5605abea0860 'error'
| | `-TypeTraitExpr 0x5605abeab140 <col:37, col:50> 'bool' __is_enum
| |   `-SubstTemplateTypeParmType 0x5605abeab100 'ice::error' sugar typename depth 0 index 0 _Tp
| |     |-VarTemplate 0x5605abcc5b28 'is_enum_v'
| |     `-RecordType 0x5605abe9a400 'ice::error'
| |       `-CXXRecord 0x5605abea0860 'error'
| |-VarTemplateSpecializationDecl 0x5605abeadd98 <line:3303:1, line:3304:50> col:25 used is_enum_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'ice::errc'
| | | `-EnumType 0x5605abe9f270 'ice::errc'
| | |   `-Enum 0x5605abe9f1b8 'errc'
| | `-TypeTraitExpr 0x5605abeadf40 <col:37, col:50> 'bool' __is_enum
| |   `-SubstTemplateTypeParmType 0x5605abeadf00 'ice::errc' sugar typename depth 0 index 0 _Tp
| |     |-VarTemplate 0x5605abcc5b28 'is_enum_v'
| |     `-EnumType 0x5605abe9f270 'ice::errc'
| |       `-Enum 0x5605abe9f1b8 'errc'
| |-VarTemplateSpecializationDecl 0x5605abeb0f48 <line:3531:1, line:3532:71> col:25 referenced is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 0
| | |-TemplateArgument type 'ice::errc'
| | | `-EnumType 0x5605abe9f270 'ice::errc'
| | |   `-Enum 0x5605abe9f1b8 'errc'
| | |-TemplateArgument type 'unsigned char'
| | | `-BuiltinType 0x5605aba9cad0 'unsigned char'
| | `-TypeTraitExpr 0x5605abeb11e0 <col:44, col:71> 'bool' __is_convertible
| |   |-SubstTemplateTypeParmType 0x5605abeb1100 'ice::errc' sugar typename depth 0 index 0 _From
| |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |   | `-EnumType 0x5605abe9f270 'ice::errc'
| |   |   `-Enum 0x5605abe9f1b8 'errc'
| |   `-SubstTemplateTypeParmType 0x5605abeb1140 'unsigned char' sugar typename depth 0 index 1 _To
| |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |     `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |-VarTemplateSpecializationDecl 0x5605abeb19b8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'ice::error_type'
| | | `-EnumType 0x5605abe9f520 'ice::error_type'
| | |   `-Enum 0x5605abe9f460 'error_type'
| | |-TemplateArgument type 'ice::error_type'
| | | `-EnumType 0x5605abe9f520 'ice::error_type'
| | |   `-Enum 0x5605abe9f460 'error_type'
| | `-TypeTraitExpr 0x5605abeb1bf0 <col:37, col:55> 'bool' __is_same
| |   |-SubstTemplateTypeParmType 0x5605abeb1b70 'ice::error_type' sugar typename depth 0 index 0 _Tp
| |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |   | `-EnumType 0x5605abe9f520 'ice::error_type'
| |   |   `-Enum 0x5605abe9f460 'error_type'
| |   `-SubstTemplateTypeParmType 0x5605abeb1bb0 'ice::error_type' sugar typename depth 0 index 1 _Up
| |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     `-EnumType 0x5605abe9f520 'ice::error_type'
| |       `-Enum 0x5605abe9f460 'error_type'
| |-VarTemplateSpecializationDecl 0x5605abeb9728 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 0
| | |-TemplateArgument type 'long'
| | | `-BuiltinType 0x5605aba9ca90 'long'
| | |-TemplateArgument type 'ice::error'
| | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   `-CXXRecord 0x5605abea0860 'error'
| | `-TypeTraitExpr 0x5605abeb9960 <col:37, col:55> 'bool' __is_same
| |   |-SubstTemplateTypeParmType 0x5605abeb98e0 'long' sugar typename depth 0 index 0 _Tp
| |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |   | `-BuiltinType 0x5605aba9ca90 'long'
| |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     `-RecordType 0x5605abe9a400 'ice::error'
| |       `-CXXRecord 0x5605abea0860 'error'
| |-VarTemplateSpecializationDecl 0x5605abec04d8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'ice::error'
| | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   `-CXXRecord 0x5605abea0860 'error'
| | |-TemplateArgument type 'ice::error'
| | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   `-CXXRecord 0x5605abea0860 'error'
| | `-TypeTraitExpr 0x5605abec06e0 <col:37, col:55> 'bool' __is_same
| |   |-SubstTemplateTypeParmType 0x5605abec0690 'ice::error' sugar typename depth 0 index 0 _Tp
| |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |   | `-RecordType 0x5605abe9a400 'ice::error'
| |   |   `-CXXRecord 0x5605abea0860 'error'
| |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     `-RecordType 0x5605abe9a400 'ice::error'
| |       `-CXXRecord 0x5605abea0860 'error'
| |-VarTemplateSpecializationDecl 0x5605abec3ed8 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 0
| | |-TemplateArgument type 'int'
| | | `-BuiltinType 0x5605aba9ca70 'int'
| | |-TemplateArgument type 'ice::error'
| | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   `-CXXRecord 0x5605abea0860 'error'
| | `-TypeTraitExpr 0x5605abec40e0 <col:37, col:55> 'bool' __is_same
| |   |-SubstTemplateTypeParmType 0x5605abec4090 'int' sugar typename depth 0 index 0 _Tp
| |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |   | `-BuiltinType 0x5605aba9ca70 'int'
| |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     `-RecordType 0x5605abe9a400 'ice::error'
| |       `-CXXRecord 0x5605abea0860 'error'
| |-VarTemplateSpecializationDecl 0x5605abece3f8 <line:3303:1, line:3304:50> col:25 used is_enum_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 1
| | |-TemplateArgument type 'errc'
| | | `-EnumType 0x5605abec9650 'errc'
| | |   `-Enum 0x5605abec9590 'errc'
| | `-TypeTraitExpr 0x5605abece5a0 <col:37, col:50> 'bool' __is_enum
| |   `-SubstTemplateTypeParmType 0x5605abece560 'errc' sugar typename depth 0 index 0 _Tp
| |     |-VarTemplate 0x5605abcc5b28 'is_enum_v'
| |     `-EnumType 0x5605abec9650 'errc'
| |       `-Enum 0x5605abec9590 'errc'
| |-VarTemplateSpecializationDecl 0x5605abecefc8 <line:3531:1, line:3532:71> col:25 referenced is_convertible_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 0
| | |-TemplateArgument type 'errc'
| | | `-EnumType 0x5605abec9650 'errc'
| | |   `-Enum 0x5605abec9590 'errc'
| | |-TemplateArgument type 'int'
| | | `-BuiltinType 0x5605aba9ca70 'int'
| | `-TypeTraitExpr 0x5605abecf260 <col:44, col:71> 'bool' __is_convertible
| |   |-SubstTemplateTypeParmType 0x5605abecf180 'errc' sugar typename depth 0 index 0 _From
| |   | |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |   | `-EnumType 0x5605abec9650 'errc'
| |   |   `-Enum 0x5605abec9590 'errc'
| |   `-SubstTemplateTypeParmType 0x5605abecf1c0 'int' sugar typename depth 0 index 1 _To
| |     |-VarTemplate 0x5605abcd7430 'is_convertible_v'
| |     `-BuiltinType 0x5605aba9ca70 'int'
| |-VarTemplateSpecializationDecl 0x5605abed6388 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
| | |-value: Int 0
| | |-TemplateArgument type 'consteval_move'
| | | `-RecordType 0x5605abeccf70 'consteval_move'
| | |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |-TemplateArgument type 'ice::error'
| | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   `-CXXRecord 0x5605abea0860 'error'
| | `-TypeTraitExpr 0x5605abed6590 <col:37, col:55> 'bool' __is_same
| |   |-SubstTemplateTypeParmType 0x5605abed6540 'consteval_move' sugar typename depth 0 index 0 _Tp
| |   | |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |   | `-RecordType 0x5605abeccf70 'consteval_move'
| |   |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| |   `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
| |     |-VarTemplate 0x5605abcd6f30 'is_same_v'
| |     `-RecordType 0x5605abe9a400 'ice::error'
| |       `-CXXRecord 0x5605abea0860 'error'
| `-VarTemplateSpecializationDecl 0x5605abee0578 <line:3520:1, line:3521:55> col:25 used is_same_v 'const bool' implicit_instantiation inline constexpr cinit
|   |-value: Int 0
|   |-TemplateArgument type 'move<false>'
|   | `-RecordType 0x5605abede560 'move<false>'
|   |   `-ClassTemplateSpecialization 0x5605abede470 'move'
|   |-TemplateArgument type 'ice::error'
|   | `-RecordType 0x5605abe9a400 'ice::error'
|   |   `-CXXRecord 0x5605abea0860 'error'
|   `-TypeTraitExpr 0x5605abee0780 <col:37, col:55> 'bool' __is_same
|     |-SubstTemplateTypeParmType 0x5605abee0730 'move<false>' sugar typename depth 0 index 0 _Tp
|     | |-VarTemplate 0x5605abcd6f30 'is_same_v'
|     | `-RecordType 0x5605abede560 'move<false>'
|     |   `-ClassTemplateSpecialization 0x5605abede470 'move'
|     `-SubstTemplateTypeParmType 0x5605abeb9920 'ice::error' sugar typename depth 0 index 1 _Up
|       |-VarTemplate 0x5605abcd6f30 'is_same_v'
|       `-RecordType 0x5605abe9a400 'ice::error'
|         `-CXXRecord 0x5605abea0860 'error'
|-NamespaceDecl 0x5605abd12658 prev 0x5605abb237d0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:48:1, line:386:1> line:48:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-VisibilityAttr 0x5605abd126c8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
| |-NamespaceDecl 0x5605abd12728 prev 0x5605abb82050 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:54:3, line:58:3> line:54:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | `-ConceptDecl 0x5605abd128e0 <line:56:5, line:57:50> col:15 __same_as
| |   |-TemplateTypeParmDecl 0x5605abd127a0 <line:56:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abd12828 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| |   `-UnresolvedLookupExpr 0x5605abd12998 <line:57:27, col:50> '<dependent type>' lvalue (no ADL) = 'is_same_v' 0x5605abcd6f30
| |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     | `-TemplateTypeParmType 0x5605abd127f0 '_Tp' dependent depth 0 index 0
| |     |   `-TemplateTypeParm 0x5605abd127a0 '_Tp'
| |     `-TemplateArgument type '_Up':'type-parameter-0-1'
| |       `-TemplateTypeParmType 0x5605abd12880 '_Up' dependent depth 0 index 1
| |         `-TemplateTypeParm 0x5605abd12828 '_Up'
| |-ConceptDecl 0x5605abd12b80 <line:61:3, line:63:70> line:62:13 same_as
| | |-TemplateTypeParmDecl 0x5605abd12a38 <line:61:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd12ac8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-BinaryOperator 0x5605abd12eb8 <line:63:9, col:70> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd12d30 <col:9, col:37> 'bool' Concept 0x5605abd128e0 '__same_as'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd12c40 <line:57:15> col:15
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | |-TemplateArgument <line:63:29> type '_Tp':'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abd12a90 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x5605abd12a38 '_Tp'
| |   | `-TemplateArgument <col:34> type '_Up':'type-parameter-0-1'
| |   |   `-TemplateTypeParmType 0x5605abd12b20 '_Up' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x5605abd12ac8 '_Up'
| |   `-ConceptSpecializationExpr 0x5605abd12e90 <col:42, col:70> 'bool' Concept 0x5605abd128e0 '__same_as'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd12da0 <line:57:15> col:15
| |     | |-TemplateArgument type 'type-parameter-0-1'
| |     | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     | `-TemplateArgument type 'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     |-TemplateArgument <line:63:62> type '_Up':'type-parameter-0-1'
| |     | `-TemplateTypeParmType 0x5605abd12b20 '_Up' dependent depth 0 index 1
| |     |   `-TemplateTypeParm 0x5605abd12ac8 '_Up'
| |     `-TemplateArgument <col:67> type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd12a90 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd12a38 '_Tp'
| |-NamespaceDecl 0x5605abd12ee0 prev 0x5605abd12728 <line:65:3, line:70:3> line:65:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | `-ConceptDecl 0x5605abd130a0 <line:67:5, line:69:53> line:68:15 __different_from
| |   |-TemplateTypeParmDecl 0x5605abd12f58 <line:67:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abd12fe8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| |   `-UnaryOperator 0x5605abd13660 <line:69:4, col:53> 'bool' prefix '!' cannot overflow
| |     `-ConceptSpecializationExpr 0x5605abd13638 <col:5, col:53> 'bool' Concept 0x5605abd12b80 'same_as'
| |       |-ImplicitConceptSpecializationDecl 0x5605abd13548 <line:62:13> col:13
| |       | |-TemplateArgument type 'typename remove_cvref<type-parameter-0-0>::type'
| |       | | `-DependentNameType 0x5605abcdc700 'typename remove_cvref<type-parameter-0-0>::type' dependent
| |       | `-TemplateArgument type 'typename remove_cvref<type-parameter-0-1>::type'
| |       |   `-DependentNameType 0x5605abd023d0 'typename remove_cvref<type-parameter-0-1>::type' dependent
| |       |-TemplateArgument <line:69:13, col:31> type 'remove_cvref_t<_Tp>':'typename remove_cvref<type-parameter-0-0>::type'
| |       | `-ElaboratedType 0x5605abd132b0 'remove_cvref_t<_Tp>' sugar dependent
| |       |   `-TemplateSpecializationType 0x5605abd13260 'remove_cvref_t<_Tp>' sugar dependent alias
| |       |     |-name: 'remove_cvref_t':'std::remove_cvref_t' qualified
| |       |     | `-TypeAliasTemplateDecl 0x5605abcdc810 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3613:3, line:3614:56> col:5 remove_cvref_t
| |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       |     | `-TemplateTypeParmType 0x5605abd12fb0 '_Tp' dependent depth 0 index 0
| |       |     |   `-TemplateTypeParm 0x5605abd12f58 '_Tp'
| |       |     `-DependentNameType 0x5605abd13210 'typename remove_cvref<_Tp>::type' dependent
| |       `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:69:34, <scratch space>:199:1> type 'remove_cvref_t<_Up>':'typename remove_cvref<type-parameter-0-1>::type'
| |         `-ElaboratedType 0x5605abd134d0 'remove_cvref_t<_Up>' sugar dependent
| |           `-TemplateSpecializationType 0x5605abd13480 'remove_cvref_t<_Up>' sugar dependent alias
| |             |-name: 'remove_cvref_t':'std::remove_cvref_t' qualified
| |             | `-TypeAliasTemplateDecl 0x5605abcdc810 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3613:3, line:3614:56> col:5 remove_cvref_t
| |             |-TemplateArgument type '_Up':'type-parameter-0-1'
| |             | `-TemplateTypeParmType 0x5605abd13040 '_Up' dependent depth 0 index 1
| |             |   `-TemplateTypeParm 0x5605abd12fe8 '_Up'
| |             `-DependentNameType 0x5605abd13430 'typename remove_cvref<_Up>::type' dependent
| |-ConceptDecl 0x5605abd137c0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:73:3, line:75:74> line:74:13 derived_from
| | |-TemplateTypeParmDecl 0x5605abd13680 <line:73:12, col:21> col:21 referenced typename depth 0 index 0 _Derived
| | |-TemplateTypeParmDecl 0x5605abd13708 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Base
| | `-BinaryOperator 0x5605abd14a28 <line:74:28, line:75:74> '<dependent type>' '&&'
| |   |-TypeTraitExpr 0x5605abd13828 <line:74:28, col:56> 'bool' __is_base_of
| |   | |-TemplateTypeParmType 0x5605abd13760 '_Base' dependent depth 0 index 1
| |   | | `-TemplateTypeParm 0x5605abd13708 '_Base'
| |   | `-TemplateTypeParmType 0x5605abd136d0 '_Derived' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abd13680 '_Derived'
| |   `-UnresolvedLookupExpr 0x5605abd14990 <line:75:10, col:74> '<dependent type>' lvalue (no ADL) = 'is_convertible_v' 0x5605abcd7430
| |     |-TemplateArgument type 'const volatile _Derived *':'const volatile type-parameter-0-0 *'
| |     | `-PointerType 0x5605abd138a0 'const volatile _Derived *' dependent
| |     |   `-QualType 0x5605abd136d5 'const volatile _Derived' const volatile
| |     |     `-TemplateTypeParmType 0x5605abd136d0 '_Derived' dependent depth 0 index 0
| |     |       `-TemplateTypeParm 0x5605abd13680 '_Derived'
| |     `-TemplateArgument type 'const volatile _Base *':'const volatile type-parameter-0-1 *'
| |       `-PointerType 0x5605abd14950 'const volatile _Base *' dependent
| |         `-QualType 0x5605abd13765 'const volatile _Base' const volatile
| |           `-TemplateTypeParmType 0x5605abd13760 '_Base' dependent depth 0 index 1
| |             `-TemplateTypeParm 0x5605abd13708 '_Base'
| |-ConceptDecl 0x5605abd14b90 <line:78:3, line:80:62> line:79:13 convertible_to
| | |-TemplateTypeParmDecl 0x5605abd14a50 <line:78:12, col:21> col:21 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x5605abd14ad8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| | `-BinaryOperator 0x5605abd14e68 <line:79:30, line:80:62> '<dependent type>' '&&'
| |   |-UnresolvedLookupExpr 0x5605abd14bf8 <line:79:30, col:57> '<dependent type>' lvalue (no ADL) = 'is_convertible_v' 0x5605abcd7430
| |   | |-TemplateArgument type '_From':'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abd14aa0 '_From' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x5605abd14a50 '_From'
| |   | `-TemplateArgument type '_To':'type-parameter-0-1'
| |   |   `-TemplateTypeParmType 0x5605abd14b30 '_To' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x5605abd14ad8 '_To'
| |   `-RequiresExpr 0x5605abd14e30 <line:80:10, col:62> 'bool'
| |     `-SimpleRequirement 0x5605abd14e00 dependent
| |       `-CXXStaticCastExpr 0x5605abd14dd0 <col:21, col:59> '_To' static_cast<_To> <Dependent>
| |         `-CallExpr 0x5605abd14da0 <col:38, col:58> '<dependent type>'
| |           `-UnresolvedLookupExpr 0x5605abd14d28 <col:38, col:56> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |             `-TemplateArgument type '_From':'type-parameter-0-0'
| |               `-TemplateTypeParmType 0x5605abd14aa0 '_From' dependent depth 0 index 0
| |                 `-TemplateTypeParm 0x5605abd14a50 '_From'
| |-ConceptDecl 0x5605abd14fd0 <line:83:3, line:87:58> line:84:13 common_reference_with
| | |-TemplateTypeParmDecl 0x5605abd14e90 <line:83:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd14f18 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-BinaryOperator 0x5605abd16200 <line:85:9, line:87:58> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd15d50 <line:85:9, line:86:58> 'bool' '&&'
| |   | |-ConceptSpecializationExpr 0x5605abd15878 <line:85:9, col:75> 'bool' Concept 0x5605abd12b80 'same_as'
| |   | | |-ImplicitConceptSpecializationDecl 0x5605abd15788 <line:62:13> col:13
| |   | | | |-TemplateArgument type 'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type'
| |   | | | | `-DependentNameType 0x5605abd11030 'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type' dependent
| |   | | | `-TemplateArgument type 'typename common_reference<type-parameter-0-1, type-parameter-0-0>::type'
| |   | | |   `-DependentNameType 0x5605abd15610 'typename common_reference<type-parameter-0-1, type-parameter-0-0>::type' dependent
| |   | | |-TemplateArgument <line:85:17, col:44> type 'common_reference_t<_Tp, _Up>':'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type'
| |   | | | `-ElaboratedType 0x5605abd15300 'common_reference_t<_Tp, _Up>' sugar dependent
| |   | | |   `-TemplateSpecializationType 0x5605abd15290 'common_reference_t<_Tp, _Up>' sugar dependent alias
| |   | | |     |-name: 'common_reference_t':'std::common_reference_t' qualified
| |   | | |     | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |   | | |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | | |     | `-TemplateTypeParmType 0x5605abd14ee0 '_Tp' dependent depth 0 index 0
| |   | | |     |   `-TemplateTypeParm 0x5605abd14e90 '_Tp'
| |   | | |     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | | |     | `-TemplateTypeParmType 0x5605abd14f70 '_Up' dependent depth 0 index 1
| |   | | |     |   `-TemplateTypeParm 0x5605abd14f18 '_Up'
| |   | | |     `-DependentNameType 0x5605abd15240 'typename common_reference<_Tp, _Up>::type' dependent
| |   | | `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:85:47, <scratch space>:200:1> type 'common_reference_t<_Up, _Tp>':'typename common_reference<type-parameter-0-1, type-parameter-0-0>::type'
| |   | |   `-ElaboratedType 0x5605abd15700 'common_reference_t<_Up, _Tp>' sugar dependent
| |   | |     `-TemplateSpecializationType 0x5605abd15690 'common_reference_t<_Up, _Tp>' sugar dependent alias
| |   | |       |-name: 'common_reference_t':'std::common_reference_t' qualified
| |   | |       | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |   | |       |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | |       | `-TemplateTypeParmType 0x5605abd14f70 '_Up' dependent depth 0 index 1
| |   | |       |   `-TemplateTypeParm 0x5605abd14f18 '_Up'
| |   | |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | |       | `-TemplateTypeParmType 0x5605abd14ee0 '_Tp' dependent depth 0 index 0
| |   | |       |   `-TemplateTypeParm 0x5605abd14e90 '_Tp'
| |   | |       `-DependentNameType 0x5605abd15640 'typename common_reference<_Up, _Tp>::type' dependent
| |   | `-ConceptSpecializationExpr 0x5605abd15d28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:86:10, col:58> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd15c38 <line:79:13> col:13
| |   |   | |-TemplateArgument type 'type-parameter-0-0'
| |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   | `-TemplateArgument type 'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type'
| |   |   |   `-DependentNameType 0x5605abd11030 'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type' dependent
| |   |   |-TemplateArgument <line:86:25> type '_Tp':'type-parameter-0-0'
| |   |   | `-TemplateTypeParmType 0x5605abd14ee0 '_Tp' dependent depth 0 index 0
| |   |   |   `-TemplateTypeParm 0x5605abd14e90 '_Tp'
| |   |   `-TemplateArgument <col:30, <scratch space>:201:1> type 'common_reference_t<_Tp, _Up>':'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type'
| |   |     `-ElaboratedType 0x5605abd15bb0 'common_reference_t<_Tp, _Up>' sugar dependent
| |   |       `-TemplateSpecializationType 0x5605abd15b40 'common_reference_t<_Tp, _Up>' sugar dependent alias
| |   |         |-name: 'common_reference_t':'std::common_reference_t' qualified
| |   |         | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |   |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |         | `-TemplateTypeParmType 0x5605abd14ee0 '_Tp' dependent depth 0 index 0
| |   |         |   `-TemplateTypeParm 0x5605abd14e90 '_Tp'
| |   |         |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |         | `-TemplateTypeParmType 0x5605abd14f70 '_Up' dependent depth 0 index 1
| |   |         |   `-TemplateTypeParm 0x5605abd14f18 '_Up'
| |   |         `-DependentNameType 0x5605abd15af0 'typename common_reference<_Tp, _Up>::type' dependent
| |   `-ConceptSpecializationExpr 0x5605abd161d8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:87:10, col:58> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd160e8 <line:79:13> col:13
| |     | |-TemplateArgument type 'type-parameter-0-1'
| |     | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     | `-TemplateArgument type 'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type'
| |     |   `-DependentNameType 0x5605abd11030 'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type' dependent
| |     |-TemplateArgument <line:87:25> type '_Up':'type-parameter-0-1'
| |     | `-TemplateTypeParmType 0x5605abd14f70 '_Up' dependent depth 0 index 1
| |     |   `-TemplateTypeParm 0x5605abd14f18 '_Up'
| |     `-TemplateArgument <col:30, <scratch space>:202:1> type 'common_reference_t<_Tp, _Up>':'typename common_reference<type-parameter-0-0, type-parameter-0-1>::type'
| |       `-ElaboratedType 0x5605abd16060 'common_reference_t<_Tp, _Up>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abd15ff0 'common_reference_t<_Tp, _Up>' sugar dependent alias
| |           |-name: 'common_reference_t':'std::common_reference_t' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |           |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |           | `-TemplateTypeParmType 0x5605abd14ee0 '_Tp' dependent depth 0 index 0
| |           |   `-TemplateTypeParm 0x5605abd14e90 '_Tp'
| |           |-TemplateArgument type '_Up':'type-parameter-0-1'
| |           | `-TemplateTypeParmType 0x5605abd14f70 '_Up' dependent depth 0 index 1
| |           |   `-TemplateTypeParm 0x5605abd14f18 '_Up'
| |           `-DependentNameType 0x5605abd15fa0 'typename common_reference<_Tp, _Up>::type' dependent
| |-ConceptDecl 0x5605abd16370 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:90:3, line:102:40> line:91:13 common_with
| | |-TemplateTypeParmDecl 0x5605abd16228 <line:90:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd162b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-BinaryOperator 0x5605abd18d50 <line:92:9, line:102:40> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd17d30 <line:92:9, line:98:44> 'bool' '&&'
| |   | |-BinaryOperator 0x5605abd17638 <line:92:9, line:96:7> 'bool' '&&'
| |   | | |-ConceptSpecializationExpr 0x5605abd16c68 <line:92:9, col:65> 'bool' Concept 0x5605abd12b80 'same_as'
| |   | | | |-ImplicitConceptSpecializationDecl 0x5605abd16b78 <line:62:13> col:13
| |   | | | | |-TemplateArgument type 'typename common_type<type-parameter-0-0, type-parameter-0-1>::type'
| |   | | | | | `-DependentNameType 0x5605abd0ec30 'typename common_type<type-parameter-0-0, type-parameter-0-1>::type' dependent
| |   | | | | `-TemplateArgument type 'typename common_type<type-parameter-0-1, type-parameter-0-0>::type'
| |   | | | |   `-DependentNameType 0x5605abd16a00 'typename common_type<type-parameter-0-1, type-parameter-0-0>::type' dependent
| |   | | | |-TemplateArgument <line:92:17, col:39> type 'common_type_t<_Tp, _Up>':'typename common_type<type-parameter-0-0, type-parameter-0-1>::type'
| |   | | | | `-ElaboratedType 0x5605abd166a0 'common_type_t<_Tp, _Up>' sugar dependent
| |   | | | |   `-TemplateSpecializationType 0x5605abd16630 'common_type_t<_Tp, _Up>' sugar dependent alias
| |   | | | |     |-name: 'common_type_t':'std::common_type_t' qualified
| |   | | | |     | `-TypeAliasTemplateDecl 0x5605abc92720 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2718:3, line:2719:57> col:5 common_type_t
| |   | | | |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | | | |     | `-TemplateTypeParmType 0x5605abd16280 '_Tp' dependent depth 0 index 0
| |   | | | |     |   `-TemplateTypeParm 0x5605abd16228 '_Tp'
| |   | | | |     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | | | |     | `-TemplateTypeParmType 0x5605abd16310 '_Up' dependent depth 0 index 1
| |   | | | |     |   `-TemplateTypeParm 0x5605abd162b8 '_Up'
| |   | | | |     `-DependentNameType 0x5605abd165e0 'typename common_type<_Tp, _Up>::type' dependent
| |   | | | `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:92:42, <scratch space>:203:1> type 'common_type_t<_Up, _Tp>':'typename common_type<type-parameter-0-1, type-parameter-0-0>::type'
| |   | | |   `-ElaboratedType 0x5605abd16af0 'common_type_t<_Up, _Tp>' sugar dependent
| |   | | |     `-TemplateSpecializationType 0x5605abd16a80 'common_type_t<_Up, _Tp>' sugar dependent alias
| |   | | |       |-name: 'common_type_t':'std::common_type_t' qualified
| |   | | |       | `-TypeAliasTemplateDecl 0x5605abc92720 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2718:3, line:2719:57> col:5 common_type_t
| |   | | |       |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | | |       | `-TemplateTypeParmType 0x5605abd16310 '_Up' dependent depth 0 index 1
| |   | | |       |   `-TemplateTypeParm 0x5605abd162b8 '_Up'
| |   | | |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | | |       | `-TemplateTypeParmType 0x5605abd16280 '_Tp' dependent depth 0 index 0
| |   | | |       |   `-TemplateTypeParm 0x5605abd16228 '_Tp'
| |   | | |       `-DependentNameType 0x5605abd16a30 'typename common_type<_Up, _Tp>::type' dependent
| |   | | `-RequiresExpr 0x5605abd175f8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:93:10, line:96:7> 'bool'
| |   | |   |-SimpleRequirement 0x5605abd17138 dependent
| |   | |   | `-CXXStaticCastExpr 0x5605abd17108 <line:94:2, col:58> 'common_type_t<_Tp, _Up>':'typename common_type<_Tp, _Up>::type' static_cast<common_type_t<_Tp, _Up>> <Dependent>
| |   | |   |   `-CallExpr 0x5605abd170c0 <col:39, col:57> '<dependent type>'
| |   | |   |     `-UnresolvedLookupExpr 0x5605abd17048 <col:39, col:55> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   | |   |       `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | |   |         `-TemplateTypeParmType 0x5605abd16280 '_Tp' dependent depth 0 index 0
| |   | |   |           `-TemplateTypeParm 0x5605abd16228 '_Tp'
| |   | |   `-SimpleRequirement 0x5605abd175c8 dependent
| |   | |     `-CXXStaticCastExpr 0x5605abd17598 <line:95:2, col:58> 'common_type_t<_Tp, _Up>':'typename common_type<_Tp, _Up>::type' static_cast<common_type_t<_Tp, _Up>> <Dependent>
| |   | |       `-CallExpr 0x5605abd17550 <col:39, col:57> '<dependent type>'
| |   | |         `-UnresolvedLookupExpr 0x5605abd174d8 <col:39, col:55> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   | |           `-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | |             `-TemplateTypeParmType 0x5605abd16310 '_Up' dependent depth 0 index 1
| |   | |               `-TemplateTypeParm 0x5605abd162b8 '_Up'
| |   | `-ConceptSpecializationExpr 0x5605abd17d08 <line:97:10, line:98:44> 'bool' Concept 0x5605abd14fd0 'common_reference_with'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd17c18 <line:84:13> col:13
| |   |   | |-TemplateArgument type 'typename add_lvalue_reference<const type-parameter-0-0>::type'
| |   |   | | `-DependentNameType 0x5605abd17810 'typename add_lvalue_reference<const type-parameter-0-0>::type' dependent
| |   |   | `-TemplateArgument type 'typename add_lvalue_reference<const type-parameter-0-1>::type'
| |   |   |   `-DependentNameType 0x5605abd17ad0 'typename add_lvalue_reference<const type-parameter-0-1>::type' dependent
| |   |   |-TemplateArgument <line:97:32, col:64> type 'add_lvalue_reference_t<const _Tp>':'typename add_lvalue_reference<const type-parameter-0-0>::type'
| |   |   | `-ElaboratedType 0x5605abd178e0 'add_lvalue_reference_t<const _Tp>' sugar dependent
| |   |   |   `-TemplateSpecializationType 0x5605abd17890 'add_lvalue_reference_t<const _Tp>' sugar dependent alias
| |   |   |     |-name: 'add_lvalue_reference_t':'std::add_lvalue_reference_t' qualified
| |   |   |     | `-TypeAliasTemplateDecl 0x5605abc0d760 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1736:3, line:1737:72> col:5 add_lvalue_reference_t
| |   |   |     |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |   |   |     | `-QualType 0x5605abd16281 'const _Tp' const
| |   |   |     |   `-TemplateTypeParmType 0x5605abd16280 '_Tp' dependent depth 0 index 0
| |   |   |     |     `-TemplateTypeParm 0x5605abd16228 '_Tp'
| |   |   |     `-DependentNameType 0x5605abd17840 'typename add_lvalue_reference<const _Tp>::type' dependent
| |   |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:98:11, <scratch space>:206:1> type 'add_lvalue_reference_t<const _Up>':'typename add_lvalue_reference<const type-parameter-0-1>::type'
| |   |     `-ElaboratedType 0x5605abd17ba0 'add_lvalue_reference_t<const _Up>' sugar dependent
| |   |       `-TemplateSpecializationType 0x5605abd17b50 'add_lvalue_reference_t<const _Up>' sugar dependent alias
| |   |         |-name: 'add_lvalue_reference_t':'std::add_lvalue_reference_t' qualified
| |   |         | `-TypeAliasTemplateDecl 0x5605abc0d760 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1736:3, line:1737:72> col:5 add_lvalue_reference_t
| |   |         |-TemplateArgument type 'const _Up':'const type-parameter-0-1'
| |   |         | `-QualType 0x5605abd16311 'const _Up' const
| |   |         |   `-TemplateTypeParmType 0x5605abd16310 '_Up' dependent depth 0 index 1
| |   |         |     `-TemplateTypeParm 0x5605abd162b8 '_Up'
| |   |         `-DependentNameType 0x5605abd17b00 'typename add_lvalue_reference<const _Up>::type' dependent
| |   `-ConceptSpecializationExpr 0x5605abd18d28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:99:10, line:102:40> 'bool' Concept 0x5605abd14fd0 'common_reference_with'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd18c38 <line:84:13> col:13
| |     | |-TemplateArgument type 'typename add_lvalue_reference<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |     | | `-DependentNameType 0x5605abd18260 'typename add_lvalue_reference<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type' dependent
| |     | `-TemplateArgument type 'typename common_reference<typename add_lvalue_reference<const type-parameter-0-0>::type, typename add_lvalue_reference<const type-parameter-0-1>::type>::type'
| |     |   `-DependentNameType 0x5605abd18ac0 'typename common_reference<typename add_lvalue_reference<const type-parameter-0-0>::type, typename add_lvalue_reference<const type-parameter-0-1>::type>::type' dependent
| |     |-TemplateArgument <line:99:32, col:78> type 'add_lvalue_reference_t<common_type_t<_Tp, _Up>>':'typename add_lvalue_reference<typename common_type<type-parameter-0-0, type-parameter-0-1>::type>::type'
| |     | `-ElaboratedType 0x5605abd18330 'add_lvalue_reference_t<common_type_t<_Tp, _Up>>' sugar dependent
| |     |   `-TemplateSpecializationType 0x5605abd182e0 'add_lvalue_reference_t<common_type_t<_Tp, _Up>>' sugar dependent alias
| |     |     |-name: 'add_lvalue_reference_t':'std::add_lvalue_reference_t' qualified
| |     |     | `-TypeAliasTemplateDecl 0x5605abc0d760 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1736:3, line:1737:72> col:5 add_lvalue_reference_t
| |     |     |-TemplateArgument type 'common_type_t<_Tp, _Up>':'typename common_type<type-parameter-0-0, type-parameter-0-1>::type'
| |     |     | `-ElaboratedType 0x5605abd18030 'common_type_t<_Tp, _Up>' sugar dependent
| |     |     |   `-TemplateSpecializationType 0x5605abd17fc0 'common_type_t<_Tp, _Up>' sugar dependent alias
| |     |     |     |-name: 'common_type_t':'std::common_type_t' qualified
| |     |     |     | `-TypeAliasTemplateDecl 0x5605abc92720 <line:2718:3, line:2719:57> col:5 common_type_t
| |     |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |     |     | `-TemplateTypeParmType 0x5605abd16280 '_Tp' dependent depth 0 index 0
| |     |     |     |   `-TemplateTypeParm 0x5605abd16228 '_Tp'
| |     |     |     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |     |     |     | `-TemplateTypeParmType 0x5605abd16310 '_Up' dependent depth 0 index 1
| |     |     |     |   `-TemplateTypeParm 0x5605abd162b8 '_Up'
| |     |     |     `-DependentNameType 0x5605abd17f70 'typename common_type<_Tp, _Up>::type' dependent
| |     |     `-DependentNameType 0x5605abd18290 'typename add_lvalue_reference<common_type_t<_Tp, _Up>>::type' dependent
| |     `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:100:11, <scratch space>:209:1> type 'common_reference_t<add_lvalue_reference_t<const _Tp>, add_lvalue_reference_t<const _Up>>':'typename common_reference<typename add_lvalue_reference<const type-parameter-0-0>::type, typename add_lvalue_reference<const type-parameter-0-1>::type>::type'
| |       `-ElaboratedType 0x5605abd18bb0 'common_reference_t<add_lvalue_reference_t<const _Tp>, add_lvalue_reference_t<const _Up>>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abd18b40 'common_reference_t<add_lvalue_reference_t<const _Tp>, add_lvalue_reference_t<const _Up>>' sugar dependent alias
| |           |-name: 'common_reference_t':'std::common_reference_t' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |           |-TemplateArgument type 'add_lvalue_reference_t<const _Tp>':'typename add_lvalue_reference<const type-parameter-0-0>::type'
| |           | `-ElaboratedType 0x5605abd18550 'add_lvalue_reference_t<const _Tp>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abd18500 'add_lvalue_reference_t<const _Tp>' sugar dependent alias
| |           |     |-name: 'add_lvalue_reference_t':'std::add_lvalue_reference_t' qualified
| |           |     | `-TypeAliasTemplateDecl 0x5605abc0d760 <line:1736:3, line:1737:72> col:5 add_lvalue_reference_t
| |           |     |-TemplateArgument type 'const _Tp':'const type-parameter-0-0'
| |           |     | `-QualType 0x5605abd16281 'const _Tp' const
| |           |     |   `-TemplateTypeParmType 0x5605abd16280 '_Tp' dependent depth 0 index 0
| |           |     |     `-TemplateTypeParm 0x5605abd16228 '_Tp'
| |           |     `-DependentNameType 0x5605abd184b0 'typename add_lvalue_reference<const _Tp>::type' dependent
| |           |-TemplateArgument type 'add_lvalue_reference_t<const _Up>':'typename add_lvalue_reference<const type-parameter-0-1>::type'
| |           | `-ElaboratedType 0x5605abd18770 'add_lvalue_reference_t<const _Up>' sugar dependent
| |           |   `-TemplateSpecializationType 0x5605abd18720 'add_lvalue_reference_t<const _Up>' sugar dependent alias
| |           |     |-name: 'add_lvalue_reference_t':'std::add_lvalue_reference_t' qualified
| |           |     | `-TypeAliasTemplateDecl 0x5605abc0d760 <line:1736:3, line:1737:72> col:5 add_lvalue_reference_t
| |           |     |-TemplateArgument type 'const _Up':'const type-parameter-0-1'
| |           |     | `-QualType 0x5605abd16311 'const _Up' const
| |           |     |   `-TemplateTypeParmType 0x5605abd16310 '_Up' dependent depth 0 index 1
| |           |     |     `-TemplateTypeParm 0x5605abd162b8 '_Up'
| |           |     `-DependentNameType 0x5605abd186d0 'typename add_lvalue_reference<const _Up>::type' dependent
| |           `-DependentNameType 0x5605abd18af0 'typename common_reference<add_lvalue_reference_t<const _Tp>, add_lvalue_reference_t<const _Up>>::type' dependent
| |-ConceptDecl 0x5605abd18e28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:106:3, line:107:41> col:13 integral
| | |-TemplateTypeParmDecl 0x5605abd18d78 <line:106:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-UnresolvedLookupExpr 0x5605abd18e98 <line:107:24, col:41> '<dependent type>' lvalue (no ADL) = 'is_integral_v' 0x5605abcc36c8
| |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     `-TemplateTypeParmType 0x5605abd18dd0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abd18d78 '_Tp'
| |-ConceptDecl 0x5605abd18fc8 <line:109:3, line:110:63> col:13 signed_integral
| | |-TemplateTypeParmDecl 0x5605abd18f18 <line:109:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd191c0 <line:110:31, col:63> '<dependent type>' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd190f8 <col:31, col:43> 'bool' Concept 0x5605abd18e28 'integral'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd19040 <line:107:13> col:13
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument <line:110:40> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd18f70 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd18f18 '_Tp'
| |   `-UnresolvedLookupExpr 0x5605abd19148 <col:48, col:63> '<dependent type>' lvalue (no ADL) = 'is_signed_v' 0x5605abcc96c8
| |     `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd18f70 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd18f18 '_Tp'
| |-ConceptDecl 0x5605abd19298 <line:112:3, line:113:70> col:13 unsigned_integral
| | |-TemplateTypeParmDecl 0x5605abd191e8 <line:112:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd19500 <line:113:33, col:70> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd193b0 <col:33, col:45> 'bool' Concept 0x5605abd18e28 'integral'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd192f8 <line:107:13> col:13
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument <line:113:42> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd19240 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd191e8 '_Tp'
| |   `-UnaryOperator 0x5605abd194e8 <col:50, col:70> 'bool' prefix '!' cannot overflow
| |     `-ConceptSpecializationExpr 0x5605abd194c0 <col:51, col:70> 'bool' Concept 0x5605abd18fc8 'signed_integral'
| |       |-ImplicitConceptSpecializationDecl 0x5605abd19408 <line:110:13> col:13
| |       | `-TemplateArgument type 'type-parameter-0-0'
| |       |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |       `-TemplateArgument <line:113:67> type '_Tp':'type-parameter-0-0'
| |         `-TemplateTypeParmType 0x5605abd19240 '_Tp' dependent depth 0 index 0
| |           `-TemplateTypeParm 0x5605abd191e8 '_Tp'
| |-ConceptDecl 0x5605abd195d8 <line:115:3, line:116:53> col:13 floating_point
| | |-TemplateTypeParmDecl 0x5605abd19528 <line:115:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-UnresolvedLookupExpr 0x5605abd19648 <line:116:30, col:53> '<dependent type>' lvalue (no ADL) = 'is_floating_point_v' 0x5605abcc3958
| |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     `-TemplateTypeParmType 0x5605abd19580 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abd19528 '_Tp'
| |-NamespaceDecl 0x5605abd196c8 prev 0x5605abd12ee0 <line:118:3, line:142:3> line:118:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | |-TypeAliasTemplateDecl 0x5605abd19ad8 <line:120:5, line:121:51> col:7 __cref
| | | |-TemplateTypeParmDecl 0x5605abd19740 <line:120:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-TypeAliasDecl 0x5605abd19a70 <line:121:7, col:51> col:13 __cref 'const remove_reference_t<_Tp> &'
| | |   `-LValueReferenceType 0x5605abd19a10 'const remove_reference_t<_Tp> &' dependent
| | |     `-QualType 0x5605abd19991 'const remove_reference_t<_Tp>' const
| | |       `-ElaboratedType 0x5605abd19990 'remove_reference_t<_Tp>' sugar dependent
| | |         `-TemplateSpecializationType 0x5605abd19940 'remove_reference_t<_Tp>' sugar dependent alias
| | |           |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | |           | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | |           |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |           | `-TemplateTypeParmType 0x5605abd19790 '_Tp' dependent depth 0 index 0
| | |           |   `-TemplateTypeParm 0x5605abd19740 '_Tp'
| | |           `-DependentNameType 0x5605abd198f0 'typename remove_reference<_Tp>::type' dependent
| | |-ConceptDecl 0x5605abd19be8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:123:5, line:125:55> line:124:15 __class_or_enum
| | | |-TemplateTypeParmDecl 0x5605abd19b38 <line:123:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-BinaryOperator 0x5605abd19e30 <line:125:4, col:55> '<dependent type>' '||'
| | |   |-BinaryOperator 0x5605abd19d70 <col:4, col:37> '<dependent type>' '||'
| | |   | |-UnresolvedLookupExpr 0x5605abd19c58 <col:4, col:18> '<dependent type>' lvalue (no ADL) = 'is_class_v' 0x5605abcc5ec8
| | |   | | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   | |   `-TemplateTypeParmType 0x5605abd19b90 '_Tp' dependent depth 0 index 0
| | |   | |     `-TemplateTypeParm 0x5605abd19b38 '_Tp'
| | |   | `-UnresolvedLookupExpr 0x5605abd19cf8 <col:23, col:37> '<dependent type>' lvalue (no ADL) = 'is_union_v' 0x5605abcc5cf8
| | |   |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   |     `-TemplateTypeParmType 0x5605abd19b90 '_Tp' dependent depth 0 index 0
| | |   |       `-TemplateTypeParm 0x5605abd19b38 '_Tp'
| | |   `-UnresolvedLookupExpr 0x5605abd19db8 <col:42, col:55> '<dependent type>' lvalue (no ADL) = 'is_enum_v' 0x5605abcc5b28
| | |     `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |       `-TemplateTypeParmType 0x5605abd19b90 '_Tp' dependent depth 0 index 0
| | |         `-TemplateTypeParm 0x5605abd19b38 '_Tp'
| | |-VarTemplateDecl 0x5605abd19f88 <line:127:5, line:128:44> col:22 __destructible_impl
| | | |-TemplateTypeParmDecl 0x5605abd19e58 <line:127:14, col:23> col:23 typename depth 0 index 0 _Tp
| | | `-VarDecl 0x5605abd19f18 <line:128:7, col:44> col:22 __destructible_impl 'const bool' constexpr cinit
| | |   |-value: Int 0
| | |   `-CXXBoolLiteralExpr 0x5605abd19fe0 <col:44> 'bool' false
| | |-VarTemplatePartialSpecializationDecl 0x5605abd1a450 <line:129:5, line:131:49> col:22 __destructible_impl 'const bool' explicit_specialization constexpr cinit
| | | |-value: Int 1
| | | |-TemplateTypeParmDecl 0x5605abd1a058 <line:129:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-RequiresExpr 0x5605abd1a2c8 <line:130:16, col:62> 'bool'
| | | | |-ParmVarDecl 0x5605abd1a128 <col:25, col:30> col:30 referenced __t '_Tp &'
| | | | `-CompoundRequirement 0x5605abd1a298 noexcept dependent
| | | |   `-CallExpr 0x5605abd1a278 <col:39, col:48> 'void'
| | | |     `-CXXPseudoDestructorExpr 0x5605abd1a228 <col:39, col:44> '<bound member function type>'
| | | |       `-DeclRefExpr 0x5605abd1a1f8 <col:39> '_Tp' lvalue ParmVar 0x5605abd1a128 '__t' '_Tp &' non_odr_use_unevaluated
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | `-CXXBoolLiteralExpr 0x5605abd1a6b8 <line:131:49> 'bool' true
| | |-VarTemplateDecl 0x5605abd1a858 <line:133:5, line:134:62> col:22 __destructible
| | | |-TemplateTypeParmDecl 0x5605abd1a730 <line:133:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-VarDecl 0x5605abd1a7e8 <line:134:7, col:62> col:22 __destructible 'const bool' constexpr cinit
| | |   `-UnresolvedLookupExpr 0x5605abd1a8c0 <col:39, col:62> '<dependent type>' lvalue (no ADL) = '__destructible_impl' 0x5605abd19f88
| | |     `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |       `-TemplateTypeParmType 0x5605abd1a780 '_Tp' dependent depth 0 index 0
| | |         `-TemplateTypeParm 0x5605abd1a730 '_Tp'
| | |-VarTemplatePartialSpecializationDecl 0x5605abd1af88 <line:135:5, line:136:45> col:22 __destructible 'const bool' explicit_specialization constexpr cinit
| | | |-value: Int 1
| | | |-TemplateTypeParmDecl 0x5605abd1ad90 <line:135:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateArgument type 'type-parameter-0-0 &'
| | | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | `-CXXBoolLiteralExpr 0x5605abd1b1d8 <line:136:45> 'bool' true
| | |-VarTemplatePartialSpecializationDecl 0x5605abd1b348 <line:137:5, line:138:46> col:22 __destructible 'const bool' explicit_specialization constexpr cinit
| | | |-value: Int 1
| | | |-TemplateTypeParmDecl 0x5605abd1b250 <line:137:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | `-CXXBoolLiteralExpr 0x5605abd1b538 <line:138:46> 'bool' true
| | `-VarTemplatePartialSpecializationDecl 0x5605abd1b768 <line:139:5, line:140:67> col:22 __destructible 'const bool' explicit_specialization constexpr cinit
| |   |-TemplateTypeParmDecl 0x5605abd1b5b0 <line:139:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-NonTypeTemplateParmDecl 0x5605abd1b648 <col:28, col:35> col:35 referenced 'size_t':'unsigned long' depth 0 index 1 _Nm
| |   |-TemplateArgument type 'type-parameter-0-0[_Size]'
| |   | `-DependentSizedArrayType 0x5605abbc16e0 'type-parameter-0-0[_Size]' dependent   </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:985:39, col:45>
| |   |   |-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   `-DeclRefExpr 0x5605abbc16b8 <col:40> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abbc1638 '_Size' 'size_t':'unsigned long'
| |   `-UnresolvedLookupExpr 0x5605abd1b978 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:140:49, col:67> '<dependent type>' lvalue (no ADL) = '__destructible' 0x5605abd1a858
| |     `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd1b600 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd1b5b0 '_Tp'
| |-ConceptDecl 0x5605abd1bb70 <line:145:3, line:151:7> line:146:13 assignable_from
| | |-TemplateTypeParmDecl 0x5605abd1ba28 <line:145:12, col:21> col:21 referenced typename depth 0 index 0 _Lhs
| | |-TemplateTypeParmDecl 0x5605abd1bab8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Rhs
| | `-BinaryOperator 0x5605abd1ca10 <line:147:9, line:151:7> '<dependent type>' '&&'
| |   |-BinaryOperator 0x5605abd1c4a8 <line:147:9, line:148:78> '<dependent type>' '&&'
| |   | |-UnresolvedLookupExpr 0x5605abd1bbc8 <line:147:9, col:35> '<dependent type>' lvalue (no ADL) = 'is_lvalue_reference_v' 0x5605abcc4048
| |   | | `-TemplateArgument type '_Lhs':'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abd1ba80 '_Lhs' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x5605abd1ba28 '_Lhs'
| |   | `-ConceptSpecializationExpr 0x5605abd1c480 <line:148:10, col:78> 'bool' Concept 0x5605abd14fd0 'common_reference_with'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd1c390 <line:84:13> col:13
| |   |   | |-TemplateArgument type 'const typename remove_reference<type-parameter-0-0>::type &'
| |   |   | | `-LValueReferenceType 0x5605abd199e0 'const typename remove_reference<type-parameter-0-0>::type &' dependent
| |   |   | |   `-QualType 0x5605abc0d391 'const typename remove_reference<type-parameter-0-0>::type' const
| |   |   | |     `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| |   |   | `-TemplateArgument type 'const typename remove_reference<type-parameter-0-1>::type &'
| |   |   |   `-LValueReferenceType 0x5605abd1c210 'const typename remove_reference<type-parameter-0-1>::type &' dependent
| |   |   |     `-QualType 0x5605abc8ad21 'const typename remove_reference<type-parameter-0-1>::type' const
| |   |   |       `-DependentNameType 0x5605abc8ad20 'typename remove_reference<type-parameter-0-1>::type' dependent
| |   |   |-TemplateArgument <line:148:32, col:53> type '__detail::__cref<_Lhs>':'const typename remove_reference<type-parameter-0-0>::type &'
| |   |   | `-ElaboratedType 0x5605abd1bf50 '__detail::__cref<_Lhs>' sugar dependent
| |   |   |   `-TemplateSpecializationType 0x5605abd1bf00 '__cref<_Lhs>' sugar dependent alias
| |   |   |     |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   |   |     | |-NestedNameSpecifier Namespace 0x5605abd196c8 '__detail'
| |   |   |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 <line:120:5, line:121:51> col:7 __cref
| |   |   |     |-TemplateArgument type '_Lhs':'type-parameter-0-0'
| |   |   |     | `-TemplateTypeParmType 0x5605abd1ba80 '_Lhs' dependent depth 0 index 0
| |   |   |     |   `-TemplateTypeParm 0x5605abd1ba28 '_Lhs'
| |   |   |     `-LValueReferenceType 0x5605abd1bea0 'const remove_reference_t<_Lhs> &' dependent
| |   |   |       `-QualType 0x5605abd1be71 'const remove_reference_t<_Lhs>' const
| |   |   |         `-ElaboratedType 0x5605abd1be70 'remove_reference_t<_Lhs>' sugar dependent
| |   |   |           `-TemplateSpecializationType 0x5605abd1be20 'remove_reference_t<_Lhs>' sugar dependent alias
| |   |   |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |   |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |   |             |-TemplateArgument type '_Lhs':'type-parameter-0-0'
| |   |   |             | `-TemplateTypeParmType 0x5605abd1ba80 '_Lhs' dependent depth 0 index 0
| |   |   |             |   `-TemplateTypeParm 0x5605abd1ba28 '_Lhs'
| |   |   |             `-DependentNameType 0x5605abd1bdd0 'typename remove_reference<_Lhs>::type' dependent
| |   |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:148:56, <scratch space>:210:1> type '__detail::__cref<_Rhs>':'const typename remove_reference<type-parameter-0-1>::type &'
| |   |     `-ElaboratedType 0x5605abd1c2f0 '__detail::__cref<_Rhs>' sugar dependent
| |   |       `-TemplateSpecializationType 0x5605abd1c2a0 '__cref<_Rhs>' sugar dependent alias
| |   |         |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   |         | |-NestedNameSpecifier Namespace 0x5605abd196c8 '__detail'
| |   |         | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |         |-TemplateArgument type '_Rhs':'type-parameter-0-1'
| |   |         | `-TemplateTypeParmType 0x5605abd1bb10 '_Rhs' dependent depth 0 index 1
| |   |         |   `-TemplateTypeParm 0x5605abd1bab8 '_Rhs'
| |   |         `-LValueReferenceType 0x5605abd1c240 'const remove_reference_t<_Rhs> &' dependent
| |   |           `-QualType 0x5605abd1c1e1 'const remove_reference_t<_Rhs>' const
| |   |             `-ElaboratedType 0x5605abd1c1e0 'remove_reference_t<_Rhs>' sugar dependent
| |   |               `-TemplateSpecializationType 0x5605abd1c190 'remove_reference_t<_Rhs>' sugar dependent alias
| |   |                 |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |                 | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |                 |-TemplateArgument type '_Rhs':'type-parameter-0-1'
| |   |                 | `-TemplateTypeParmType 0x5605abd1bb10 '_Rhs' dependent depth 0 index 1
| |   |                 |   `-TemplateTypeParm 0x5605abd1bab8 '_Rhs'
| |   |                 `-DependentNameType 0x5605abd1c140 'typename remove_reference<_Rhs>::type' dependent
| |   `-RequiresExpr 0x5605abd1c9c8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:149:10, line:151:7> 'bool'
| |     |-ParmVarDecl 0x5605abd1c4e0 <line:149:19, col:24> col:24 referenced __lhs '_Lhs'
| |     |-ParmVarDecl 0x5605abd1c598 <col:31, col:38> col:38 referenced __rhs '_Rhs &&'
| |     `-CompoundRequirement 0x5605abd1c998 dependent
| |       |-BinaryOperator 0x5605abd1c700 <line:150:4, col:37> '<dependent type>' '='
| |       | |-DeclRefExpr 0x5605abd1c680 <col:4> '_Lhs' lvalue ParmVar 0x5605abd1c4e0 '__lhs' '_Lhs' non_odr_use_unevaluated
| |       | `-CXXStaticCastExpr 0x5605abd1c6d0 <col:12, col:37> '_Rhs' xvalue static_cast<_Rhs &&> <Dependent>
| |       |   `-DeclRefExpr 0x5605abd1c6a0 <col:32> '_Rhs' lvalue ParmVar 0x5605abd1c598 '__rhs' '_Rhs &&' non_odr_use_unevaluated
| |       `-ConceptSpecializationExpr 0x5605abd1c908 <col:44, col:56> 'bool' Concept 0x5605abd12b80 'same_as'
| |         |-ImplicitConceptSpecializationDecl 0x5605abd1c818 <line:62:13> col:13
| |         | |-TemplateArgument type 'type-parameter-1-0'
| |         | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |         | `-TemplateArgument type 'type-parameter-0-0'
| |         |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |         |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |         | `-TemplateTypeParmType 0x5605abd1c7a0 'expr-type' dependent depth 1 index 0
| |         |   `-TemplateTypeParm 0x5605abd1c738 'expr-type'
| |         `-TemplateArgument <line:150:52> type '_Lhs':'type-parameter-0-0'
| |           `-TemplateTypeParmType 0x5605abd1ba80 '_Lhs' dependent depth 0 index 0
| |             `-TemplateTypeParm 0x5605abd1ba28 '_Lhs'
| |-ConceptDecl 0x5605abd1cae8 <line:154:3, line:155:56> col:13 destructible
| | |-TemplateTypeParmDecl 0x5605abd1ca38 <line:154:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-UnresolvedLookupExpr 0x5605abd1cb78 <line:155:28, col:56> '<dependent type>' lvalue (no ADL) = '__destructible' 0x5605abd1a858
| |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     `-TemplateTypeParmType 0x5605abd1ca90 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abd1ca38 '_Tp'
| |-ConceptDecl 0x5605abd1d1a8 <line:158:3, line:160:62> line:159:13 constructible_from
| | |-TemplateTypeParmDecl 0x5605abd1cbf8 <line:158:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd1cc88 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-BinaryOperator 0x5605abd1d448 <line:160:9, col:62> '<dependent type>' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd1d2d8 <col:9, col:25> 'bool' Concept 0x5605abd1cae8 'destructible'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd1d220 <line:155:13> col:13
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument <line:160:22> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd1cc50 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd1cbf8 '_Tp'
| |   `-UnresolvedLookupExpr 0x5605abd1d3b0 <col:30, col:62> '<dependent type>' lvalue (no ADL) = 'is_constructible_v' 0x5605abcc9c80
| |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     | `-TemplateTypeParmType 0x5605abd1cc50 '_Tp' dependent depth 0 index 0
| |     |   `-TemplateTypeParm 0x5605abd1cbf8 '_Tp'
| |     `-TemplateArgument type '_Args...':'type-parameter-0-1...'
| |       `-PackExpansionType 0x5605abd1d340 '_Args...' dependent
| |         `-TemplateTypeParmType 0x5605abd1cce0 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |           `-TemplateTypeParm 0x5605abd1cc88 '_Args'
| |-ConceptDecl 0x5605abd1d518 <line:163:3, line:169:7> line:164:13 default_initializable
| | |-TemplateTypeParmDecl 0x5605abd1d470 <line:163:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd1d8a0 <line:164:37, line:169:7> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd1d660 <line:164:37, col:59> 'bool' Concept 0x5605abd1d1a8 'constructible_from'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd1d590 <line:159:13> col:13
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | `-TemplateArgument pack '<>'
| |   | `-TemplateArgument <line:164:56> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd1d4c0 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd1d470 '_Tp'
| |   `-RequiresExpr 0x5605abd1d860 <line:165:10, line:169:7> 'bool'
| |     |-SimpleRequirement 0x5605abd1d750 dependent
| |     | `-CXXUnresolvedConstructExpr 0x5605abd1d728 <line:167:2, col:6> '_Tp' '_Tp' list
| |     |   `-InitListExpr 0x5605abd1d6e8 <col:5, col:6> 'void'
| |     `-SimpleRequirement 0x5605abd1d830 dependent
| |       `-CStyleCastExpr 0x5605abd1d808 <line:168:2, col:15> 'void' <ToVoid>
| |         `-CXXNewExpr 0x5605abd1d7c0 <col:9, col:15> '_Tp *' global
| |-ConceptDecl 0x5605abd1d978 <line:172:3, line:174:62> line:173:13 move_constructible
| | |-TemplateTypeParmDecl 0x5605abd1d8c8 <line:172:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd1dc70 <line:174:7, col:62> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd1db08 <col:7, col:34> 'bool' Concept 0x5605abd1d1a8 'constructible_from'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd1da18 <line:159:13> col:13
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | `-TemplateArgument pack '<type-parameter-0-0>'
| |   | |   `-TemplateArgument type 'type-parameter-0-0'
| |   | |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |-TemplateArgument <line:174:26> type '_Tp':'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abd1d920 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x5605abd1d8c8 '_Tp'
| |   | `-TemplateArgument <col:31> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd1d920 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd1d8c8 '_Tp'
| |   `-ConceptSpecializationExpr 0x5605abd1dc48 <col:39, col:62> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd1db58 <line:79:13> col:13
| |     | |-TemplateArgument type 'type-parameter-0-0'
| |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument type 'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     |-TemplateArgument <line:174:54> type '_Tp':'type-parameter-0-0'
| |     | `-TemplateTypeParmType 0x5605abd1d920 '_Tp' dependent depth 0 index 0
| |     |   `-TemplateTypeParm 0x5605abd1d8c8 '_Tp'
| |     `-TemplateArgument <col:59> type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd1d920 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd1d8c8 '_Tp'
| |-ConceptDecl 0x5605abd1dd48 <line:177:3, line:182:77> line:178:13 copy_constructible
| | |-TemplateTypeParmDecl 0x5605abd1dc98 <line:177:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd1e7b0 <line:179:9, line:182:77> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd1e650 <line:179:9, line:182:43> 'bool' '&&'
| |   | |-BinaryOperator 0x5605abd1e4c0 <line:179:9, line:181:79> 'bool' '&&'
| |   | | |-BinaryOperator 0x5605abd1e360 <line:179:9, line:181:44> 'bool' '&&'
| |   | | | |-BinaryOperator 0x5605abd1e1a0 <line:179:9, line:180:67> 'bool' '&&'
| |   | | | | |-BinaryOperator 0x5605abd1e040 <line:179:9, line:180:38> 'bool' '&&'
| |   | | | | | |-ConceptSpecializationExpr 0x5605abd1de78 <line:179:9, col:31> 'bool' Concept 0x5605abd1d978 'move_constructible'
| |   | | | | | | |-ImplicitConceptSpecializationDecl 0x5605abd1ddc0 <line:173:13> col:13
| |   | | | | | | | `-TemplateArgument type 'type-parameter-0-0'
| |   | | | | | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | | | `-TemplateArgument <line:179:28> type '_Tp':'type-parameter-0-0'
| |   | | | | | |   `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | | | | | |     `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | | | | | `-ConceptSpecializationExpr 0x5605abd1e018 <line:180:10, col:38> 'bool' Concept 0x5605abd1d1a8 'constructible_from'
| |   | | | | |   |-ImplicitConceptSpecializationDecl 0x5605abd1df28 <line:159:13> col:13
| |   | | | | |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | |   | `-TemplateArgument pack '<type-parameter-0-0 &>'
| |   | | | | |   |   `-TemplateArgument type 'type-parameter-0-0 &'
| |   | | | | |   |     `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| |   | | | | |   |       `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | |   |-TemplateArgument <line:180:29> type '_Tp':'type-parameter-0-0'
| |   | | | | |   | `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | | | | |   |   `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | | | | |   `-TemplateArgument <col:34, col:37> type '_Tp &':'type-parameter-0-0 &'
| |   | | | | |     `-LValueReferenceType 0x5605abd1deb0 '_Tp &' dependent
| |   | | | | |       `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | | | | |         `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | | | | `-ConceptSpecializationExpr 0x5605abd1e178 <col:43, col:67> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |   | | | |   |-ImplicitConceptSpecializationDecl 0x5605abd1e088 <line:79:13> col:13
| |   | | | |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | | | |   | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| |   | | | |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | |   | `-TemplateArgument type 'type-parameter-0-0'
| |   | | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | |   |-TemplateArgument <line:180:58, col:61> type '_Tp &':'type-parameter-0-0 &'
| |   | | | |   | `-LValueReferenceType 0x5605abd1deb0 '_Tp &' dependent
| |   | | | |   |   `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | | | |   |     `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | | | |   `-TemplateArgument <col:64> type '_Tp':'type-parameter-0-0'
| |   | | | |     `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | | | |       `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | | | `-ConceptSpecializationExpr 0x5605abd1e338 <line:181:10, col:44> 'bool' Concept 0x5605abd1d1a8 'constructible_from'
| |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abd1e248 <line:159:13> col:13
| |   | | |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | |   | `-TemplateArgument pack '<const type-parameter-0-0 &>'
| |   | | |   |   `-TemplateArgument type 'const type-parameter-0-0 &'
| |   | | |   |     `-LValueReferenceType 0x5605abc6c3a0 'const type-parameter-0-0 &' dependent
| |   | | |   |       `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| |   | | |   |         `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | |   |-TemplateArgument <line:181:29> type '_Tp':'type-parameter-0-0'
| |   | | |   | `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | | |   |   `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | | |   `-TemplateArgument <col:40, col:43> type 'const _Tp &':'const type-parameter-0-0 &'
| |   | | |     `-LValueReferenceType 0x5605abd1e1d0 'const _Tp &' dependent
| |   | | |       `-QualType 0x5605abd1dcf1 'const _Tp' const
| |   | | |         `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | | |           `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | | `-ConceptSpecializationExpr 0x5605abd1e498 <col:49, col:79> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |   | |   |-ImplicitConceptSpecializationDecl 0x5605abd1e3a8 <line:79:13> col:13
| |   | |   | |-TemplateArgument type 'const type-parameter-0-0 &'
| |   | |   | | `-LValueReferenceType 0x5605abc6c3a0 'const type-parameter-0-0 &' dependent
| |   | |   | |   `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| |   | |   | |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   |-TemplateArgument <line:181:70, col:73> type 'const _Tp &':'const type-parameter-0-0 &'
| |   | |   | `-LValueReferenceType 0x5605abd1e1d0 'const _Tp &' dependent
| |   | |   |   `-QualType 0x5605abd1dcf1 'const _Tp' const
| |   | |   |     `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | |   |       `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | |   `-TemplateArgument <col:76> type '_Tp':'type-parameter-0-0'
| |   | |     `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   | |       `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   | `-ConceptSpecializationExpr 0x5605abd1e628 <line:182:10, col:43> 'bool' Concept 0x5605abd1d1a8 'constructible_from'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd1e538 <line:159:13> col:13
| |   |   | |-TemplateArgument type 'type-parameter-0-0'
| |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   | `-TemplateArgument pack '<const type-parameter-0-0>'
| |   |   |   `-TemplateArgument type 'const type-parameter-0-0'
| |   |   |     `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| |   |   |       `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   |-TemplateArgument <line:182:29> type '_Tp':'type-parameter-0-0'
| |   |   | `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   |   |   `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   |   `-TemplateArgument <col:40> type 'const _Tp':'const type-parameter-0-0'
| |   |     `-QualType 0x5605abd1dcf1 'const _Tp' const
| |   |       `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |   |         `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |   `-ConceptSpecializationExpr 0x5605abd1e788 <col:48, col:77> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd1e698 <line:79:13> col:13
| |     | |-TemplateArgument type 'const type-parameter-0-0'
| |     | | `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| |     | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument type 'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     |-TemplateArgument <line:182:69> type 'const _Tp':'const type-parameter-0-0'
| |     | `-QualType 0x5605abd1dcf1 'const _Tp' const
| |     |   `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |     |     `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |     `-TemplateArgument <col:74> type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd1dcf0 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd1dc98 '_Tp'
| |-NamespaceDecl 0x5605abd1e7d8 <line:186:3, line:253:3> line:186:13 ranges
| | |-NamespaceDecl 0x5605abd1e868 <line:189:5, line:247:5> line:189:15 __swap
| | | |-FunctionTemplateDecl 0x5605abd1ec68 <line:191:7, col:50> col:35 swap
| | | | |-TemplateTypeParmDecl 0x5605abd1e8f8 <col:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | `-FunctionDecl 0x5605abd1ebb8 <col:30, col:50> col:35 swap 'void (_Tp &, _Tp &)' delete implicit-inline
| | | |   |-ParmVarDecl 0x5605abd1e9e8 <col:40, col:43> col:44 '_Tp &'
| | | |   `-ParmVarDecl 0x5605abd1ea68 <col:46, col:49> col:50 '_Tp &'
| | | |-ConceptDecl 0x5605abd1eea0 <line:193:7, line:199:4> line:194:10 __adl_swap
| | | | |-TemplateTypeParmDecl 0x5605abd1ed58 <line:193:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abd1ede8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | `-BinaryOperator 0x5605abd239c0 <line:195:6, line:199:4> 'bool' '&&'
| | | |   |-ParenExpr 0x5605abd23608 <line:195:6, line:196:64> 'bool'
| | | |   | `-BinaryOperator 0x5605abd235e8 <line:195:7, line:196:63> 'bool' '||'
| | | |   |   |-ConceptSpecializationExpr 0x5605abd23280 <line:195:7, col:61> 'bool' Concept 0x5605abd19be8 '__class_or_enum'
| | | |   |   | |-ImplicitConceptSpecializationDecl 0x5605abd231c8 <line:124:15> col:15
| | | |   |   | | `-TemplateArgument type 'typename remove_reference<type-parameter-0-0>::type'
| | | |   |   | |   `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| | | |   |   | `-TemplateArgument <line:195:38, <scratch space>:211:1> type 'remove_reference_t<_Tp>':'typename remove_reference<type-parameter-0-0>::type'
| | | |   |   |   `-ElaboratedType 0x5605abd1f0d0 'remove_reference_t<_Tp>' sugar dependent
| | | |   |   |     `-TemplateSpecializationType 0x5605abd1f080 'remove_reference_t<_Tp>' sugar dependent alias
| | | |   |   |       |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | | |   |   |       | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | | |   |   |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |   |   |       | `-TemplateTypeParmType 0x5605abd1edb0 '_Tp' dependent depth 0 index 0
| | | |   |   |       |   `-TemplateTypeParm 0x5605abd1ed58 '_Tp'
| | | |   |   |       `-DependentNameType 0x5605abd1f030 'typename remove_reference<_Tp>::type' dependent
| | | |   |   `-ConceptSpecializationExpr 0x5605abd235c0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:196:9, col:63> 'bool' Concept 0x5605abd19be8 '__class_or_enum'
| | | |   |     |-ImplicitConceptSpecializationDecl 0x5605abd23508 <line:124:15> col:15
| | | |   |     | `-TemplateArgument type 'typename remove_reference<type-parameter-0-1>::type'
| | | |   |     |   `-DependentNameType 0x5605abc8ad20 'typename remove_reference<type-parameter-0-1>::type' dependent
| | | |   |     `-TemplateArgument <line:196:40, <scratch space>:212:1> type 'remove_reference_t<_Up>':'typename remove_reference<type-parameter-0-1>::type'
| | | |   |       `-ElaboratedType 0x5605abd23460 'remove_reference_t<_Up>' sugar dependent
| | | |   |         `-TemplateSpecializationType 0x5605abd23410 'remove_reference_t<_Up>' sugar dependent alias
| | | |   |           |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | | |   |           | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | | |   |           |-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |   |           | `-TemplateTypeParmType 0x5605abd1ee40 '_Up' dependent depth 0 index 1
| | | |   |           |   `-TemplateTypeParm 0x5605abd1ede8 '_Up'
| | | |   |           `-DependentNameType 0x5605abd233c0 'typename remove_reference<_Up>::type' dependent
| | | |   `-RequiresExpr 0x5605abd23978 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:197:7, line:199:4> 'bool'
| | | |     |-ParmVarDecl 0x5605abd23678 <line:197:16, col:22> col:22 referenced __t '_Tp &&'
| | | |     |-ParmVarDecl 0x5605abd23728 <col:27, col:33> col:33 referenced __u '_Up &&'
| | | |     `-SimpleRequirement 0x5605abd23948 dependent
| | | |       `-CallExpr 0x5605abd23918 <line:198:6, col:59> '<dependent type>'
| | | |         |-UnresolvedLookupExpr 0x5605abd23810 <col:6> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5605abd1ec68
| | | |         |-CXXStaticCastExpr 0x5605abd23888 <col:11, col:33> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |         | `-DeclRefExpr 0x5605abd23858 <col:30> '_Tp' lvalue ParmVar 0x5605abd23678 '__t' '_Tp &&' non_odr_use_unevaluated
| | | |         `-CXXStaticCastExpr 0x5605abd238e8 <col:36, col:58> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |           `-DeclRefExpr 0x5605abd238b8 <col:55> '_Up' lvalue ParmVar 0x5605abd23728 '__u' '_Up &&' non_odr_use_unevaluated
| | | `-CXXRecordDecl 0x5605abd239e8 <line:201:7, line:246:7> line:201:14 referenced struct _Swap definition
| | |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   |-CXXRecordDecl 0x5605abd23b20 <col:7, col:14> col:14 implicit referenced struct _Swap
| | |   |-AccessSpecDecl 0x5605abd23bd0 <line:203:7, col:14> col:7 private
| | |   |-FunctionTemplateDecl 0x5605abd23e78 <line:204:2, line:213:4> line:206:4 _S_noexcept
| | |   | |-TemplateTypeParmDecl 0x5605abd23c00 <line:204:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |   | |-TemplateTypeParmDecl 0x5605abd23c88 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Up
| | |   | `-CXXMethodDecl 0x5605abd23dc8 <line:205:4, line:213:4> line:206:4 constexpr _S_noexcept 'bool ()' static implicit-inline
| | |   |   `-CompoundStmt 0x5605abd29108 <line:207:4, line:213:4>
| | |   |     `-IfStmt 0x5605abd290d8 <line:208:6, line:212:61> has_else constexpr
| | |   |       |-ConceptSpecializationExpr 0x5605abd27908 <line:208:20, col:39> 'bool' Concept 0x5605abd1eea0 '__adl_swap'
| | |   |       | |-ImplicitConceptSpecializationDecl 0x5605abd27818 <line:194:10> col:10
| | |   |       | | |-TemplateArgument type 'type-parameter-0-0'
| | |   |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |       | | `-TemplateArgument type 'type-parameter-0-1'
| | |   |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |       | |-TemplateArgument <line:208:31> type '_Tp':'type-parameter-0-0'
| | |   |       | | `-TemplateTypeParmType 0x5605abd23c50 '_Tp' dependent depth 0 index 0
| | |   |       | |   `-TemplateTypeParm 0x5605abd23c00 '_Tp'
| | |   |       | `-TemplateArgument <col:36> type '_Up':'type-parameter-0-1'
| | |   |       |   `-TemplateTypeParmType 0x5605abd23ce0 '_Up' dependent depth 0 index 1
| | |   |       |     `-TemplateTypeParm 0x5605abd23c88 '_Up'
| | |   |       |-ReturnStmt 0x5605abd28b38 <line:209:8, col:70>
| | |   |       | `-CXXNoexceptExpr 0x5605abd28b18 <col:15, col:70> 'bool'
| | |   |       |   `-CallExpr 0x5605abd28ae8 <col:24, col:69> '<dependent type>'
| | |   |       |     |-UnresolvedLookupExpr 0x5605abd28910 <col:24> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5605abd1ec68
| | |   |       |     |-CallExpr 0x5605abd28a00 <col:29, col:47> '<dependent type>'
| | |   |       |     | `-UnresolvedLookupExpr 0x5605abd28988 <col:29, col:45> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | |   |       |     |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   |       |     |     `-TemplateTypeParmType 0x5605abd23c50 '_Tp' dependent depth 0 index 0
| | |   |       |     |       `-TemplateTypeParm 0x5605abd23c00 '_Tp'
| | |   |       |     `-CallExpr 0x5605abd28ac8 <col:50, col:68> '<dependent type>'
| | |   |       |       `-UnresolvedLookupExpr 0x5605abd28a50 <col:50, col:66> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | |   |       |         `-TemplateArgument type '_Up':'type-parameter-0-1'
| | |   |       |           `-TemplateTypeParmType 0x5605abd23ce0 '_Up' dependent depth 0 index 1
| | |   |       |             `-TemplateTypeParm 0x5605abd23c88 '_Up'
| | |   |       `-ReturnStmt 0x5605abd290c8 <line:211:8, line:212:61>
| | |   |         `-BinaryOperator 0x5605abd290a8 <line:211:15, line:212:61> '<dependent type>' '&&'
| | |   |           |-UnresolvedLookupExpr 0x5605abd28d80 <line:211:15, col:70> '<dependent type>' lvalue (no ADL) = 'is_nothrow_move_constructible_v' 0x5605abcd1428
| | |   |           | `-TemplateArgument type 'remove_reference_t<_Tp>':'typename remove_reference<type-parameter-0-0>::type'
| | |   |           |   `-ElaboratedType 0x5605abd28d10 'remove_reference_t<_Tp>' sugar dependent
| | |   |           |     `-TemplateSpecializationType 0x5605abd28cc0 'remove_reference_t<_Tp>' sugar dependent alias
| | |   |           |       |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | |   |           |       | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | |   |           |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   |           |       | `-TemplateTypeParmType 0x5605abd23c50 '_Tp' dependent depth 0 index 0
| | |   |           |       |   `-TemplateTypeParm 0x5605abd23c00 '_Tp'
| | |   |           |       `-DependentNameType 0x5605abd28c70 'typename remove_reference<_Tp>::type' dependent
| | |   |           `-UnresolvedLookupExpr 0x5605abd29030 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:212:9, col:61> '<dependent type>' lvalue (no ADL) = 'is_nothrow_move_assignable_v' 0x5605abcd20b8
| | |   |             `-TemplateArgument type 'remove_reference_t<_Tp>':'typename remove_reference<type-parameter-0-0>::type'
| | |   |               `-ElaboratedType 0x5605abd28fc0 'remove_reference_t<_Tp>' sugar dependent
| | |   |                 `-TemplateSpecializationType 0x5605abd28f70 'remove_reference_t<_Tp>' sugar dependent alias
| | |   |                   |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | |   |                   | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | |   |                   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   |                   | `-TemplateTypeParmType 0x5605abd23c50 '_Tp' dependent depth 0 index 0
| | |   |                   |   `-TemplateTypeParm 0x5605abd23c00 '_Tp'
| | |   |                   `-DependentNameType 0x5605abd28f20 'typename remove_reference<_Tp>::type' dependent
| | |   |-AccessSpecDecl 0x5605abd23ef0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:215:7, col:13> col:7 public
| | |   |-FunctionTemplateDecl 0x5605abd24dc0 <line:216:2, line:233:4> line:222:4 operator()
| | |   | |-TemplateTypeParmDecl 0x5605abd23f20 <line:216:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |   | |-TemplateTypeParmDecl 0x5605abd23fa8 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Up
| | |   | |-BinaryOperator 0x5605abd24a40 <line:217:13, line:220:56> '<dependent type>' '||'
| | |   | | |-ConceptSpecializationExpr 0x5605abd24160 <line:217:13, col:32> 'bool' Concept 0x5605abd1eea0 '__adl_swap'
| | |   | | | |-ImplicitConceptSpecializationDecl 0x5605abd24070 <line:194:10> col:10
| | |   | | | | |-TemplateArgument type 'type-parameter-0-0'
| | |   | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | | | | `-TemplateArgument type 'type-parameter-0-1'
| | |   | | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | | | |-TemplateArgument <line:217:24> type '_Tp':'type-parameter-0-0'
| | |   | | | | `-TemplateTypeParmType 0x5605abd23f70 '_Tp' dependent depth 0 index 0
| | |   | | | |   `-TemplateTypeParm 0x5605abd23f20 '_Tp'
| | |   | | | `-TemplateArgument <col:29> type '_Up':'type-parameter-0-1'
| | |   | | |   `-TemplateTypeParmType 0x5605abd24000 '_Up' dependent depth 0 index 1
| | |   | | |     `-TemplateTypeParm 0x5605abd23fa8 '_Up'
| | |   | | `-ParenExpr 0x5605abd24a20 <line:218:7, line:220:56> '<dependent type>'
| | |   | |   `-BinaryOperator 0x5605abd24a00 <line:218:8, line:220:55> '<dependent type>' '&&'
| | |   | |     |-BinaryOperator 0x5605abd24678 <line:218:8, line:219:53> '<dependent type>' '&&'
| | |   | |     | |-BinaryOperator 0x5605abd24350 <line:218:8, col:54> '<dependent type>' '&&'
| | |   | |     | | |-ConceptSpecializationExpr 0x5605abd242a0 <col:8, col:24> 'bool' Concept 0x5605abd12b80 'same_as'
| | |   | |     | | | |-ImplicitConceptSpecializationDecl 0x5605abd241b0 <line:62:13> col:13
| | |   | |     | | | | |-TemplateArgument type 'type-parameter-0-0'
| | |   | |     | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | |     | | | | `-TemplateArgument type 'type-parameter-0-1'
| | |   | |     | | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | |     | | | |-TemplateArgument <line:218:16> type '_Tp':'type-parameter-0-0'
| | |   | |     | | | | `-TemplateTypeParmType 0x5605abd23f70 '_Tp' dependent depth 0 index 0
| | |   | |     | | | |   `-TemplateTypeParm 0x5605abd23f20 '_Tp'
| | |   | |     | | | `-TemplateArgument <col:21> type '_Up':'type-parameter-0-1'
| | |   | |     | | |   `-TemplateTypeParmType 0x5605abd24000 '_Up' dependent depth 0 index 1
| | |   | |     | | |     `-TemplateTypeParm 0x5605abd23fa8 '_Up'
| | |   | |     | | `-UnresolvedLookupExpr 0x5605abd242d8 <col:29, col:54> '<dependent type>' lvalue (no ADL) = 'is_lvalue_reference_v' 0x5605abcc4048
| | |   | |     | |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   | |     | |     `-TemplateTypeParmType 0x5605abd23f70 '_Tp' dependent depth 0 index 0
| | |   | |     | |       `-TemplateTypeParm 0x5605abd23f20 '_Tp'
| | |   | |     | `-ConceptSpecializationExpr 0x5605abd24650 <line:219:11, col:53> 'bool' Concept 0x5605abd1d978 'move_constructible'
| | |   | |     |   |-ImplicitConceptSpecializationDecl 0x5605abd24598 <line:173:13> col:13
| | |   | |     |   | `-TemplateArgument type 'typename remove_reference<type-parameter-0-0>::type'
| | |   | |     |   |   `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| | |   | |     |   `-TemplateArgument <line:219:30, <scratch space>:213:1> type 'remove_reference_t<_Tp>':'typename remove_reference<type-parameter-0-0>::type'
| | |   | |     |     `-ElaboratedType 0x5605abd24520 'remove_reference_t<_Tp>' sugar dependent
| | |   | |     |       `-TemplateSpecializationType 0x5605abd244d0 'remove_reference_t<_Tp>' sugar dependent alias
| | |   | |     |         |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | |   | |     |         | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | |   | |     |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   | |     |         | `-TemplateTypeParmType 0x5605abd23f70 '_Tp' dependent depth 0 index 0
| | |   | |     |         |   `-TemplateTypeParm 0x5605abd23f20 '_Tp'
| | |   | |     |         `-DependentNameType 0x5605abd24480 'typename remove_reference<_Tp>::type' dependent
| | |   | |     `-ConceptSpecializationExpr 0x5605abd249d8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:220:11, col:55> 'bool' Concept 0x5605abd1bb70 'assignable_from'
| | |   | |       |-ImplicitConceptSpecializationDecl 0x5605abd248e8 <line:146:13> col:13
| | |   | |       | |-TemplateArgument type 'type-parameter-0-0'
| | |   | |       | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | |       | `-TemplateArgument type 'typename remove_reference<type-parameter-0-0>::type'
| | |   | |       |   `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| | |   | |       |-TemplateArgument <line:220:27> type '_Tp':'type-parameter-0-0'
| | |   | |       | `-TemplateTypeParmType 0x5605abd23f70 '_Tp' dependent depth 0 index 0
| | |   | |       |   `-TemplateTypeParm 0x5605abd23f20 '_Tp'
| | |   | |       `-TemplateArgument <col:32, <scratch space>:214:1> type 'remove_reference_t<_Tp>':'typename remove_reference<type-parameter-0-0>::type'
| | |   | |         `-ElaboratedType 0x5605abd24870 'remove_reference_t<_Tp>' sugar dependent
| | |   | |           `-TemplateSpecializationType 0x5605abd24820 'remove_reference_t<_Tp>' sugar dependent alias
| | |   | |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | |   | |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | |   | |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   | |             | `-TemplateTypeParmType 0x5605abd23f70 '_Tp' dependent depth 0 index 0
| | |   | |             |   `-TemplateTypeParm 0x5605abd23f20 '_Tp'
| | |   | |             `-DependentNameType 0x5605abd247d0 'typename remove_reference<_Tp>::type' dependent
| | |   | `-CXXMethodDecl 0x5605abd24d10 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:221:4, line:233:4> line:222:4 constexpr operator() 'void (_Tp &&, _Up &&) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
| | |   |   |-ParmVarDecl 0x5605abd24ad8 <col:15, col:21> col:21 referenced __t '_Tp &&'
| | |   |   |-ParmVarDecl 0x5605abd24b88 <col:26, col:32> col:32 referenced __u '_Up &&'
| | |   |   `-CompoundStmt 0x5605abd29da0 <line:224:4, line:233:4>
| | |   |     `-IfStmt 0x5605abd29d70 <line:225:6, line:232:8> has_else constexpr
| | |   |       |-ConceptSpecializationExpr 0x5605abd29238 <line:225:20, col:39> 'bool' Concept 0x5605abd1eea0 '__adl_swap'
| | |   |       | |-ImplicitConceptSpecializationDecl 0x5605abd29148 <line:194:10> col:10
| | |   |       | | |-TemplateArgument type 'type-parameter-0-0'
| | |   |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |       | | `-TemplateArgument type 'type-parameter-0-1'
| | |   |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |       | |-TemplateArgument <line:225:31> type '_Tp':'type-parameter-0-0'
| | |   |       | | `-TemplateTypeParmType 0x5605abd23f70 '_Tp' dependent depth 0 index 0
| | |   |       | |   `-TemplateTypeParm 0x5605abd23f20 '_Tp'
| | |   |       | `-TemplateArgument <col:36> type '_Up':'type-parameter-0-1'
| | |   |       |   `-TemplateTypeParmType 0x5605abd24000 '_Up' dependent depth 0 index 1
| | |   |       |     `-TemplateTypeParm 0x5605abd23fa8 '_Up'
| | |   |       |-CallExpr 0x5605abd29368 <line:226:8, col:61> '<dependent type>'
| | |   |       | |-UnresolvedLookupExpr 0x5605abd29260 <col:8> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5605abd1ec68
| | |   |       | |-CXXStaticCastExpr 0x5605abd292d8 <col:13, col:35> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |   |       | | `-DeclRefExpr 0x5605abd292a8 <col:32> '_Tp' lvalue ParmVar 0x5605abd24ad8 '__t' '_Tp &&'
| | |   |       | `-CXXStaticCastExpr 0x5605abd29338 <col:38, col:60> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |   |       |   `-DeclRefExpr 0x5605abd29308 <col:57> '_Up' lvalue ParmVar 0x5605abd24b88 '__u' '_Up &&'
| | |   |       `-CompoundStmt 0x5605abd29d48 <line:228:8, line:232:8>
| | |   |         |-DeclStmt 0x5605abd29730 <line:229:3, col:59>
| | |   |         | `-VarDecl 0x5605abd293b8 <col:3, col:58> col:8 referenced __tmp 'auto' cinit
| | |   |         |   `-CXXStaticCastExpr 0x5605abd296c8 <col:16, col:58> 'remove_reference_t<_Tp>':'typename remove_reference<_Tp>::type' xvalue static_cast<remove_reference_t<_Tp> &&> <Dependent>
| | |   |         |     `-DeclRefExpr 0x5605abd29620 <col:55> '_Tp' lvalue ParmVar 0x5605abd24ad8 '__t' '_Tp &&'
| | |   |         |-BinaryOperator 0x5605abd29a18 <line:230:3, col:51> '<dependent type>' '='
| | |   |         | |-DeclRefExpr 0x5605abd29748 <col:3> '_Tp' lvalue ParmVar 0x5605abd24ad8 '__t' '_Tp &&'
| | |   |         | `-CXXStaticCastExpr 0x5605abd299e8 <col:9, col:51> 'remove_reference_t<_Tp>':'typename remove_reference<_Tp>::type' xvalue static_cast<remove_reference_t<_Tp> &&> <Dependent>
| | |   |         |   `-DeclRefExpr 0x5605abd29970 <col:48> '_Up' lvalue ParmVar 0x5605abd24b88 '__u' '_Up &&'
| | |   |         `-BinaryOperator 0x5605abd29d28 <line:231:3, col:53> '<dependent type>' '='
| | |   |           |-DeclRefExpr 0x5605abd29a38 <col:3> '_Up' lvalue ParmVar 0x5605abd24b88 '__u' '_Up &&'
| | |   |           `-CXXStaticCastExpr 0x5605abd29cf8 <col:9, col:53> 'remove_reference_t<_Tp>':'typename remove_reference<_Tp>::type' xvalue static_cast<remove_reference_t<_Tp> &&> <Dependent>
| | |   |             `-DeclRefExpr 0x5605abd29c60 <col:48> 'auto' lvalue Var 0x5605abd293b8 '__tmp' 'auto'
| | |   `-FunctionTemplateDecl 0x5605abd260d0 <line:235:2, line:245:4> line:240:4 operator()
| | |     |-TemplateTypeParmDecl 0x5605abd24e48 <line:235:11, col:20> col:20 referenced typename depth 0 index 0 _Tp
| | |     |-TemplateTypeParmDecl 0x5605abd24ed8 <col:25, col:34> col:34 referenced typename depth 0 index 1 _Up
| | |     |-NonTypeTemplateParmDecl 0x5605abd24f78 <col:39, col:46> col:46 referenced 'size_t':'unsigned long' depth 0 index 2 _Num
| | |     |-RequiresExpr 0x5605abd25b48 <line:236:13, line:238:4> 'bool'
| | |     | |-ParmVarDecl 0x5605abd25080 <line:236:22, col:35> col:35 referenced __swap 'const _Swap &'
| | |     | |-ParmVarDecl 0x5605abd25138 <col:43, col:48> col:48 referenced __e1 '_Tp &'
| | |     | |-ParmVarDecl 0x5605abd25988 <col:54, col:59> col:59 referenced __e2 '_Up &'
| | |     | `-SimpleRequirement 0x5605abd25b18 dependent
| | |     |   `-CallExpr 0x5605abd25ae8 <line:237:6, col:23> '<dependent type>'
| | |     |     |-DeclRefExpr 0x5605abd25a88 <col:6> 'const _Swap':'const std::ranges::__swap::_Swap' lvalue ParmVar 0x5605abd25080 '__swap' 'const _Swap &' non_odr_use_unevaluated
| | |     |     |-DeclRefExpr 0x5605abd25aa8 <col:13> '_Tp' lvalue ParmVar 0x5605abd25138 '__e1' '_Tp &' non_odr_use_unevaluated
| | |     |     `-DeclRefExpr 0x5605abd25ac8 <col:19> '_Up' lvalue ParmVar 0x5605abd25988 '__e2' '_Up &' non_odr_use_unevaluated
| | |     `-CXXMethodDecl 0x5605abd26020 <line:239:4, line:245:4> line:240:4 constexpr operator() 'void (_Tp (&)[_Num], _Up (&)[_Num]) const noexcept(noexcept(std::declval<const _Swap &>()(*__e1, *__e2)))' implicit-inline
| | |       |-ParmVarDecl 0x5605abd25cf8 <col:15, col:31> col:21 referenced __e1 '_Tp (&)[_Num]'
| | |       |-ParmVarDecl 0x5605abd25ec8 <col:34, col:50> col:40 referenced __e2 '_Up (&)[_Num]'
| | |       `-CompoundStmt 0x5605abd2a0c0 <line:242:4, line:245:4>
| | |         `-ForStmt 0x5605abd2a088 <line:243:6, line:244:36>
| | |           |-DeclStmt 0x5605abd29e88 <line:243:11, col:25>
| | |           | `-VarDecl 0x5605abd29dd0 <col:11, col:24> col:18 referenced __n 'size_t':'unsigned long' cinit
| | |           |   `-ImplicitCastExpr 0x5605abd29e58 <col:24> 'size_t':'unsigned long' <IntegralCast>
| | |           |     `-IntegerLiteral 0x5605abd29e38 <col:24> 'int' 0
| | |           |-<<<NULL>>>
| | |           |-BinaryOperator 0x5605abd29ef8 <col:27, col:33> 'bool' '<'
| | |           | |-ImplicitCastExpr 0x5605abd29ee0 <col:27> 'size_t':'unsigned long' <LValueToRValue>
| | |           | | `-DeclRefExpr 0x5605abd29ea0 <col:27> 'size_t':'unsigned long' lvalue Var 0x5605abd29dd0 '__n' 'size_t':'unsigned long'
| | |           | `-DeclRefExpr 0x5605abd29ec0 <col:33> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abd24f78 '_Num' 'size_t':'unsigned long'
| | |           |-UnaryOperator 0x5605abd29f38 <col:39, col:41> 'size_t':'unsigned long' lvalue prefix '++'
| | |           | `-DeclRefExpr 0x5605abd29f18 <col:41> 'size_t':'unsigned long' lvalue Var 0x5605abd29dd0 '__n' 'size_t':'unsigned long'
| | |           `-CallExpr 0x5605abd2a058 <line:244:8, col:36> '<dependent type>'
| | |             |-ParenExpr 0x5605abd29f78 <col:8, col:14> 'const std::ranges::__swap::_Swap' lvalue
| | |             | `-UnaryOperator 0x5605abd29f60 <col:9, col:10> 'const std::ranges::__swap::_Swap' lvalue prefix '*' cannot overflow
| | |             |   `-CXXThisExpr 0x5605abd29f50 <col:10> 'const std::ranges::__swap::_Swap *' this
| | |             |-ArraySubscriptExpr 0x5605abd29fd8 <col:16, col:24> '_Tp' lvalue
| | |             | |-DeclRefExpr 0x5605abd29f98 <col:16> '_Tp[_Num]' lvalue ParmVar 0x5605abd25cf8 '__e1' '_Tp (&)[_Num]'
| | |             | `-DeclRefExpr 0x5605abd29fb8 <col:21> 'size_t':'unsigned long' lvalue Var 0x5605abd29dd0 '__n' 'size_t':'unsigned long'
| | |             `-ArraySubscriptExpr 0x5605abd2a038 <col:27, col:35> '_Up' lvalue
| | |               |-DeclRefExpr 0x5605abd29ff8 <col:27> '_Up[_Num]' lvalue ParmVar 0x5605abd25ec8 '__e2' '_Up (&)[_Num]'
| | |               `-DeclRefExpr 0x5605abd2a018 <col:32> 'size_t':'unsigned long' lvalue Var 0x5605abd29dd0 '__n' 'size_t':'unsigned long'
| | `-NamespaceDecl 0x5605abd2a140 <line:250:5, line:252:5> line:250:22 _Cpo inline
| |   `-VarDecl 0x5605abd2a268 <line:251:7, col:43> col:38 referenced swap 'const __swap::_Swap':'const std::ranges::__swap::_Swap' inline constexpr listinit
| |     |-value: Struct
| |     `-InitListExpr 0x5605abd2a310 <col:42, col:43> 'const __swap::_Swap':'const std::ranges::__swap::_Swap'
| |-ConceptDecl 0x5605abd2a538 <line:255:3, line:257:64> line:256:13 swappable
| | |-TemplateTypeParmDecl 0x5605abd2a488 <line:255:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-RequiresExpr 0x5605abd2a838 <line:257:9, col:64> 'bool'
| |   |-ParmVarDecl 0x5605abd2a5c8 <col:18, col:23> col:23 referenced __a '_Tp &'
| |   |-ParmVarDecl 0x5605abd2a648 <col:28, col:33> col:33 referenced __b '_Tp &'
| |   `-SimpleRequirement 0x5605abd2a808 dependent
| |     `-CallExpr 0x5605abd2a7d8 <col:40, col:61> '<dependent type>'
| |       |-DeclRefExpr 0x5605abd2a768 <col:40, col:48> 'const __swap::_Swap':'const std::ranges::__swap::_Swap' lvalue Var 0x5605abd2a268 'swap' 'const __swap::_Swap':'const std::ranges::__swap::_Swap' non_odr_use_unevaluated
| |       | `-NestedNameSpecifier Namespace 0x5605abd1e7d8 'ranges'
| |       |-DeclRefExpr 0x5605abd2a798 <col:53> '_Tp' lvalue ParmVar 0x5605abd2a5c8 '__a' '_Tp &' non_odr_use_unevaluated
| |       `-DeclRefExpr 0x5605abd2a7b8 <col:58> '_Tp' lvalue ParmVar 0x5605abd2a648 '__b' '_Tp &' non_odr_use_unevaluated
| |-ConceptDecl 0x5605abd2e000 <line:259:3, line:266:7> line:260:13 swappable_with
| | |-TemplateTypeParmDecl 0x5605abd2a888 <line:259:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd2df48 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-BinaryOperator 0x5605abd2e990 <line:260:30, line:266:7> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd2e160 <line:260:30, col:60> 'bool' Concept 0x5605abd14fd0 'common_reference_with'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd2e070 <line:84:13> col:13
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | `-TemplateArgument type 'type-parameter-0-1'
| |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | |-TemplateArgument <line:260:52> type '_Tp':'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abd2a8e0 '_Tp' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x5605abd2a888 '_Tp'
| |   | `-TemplateArgument <col:57> type '_Up':'type-parameter-0-1'
| |   |   `-TemplateTypeParmType 0x5605abd2dfa0 '_Up' dependent depth 0 index 1
| |   |     `-TemplateTypeParm 0x5605abd2df48 '_Up'
| |   `-RequiresExpr 0x5605abd2e930 <line:261:10, line:266:7> 'bool'
| |     |-ParmVarDecl 0x5605abd2e1d8 <line:261:19, col:25> col:25 referenced __t '_Tp &&'
| |     |-ParmVarDecl 0x5605abd2e288 <col:30, col:36> col:36 referenced __u '_Up &&'
| |     |-SimpleRequirement 0x5605abd2e4b0 dependent
| |     | `-CallExpr 0x5605abd2e480 <line:262:2, col:63> '<dependent type>'
| |     |   |-DeclRefExpr 0x5605abd2e390 <col:2, col:10> 'const __swap::_Swap':'const std::ranges::__swap::_Swap' lvalue Var 0x5605abd2a268 'swap' 'const __swap::_Swap':'const std::ranges::__swap::_Swap' non_odr_use_unevaluated
| |     |   | `-NestedNameSpecifier Namespace 0x5605abd1e7d8 'ranges'
| |     |   |-CXXStaticCastExpr 0x5605abd2e3f0 <col:15, col:37> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |     |   | `-DeclRefExpr 0x5605abd2e3c0 <col:34> '_Tp' lvalue ParmVar 0x5605abd2e1d8 '__t' '_Tp &&' non_odr_use_unevaluated
| |     |   `-CXXStaticCastExpr 0x5605abd2e450 <col:40, col:62> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |     |     `-DeclRefExpr 0x5605abd2e420 <col:59> '_Tp' lvalue ParmVar 0x5605abd2e1d8 '__t' '_Tp &&' non_odr_use_unevaluated
| |     |-SimpleRequirement 0x5605abd2e620 dependent
| |     | `-CallExpr 0x5605abd2e5f0 <line:263:2, col:63> '<dependent type>'
| |     |   |-DeclRefExpr 0x5605abd2e500 <col:2, col:10> 'const __swap::_Swap':'const std::ranges::__swap::_Swap' lvalue Var 0x5605abd2a268 'swap' 'const __swap::_Swap':'const std::ranges::__swap::_Swap' non_odr_use_unevaluated
| |     |   | `-NestedNameSpecifier Namespace 0x5605abd1e7d8 'ranges'
| |     |   |-CXXStaticCastExpr 0x5605abd2e560 <col:15, col:37> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |     |   | `-DeclRefExpr 0x5605abd2e530 <col:34> '_Up' lvalue ParmVar 0x5605abd2e288 '__u' '_Up &&' non_odr_use_unevaluated
| |     |   `-CXXStaticCastExpr 0x5605abd2e5c0 <col:40, col:62> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |     |     `-DeclRefExpr 0x5605abd2e590 <col:59> '_Up' lvalue ParmVar 0x5605abd2e288 '__u' '_Up &&' non_odr_use_unevaluated
| |     |-SimpleRequirement 0x5605abd2e790 dependent
| |     | `-CallExpr 0x5605abd2e760 <line:264:2, col:63> '<dependent type>'
| |     |   |-DeclRefExpr 0x5605abd2e670 <col:2, col:10> 'const __swap::_Swap':'const std::ranges::__swap::_Swap' lvalue Var 0x5605abd2a268 'swap' 'const __swap::_Swap':'const std::ranges::__swap::_Swap' non_odr_use_unevaluated
| |     |   | `-NestedNameSpecifier Namespace 0x5605abd1e7d8 'ranges'
| |     |   |-CXXStaticCastExpr 0x5605abd2e6d0 <col:15, col:37> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |     |   | `-DeclRefExpr 0x5605abd2e6a0 <col:34> '_Tp' lvalue ParmVar 0x5605abd2e1d8 '__t' '_Tp &&' non_odr_use_unevaluated
| |     |   `-CXXStaticCastExpr 0x5605abd2e730 <col:40, col:62> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |     |     `-DeclRefExpr 0x5605abd2e700 <col:59> '_Up' lvalue ParmVar 0x5605abd2e288 '__u' '_Up &&' non_odr_use_unevaluated
| |     `-SimpleRequirement 0x5605abd2e900 dependent
| |       `-CallExpr 0x5605abd2e8d0 <line:265:2, col:63> '<dependent type>'
| |         |-DeclRefExpr 0x5605abd2e7e0 <col:2, col:10> 'const __swap::_Swap':'const std::ranges::__swap::_Swap' lvalue Var 0x5605abd2a268 'swap' 'const __swap::_Swap':'const std::ranges::__swap::_Swap' non_odr_use_unevaluated
| |         | `-NestedNameSpecifier Namespace 0x5605abd1e7d8 'ranges'
| |         |-CXXStaticCastExpr 0x5605abd2e840 <col:15, col:37> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |         | `-DeclRefExpr 0x5605abd2e810 <col:34> '_Up' lvalue ParmVar 0x5605abd2e288 '__u' '_Up &&' non_odr_use_unevaluated
| |         `-CXXStaticCastExpr 0x5605abd2e8a0 <col:40, col:62> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |           `-DeclRefExpr 0x5605abd2e870 <col:59> '_Tp' lvalue ParmVar 0x5605abd2e1d8 '__t' '_Tp &&' non_odr_use_unevaluated
| |-ConceptDecl 0x5605abd2ea68 <line:270:3, line:272:53> line:271:13 movable
| | |-TemplateTypeParmDecl 0x5605abd2e9b8 <line:270:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd2ef10 <line:271:23, line:272:53> '<dependent type>' '&&'
| |   |-BinaryOperator 0x5605abd2ede0 <line:271:23, line:272:35> '<dependent type>' '&&'
| |   | |-BinaryOperator 0x5605abd2ec48 <line:271:23, col:65> '<dependent type>' '&&'
| |   | | |-UnresolvedLookupExpr 0x5605abd2ead8 <col:23, col:38> '<dependent type>' lvalue (no ADL) = 'is_object_v' 0x5605abcc6788
| |   | | | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | | |   `-TemplateTypeParmType 0x5605abd2ea10 '_Tp' dependent depth 0 index 0
| |   | | |     `-TemplateTypeParm 0x5605abd2e9b8 '_Tp'
| |   | | `-ConceptSpecializationExpr 0x5605abd2ec20 <col:43, col:65> 'bool' Concept 0x5605abd1d978 'move_constructible'
| |   | |   |-ImplicitConceptSpecializationDecl 0x5605abd2eb68 <line:173:13> col:13
| |   | |   | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   `-TemplateArgument <line:271:62> type '_Tp':'type-parameter-0-0'
| |   | |     `-TemplateTypeParmType 0x5605abd2ea10 '_Tp' dependent depth 0 index 0
| |   | |       `-TemplateTypeParm 0x5605abd2e9b8 '_Tp'
| |   | `-ConceptSpecializationExpr 0x5605abd2edb8 <line:272:10, col:35> 'bool' Concept 0x5605abd1bb70 'assignable_from'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd2ecc8 <line:146:13> col:13
| |   |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   |   | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| |   |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   | `-TemplateArgument type 'type-parameter-0-0'
| |   |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   |-TemplateArgument <line:272:26, col:29> type '_Tp &':'type-parameter-0-0 &'
| |   |   | `-LValueReferenceType 0x5605abd2ec70 '_Tp &' dependent
| |   |   |   `-TemplateTypeParmType 0x5605abd2ea10 '_Tp' dependent depth 0 index 0
| |   |   |     `-TemplateTypeParm 0x5605abd2e9b8 '_Tp'
| |   |   `-TemplateArgument <col:32> type '_Tp':'type-parameter-0-0'
| |   |     `-TemplateTypeParmType 0x5605abd2ea10 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x5605abd2e9b8 '_Tp'
| |   `-ConceptSpecializationExpr 0x5605abd2eee8 <col:40, col:53> 'bool' Concept 0x5605abd2a538 'swappable'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd2ee30 <line:256:13> col:13
| |     | `-TemplateArgument type 'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     `-TemplateArgument <line:272:50> type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd2ea10 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd2e9b8 '_Tp'
| |-ConceptDecl 0x5605abd2efe8 <line:274:3, line:277:41> line:275:13 copyable
| | |-TemplateTypeParmDecl 0x5605abd2ef38 <line:274:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd2f6d0 <line:275:24, line:277:41> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd2f570 <line:275:24, line:276:73> 'bool' '&&'
| |   | |-BinaryOperator 0x5605abd2f3e0 <line:275:24, line:276:36> 'bool' '&&'
| |   | | |-BinaryOperator 0x5605abd2f250 <line:275:24, col:62> 'bool' '&&'
| |   | | | |-ConceptSpecializationExpr 0x5605abd2f118 <col:24, col:46> 'bool' Concept 0x5605abd1dd48 'copy_constructible'
| |   | | | | |-ImplicitConceptSpecializationDecl 0x5605abd2f060 <line:178:13> col:13
| |   | | | | | `-TemplateArgument type 'type-parameter-0-0'
| |   | | | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | `-TemplateArgument <line:275:43> type '_Tp':'type-parameter-0-0'
| |   | | | |   `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |   | | | |     `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |   | | | `-ConceptSpecializationExpr 0x5605abd2f228 <col:51, col:62> 'bool' Concept 0x5605abd2ea68 'movable'
| |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abd2f170 <line:271:13> col:13
| |   | | |   | `-TemplateArgument type 'type-parameter-0-0'
| |   | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | |   `-TemplateArgument <line:275:59> type '_Tp':'type-parameter-0-0'
| |   | | |     `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |   | | |       `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |   | | `-ConceptSpecializationExpr 0x5605abd2f3b8 <line:276:10, col:36> 'bool' Concept 0x5605abd1bb70 'assignable_from'
| |   | |   |-ImplicitConceptSpecializationDecl 0x5605abd2f2c8 <line:146:13> col:13
| |   | |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   | |   | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| |   | |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   | `-TemplateArgument type 'type-parameter-0-0 &'
| |   | |   |   `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| |   | |   |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   |-TemplateArgument <line:276:26, col:29> type '_Tp &':'type-parameter-0-0 &'
| |   | |   | `-LValueReferenceType 0x5605abd2f270 '_Tp &' dependent
| |   | |   |   `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |   | |   |     `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |   | |   `-TemplateArgument <col:32, col:35> type '_Tp &':'type-parameter-0-0 &'
| |   | |     `-LValueReferenceType 0x5605abd2f270 '_Tp &' dependent
| |   | |       `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |   | |         `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |   | `-ConceptSpecializationExpr 0x5605abd2f548 <col:41, col:73> 'bool' Concept 0x5605abd1bb70 'assignable_from'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd2f458 <line:146:13> col:13
| |   |   | |-TemplateArgument type 'type-parameter-0-0 &'
| |   |   | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| |   |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   | `-TemplateArgument type 'const type-parameter-0-0 &'
| |   |   |   `-LValueReferenceType 0x5605abc6c3a0 'const type-parameter-0-0 &' dependent
| |   |   |     `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| |   |   |       `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   |-TemplateArgument <line:276:57, col:60> type '_Tp &':'type-parameter-0-0 &'
| |   |   | `-LValueReferenceType 0x5605abd2f270 '_Tp &' dependent
| |   |   |   `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |   |   |     `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |   |   `-TemplateArgument <col:69, col:72> type 'const _Tp &':'const type-parameter-0-0 &'
| |   |     `-LValueReferenceType 0x5605abd2f410 'const _Tp &' dependent
| |   |       `-QualType 0x5605abd2ef91 'const _Tp' const
| |   |         `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |   |           `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |   `-ConceptSpecializationExpr 0x5605abd2f6a8 <line:277:10, col:41> 'bool' Concept 0x5605abd1bb70 'assignable_from'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd2f5b8 <line:146:13> col:13
| |     | |-TemplateArgument type 'type-parameter-0-0 &'
| |     | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| |     | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument type 'const type-parameter-0-0'
| |     |   `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| |     |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     |-TemplateArgument <line:277:26, col:29> type '_Tp &':'type-parameter-0-0 &'
| |     | `-LValueReferenceType 0x5605abd2f270 '_Tp &' dependent
| |     |   `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |     |     `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |     `-TemplateArgument <col:38> type 'const _Tp':'const type-parameter-0-0'
| |       `-QualType 0x5605abd2ef91 'const _Tp' const
| |         `-TemplateTypeParmType 0x5605abd2ef90 '_Tp' dependent depth 0 index 0
| |           `-TemplateTypeParm 0x5605abd2ef38 '_Tp'
| |-ConceptDecl 0x5605abd2f7a8 <line:279:3, line:280:69> col:13 semiregular
| | |-TemplateTypeParmDecl 0x5605abd2f6f8 <line:279:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd2fa10 <line:280:27, col:69> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd2f8d8 <col:27, col:39> 'bool' Concept 0x5605abd2efe8 'copyable'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd2f820 <line:275:13> col:13
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument <line:280:36> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd2f750 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd2f6f8 '_Tp'
| |   `-ConceptSpecializationExpr 0x5605abd2f9e8 <col:44, col:69> 'bool' Concept 0x5605abd1d518 'default_initializable'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd2f930 <line:164:13> col:13
| |     | `-TemplateArgument type 'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     `-TemplateArgument <line:280:66> type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd2f750 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd2f6f8 '_Tp'
| |-NamespaceDecl 0x5605abd2fa38 prev 0x5605abd196c8 <line:285:3, line:295:3> line:285:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | |-ConceptDecl 0x5605abd2fb58 <line:287:5, line:288:65> col:15 __boolean_testable_impl
| | | |-TemplateTypeParmDecl 0x5605abd2fab0 <line:287:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | `-ConceptSpecializationExpr 0x5605abd2fcb8 <line:288:41, col:65> 'bool' Concept 0x5605abd14b90 'convertible_to'
| | |   |-ImplicitConceptSpecializationDecl 0x5605abd2fbc8 <line:79:13> col:13
| | |   | |-TemplateArgument type 'type-parameter-0-0'
| | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | `-TemplateArgument type 'bool'
| | |   |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | |   |-TemplateArgument <line:288:56> type '_Tp':'type-parameter-0-0'
| | |   | `-TemplateTypeParmType 0x5605abd2fb00 '_Tp' dependent depth 0 index 0
| | |   |   `-TemplateTypeParm 0x5605abd2fab0 '_Tp'
| | |   `-TemplateArgument <col:61> type 'bool'
| | |     `-BuiltinType 0x5605aba9c9f0 'bool'
| | `-ConceptDecl 0x5605abd2fd98 <line:290:5, line:294:63> line:291:15 __boolean_testable
| |   |-TemplateTypeParmDecl 0x5605abd2fce8 <line:290:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   `-BinaryOperator 0x5605abd30310 <line:292:4, line:294:63> 'bool' '&&'
| |     |-ConceptSpecializationExpr 0x5605abd2fec8 <line:292:4, col:31> 'bool' Concept 0x5605abd2fb58 '__boolean_testable_impl'
| |     | |-ImplicitConceptSpecializationDecl 0x5605abd2fe10 <line:288:15> col:15
| |     | | `-TemplateArgument type 'type-parameter-0-0'
| |     | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument <line:292:28> type '_Tp':'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abd2fd40 '_Tp' dependent depth 0 index 0
| |     |     `-TemplateTypeParm 0x5605abd2fce8 '_Tp'
| |     `-RequiresExpr 0x5605abd302d0 <line:293:7, line:294:63> 'bool'
| |       |-ParmVarDecl 0x5605abd2ff58 <line:293:16, col:22> col:22 referenced __t '_Tp &&'
| |       `-CompoundRequirement 0x5605abd302a0 dependent
| |         |-UnaryOperator 0x5605abd30088 <line:294:8, col:31> '<dependent type>' prefix '!' cannot overflow
| |         | `-CXXStaticCastExpr 0x5605abd30058 <col:9, col:31> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |         |   `-DeclRefExpr 0x5605abd30028 <col:28> '_Tp' lvalue ParmVar 0x5605abd2ff58 '__t' '_Tp &&' non_odr_use_unevaluated
| |         `-ConceptSpecializationExpr 0x5605abd30210 <col:38> 'bool' Concept 0x5605abd2fb58 '__boolean_testable_impl'
| |           |-ImplicitConceptSpecializationDecl 0x5605abd30158 <line:288:15> col:15
| |           | `-TemplateArgument type 'type-parameter-1-0'
| |           |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |           `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |             `-TemplateTypeParmType 0x5605abd30110 'expr-type' dependent depth 1 index 0
| |               `-TemplateTypeParm 0x5605abd300a8 'expr-type'
| |-NamespaceDecl 0x5605abd30338 prev 0x5605abd2fa38 <line:299:3, line:309:3> line:299:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | `-ConceptDecl 0x5605abd304f0 <line:301:5, line:308:2> line:302:15 __weakly_eq_cmp_with
| |   |-TemplateTypeParmDecl 0x5605abd303b0 <line:301:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abd30438 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| |   `-RequiresExpr 0x5605abd31810 <line:303:4, line:308:2> 'bool'
| |     |-ParmVarDecl 0x5605abd308e8 <line:303:13, col:35> col:35 referenced __t '__detail::__cref<_Tp>':'const remove_reference_t<_Tp> &'
| |     |-ParmVarDecl 0x5605abd30cd8 <col:40, col:62> col:62 referenced __u '__detail::__cref<_Up>':'const remove_reference_t<_Up> &'
| |     |-CompoundRequirement 0x5605abd31030 dependent
| |     | |-BinaryOperator 0x5605abd30e00 <line:304:6, col:13> '<dependent type>' '=='
| |     | | |-DeclRefExpr 0x5605abd30dc0 <col:6> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd308e8 '__t' '__detail::__cref<_Tp>':'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd30de0 <col:13> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd30cd8 '__u' '__detail::__cref<_Up>':'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd30fa0 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd30ee8 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd30ea0 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd30e40 'expr-type'
| |     |-CompoundRequirement 0x5605abd312c0 dependent
| |     | |-BinaryOperator 0x5605abd310a0 <line:305:6, col:13> '<dependent type>' '!='
| |     | | |-DeclRefExpr 0x5605abd31060 <col:6> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd308e8 '__t' '__detail::__cref<_Tp>':'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd31080 <col:13> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd30cd8 '__u' '__detail::__cref<_Up>':'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd31230 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd31178 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd31130 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd310c8 'expr-type'
| |     |-CompoundRequirement 0x5605abd31550 dependent
| |     | |-BinaryOperator 0x5605abd31330 <line:306:6, col:13> '<dependent type>' '=='
| |     | | |-DeclRefExpr 0x5605abd312f0 <col:6> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd30cd8 '__u' '__detail::__cref<_Up>':'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd31310 <col:13> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd308e8 '__t' '__detail::__cref<_Tp>':'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd314c0 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd31408 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd313c0 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd31358 'expr-type'
| |     `-CompoundRequirement 0x5605abd317e0 dependent
| |       |-BinaryOperator 0x5605abd315c0 <line:307:6, col:13> '<dependent type>' '!='
| |       | |-DeclRefExpr 0x5605abd31580 <col:6> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd30cd8 '__u' '__detail::__cref<_Up>':'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |       | `-DeclRefExpr 0x5605abd315a0 <col:13> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd308e8 '__t' '__detail::__cref<_Tp>':'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |       `-ConceptSpecializationExpr 0x5605abd31750 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |         |-ImplicitConceptSpecializationDecl 0x5605abd31698 <line:291:15> col:15
| |         | `-TemplateArgument type 'type-parameter-1-0'
| |         |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |         `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |           `-TemplateTypeParmType 0x5605abd31650 'expr-type' dependent depth 1 index 0
| |             `-TemplateTypeParm 0x5605abd315e8 'expr-type'
| |-ConceptDecl 0x5605abd31928 <line:311:3, line:312:74> col:13 equality_comparable
| | |-TemplateTypeParmDecl 0x5605abd31878 <line:311:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-ConceptSpecializationExpr 0x5605abd31ac0 <line:312:35, col:74> 'bool' Concept 0x5605abd304f0 '__weakly_eq_cmp_with'
| |   |-ImplicitConceptSpecializationDecl 0x5605abd319d0 <line:302:15> col:15
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument type 'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |-TemplateArgument <line:312:66> type '_Tp':'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abd318d0 '_Tp' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abd31878 '_Tp'
| |   `-TemplateArgument <col:71> type '_Tp':'type-parameter-0-0'
| |     `-TemplateTypeParmType 0x5605abd318d0 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5605abd31878 '_Tp'
| |-ConceptDecl 0x5605abd31c30 <line:314:3, line:320:49> line:315:13 equality_comparable_with
| | |-TemplateTypeParmDecl 0x5605abd31af0 <line:314:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd31b78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-BinaryOperator 0x5605abd33478 <line:316:9, line:320:49> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd332f8 <line:316:9, line:319:29> 'bool' '&&'
| |   | |-BinaryOperator 0x5605abd326b8 <line:316:9, line:317:76> 'bool' '&&'
| |   | | |-BinaryOperator 0x5605abd31e80 <line:316:9, col:60> 'bool' '&&'
| |   | | | |-ConceptSpecializationExpr 0x5605abd31d60 <col:9, col:32> 'bool' Concept 0x5605abd31928 'equality_comparable'
| |   | | | | |-ImplicitConceptSpecializationDecl 0x5605abd31ca8 <line:312:13> col:13
| |   | | | | | `-TemplateArgument type 'type-parameter-0-0'
| |   | | | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | `-TemplateArgument <line:316:29> type '_Tp':'type-parameter-0-0'
| |   | | | |   `-TemplateTypeParmType 0x5605abd31b40 '_Tp' dependent depth 0 index 0
| |   | | | |     `-TemplateTypeParm 0x5605abd31af0 '_Tp'
| |   | | | `-ConceptSpecializationExpr 0x5605abd31e58 <col:37, col:60> 'bool' Concept 0x5605abd31928 'equality_comparable'
| |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abd31da0 <line:312:13> col:13
| |   | | |   | `-TemplateArgument type 'type-parameter-0-1'
| |   | | |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | | |   `-TemplateArgument <line:316:57> type '_Up':'type-parameter-0-1'
| |   | | |     `-TemplateTypeParmType 0x5605abd31bd0 '_Up' dependent depth 0 index 1
| |   | | |       `-TemplateTypeParm 0x5605abd31b78 '_Up'
| |   | | `-ConceptSpecializationExpr 0x5605abd32690 <line:317:10, col:76> 'bool' Concept 0x5605abd14fd0 'common_reference_with'
| |   | |   |-ImplicitConceptSpecializationDecl 0x5605abd325a0 <line:84:13> col:13
| |   | |   | |-TemplateArgument type 'const typename remove_reference<type-parameter-0-0>::type &'
| |   | |   | | `-LValueReferenceType 0x5605abd199e0 'const typename remove_reference<type-parameter-0-0>::type &' dependent
| |   | |   | |   `-QualType 0x5605abc0d391 'const typename remove_reference<type-parameter-0-0>::type' const
| |   | |   | |     `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| |   | |   | `-TemplateArgument type 'const typename remove_reference<type-parameter-0-1>::type &'
| |   | |   |   `-LValueReferenceType 0x5605abd1c210 'const typename remove_reference<type-parameter-0-1>::type &' dependent
| |   | |   |     `-QualType 0x5605abc8ad21 'const typename remove_reference<type-parameter-0-1>::type' const
| |   | |   |       `-DependentNameType 0x5605abc8ad20 'typename remove_reference<type-parameter-0-1>::type' dependent
| |   | |   |-TemplateArgument <line:317:32, col:52> type '__detail::__cref<_Tp>':'const typename remove_reference<type-parameter-0-0>::type &'
| |   | |   | `-ElaboratedType 0x5605abd32190 '__detail::__cref<_Tp>' sugar dependent
| |   | |   |   `-TemplateSpecializationType 0x5605abd32140 '__cref<_Tp>' sugar dependent alias
| |   | |   |     |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   | |   |     | |-NestedNameSpecifier Namespace 0x5605abd30338 '__detail'
| |   | |   |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 <line:120:5, line:121:51> col:7 __cref
| |   | |   |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | |   |     | `-TemplateTypeParmType 0x5605abd31b40 '_Tp' dependent depth 0 index 0
| |   | |   |     |   `-TemplateTypeParm 0x5605abd31af0 '_Tp'
| |   | |   |     `-LValueReferenceType 0x5605abd320e0 'const remove_reference_t<_Tp> &' dependent
| |   | |   |       `-QualType 0x5605abd320b1 'const remove_reference_t<_Tp>' const
| |   | |   |         `-ElaboratedType 0x5605abd320b0 'remove_reference_t<_Tp>' sugar dependent
| |   | |   |           `-TemplateSpecializationType 0x5605abd32060 'remove_reference_t<_Tp>' sugar dependent alias
| |   | |   |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   | |   |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   | |   |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | |   |             | `-TemplateTypeParmType 0x5605abd31b40 '_Tp' dependent depth 0 index 0
| |   | |   |             |   `-TemplateTypeParm 0x5605abd31af0 '_Tp'
| |   | |   |             `-DependentNameType 0x5605abd32010 'typename remove_reference<_Tp>::type' dependent
| |   | |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:317:55, <scratch space>:217:1> type '__detail::__cref<_Up>':'const typename remove_reference<type-parameter-0-1>::type &'
| |   | |     `-ElaboratedType 0x5605abd32500 '__detail::__cref<_Up>' sugar dependent
| |   | |       `-TemplateSpecializationType 0x5605abd324b0 '__cref<_Up>' sugar dependent alias
| |   | |         |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   | |         | |-NestedNameSpecifier Namespace 0x5605abd30338 '__detail'
| |   | |         | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   | |         |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | |         | `-TemplateTypeParmType 0x5605abd31bd0 '_Up' dependent depth 0 index 1
| |   | |         |   `-TemplateTypeParm 0x5605abd31b78 '_Up'
| |   | |         `-LValueReferenceType 0x5605abd32450 'const remove_reference_t<_Up> &' dependent
| |   | |           `-QualType 0x5605abd32421 'const remove_reference_t<_Up>' const
| |   | |             `-ElaboratedType 0x5605abd32420 'remove_reference_t<_Up>' sugar dependent
| |   | |               `-TemplateSpecializationType 0x5605abd323d0 'remove_reference_t<_Up>' sugar dependent alias
| |   | |                 |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   | |                 | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   | |                 |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | |                 | `-TemplateTypeParmType 0x5605abd31bd0 '_Up' dependent depth 0 index 1
| |   | |                 |   `-TemplateTypeParm 0x5605abd31b78 '_Up'
| |   | |                 `-DependentNameType 0x5605abd32380 'typename remove_reference<_Up>::type' dependent
| |   | `-ConceptSpecializationExpr 0x5605abd332d0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:318:10, line:319:29> 'bool' Concept 0x5605abd31928 'equality_comparable'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd33218 <line:312:13> col:13
| |   |   | `-TemplateArgument type 'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type'
| |   |   |   `-DependentNameType 0x5605abd330a0 'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type' dependent
| |   |   `-TemplateArgument <line:318:30, <scratch space>:219:1> type 'common_reference_t<__detail::__cref<_Tp>, __detail::__cref<_Up>>':'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type'
| |   |     `-ElaboratedType 0x5605abd33190 'common_reference_t<__detail::__cref<_Tp>, __detail::__cref<_Up>>' sugar dependent
| |   |       `-TemplateSpecializationType 0x5605abd33120 'common_reference_t<__detail::__cref<_Tp>, __detail::__cref<_Up>>' sugar dependent alias
| |   |         |-name: 'common_reference_t':'std::common_reference_t' qualified
| |   |         | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |   |         |-TemplateArgument type '__detail::__cref<_Tp>':'const typename remove_reference<type-parameter-0-0>::type &'
| |   |         | `-ElaboratedType 0x5605abd329b0 '__detail::__cref<_Tp>' sugar dependent
| |   |         |   `-TemplateSpecializationType 0x5605abd32960 '__cref<_Tp>' sugar dependent alias
| |   |         |     |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   |         |     | |-NestedNameSpecifier Namespace 0x5605abd30338 '__detail'
| |   |         |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |         |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |         |     | `-TemplateTypeParmType 0x5605abd31b40 '_Tp' dependent depth 0 index 0
| |   |         |     |   `-TemplateTypeParm 0x5605abd31af0 '_Tp'
| |   |         |     `-LValueReferenceType 0x5605abd32900 'const remove_reference_t<_Tp> &' dependent
| |   |         |       `-QualType 0x5605abd328d1 'const remove_reference_t<_Tp>' const
| |   |         |         `-ElaboratedType 0x5605abd328d0 'remove_reference_t<_Tp>' sugar dependent
| |   |         |           `-TemplateSpecializationType 0x5605abd32880 'remove_reference_t<_Tp>' sugar dependent alias
| |   |         |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |         |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |         |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |         |             | `-TemplateTypeParmType 0x5605abd31b40 '_Tp' dependent depth 0 index 0
| |   |         |             |   `-TemplateTypeParm 0x5605abd31af0 '_Tp'
| |   |         |             `-DependentNameType 0x5605abd32830 'typename remove_reference<_Tp>::type' dependent
| |   |         |-TemplateArgument type '__detail::__cref<_Up>':'const typename remove_reference<type-parameter-0-1>::type &'
| |   |         | `-ElaboratedType 0x5605abd32d20 '__detail::__cref<_Up>' sugar dependent
| |   |         |   `-TemplateSpecializationType 0x5605abd32cd0 '__cref<_Up>' sugar dependent alias
| |   |         |     |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   |         |     | |-NestedNameSpecifier Namespace 0x5605abd30338 '__detail'
| |   |         |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |         |     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |         |     | `-TemplateTypeParmType 0x5605abd31bd0 '_Up' dependent depth 0 index 1
| |   |         |     |   `-TemplateTypeParm 0x5605abd31b78 '_Up'
| |   |         |     `-LValueReferenceType 0x5605abd32c70 'const remove_reference_t<_Up> &' dependent
| |   |         |       `-QualType 0x5605abd32c41 'const remove_reference_t<_Up>' const
| |   |         |         `-ElaboratedType 0x5605abd32c40 'remove_reference_t<_Up>' sugar dependent
| |   |         |           `-TemplateSpecializationType 0x5605abd32bf0 'remove_reference_t<_Up>' sugar dependent alias
| |   |         |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |         |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |         |             |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |         |             | `-TemplateTypeParmType 0x5605abd31bd0 '_Up' dependent depth 0 index 1
| |   |         |             |   `-TemplateTypeParm 0x5605abd31b78 '_Up'
| |   |         |             `-DependentNameType 0x5605abd32ba0 'typename remove_reference<_Up>::type' dependent
| |   |         `-DependentNameType 0x5605abd330d0 'typename common_reference<__detail::__cref<_Tp>, __detail::__cref<_Up>>::type' dependent
| |   `-ConceptSpecializationExpr 0x5605abd33450 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:320:10, col:49> 'bool' Concept 0x5605abd304f0 '__weakly_eq_cmp_with'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd33360 <line:302:15> col:15
| |     | |-TemplateArgument type 'type-parameter-0-0'
| |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument type 'type-parameter-0-1'
| |     |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     |-TemplateArgument <line:320:41> type '_Tp':'type-parameter-0-0'
| |     | `-TemplateTypeParmType 0x5605abd31b40 '_Tp' dependent depth 0 index 0
| |     |   `-TemplateTypeParm 0x5605abd31af0 '_Tp'
| |     `-TemplateArgument <col:46> type '_Up':'type-parameter-0-1'
| |       `-TemplateTypeParmType 0x5605abd31bd0 '_Up' dependent depth 0 index 1
| |         `-TemplateTypeParm 0x5605abd31b78 '_Up'
| |-NamespaceDecl 0x5605abd334a0 prev 0x5605abd30338 <line:322:3, line:337:3> line:322:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | `-ConceptDecl 0x5605abd33660 <line:324:5, line:336:2> line:325:15 __partially_ordered_with
| |   |-TemplateTypeParmDecl 0x5605abd33518 <line:324:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abd335a8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| |   `-RequiresExpr 0x5605abd35160 <line:326:4, line:336:2> 'bool'
| |     |-ParmVarDecl 0x5605abd33910 <line:326:13, col:44> col:44 referenced __t 'const remove_reference_t<_Tp> &'
| |     |-ParmVarDecl 0x5605abd33be0 <line:327:6, col:37> col:37 referenced __u 'const remove_reference_t<_Up> &'
| |     |-CompoundRequirement 0x5605abd33f20 dependent
| |     | |-BinaryOperator 0x5605abd33d08 <line:328:6, col:13> '<dependent type>' '<'
| |     | | |-DeclRefExpr 0x5605abd33cc8 <col:6> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd33ce8 <col:13> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd33e90 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd33dd8 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd33d90 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd33d30 'expr-type'
| |     |-CompoundRequirement 0x5605abd341d0 dependent
| |     | |-BinaryOperator 0x5605abd33fb0 <line:329:6, col:13> '<dependent type>' '>'
| |     | | |-DeclRefExpr 0x5605abd33f70 <col:6> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd33f90 <col:13> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd34140 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd34088 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd34040 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd33fd8 'expr-type'
| |     |-CompoundRequirement 0x5605abd34460 dependent
| |     | |-BinaryOperator 0x5605abd34240 <line:330:6, col:13> '<dependent type>' '<='
| |     | | |-DeclRefExpr 0x5605abd34200 <col:6> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd34220 <col:13> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd343d0 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd34318 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd342d0 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd34268 'expr-type'
| |     |-CompoundRequirement 0x5605abd346f0 dependent
| |     | |-BinaryOperator 0x5605abd344d0 <line:331:6, col:13> '<dependent type>' '>='
| |     | | |-DeclRefExpr 0x5605abd34490 <col:6> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd344b0 <col:13> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd34660 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd345a8 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd34560 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd344f8 'expr-type'
| |     |-CompoundRequirement 0x5605abd34980 dependent
| |     | |-BinaryOperator 0x5605abd34760 <line:332:6, col:13> '<dependent type>' '<'
| |     | | |-DeclRefExpr 0x5605abd34720 <col:6> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd34740 <col:13> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd348f0 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd34838 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd347f0 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd34788 'expr-type'
| |     |-CompoundRequirement 0x5605abd34c10 dependent
| |     | |-BinaryOperator 0x5605abd349f0 <line:333:6, col:13> '<dependent type>' '>'
| |     | | |-DeclRefExpr 0x5605abd349b0 <col:6> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd349d0 <col:13> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd34b80 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd34ac8 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd34a80 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd34a18 'expr-type'
| |     |-CompoundRequirement 0x5605abd34ea0 dependent
| |     | |-BinaryOperator 0x5605abd34c80 <line:334:6, col:13> '<dependent type>' '<='
| |     | | |-DeclRefExpr 0x5605abd34c40 <col:6> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd34c60 <col:13> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd34e10 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd34d58 <line:291:15> col:15
| |     |   | `-TemplateArgument type 'type-parameter-1-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |     `-TemplateTypeParmType 0x5605abd34d10 'expr-type' dependent depth 1 index 0
| |     |       `-TemplateTypeParm 0x5605abd34ca8 'expr-type'
| |     `-CompoundRequirement 0x5605abd35130 dependent
| |       |-BinaryOperator 0x5605abd34f10 <line:335:6, col:13> '<dependent type>' '>='
| |       | |-DeclRefExpr 0x5605abd34ed0 <col:6> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd33be0 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |       | `-DeclRefExpr 0x5605abd34ef0 <col:13> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd33910 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |       `-ConceptSpecializationExpr 0x5605abd350a0 <col:22> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |         |-ImplicitConceptSpecializationDecl 0x5605abd34fe8 <line:291:15> col:15
| |         | `-TemplateArgument type 'type-parameter-1-0'
| |         |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |         `-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |           `-TemplateTypeParmType 0x5605abd34fa0 'expr-type' dependent depth 1 index 0
| |             `-TemplateTypeParm 0x5605abd34f38 'expr-type'
| |-ConceptDecl 0x5605abd35298 <line:340:3, line:343:53> line:341:13 totally_ordered
| | |-TemplateTypeParmDecl 0x5605abd351e8 <line:340:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd35568 <line:342:9, line:343:53> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd353b0 <line:342:9, col:32> 'bool' Concept 0x5605abd31928 'equality_comparable'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd352f8 <line:312:13> col:13
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument <line:342:29> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd35240 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd351e8 '_Tp'
| |   `-ConceptSpecializationExpr 0x5605abd35540 <line:343:10, col:53> 'bool' Concept 0x5605abd33660 '__partially_ordered_with'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd35450 <line:325:15> col:15
| |     | |-TemplateArgument type 'type-parameter-0-0'
| |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument type 'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     |-TemplateArgument <line:343:45> type '_Tp':'type-parameter-0-0'
| |     | `-TemplateTypeParmType 0x5605abd35240 '_Tp' dependent depth 0 index 0
| |     |   `-TemplateTypeParm 0x5605abd351e8 '_Tp'
| |     `-TemplateArgument <col:50> type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd35240 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd351e8 '_Tp'
| |-ConceptDecl 0x5605abd356d0 <line:345:3, line:351:53> line:346:13 totally_ordered_with
| | |-TemplateTypeParmDecl 0x5605abd35590 <line:345:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd35618 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-BinaryOperator 0x5605abd36808 <line:347:9, line:351:53> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd36688 <line:347:9, line:350:32> 'bool' '&&'
| |   | |-BinaryOperator 0x5605abd35a98 <line:347:9, line:348:43> 'bool' '&&'
| |   | | |-BinaryOperator 0x5605abd35920 <line:347:9, col:52> 'bool' '&&'
| |   | | | |-ConceptSpecializationExpr 0x5605abd35800 <col:9, col:28> 'bool' Concept 0x5605abd35298 'totally_ordered'
| |   | | | | |-ImplicitConceptSpecializationDecl 0x5605abd35748 <line:341:13> col:13
| |   | | | | | `-TemplateArgument type 'type-parameter-0-0'
| |   | | | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | `-TemplateArgument <line:347:25> type '_Tp':'type-parameter-0-0'
| |   | | | |   `-TemplateTypeParmType 0x5605abd355e0 '_Tp' dependent depth 0 index 0
| |   | | | |     `-TemplateTypeParm 0x5605abd35590 '_Tp'
| |   | | | `-ConceptSpecializationExpr 0x5605abd358f8 <col:33, col:52> 'bool' Concept 0x5605abd35298 'totally_ordered'
| |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abd35840 <line:341:13> col:13
| |   | | |   | `-TemplateArgument type 'type-parameter-0-1'
| |   | | |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | | |   `-TemplateArgument <line:347:49> type '_Up':'type-parameter-0-1'
| |   | | |     `-TemplateTypeParmType 0x5605abd35670 '_Up' dependent depth 0 index 1
| |   | | |       `-TemplateTypeParm 0x5605abd35618 '_Up'
| |   | | `-ConceptSpecializationExpr 0x5605abd35a70 <line:348:10, col:43> 'bool' Concept 0x5605abd31c30 'equality_comparable_with'
| |   | |   |-ImplicitConceptSpecializationDecl 0x5605abd35980 <line:315:13> col:13
| |   | |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   | `-TemplateArgument type 'type-parameter-0-1'
| |   | |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | |   |-TemplateArgument <line:348:35> type '_Tp':'type-parameter-0-0'
| |   | |   | `-TemplateTypeParmType 0x5605abd355e0 '_Tp' dependent depth 0 index 0
| |   | |   |   `-TemplateTypeParm 0x5605abd35590 '_Tp'
| |   | |   `-TemplateArgument <col:40> type '_Up':'type-parameter-0-1'
| |   | |     `-TemplateTypeParmType 0x5605abd35670 '_Up' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x5605abd35618 '_Up'
| |   | `-ConceptSpecializationExpr 0x5605abd36660 <line:349:10, line:350:32> 'bool' Concept 0x5605abd35298 'totally_ordered'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd365a8 <line:341:13> col:13
| |   |   | `-TemplateArgument type 'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type'
| |   |   |   `-DependentNameType 0x5605abd330a0 'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type' dependent
| |   |   `-TemplateArgument <line:349:26, <scratch space>:221:1> type 'common_reference_t<__detail::__cref<_Tp>, __detail::__cref<_Up>>':'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type'
| |   |     `-ElaboratedType 0x5605abd36520 'common_reference_t<__detail::__cref<_Tp>, __detail::__cref<_Up>>' sugar dependent
| |   |       `-TemplateSpecializationType 0x5605abd364b0 'common_reference_t<__detail::__cref<_Tp>, __detail::__cref<_Up>>' sugar dependent alias
| |   |         |-name: 'common_reference_t':'std::common_reference_t' qualified
| |   |         | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |   |         |-TemplateArgument type '__detail::__cref<_Tp>':'const typename remove_reference<type-parameter-0-0>::type &'
| |   |         | `-ElaboratedType 0x5605abd35db0 '__detail::__cref<_Tp>' sugar dependent
| |   |         |   `-TemplateSpecializationType 0x5605abd35d60 '__cref<_Tp>' sugar dependent alias
| |   |         |     |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   |         |     | |-NestedNameSpecifier Namespace 0x5605abd334a0 '__detail'
| |   |         |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |         |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |         |     | `-TemplateTypeParmType 0x5605abd355e0 '_Tp' dependent depth 0 index 0
| |   |         |     |   `-TemplateTypeParm 0x5605abd35590 '_Tp'
| |   |         |     `-LValueReferenceType 0x5605abd35d00 'const remove_reference_t<_Tp> &' dependent
| |   |         |       `-QualType 0x5605abd35cd1 'const remove_reference_t<_Tp>' const
| |   |         |         `-ElaboratedType 0x5605abd35cd0 'remove_reference_t<_Tp>' sugar dependent
| |   |         |           `-TemplateSpecializationType 0x5605abd35c80 'remove_reference_t<_Tp>' sugar dependent alias
| |   |         |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |         |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |         |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |         |             | `-TemplateTypeParmType 0x5605abd355e0 '_Tp' dependent depth 0 index 0
| |   |         |             |   `-TemplateTypeParm 0x5605abd35590 '_Tp'
| |   |         |             `-DependentNameType 0x5605abd35c30 'typename remove_reference<_Tp>::type' dependent
| |   |         |-TemplateArgument type '__detail::__cref<_Up>':'const typename remove_reference<type-parameter-0-1>::type &'
| |   |         | `-ElaboratedType 0x5605abd36150 '__detail::__cref<_Up>' sugar dependent
| |   |         |   `-TemplateSpecializationType 0x5605abd36100 '__cref<_Up>' sugar dependent alias
| |   |         |     |-name: '__detail::__cref':'std::__detail::__cref' qualified
| |   |         |     | |-NestedNameSpecifier Namespace 0x5605abd334a0 '__detail'
| |   |         |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |         |     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |         |     | `-TemplateTypeParmType 0x5605abd35670 '_Up' dependent depth 0 index 1
| |   |         |     |   `-TemplateTypeParm 0x5605abd35618 '_Up'
| |   |         |     `-LValueReferenceType 0x5605abd360a0 'const remove_reference_t<_Up> &' dependent
| |   |         |       `-QualType 0x5605abd36071 'const remove_reference_t<_Up>' const
| |   |         |         `-ElaboratedType 0x5605abd36070 'remove_reference_t<_Up>' sugar dependent
| |   |         |           `-TemplateSpecializationType 0x5605abd36020 'remove_reference_t<_Up>' sugar dependent alias
| |   |         |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |         |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |         |             |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |         |             | `-TemplateTypeParmType 0x5605abd35670 '_Up' dependent depth 0 index 1
| |   |         |             |   `-TemplateTypeParm 0x5605abd35618 '_Up'
| |   |         |             `-DependentNameType 0x5605abd35fd0 'typename remove_reference<_Up>::type' dependent
| |   |         `-DependentNameType 0x5605abd36460 'typename common_reference<__detail::__cref<_Tp>, __detail::__cref<_Up>>::type' dependent
| |   `-ConceptSpecializationExpr 0x5605abd367e0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:351:10, col:53> 'bool' Concept 0x5605abd33660 '__partially_ordered_with'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd366f0 <line:325:15> col:15
| |     | |-TemplateArgument type 'type-parameter-0-0'
| |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument type 'type-parameter-0-1'
| |     |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     |-TemplateArgument <line:351:45> type '_Tp':'type-parameter-0-0'
| |     | `-TemplateTypeParmType 0x5605abd355e0 '_Tp' dependent depth 0 index 0
| |     |   `-TemplateTypeParm 0x5605abd35590 '_Tp'
| |     `-TemplateArgument <col:50> type '_Up':'type-parameter-0-1'
| |       `-TemplateTypeParmType 0x5605abd35670 '_Up' dependent depth 0 index 1
| |         `-TemplateTypeParm 0x5605abd35618 '_Up'
| |-ConceptDecl 0x5605abd368d8 <line:353:3, line:354:66> col:13 regular
| | |-TemplateTypeParmDecl 0x5605abd36830 <line:353:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-BinaryOperator 0x5605abd36b28 <line:354:23, col:66> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd36a08 <col:23, col:38> 'bool' Concept 0x5605abd2f7a8 'semiregular'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd36950 <line:280:13> col:13
| |   | | `-TemplateArgument type 'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument <line:354:35> type '_Tp':'type-parameter-0-0'
| |   |   `-TemplateTypeParmType 0x5605abd36880 '_Tp' dependent depth 0 index 0
| |   |     `-TemplateTypeParm 0x5605abd36830 '_Tp'
| |   `-ConceptSpecializationExpr 0x5605abd36b00 <col:43, col:66> 'bool' Concept 0x5605abd31928 'equality_comparable'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd36a48 <line:312:13> col:13
| |     | `-TemplateArgument type 'type-parameter-0-0'
| |     |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     `-TemplateArgument <line:354:63> type '_Tp':'type-parameter-0-0'
| |       `-TemplateTypeParmType 0x5605abd36880 '_Tp' dependent depth 0 index 0
| |         `-TemplateTypeParm 0x5605abd36830 '_Tp'
| |-ConceptDecl 0x5605abd36c90 <line:359:3, line:360:53> col:13 invocable
| | |-TemplateTypeParmDecl 0x5605abd36b50 <line:359:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abd36bd8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-UnresolvedLookupExpr 0x5605abd36d80 <line:360:25, col:53> '<dependent type>' lvalue (no ADL) = 'is_invocable_v' 0x5605abcd76b0
| |   |-TemplateArgument type '_Fn':'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abd36ba0 '_Fn' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abd36b50 '_Fn'
| |   `-TemplateArgument type '_Args...':'type-parameter-0-1...'
| |     `-PackExpansionType 0x5605abd36d10 '_Args...' dependent
| |       `-TemplateTypeParmType 0x5605abd36c30 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |         `-TemplateTypeParm 0x5605abd36bd8 '_Args'
| |-ConceptDecl 0x5605abd36f60 <line:363:3, line:364:56> col:13 regular_invocable
| | |-TemplateTypeParmDecl 0x5605abd36e20 <line:363:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abd36ea8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-ConceptSpecializationExpr 0x5605abd37148 <line:364:33, col:56> 'bool' Concept 0x5605abd36c90 'invocable'
| |   |-ImplicitConceptSpecializationDecl 0x5605abd37058 <line:360:13> col:13
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | `-TemplateArgument pack '<type-parameter-0-1...>'
| |   |   `-TemplateArgument type 'type-parameter-0-1...'
| |   |     `-PackExpansionType 0x5605abbd18b0 'type-parameter-0-1...' dependent
| |   |       `-TemplateTypeParmType 0x5605abb7cff0 'type-parameter-0-1' dependent contains_unexpanded_pack depth 0 index 1 pack
| |   |-TemplateArgument <line:364:43> type '_Fn':'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abd36e70 '_Fn' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abd36e20 '_Fn'
| |   `-TemplateArgument <col:48, col:53> type '_Args...':'type-parameter-0-1...'
| |     `-PackExpansionType 0x5605abd36fe0 '_Args...' dependent
| |       `-TemplateTypeParmType 0x5605abd36f00 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |         `-TemplateTypeParm 0x5605abd36ea8 '_Args'
| |-ConceptDecl 0x5605abd372c0 <line:367:3, line:369:69> line:368:13 predicate
| | |-TemplateTypeParmDecl 0x5605abd37178 <line:367:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5605abd37208 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| | `-BinaryOperator 0x5605abd37948 <line:368:25, line:369:69> 'bool' '&&'
| |   |-ConceptSpecializationExpr 0x5605abd374a8 <line:368:25, col:56> 'bool' Concept 0x5605abd36f60 'regular_invocable'
| |   | |-ImplicitConceptSpecializationDecl 0x5605abd373b8 <line:364:13> col:13
| |   | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | `-TemplateArgument pack '<type-parameter-0-1...>'
| |   | |   `-TemplateArgument type 'type-parameter-0-1...'
| |   | |     `-PackExpansionType 0x5605abbd18b0 'type-parameter-0-1...' dependent
| |   | |       `-TemplateTypeParmType 0x5605abb7cff0 'type-parameter-0-1' dependent contains_unexpanded_pack depth 0 index 1 pack
| |   | |-TemplateArgument <line:368:43> type '_Fn':'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abd371d0 '_Fn' dependent depth 0 index 0
| |   | |   `-TemplateTypeParm 0x5605abd37178 '_Fn'
| |   | `-TemplateArgument <col:48, col:53> type '_Args...':'type-parameter-0-1...'
| |   |   `-PackExpansionType 0x5605abd37340 '_Args...' dependent
| |   |     `-TemplateTypeParmType 0x5605abd37260 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |   |       `-TemplateTypeParm 0x5605abd37208 '_Args'
| |   `-ConceptSpecializationExpr 0x5605abd37920 <line:369:10, col:69> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd37868 <line:291:15> col:15
| |     | `-TemplateArgument type 'typename invoke_result<type-parameter-0-0, type-parameter-0-1...>::type'
| |     |   `-DependentNameType 0x5605abcba320 'typename invoke_result<type-parameter-0-0, type-parameter-0-1...>::type' dependent
| |     `-TemplateArgument <line:369:39, <scratch space>:222:1> type 'invoke_result_t<_Fn, _Args...>':'typename invoke_result<type-parameter-0-0, type-parameter-0-1...>::type'
| |       `-ElaboratedType 0x5605abd377c0 'invoke_result_t<_Fn, _Args...>' sugar dependent
| |         `-TemplateSpecializationType 0x5605abd37750 'invoke_result_t<_Fn, _Args...>' sugar dependent alias
| |           |-name: 'invoke_result_t':'std::invoke_result_t' qualified
| |           | `-TypeAliasTemplateDecl 0x5605abcba430 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3169:3, line:3170:68> col:5 invoke_result_t
| |           |-TemplateArgument type '_Fn':'type-parameter-0-0'
| |           | `-TemplateTypeParmType 0x5605abd371d0 '_Fn' dependent depth 0 index 0
| |           |   `-TemplateTypeParm 0x5605abd37178 '_Fn'
| |           |-TemplateArgument type '_Args...':'type-parameter-0-1...'
| |           | `-PackExpansionType 0x5605abd37340 '_Args...' dependent
| |           |   `-TemplateTypeParmType 0x5605abd37260 '_Args' dependent contains_unexpanded_pack depth 0 index 1 pack
| |           |     `-TemplateTypeParm 0x5605abd37208 '_Args'
| |           `-DependentNameType 0x5605abd37700 'typename invoke_result<_Fn, _Args...>::type' dependent
| |-ConceptDecl 0x5605abd37b48 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:372:3, line:375:63> line:373:13 relation
| | |-TemplateTypeParmDecl 0x5605abd37970 <line:372:12, col:21> col:21 referenced typename depth 0 index 0 _Rel
| | |-TemplateTypeParmDecl 0x5605abd379f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x5605abd37a88 <col:41, col:50> col:50 referenced typename depth 0 index 2 _Up
| | `-BinaryOperator 0x5605abd38340 <line:374:9, line:375:63> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd38150 <line:374:9, line:375:34> 'bool' '&&'
| |   | |-BinaryOperator 0x5605abd37f48 <line:374:9, col:62> 'bool' '&&'
| |   | | |-ConceptSpecializationExpr 0x5605abd37d50 <col:9, col:33> 'bool' Concept 0x5605abd372c0 'predicate'
| |   | | | |-ImplicitConceptSpecializationDecl 0x5605abd37c40 <line:368:13> col:13
| |   | | | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | `-TemplateArgument pack '<type-parameter-0-1, type-parameter-0-1>'
| |   | | | |   |-TemplateArgument type 'type-parameter-0-1'
| |   | | | |   | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | | | |   `-TemplateArgument type 'type-parameter-0-1'
| |   | | | |     `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | | | |-TemplateArgument <line:374:19> type '_Rel':'type-parameter-0-0'
| |   | | | | `-TemplateTypeParmType 0x5605abd379c0 '_Rel' dependent depth 0 index 0
| |   | | | |   `-TemplateTypeParm 0x5605abd37970 '_Rel'
| |   | | | |-TemplateArgument <col:25> type '_Tp':'type-parameter-0-1'
| |   | | | | `-TemplateTypeParmType 0x5605abd37a50 '_Tp' dependent depth 0 index 1
| |   | | | |   `-TemplateTypeParm 0x5605abd379f8 '_Tp'
| |   | | | `-TemplateArgument <col:30> type '_Tp':'type-parameter-0-1'
| |   | | |   `-TemplateTypeParmType 0x5605abd37a50 '_Tp' dependent depth 0 index 1
| |   | | |     `-TemplateTypeParm 0x5605abd379f8 '_Tp'
| |   | | `-ConceptSpecializationExpr 0x5605abd37f20 <col:38, col:62> 'bool' Concept 0x5605abd372c0 'predicate'
| |   | |   |-ImplicitConceptSpecializationDecl 0x5605abd37e10 <line:368:13> col:13
| |   | |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   | `-TemplateArgument pack '<type-parameter-0-2, type-parameter-0-2>'
| |   | |   |   |-TemplateArgument type 'type-parameter-0-2'
| |   | |   |   | `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |   | |   |   `-TemplateArgument type 'type-parameter-0-2'
| |   | |   |     `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |   | |   |-TemplateArgument <line:374:48> type '_Rel':'type-parameter-0-0'
| |   | |   | `-TemplateTypeParmType 0x5605abd379c0 '_Rel' dependent depth 0 index 0
| |   | |   |   `-TemplateTypeParm 0x5605abd37970 '_Rel'
| |   | |   |-TemplateArgument <col:54> type '_Up':'type-parameter-0-2'
| |   | |   | `-TemplateTypeParmType 0x5605abd37ae0 '_Up' dependent depth 0 index 2
| |   | |   |   `-TemplateTypeParm 0x5605abd37a88 '_Up'
| |   | |   `-TemplateArgument <col:59> type '_Up':'type-parameter-0-2'
| |   | |     `-TemplateTypeParmType 0x5605abd37ae0 '_Up' dependent depth 0 index 2
| |   | |       `-TemplateTypeParm 0x5605abd37a88 '_Up'
| |   | `-ConceptSpecializationExpr 0x5605abd38128 <line:375:10, col:34> 'bool' Concept 0x5605abd372c0 'predicate'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd38018 <line:368:13> col:13
| |   |   | |-TemplateArgument type 'type-parameter-0-0'
| |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   | `-TemplateArgument pack '<type-parameter-0-1, type-parameter-0-2>'
| |   |   |   |-TemplateArgument type 'type-parameter-0-1'
| |   |   |   | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   |   |   `-TemplateArgument type 'type-parameter-0-2'
| |   |   |     `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |   |   |-TemplateArgument <line:375:20> type '_Rel':'type-parameter-0-0'
| |   |   | `-TemplateTypeParmType 0x5605abd379c0 '_Rel' dependent depth 0 index 0
| |   |   |   `-TemplateTypeParm 0x5605abd37970 '_Rel'
| |   |   |-TemplateArgument <col:26> type '_Tp':'type-parameter-0-1'
| |   |   | `-TemplateTypeParmType 0x5605abd37a50 '_Tp' dependent depth 0 index 1
| |   |   |   `-TemplateTypeParm 0x5605abd379f8 '_Tp'
| |   |   `-TemplateArgument <col:31> type '_Up':'type-parameter-0-2'
| |   |     `-TemplateTypeParmType 0x5605abd37ae0 '_Up' dependent depth 0 index 2
| |   |       `-TemplateTypeParm 0x5605abd37a88 '_Up'
| |   `-ConceptSpecializationExpr 0x5605abd38318 <col:39, col:63> 'bool' Concept 0x5605abd372c0 'predicate'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd38208 <line:368:13> col:13
| |     | |-TemplateArgument type 'type-parameter-0-0'
| |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | `-TemplateArgument pack '<type-parameter-0-2, type-parameter-0-1>'
| |     |   |-TemplateArgument type 'type-parameter-0-2'
| |     |   | `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |     |   `-TemplateArgument type 'type-parameter-0-1'
| |     |     `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     |-TemplateArgument <line:375:49> type '_Rel':'type-parameter-0-0'
| |     | `-TemplateTypeParmType 0x5605abd379c0 '_Rel' dependent depth 0 index 0
| |     |   `-TemplateTypeParm 0x5605abd37970 '_Rel'
| |     |-TemplateArgument <col:55> type '_Up':'type-parameter-0-2'
| |     | `-TemplateTypeParmType 0x5605abd37ae0 '_Up' dependent depth 0 index 2
| |     |   `-TemplateTypeParm 0x5605abd37a88 '_Up'
| |     `-TemplateArgument <col:60> type '_Tp':'type-parameter-0-1'
| |       `-TemplateTypeParmType 0x5605abd37a50 '_Tp' dependent depth 0 index 1
| |         `-TemplateTypeParm 0x5605abd379f8 '_Tp'
| |-ConceptDecl 0x5605abd38548 <line:378:3, line:379:59> col:13 equivalence_relation
| | |-TemplateTypeParmDecl 0x5605abd38368 <line:378:12, col:21> col:21 referenced typename depth 0 index 0 _Rel
| | |-TemplateTypeParmDecl 0x5605abd383f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp
| | |-TemplateTypeParmDecl 0x5605abd38488 <col:41, col:50> col:50 referenced typename depth 0 index 2 _Up
| | `-ConceptSpecializationExpr 0x5605abd38708 <line:379:36, col:59> 'bool' Concept 0x5605abd37b48 'relation'
| |   |-ImplicitConceptSpecializationDecl 0x5605abd385e0 <line:373:13> col:13
| |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | `-TemplateArgument type 'type-parameter-0-2'
| |   |   `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |   |-TemplateArgument <line:379:45> type '_Rel':'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abd383c0 '_Rel' dependent depth 0 index 0
| |   |   `-TemplateTypeParm 0x5605abd38368 '_Rel'
| |   |-TemplateArgument <col:51> type '_Tp':'type-parameter-0-1'
| |   | `-TemplateTypeParmType 0x5605abd38450 '_Tp' dependent depth 0 index 1
| |   |   `-TemplateTypeParm 0x5605abd383f8 '_Tp'
| |   `-TemplateArgument <col:56> type '_Up':'type-parameter-0-2'
| |     `-TemplateTypeParmType 0x5605abd384e0 '_Up' dependent depth 0 index 2
| |       `-TemplateTypeParm 0x5605abd38488 '_Up'
| `-ConceptDecl 0x5605abd38918 <line:382:3, line:383:56> col:13 strict_weak_order
|   |-TemplateTypeParmDecl 0x5605abd38738 <line:382:12, col:21> col:21 referenced typename depth 0 index 0 _Rel
|   |-TemplateTypeParmDecl 0x5605abd387c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp
|   |-TemplateTypeParmDecl 0x5605abd38858 <col:41, col:50> col:50 referenced typename depth 0 index 2 _Up
|   `-ConceptSpecializationExpr 0x5605abd38ac0 <line:383:33, col:56> 'bool' Concept 0x5605abd37b48 'relation'
|     |-ImplicitConceptSpecializationDecl 0x5605abd38998 <line:373:13> col:13
|     | |-TemplateArgument type 'type-parameter-0-0'
|     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
|     | |-TemplateArgument type 'type-parameter-0-1'
|     | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
|     | `-TemplateArgument type 'type-parameter-0-2'
|     |   `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
|     |-TemplateArgument <line:383:42> type '_Rel':'type-parameter-0-0'
|     | `-TemplateTypeParmType 0x5605abd38790 '_Rel' dependent depth 0 index 0
|     |   `-TemplateTypeParm 0x5605abd38738 '_Rel'
|     |-TemplateArgument <col:48> type '_Tp':'type-parameter-0-1'
|     | `-TemplateTypeParmType 0x5605abd38820 '_Tp' dependent depth 0 index 1
|     |   `-TemplateTypeParm 0x5605abd387c8 '_Tp'
|     `-TemplateArgument <col:53> type '_Up':'type-parameter-0-2'
|       `-TemplateTypeParmType 0x5605abd388b0 '_Up' dependent depth 0 index 2
|         `-TemplateTypeParm 0x5605abd38858 '_Up'
|-NamespaceDecl 0x5605abd38b10 prev 0x5605abd12658 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:42:1, line:1254:1> line:42:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-VisibilityAttr 0x5605abd38b80 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
| |-NamespaceDecl 0x5605abd38be0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:46:3, line:58:3> line:46:13 __cmp_cat
| | |-TypeAliasDecl 0x5605abd38c88 <line:48:5, col:25> col:11 referenced type 'signed char'
| | | `-BuiltinType 0x5605aba9ca30 'signed char'
| | |-EnumDecl 0x5605abd38d68 <line:50:5, col:69> col:16 referenced class _Ord 'type':'signed char'
| | | |-EnumConstantDecl 0x5605abd38ea0 <col:30, col:43> col:30 referenced equivalent 'std::__cmp_cat::_Ord'
| | | | `-ConstantExpr 0x5605abd38e78 <col:43> 'type':'signed char'
| | | |   |-value: Int 0
| | | |   `-ImplicitCastExpr 0x5605abd38e60 <col:43> 'type':'signed char' <IntegralCast>
| | | |     `-IntegerLiteral 0x5605abd38e40 <col:43> 'int' 0
| | | |-EnumConstantDecl 0x5605abd38f70 <col:46, col:54> col:46 referenced less 'std::__cmp_cat::_Ord'
| | | | `-ConstantExpr 0x5605abd38f48 <col:53, col:54> 'type':'signed char'
| | | |   |-value: Int -1
| | | |   `-ImplicitCastExpr 0x5605abd38f30 <col:53, col:54> 'type':'signed char' <IntegralCast>
| | | |     `-UnaryOperator 0x5605abd38f18 <col:53, col:54> 'int' prefix '-'
| | | |       `-IntegerLiteral 0x5605abd38ef8 <col:54> 'int' 1
| | | `-EnumConstantDecl 0x5605abd39028 <col:57, col:67> col:57 referenced greater 'std::__cmp_cat::_Ord'
| | |   `-ConstantExpr 0x5605abd39000 <col:67> 'type':'signed char'
| | |     |-value: Int 1
| | |     `-ImplicitCastExpr 0x5605abd38fe8 <col:67> 'type':'signed char' <IntegralCast>
| | |       `-IntegerLiteral 0x5605abd38fc8 <col:67> 'int' 1
| | |-EnumDecl 0x5605abd39098 <line:52:5, col:46> col:16 referenced class _Ncmp 'type':'signed char'
| | | `-EnumConstantDecl 0x5605abd391d0 <col:31, col:44> col:31 referenced _Unordered 'std::__cmp_cat::_Ncmp'
| | |   `-ConstantExpr 0x5605abd391a8 <col:44> 'type':'signed char'
| | |     |-value: Int 2
| | |     `-ImplicitCastExpr 0x5605abd39190 <col:44> 'type':'signed char' <IntegralCast>
| | |       `-IntegerLiteral 0x5605abd39170 <col:44> 'int' 2
| | `-CXXRecordDecl 0x5605abd39230 <line:54:5, line:57:5> line:54:12 referenced struct __unspec definition
| |   |-DefinitionData pass_in_registers empty standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr
| |   |-CXXRecordDecl 0x5605abd39370 <col:5, col:12> col:12 implicit referenced struct __unspec
| |   |-CXXConstructorDecl 0x5605abd39620 <line:56:7, col:48> col:17 used consteval __unspec 'void (__unspec *) noexcept' implicit-inline
| |   | |-ParmVarDecl 0x5605abd394d0 <col:26, col:34> col:35 '__unspec *'
| |   | `-CompoundStmt 0x5605abd39708 <col:46, col:48>
| |   |-CXXConstructorDecl 0x5605abd692f8 <line:54:12> col:12 implicit constexpr __unspec 'void (const __unspec &)' inline default trivial noexcept-unevaluated 0x5605abd692f8
| |   | `-ParmVarDecl 0x5605abd69438 <col:12> col:12 'const __unspec &'
| |   |-CXXConstructorDecl 0x5605abd69528 <col:12> col:12 implicit constexpr __unspec 'void (__unspec &&)' inline default trivial noexcept-unevaluated 0x5605abd69528
| |   | `-ParmVarDecl 0x5605abd69668 <col:12> col:12 '__unspec &&'
| |   `-CXXDestructorDecl 0x5605abd738f0 <col:12> col:12 implicit referenced constexpr ~__unspec 'void () noexcept' inline default trivial
| |-CXXRecordDecl 0x5605abd39720 <line:60:3, line:149:3> line:60:9 referenced class partial_ordering definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr
| | |-CXXRecordDecl 0x5605abd39860 <col:3, col:9> col:9 implicit referenced class partial_ordering
| | |-FieldDecl 0x5605abd399a8 <line:63:5, col:21> col:21 referenced _M_value '__cmp_cat::type':'signed char'
| | |-CXXConstructorDecl 0x5605abd39c00 <line:65:5, line:68:7> line:66:5 used constexpr partial_ordering 'void (__cmp_cat::_Ord) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abd39a80 <col:22, col:38> col:38 used __v '__cmp_cat::_Ord':'std::__cmp_cat::_Ord'
| | | |-CXXCtorInitializer Field 0x5605abd399a8 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-CXXFunctionalCastExpr 0x5605abb6dcc0 <line:67:16, col:35> '__cmp_cat::type':'signed char' functional cast to __cmp_cat::type <IntegralCast>
| | | |   `-ImplicitCastExpr 0x5605abb6dca8 <col:32> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' <LValueToRValue> part_of_explicit_cast
| | | |     `-DeclRefExpr 0x5605abb6dc88 <col:32> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' lvalue ParmVar 0x5605abd39a80 '__v' '__cmp_cat::_Ord':'std::__cmp_cat::_Ord'
| | | `-CompoundStmt 0x5605abb6dd30 <line:68:5, col:7>
| | |-CXXConstructorDecl 0x5605abd39e80 <line:70:5, line:73:7> line:71:5 used constexpr partial_ordering 'void (__cmp_cat::_Ncmp) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abd39d50 <col:22, col:39> col:39 used __v '__cmp_cat::_Ncmp':'std::__cmp_cat::_Ncmp'
| | | |-CXXCtorInitializer Field 0x5605abd399a8 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-CXXFunctionalCastExpr 0x5605abb6ddc0 <line:72:16, col:35> '__cmp_cat::type':'signed char' functional cast to __cmp_cat::type <IntegralCast>
| | | |   `-ImplicitCastExpr 0x5605abb6dda8 <col:32> '__cmp_cat::_Ncmp':'std::__cmp_cat::_Ncmp' <LValueToRValue> part_of_explicit_cast
| | | |     `-DeclRefExpr 0x5605abb6dd88 <col:32> '__cmp_cat::_Ncmp':'std::__cmp_cat::_Ncmp' lvalue ParmVar 0x5605abd39d50 '__v' '__cmp_cat::_Ncmp':'std::__cmp_cat::_Ncmp'
| | | `-CompoundStmt 0x5605abb6de30 <line:73:5, col:7>
| | |-FriendDecl 0x5605abb6ad70 <line:75:5, col:18> col:12 'class weak_ordering':'std::weak_ordering'
| | | `-CXXRecordDecl 0x5605abb6ac38 parent 0x5605abaf4398 <col:12, col:18> col:18 friend_undeclared class weak_ordering
| | |-FriendDecl 0x5605abb6af00 <line:76:5, col:18> col:12 'class strong_ordering':'std::strong_ordering'
| | | `-CXXRecordDecl 0x5605abb6adc0 parent 0x5605abaf4398 <col:12, col:18> col:18 friend_undeclared class strong_ordering
| | |-AccessSpecDecl 0x5605abb6af50 <line:78:3, col:9> col:3 public
| | |-VarDecl 0x5605abb6afc8 <line:80:5, col:35> col:35 less 'const partial_ordering':'const std::partial_ordering' static
| | |-VarDecl 0x5605abb6b060 <line:81:5, col:35> col:35 used equivalent 'const partial_ordering':'const std::partial_ordering' static
| | |-VarDecl 0x5605abb6b0f8 <line:82:5, col:35> col:35 greater 'const partial_ordering':'const std::partial_ordering' static
| | |-VarDecl 0x5605abb6b190 <line:83:5, col:35> col:35 unordered 'const partial_ordering':'const std::partial_ordering' static
| | |-FriendDecl 0x5605abb6b5b8 <line:87:5, line:89:33> line:88:5
| | | `-FunctionDecl 0x5605abb6b470 parent 0x5605abd38b10 <line:87:5, line:89:33> line:88:5 used constexpr friend_undeclared operator== 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6b228 <col:16, col:33> col:33 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-ParmVarDecl 0x5605abb6b318 <col:38, col:49> col:57 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abb6dfe8 <line:89:5, col:33>
| | |   | `-ReturnStmt 0x5605abb6dfd8 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abb6dee0 <col:14, col:30> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abb6dec8 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abb6deb0 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abb6de60 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |     `-DeclRefExpr 0x5605abb6de40 <col:14> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6b228 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     `-IntegerLiteral 0x5605abb6de90 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abb6b538 <line:86:7> nodiscard ""
| | |-FriendDecl 0x5605abb6b948 <line:92:5, line:93:69> col:5
| | | `-FunctionDecl 0x5605abb6b7f0 parent 0x5605abd38b10 <line:92:5, line:93:69> col:5 constexpr friend_undeclared operator== 'bool (partial_ordering, partial_ordering) noexcept' default implicit-inline
| | |   |-ParmVarDecl 0x5605abb6b618 <col:16> col:32 'partial_ordering':'std::partial_ordering'
| | |   |-ParmVarDecl 0x5605abb6b698 <col:34> col:50 'partial_ordering':'std::partial_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abb6b8b8 <line:91:7> nodiscard ""
| | |-FriendDecl 0x5605abb6bc88 <line:96:5, line:98:34> line:97:5
| | | `-FunctionDecl 0x5605abb6bb40 parent 0x5605abd38b10 <line:96:5, line:98:34> line:97:5 used constexpr friend_undeclared operator< 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6b9a8 <col:16, col:33> col:33 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-ParmVarDecl 0x5605abb6ba68 <col:38, col:49> col:57 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abb6e0e8 <line:98:5, col:34>
| | |   | `-ReturnStmt 0x5605abb6e0d8 <col:7, col:31>
| | |   |   `-BinaryOperator 0x5605abb6e0b8 <col:14, col:31> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abb6e0a0 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abb6e088 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abb6e020 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |     `-DeclRefExpr 0x5605abb6e000 <col:14> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6b9a8 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     `-UnaryOperator 0x5605abb6e070 <col:30, col:31> 'int' prefix '-'
| | |   |       `-IntegerLiteral 0x5605abb6e050 <col:31> 'int' 1
| | |   `-WarnUnusedResultAttr 0x5605abb6bc08 <line:95:7> nodiscard ""
| | |-FriendDecl 0x5605abb6bfc8 <line:101:5, line:103:33> line:102:5
| | | `-FunctionDecl 0x5605abb6be80 parent 0x5605abd38b10 <line:101:5, line:103:33> line:102:5 used constexpr friend_undeclared operator> 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6bce8 <col:16, col:33> col:33 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-ParmVarDecl 0x5605abb6bda8 <col:38, col:49> col:57 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abb6e1d0 <line:103:5, col:33>
| | |   | `-ReturnStmt 0x5605abb6e1c0 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abb6e1a0 <col:14, col:30> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abb6e188 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abb6e170 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abb6e120 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |     `-DeclRefExpr 0x5605abb6e100 <col:14> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6bce8 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     `-IntegerLiteral 0x5605abb6e150 <col:30> 'int' 1
| | |   `-WarnUnusedResultAttr 0x5605abb6bf48 <line:100:7> nodiscard ""
| | |-FriendDecl 0x5605abb6c308 <line:106:5, line:108:33> line:107:5
| | | `-FunctionDecl 0x5605abb6c1c0 parent 0x5605abd38b10 <line:106:5, line:108:33> line:107:5 used constexpr friend_undeclared operator<= 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6c028 <col:16, col:33> col:33 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-ParmVarDecl 0x5605abb6c0e8 <col:38, col:49> col:57 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abb6e2b8 <line:108:5, col:33>
| | |   | `-ReturnStmt 0x5605abb6e2a8 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abb6e288 <col:14, col:30> 'bool' '<='
| | |   |     |-ImplicitCastExpr 0x5605abb6e270 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abb6e258 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abb6e208 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |     `-DeclRefExpr 0x5605abb6e1e8 <col:14> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6c028 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     `-IntegerLiteral 0x5605abb6e238 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abb6c288 <line:105:7> nodiscard ""
| | |-FriendDecl 0x5605abb6c648 <line:111:5, line:113:65> line:112:5
| | | `-FunctionDecl 0x5605abb6c500 parent 0x5605abd38b10 <line:111:5, line:113:65> line:112:5 used constexpr friend_undeclared operator>= 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6c368 <col:16, col:33> col:33 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-ParmVarDecl 0x5605abb6c428 <col:38, col:49> col:57 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abb6e4e0 <line:113:5, col:65>
| | |   | `-ReturnStmt 0x5605abb6e4d0 <col:7, col:55>
| | |   |   `-BinaryOperator 0x5605abb6e4b0 <col:14, col:55> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abb6e480 <col:14, col:46> 'int' <IntegralCast>
| | |   |     | `-CXXFunctionalCastExpr 0x5605abb6e3f0 <col:14, col:46> '__cmp_cat::type':'signed char' functional cast to __cmp_cat::type <NoOp>
| | |   |     |   `-ImplicitCastExpr 0x5605abb6e3d8 <col:30, col:45> '__cmp_cat::type':'signed char' <IntegralCast> part_of_explicit_cast
| | |   |     |     `-BinaryOperator 0x5605abb6e3b8 <col:30, col:45> 'int' '&'
| | |   |     |       |-ImplicitCastExpr 0x5605abb6e3a0 <col:30, col:34> 'int' <IntegralCast>
| | |   |     |       | `-ImplicitCastExpr 0x5605abb6e388 <col:30, col:34> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |       |   `-MemberExpr 0x5605abb6e338 <col:30, col:34> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |       |     `-DeclRefExpr 0x5605abb6e318 <col:30> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6c368 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     |       `-IntegerLiteral 0x5605abb6e368 <col:45> 'int' 1
| | |   |     `-ImplicitCastExpr 0x5605abb6e498 <col:51, col:55> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abb6e468 <col:51, col:55> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abb6e438 <col:51, col:55> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |           `-DeclRefExpr 0x5605abb6e418 <col:51> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6c368 '__v' 'partial_ordering':'std::partial_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abb6c5c8 <line:110:7> nodiscard ""
| | |-FriendDecl 0x5605abb6ca18 <line:116:5, line:118:33> line:117:5
| | | `-FunctionDecl 0x5605abb6c8c0 parent 0x5605abd38b10 <line:116:5, line:118:33> line:117:5 constexpr friend_undeclared operator< 'bool (__cmp_cat::__unspec, partial_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6c6e8 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abb6c768 <col:37, col:54> col:54 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-CompoundStmt 0x5605abb6e5c8 <line:118:5, col:33>
| | |   | `-ReturnStmt 0x5605abb6e5b8 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abb6e598 <col:14, col:30> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abb6e580 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abb6e568 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abb6e518 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |     `-DeclRefExpr 0x5605abb6e4f8 <col:14> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6c768 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     `-IntegerLiteral 0x5605abb6e548 <col:30> 'int' 1
| | |   `-WarnUnusedResultAttr 0x5605abb6c988 <line:115:7> nodiscard ""
| | |-FriendDecl 0x5605abb6cda0 <line:121:5, line:123:34> line:122:5
| | | `-FunctionDecl 0x5605abb6cc48 parent 0x5605abd38b10 <line:121:5, line:123:34> line:122:5 constexpr friend_undeclared operator> 'bool (__cmp_cat::__unspec, partial_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6cab8 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abb6cb38 <col:37, col:54> col:54 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-CompoundStmt 0x5605abb6e6c8 <line:123:5, col:34>
| | |   | `-ReturnStmt 0x5605abb6e6b8 <col:7, col:31>
| | |   |   `-BinaryOperator 0x5605abb6e698 <col:14, col:31> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abb6e680 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abb6e668 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abb6e600 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |     `-DeclRefExpr 0x5605abb6e5e0 <col:14> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6cb38 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     `-UnaryOperator 0x5605abb6e650 <col:30, col:31> 'int' prefix '-'
| | |   |       `-IntegerLiteral 0x5605abb6e630 <col:31> 'int' 1
| | |   `-WarnUnusedResultAttr 0x5605abb6cd10 <line:120:7> nodiscard ""
| | |-FriendDecl 0x5605abb6d0f0 <line:126:5, line:128:65> line:127:5
| | | `-FunctionDecl 0x5605abb6cf98 parent 0x5605abd38b10 <line:126:5, line:128:65> line:127:5 constexpr friend_undeclared operator<= 'bool (__cmp_cat::__unspec, partial_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6ce40 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abb6cec0 <col:37, col:54> col:54 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-CompoundStmt 0x5605abb6e8f0 <line:128:5, col:65>
| | |   | `-ReturnStmt 0x5605abb6e8e0 <col:7, col:55>
| | |   |   `-BinaryOperator 0x5605abb6e8c0 <col:14, col:55> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abb6e890 <col:14, col:46> 'int' <IntegralCast>
| | |   |     | `-CXXFunctionalCastExpr 0x5605abb6e800 <col:14, col:46> '__cmp_cat::type':'signed char' functional cast to __cmp_cat::type <NoOp>
| | |   |     |   `-ImplicitCastExpr 0x5605abb6e7e8 <col:30, col:45> '__cmp_cat::type':'signed char' <IntegralCast> part_of_explicit_cast
| | |   |     |     `-BinaryOperator 0x5605abb6e7c8 <col:30, col:45> 'int' '&'
| | |   |     |       |-ImplicitCastExpr 0x5605abb6e7b0 <col:30, col:34> 'int' <IntegralCast>
| | |   |     |       | `-ImplicitCastExpr 0x5605abb6e798 <col:30, col:34> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |       |   `-MemberExpr 0x5605abb6e748 <col:30, col:34> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |     |       |     `-DeclRefExpr 0x5605abb6e728 <col:30> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6cec0 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |     |       `-IntegerLiteral 0x5605abb6e778 <col:45> 'int' 1
| | |   |     `-ImplicitCastExpr 0x5605abb6e8a8 <col:51, col:55> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abb6e878 <col:51, col:55> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abb6e848 <col:51, col:55> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |           `-DeclRefExpr 0x5605abb6e828 <col:51> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6cec0 '__v' 'partial_ordering':'std::partial_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abb6d060 <line:125:7> nodiscard ""
| | |-FriendDecl 0x5605abb6d440 <line:131:5, line:133:33> line:132:5
| | | `-FunctionDecl 0x5605abb6d2e8 parent 0x5605abd38b10 <line:131:5, line:133:33> line:132:5 constexpr friend_undeclared operator>= 'bool (__cmp_cat::__unspec, partial_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6d190 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abb6d210 <col:37, col:54> col:54 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-CompoundStmt 0x5605abb6e9d8 <line:133:5, col:33>
| | |   | `-ReturnStmt 0x5605abb6e9c8 <col:7, col:23>
| | |   |   `-BinaryOperator 0x5605abb6e9a8 <col:14, col:23> 'bool' '>='
| | |   |     |-IntegerLiteral 0x5605abb6e908 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abb6e990 <col:19, col:23> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abb6e978 <col:19, col:23> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abb6e948 <col:19, col:23> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |           `-DeclRefExpr 0x5605abb6e928 <col:19> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6d210 '__v' 'partial_ordering':'std::partial_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abb6d3b0 <line:130:7> nodiscard ""
| | |-FriendDecl 0x5605abb6d808 <line:136:5, line:138:19> line:137:5
| | | `-FunctionDecl 0x5605abb6d6c0 parent 0x5605abd38b10 <line:136:5, line:138:19> line:137:5 constexpr friend_undeclared operator<=> 'partial_ordering (partial_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6d4a0 <col:17, col:34> col:34 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-ParmVarDecl 0x5605abb6d560 <col:39, col:50> col:58 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abb721d0 <line:138:5, col:19>
| | |   | `-ReturnStmt 0x5605abb721c0 <col:7, col:14>
| | |   |   `-CXXConstructExpr 0x5605abb72190 <col:14> 'partial_ordering':'std::partial_ordering' 'void (partial_ordering &&) noexcept'
| | |   |     `-ImplicitCastExpr 0x5605abb6ea10 <col:14> 'partial_ordering':'std::partial_ordering' xvalue <NoOp>
| | |   |       `-DeclRefExpr 0x5605abb6e9f0 <col:14> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6d4a0 '__v' 'partial_ordering':'std::partial_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abb6d788 <line:135:7> nodiscard ""
| | |-FriendDecl 0x5605abb6dbd8 <line:141:5, line:148:5> line:142:5
| | | `-FunctionDecl 0x5605abb6da80 parent 0x5605abd38b10 <line:141:5, line:148:5> line:142:5 constexpr friend_undeclared operator<=> 'partial_ordering (__cmp_cat::__unspec, partial_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb6d8a8 <col:17, col:28> col:36 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abb6d928 <col:38, col:55> col:55 used __v 'partial_ordering':'std::partial_ordering'
| | |   |-CompoundStmt 0x5605abb72600 <line:143:5, line:148:5>
| | |   | `-IfStmt 0x5605abb725d0 <line:144:7, line:147:9> has_else
| | |   |   |-ImplicitCastExpr 0x5605abb722a8 <line:144:11, col:26> 'bool' <IntegralToBoolean>
| | |   |   | `-BinaryOperator 0x5605abb72288 <col:11, col:26> 'int' '&'
| | |   |   |   |-ImplicitCastExpr 0x5605abb72270 <col:11, col:15> 'int' <IntegralCast>
| | |   |   |   | `-ImplicitCastExpr 0x5605abb72258 <col:11, col:15> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |   |   |   `-MemberExpr 0x5605abb72208 <col:11, col:15> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |   |   |     `-DeclRefExpr 0x5605abb721e8 <col:11> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6d928 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |   |   `-IntegerLiteral 0x5605abb72238 <col:26> 'int' 1
| | |   |   |-ReturnStmt 0x5605abb72548 <line:145:2, col:56>
| | |   |   | `-CXXFunctionalCastExpr 0x5605abb72520 <col:9, col:56> 'partial_ordering':'std::partial_ordering' functional cast to partial_ordering <ConstructorConversion>
| | |   |   |   `-CXXConstructExpr 0x5605abb723d8 <col:9, col:56> 'partial_ordering':'std::partial_ordering' 'void (__cmp_cat::_Ord) noexcept'
| | |   |   |     `-CXXFunctionalCastExpr 0x5605abb723b0 <col:26, col:55> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' functional cast to __cmp_cat::_Ord <IntegralCast>
| | |   |   |       `-UnaryOperator 0x5605abb72398 <col:42, col:47> 'int' prefix '-' cannot overflow
| | |   |   |         `-ImplicitCastExpr 0x5605abb72380 <col:43, col:47> 'int' <IntegralCast>
| | |   |   |           `-ImplicitCastExpr 0x5605abb72368 <col:43, col:47> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |   |             `-MemberExpr 0x5605abb72338 <col:43, col:47> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd399a8
| | |   |   |               `-DeclRefExpr 0x5605abb72318 <col:43> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6d928 '__v' 'partial_ordering':'std::partial_ordering'
| | |   |   `-ReturnStmt 0x5605abb725c0 <line:147:2, col:9>
| | |   |     `-CXXConstructExpr 0x5605abb72590 <col:9> 'partial_ordering':'std::partial_ordering' 'void (partial_ordering &&) noexcept'
| | |   |       `-ImplicitCastExpr 0x5605abb72578 <col:9> 'partial_ordering':'std::partial_ordering' xvalue <NoOp>
| | |   |         `-DeclRefExpr 0x5605abb72558 <col:9> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb6d928 '__v' 'partial_ordering':'std::partial_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abb6db48 <line:140:7> nodiscard ""
| | |-CXXConstructorDecl 0x5605abb6ea98 <line:60:9> col:9 implicit used constexpr partial_ordering 'void (const partial_ordering &) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abb6ebd8 <col:9> col:9 used 'const partial_ordering &'
| | | |-CXXCtorInitializer Field 0x5605abd399a8 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-ImplicitCastExpr 0x5605abd736b8 <col:9> '__cmp_cat::type':'signed char' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abd73680 <col:9> 'const __cmp_cat::type':'const signed char' lvalue ._M_value 0x5605abd399a8
| | | |     `-DeclRefExpr 0x5605abd73648 <col:9> 'const partial_ordering':'const std::partial_ordering' lvalue ParmVar 0x5605abb6ebd8 depth 0 index 0 'const partial_ordering &'
| | | `-CompoundStmt 0x5605abd736f8 <col:9>
| | |-CXXConstructorDecl 0x5605abb71dc8 <col:9> col:9 implicit used constexpr partial_ordering 'void (partial_ordering &&) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abb71f08 <col:9> col:9 used 'partial_ordering &&'
| | | |-CXXCtorInitializer Field 0x5605abd399a8 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-ImplicitCastExpr 0x5605abb72140 <col:9> '__cmp_cat::type':'signed char' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abb72108 <col:9> '__cmp_cat::type':'signed char' xvalue ._M_value 0x5605abd399a8
| | | |     `-CXXStaticCastExpr 0x5605abb720d8 <col:9> 'partial_ordering':'std::partial_ordering' xvalue static_cast<partial_ordering &&> <NoOp>
| | | |       `-DeclRefExpr 0x5605abb72088 <col:9> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abb71f08 depth 0 index 0 'partial_ordering &&'
| | | `-CompoundStmt 0x5605abb72180 <col:9>
| | `-CXXDestructorDecl 0x5605abb72410 <col:9> col:9 implicit referenced constexpr ~partial_ordering 'void () noexcept' inline default trivial
| |-VarDecl 0x5605abb72710 parent 0x5605abd39720 prev 0x5605abb6afc8 <line:152:3, line:153:47> col:21 referenced less 'const partial_ordering':'const std::partial_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| | |-value: Struct
| | | `-field: Int -1
| | `-CXXConstructExpr 0x5605abb728a0 <col:21, col:47> 'const partial_ordering':'const std::partial_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abb727e8 <col:26, col:43> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd38f70 'less' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abb729c8 parent 0x5605abd39720 prev 0x5605abb6b060 <line:155:3, line:156:59> col:21 used equivalent 'const partial_ordering':'const std::partial_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| | |-value: Struct
| | | `-field: Int 0
| | `-CXXConstructExpr 0x5605abb72af0 <col:21, col:59> 'const partial_ordering':'const std::partial_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abb72aa0 <col:32, col:49> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd38ea0 'equivalent' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abb72c18 parent 0x5605abd39720 prev 0x5605abb6b0f8 <line:158:3, line:159:53> col:21 referenced greater 'const partial_ordering':'const std::partial_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| | |-value: Struct
| | | `-field: Int 1
| | `-CXXConstructExpr 0x5605abb72d40 <col:21, col:53> 'const partial_ordering':'const std::partial_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abb72cf0 <col:29, col:46> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd39028 'greater' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abb72e80 parent 0x5605abd39720 prev 0x5605abb6b190 <line:161:3, line:162:59> col:21 referenced unordered 'const partial_ordering':'const std::partial_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| | |-value: Struct
| | | `-field: Int 2
| | `-CXXConstructExpr 0x5605abb72fa8 <col:21, col:59> 'const partial_ordering':'const std::partial_ordering' 'void (__cmp_cat::_Ncmp) noexcept'
| |   `-DeclRefExpr 0x5605abb72f58 <col:31, col:49> 'std::__cmp_cat::_Ncmp' EnumConstant 0x5605abd391d0 '_Unordered' 'std::__cmp_cat::_Ncmp'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ncmp'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-CXXRecordDecl 0x5605abb73028 prev 0x5605abb6ac38 <line:164:3, line:243:3> line:164:9 referenced class weak_ordering definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr
| | |-CXXRecordDecl 0x5605abb73128 <col:3, col:9> col:9 implicit referenced class weak_ordering
| | |-FieldDecl 0x5605abb73228 <line:166:5, col:21> col:21 referenced _M_value '__cmp_cat::type':'signed char'
| | |-CXXConstructorDecl 0x5605abb733c8 <line:168:5, line:170:7> line:169:5 used constexpr weak_ordering 'void (__cmp_cat::_Ord) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abb732c8 <col:19, col:35> col:35 used __v '__cmp_cat::_Ord':'std::__cmp_cat::_Ord'
| | | |-CXXCtorInitializer Field 0x5605abb73228 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-CXXFunctionalCastExpr 0x5605abd619a0 <col:60, col:79> '__cmp_cat::type':'signed char' functional cast to __cmp_cat::type <IntegralCast>
| | | |   `-ImplicitCastExpr 0x5605abd61988 <col:76> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' <LValueToRValue> part_of_explicit_cast
| | | |     `-DeclRefExpr 0x5605abd61968 <col:76> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' lvalue ParmVar 0x5605abb732c8 '__v' '__cmp_cat::_Ord':'std::__cmp_cat::_Ord'
| | | `-CompoundStmt 0x5605abd61a10 <line:170:5, col:7>
| | |-FriendDecl 0x5605abb734f8 <line:172:5, col:18> col:12 'class strong_ordering':'std::strong_ordering'
| | |-AccessSpecDecl 0x5605abb73548 <line:174:3, col:9> col:3 public
| | |-VarDecl 0x5605abb735b8 <line:176:5, col:32> col:32 less 'const weak_ordering':'const std::weak_ordering' static
| | |-VarDecl 0x5605abb73650 <line:177:5, col:32> col:32 equivalent 'const weak_ordering':'const std::weak_ordering' static
| | |-VarDecl 0x5605abb736e8 <line:178:5, col:32> col:32 greater 'const weak_ordering':'const std::weak_ordering' static
| | |-CXXConversionDecl 0x5605abb73860 <line:181:5, line:182:59> line:181:15 constexpr operator partial_ordering 'partial_ordering () const noexcept' implicit-inline
| | | |-CompoundStmt 0x5605abd61b60 <line:182:5, col:59>
| | | | `-ReturnStmt 0x5605abd61b50 <col:7, col:56>
| | | |   `-CXXFunctionalCastExpr 0x5605abd61b28 <col:14, col:56> 'partial_ordering':'std::partial_ordering' functional cast to partial_ordering <ConstructorConversion>
| | | |     `-CXXConstructExpr 0x5605abd61af8 <col:14, col:56> 'partial_ordering':'std::partial_ordering' 'void (__cmp_cat::_Ord) noexcept'
| | | |       `-CXXFunctionalCastExpr 0x5605abd61ad0 <col:31, col:55> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' functional cast to __cmp_cat::_Ord <IntegralCast>
| | | |         `-ImplicitCastExpr 0x5605abd61ab8 <col:47> '__cmp_cat::type':'signed char' <LValueToRValue> part_of_explicit_cast
| | | |           `-MemberExpr 0x5605abd61a88 <col:47> 'const __cmp_cat::type':'const signed char' lvalue ->_M_value 0x5605abb73228
| | | |             `-CXXThisExpr 0x5605abd61a78 <col:47> 'const std::weak_ordering *' implicit this
| | | `-WarnUnusedResultAttr 0x5605abb73910 <line:180:7> nodiscard ""
| | |-FriendDecl 0x5605abd5f228 <line:186:5, line:188:33> line:187:5
| | | `-FunctionDecl 0x5605abb73bc0 parent 0x5605abd38b10 <line:186:5, line:188:33> line:187:5 constexpr friend_undeclared operator== 'bool (weak_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abb739a8 <col:16, col:30> col:30 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-ParmVarDecl 0x5605abb73a68 <col:35, col:46> col:54 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd61d20 <line:188:5, col:33>
| | |   | `-ReturnStmt 0x5605abd61d10 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abd61c18 <col:14, col:30> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abd61c00 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd61be8 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd61b98 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |     |     `-DeclRefExpr 0x5605abd61b78 <col:14> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abb739a8 '__v' 'weak_ordering':'std::weak_ordering'
| | |   |     `-IntegerLiteral 0x5605abd61bc8 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abb73c88 <line:185:7> nodiscard ""
| | |-FriendDecl 0x5605abd5f5b8 <line:191:5, line:192:63> col:5
| | | `-FunctionDecl 0x5605abd5f460 parent 0x5605abd38b10 <line:191:5, line:192:63> col:5 constexpr friend_undeclared operator== 'bool (weak_ordering, weak_ordering) noexcept' default implicit-inline
| | |   |-ParmVarDecl 0x5605abd5f288 <col:16> col:29 'weak_ordering':'std::weak_ordering'
| | |   |-ParmVarDecl 0x5605abd5f308 <col:31> col:44 'weak_ordering':'std::weak_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd5f528 <line:190:7> nodiscard ""
| | |-FriendDecl 0x5605abd5f908 <line:195:5, line:197:32> line:196:5
| | | `-FunctionDecl 0x5605abd5f7b0 parent 0x5605abd38b10 <line:195:5, line:197:32> line:196:5 constexpr friend_undeclared operator< 'bool (weak_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd5f618 <col:16, col:30> col:30 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-ParmVarDecl 0x5605abd5f6d8 <col:35, col:46> col:54 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd61e08 <line:197:5, col:32>
| | |   | `-ReturnStmt 0x5605abd61df8 <col:7, col:29>
| | |   |   `-BinaryOperator 0x5605abd61dd8 <col:14, col:29> 'bool' '<'
| | |   |     |-ImplicitCastExpr 0x5605abd61dc0 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd61da8 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd61d58 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |     |     `-DeclRefExpr 0x5605abd61d38 <col:14> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd5f618 '__v' 'weak_ordering':'std::weak_ordering'
| | |   |     `-IntegerLiteral 0x5605abd61d88 <col:29> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd5f878 <line:194:7> nodiscard ""
| | |-FriendDecl 0x5605abd5fc58 <line:200:5, line:202:32> line:201:5
| | | `-FunctionDecl 0x5605abd5fb00 parent 0x5605abd38b10 <line:200:5, line:202:32> line:201:5 constexpr friend_undeclared operator> 'bool (weak_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd5f968 <col:16, col:30> col:30 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-ParmVarDecl 0x5605abd5fa28 <col:35, col:46> col:54 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd61ef0 <line:202:5, col:32>
| | |   | `-ReturnStmt 0x5605abd61ee0 <col:7, col:29>
| | |   |   `-BinaryOperator 0x5605abd61ec0 <col:14, col:29> 'bool' '>'
| | |   |     |-ImplicitCastExpr 0x5605abd61ea8 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd61e90 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd61e40 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |     |     `-DeclRefExpr 0x5605abd61e20 <col:14> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd5f968 '__v' 'weak_ordering':'std::weak_ordering'
| | |   |     `-IntegerLiteral 0x5605abd61e70 <col:29> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd5fbc8 <line:199:7> nodiscard ""
| | |-FriendDecl 0x5605abd5ffa8 <line:205:5, line:207:33> line:206:5
| | | `-FunctionDecl 0x5605abd5fe50 parent 0x5605abd38b10 <line:205:5, line:207:33> line:206:5 constexpr friend_undeclared operator<= 'bool (weak_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd5fcb8 <col:16, col:30> col:30 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-ParmVarDecl 0x5605abd5fd78 <col:35, col:46> col:54 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd61fd8 <line:207:5, col:33>
| | |   | `-ReturnStmt 0x5605abd61fc8 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abd61fa8 <col:14, col:30> 'bool' '<='
| | |   |     |-ImplicitCastExpr 0x5605abd61f90 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd61f78 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd61f28 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |     |     `-DeclRefExpr 0x5605abd61f08 <col:14> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd5fcb8 '__v' 'weak_ordering':'std::weak_ordering'
| | |   |     `-IntegerLiteral 0x5605abd61f58 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd5ff18 <line:204:7> nodiscard ""
| | |-FriendDecl 0x5605abd602f8 <line:210:5, line:212:33> line:211:5
| | | `-FunctionDecl 0x5605abd601a0 parent 0x5605abd38b10 <line:210:5, line:212:33> line:211:5 constexpr friend_undeclared operator>= 'bool (weak_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd60008 <col:16, col:30> col:30 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-ParmVarDecl 0x5605abd600c8 <col:35, col:46> col:54 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd620c0 <line:212:5, col:33>
| | |   | `-ReturnStmt 0x5605abd620b0 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abd62090 <col:14, col:30> 'bool' '>='
| | |   |     |-ImplicitCastExpr 0x5605abd62078 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd62060 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd62010 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |     |     `-DeclRefExpr 0x5605abd61ff0 <col:14> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd60008 '__v' 'weak_ordering':'std::weak_ordering'
| | |   |     `-IntegerLiteral 0x5605abd62040 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd60268 <line:209:7> nodiscard ""
| | |-FriendDecl 0x5605abd606c8 <line:215:5, line:217:32> line:216:5
| | | `-FunctionDecl 0x5605abd60570 parent 0x5605abd38b10 <line:215:5, line:217:32> line:216:5 constexpr friend_undeclared operator< 'bool (__cmp_cat::__unspec, weak_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd60398 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd60418 <col:37, col:51> col:51 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-CompoundStmt 0x5605abd621a8 <line:217:5, col:32>
| | |   | `-ReturnStmt 0x5605abd62198 <col:7, col:22>
| | |   |   `-BinaryOperator 0x5605abd62178 <col:14, col:22> 'bool' '<'
| | |   |     |-IntegerLiteral 0x5605abd620d8 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd62160 <col:18, col:22> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd62148 <col:18, col:22> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd62118 <col:18, col:22> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |           `-DeclRefExpr 0x5605abd620f8 <col:18> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd60418 '__v' 'weak_ordering':'std::weak_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd60638 <line:214:7> nodiscard ""
| | |-FriendDecl 0x5605abd60a18 <line:220:5, line:222:32> line:221:5
| | | `-FunctionDecl 0x5605abd608c0 parent 0x5605abd38b10 <line:220:5, line:222:32> line:221:5 constexpr friend_undeclared operator> 'bool (__cmp_cat::__unspec, weak_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd60768 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd607e8 <col:37, col:51> col:51 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-CompoundStmt 0x5605abd62290 <line:222:5, col:32>
| | |   | `-ReturnStmt 0x5605abd62280 <col:7, col:22>
| | |   |   `-BinaryOperator 0x5605abd62260 <col:14, col:22> 'bool' '>'
| | |   |     |-IntegerLiteral 0x5605abd621c0 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd62248 <col:18, col:22> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd62230 <col:18, col:22> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd62200 <col:18, col:22> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |           `-DeclRefExpr 0x5605abd621e0 <col:18> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd607e8 '__v' 'weak_ordering':'std::weak_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd60988 <line:219:7> nodiscard ""
| | |-FriendDecl 0x5605abd60d68 <line:225:5, line:227:33> line:226:5
| | | `-FunctionDecl 0x5605abd60c10 parent 0x5605abd38b10 <line:225:5, line:227:33> line:226:5 constexpr friend_undeclared operator<= 'bool (__cmp_cat::__unspec, weak_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd60ab8 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd60b38 <col:37, col:51> col:51 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-CompoundStmt 0x5605abd62378 <line:227:5, col:33>
| | |   | `-ReturnStmt 0x5605abd62368 <col:7, col:23>
| | |   |   `-BinaryOperator 0x5605abd62348 <col:14, col:23> 'bool' '<='
| | |   |     |-IntegerLiteral 0x5605abd622a8 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd62330 <col:19, col:23> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd62318 <col:19, col:23> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd622e8 <col:19, col:23> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |           `-DeclRefExpr 0x5605abd622c8 <col:19> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd60b38 '__v' 'weak_ordering':'std::weak_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd60cd8 <line:224:7> nodiscard ""
| | |-FriendDecl 0x5605abd610b8 <line:230:5, line:232:33> line:231:5
| | | `-FunctionDecl 0x5605abd60f60 parent 0x5605abd38b10 <line:230:5, line:232:33> line:231:5 constexpr friend_undeclared operator>= 'bool (__cmp_cat::__unspec, weak_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd60e08 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd60e88 <col:37, col:51> col:51 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-CompoundStmt 0x5605abd62460 <line:232:5, col:33>
| | |   | `-ReturnStmt 0x5605abd62450 <col:7, col:23>
| | |   |   `-BinaryOperator 0x5605abd62430 <col:14, col:23> 'bool' '>='
| | |   |     |-IntegerLiteral 0x5605abd62390 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd62418 <col:19, col:23> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd62400 <col:19, col:23> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd623d0 <col:19, col:23> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |           `-DeclRefExpr 0x5605abd623b0 <col:19> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd60e88 '__v' 'weak_ordering':'std::weak_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd61028 <line:229:7> nodiscard ""
| | |-FriendDecl 0x5605abd614e8 <line:235:5, line:237:19> line:236:5
| | | `-FunctionDecl 0x5605abd61390 parent 0x5605abd38b10 <line:235:5, line:237:19> line:236:5 constexpr friend_undeclared operator<=> 'weak_ordering (weak_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd61118 <col:17, col:31> col:31 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-ParmVarDecl 0x5605abd61238 <col:36, col:47> col:55 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd62b50 <line:237:5, col:19>
| | |   | `-ReturnStmt 0x5605abd62b40 <col:7, col:14>
| | |   |   `-CXXConstructExpr 0x5605abd62b10 <col:14> 'weak_ordering':'std::weak_ordering' 'void (weak_ordering &&) noexcept'
| | |   |     `-ImplicitCastExpr 0x5605abd62498 <col:14> 'weak_ordering':'std::weak_ordering' xvalue <NoOp>
| | |   |       `-DeclRefExpr 0x5605abd62478 <col:14> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd61118 '__v' 'weak_ordering':'std::weak_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd61458 <line:234:7> nodiscard ""
| | |-FriendDecl 0x5605abd618b8 <line:240:5, line:242:61> line:241:5
| | | `-FunctionDecl 0x5605abd61760 parent 0x5605abd38b10 <line:240:5, line:242:61> line:241:5 constexpr friend_undeclared operator<=> 'weak_ordering (__cmp_cat::__unspec, weak_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd61588 <col:17, col:28> col:36 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd61608 <col:38, col:52> col:52 used __v 'weak_ordering':'std::weak_ordering'
| | |   |-CompoundStmt 0x5605abd62df8 <line:242:5, col:61>
| | |   | `-ReturnStmt 0x5605abd62de8 <col:7, col:58>
| | |   |   `-CXXFunctionalCastExpr 0x5605abd62dc0 <col:14, col:58> 'weak_ordering':'std::weak_ordering' functional cast to weak_ordering <ConstructorConversion>
| | |   |     `-CXXConstructExpr 0x5605abd62c80 <col:14, col:58> 'weak_ordering':'std::weak_ordering' 'void (__cmp_cat::_Ord) noexcept'
| | |   |       `-CXXFunctionalCastExpr 0x5605abd62c58 <col:28, col:57> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' functional cast to __cmp_cat::_Ord <IntegralCast>
| | |   |         `-UnaryOperator 0x5605abd62c40 <col:44, col:49> 'int' prefix '-' cannot overflow
| | |   |           `-ImplicitCastExpr 0x5605abd62c28 <col:45, col:49> 'int' <IntegralCast>
| | |   |             `-ImplicitCastExpr 0x5605abd62c10 <col:45, col:49> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |               `-MemberExpr 0x5605abd62be0 <col:45, col:49> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abb73228
| | |   |                 `-DeclRefExpr 0x5605abd62bc0 <col:45> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd61608 '__v' 'weak_ordering':'std::weak_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd61828 <line:239:7> nodiscard ""
| | |-CXXConstructorDecl 0x5605abd62518 <line:164:9> col:9 implicit used constexpr weak_ordering 'void (const weak_ordering &) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abd62658 <col:9> col:9 used 'const weak_ordering &'
| | | |-CXXCtorInitializer Field 0x5605abb73228 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-ImplicitCastExpr 0x5605abd7f5e8 <col:9> '__cmp_cat::type':'signed char' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abd7f5b0 <col:9> 'const __cmp_cat::type':'const signed char' lvalue ._M_value 0x5605abb73228
| | | |     `-DeclRefExpr 0x5605abd7f578 <col:9> 'const weak_ordering':'const std::weak_ordering' lvalue ParmVar 0x5605abd62658 depth 0 index 0 'const weak_ordering &'
| | | `-CompoundStmt 0x5605abd7f628 <col:9>
| | |-CXXConstructorDecl 0x5605abd62748 <col:9> col:9 implicit used constexpr weak_ordering 'void (weak_ordering &&) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abd62888 <col:9> col:9 used 'weak_ordering &&'
| | | |-CXXCtorInitializer Field 0x5605abb73228 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-ImplicitCastExpr 0x5605abd62ac0 <col:9> '__cmp_cat::type':'signed char' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abd62a88 <col:9> '__cmp_cat::type':'signed char' xvalue ._M_value 0x5605abb73228
| | | |     `-CXXStaticCastExpr 0x5605abd62a58 <col:9> 'weak_ordering':'std::weak_ordering' xvalue static_cast<weak_ordering &&> <NoOp>
| | | |       `-DeclRefExpr 0x5605abd62a08 <col:9> 'weak_ordering':'std::weak_ordering' lvalue ParmVar 0x5605abd62888 depth 0 index 0 'weak_ordering &&'
| | | `-CompoundStmt 0x5605abd62b00 <col:9>
| | `-CXXDestructorDecl 0x5605abd62cb8 <col:9> col:9 implicit referenced constexpr ~weak_ordering 'void () noexcept' inline default trivial
| |-VarDecl 0x5605abd62ef0 parent 0x5605abb73028 prev 0x5605abb735b8 <line:246:3, line:247:44> col:18 referenced less 'const weak_ordering':'const std::weak_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |-value: Struct
| | | `-field: Int -1
| | `-CXXConstructExpr 0x5605abd63050 <col:18, col:44> 'const weak_ordering':'const std::weak_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abd62fc8 <col:23, col:40> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd38f70 'less' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abd63178 parent 0x5605abb73028 prev 0x5605abb73650 <line:249:3, line:250:56> col:18 referenced equivalent 'const weak_ordering':'const std::weak_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |-value: Struct
| | | `-field: Int 0
| | `-CXXConstructExpr 0x5605abd637e0 <col:18, col:56> 'const weak_ordering':'const std::weak_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abd63790 <col:29, col:46> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd38ea0 'equivalent' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abd63908 parent 0x5605abb73028 prev 0x5605abb736e8 <line:252:3, line:253:50> col:18 referenced greater 'const weak_ordering':'const std::weak_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |-value: Struct
| | | `-field: Int 1
| | `-CXXConstructExpr 0x5605abd63a30 <col:18, col:50> 'const weak_ordering':'const std::weak_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abd639e0 <col:26, col:43> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd39028 'greater' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-CXXRecordDecl 0x5605abd63ab0 prev 0x5605abb6adc0 <line:255:3, line:338:3> line:255:9 referenced class strong_ordering definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr
| | |-CXXRecordDecl 0x5605abd63bb0 <col:3, col:9> col:9 implicit referenced class strong_ordering
| | |-FieldDecl 0x5605abd63cb0 <line:257:5, col:21> col:21 referenced _M_value '__cmp_cat::type':'signed char'
| | |-CXXConstructorDecl 0x5605abd63e58 <line:259:5, line:262:7> line:260:5 used constexpr strong_ordering 'void (__cmp_cat::_Ord) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abd63d50 <col:21, col:37> col:37 used __v '__cmp_cat::_Ord':'std::__cmp_cat::_Ord'
| | | |-CXXCtorInitializer Field 0x5605abd63cb0 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-CXXFunctionalCastExpr 0x5605abd67040 <line:261:16, col:35> '__cmp_cat::type':'signed char' functional cast to __cmp_cat::type <IntegralCast>
| | | |   `-ImplicitCastExpr 0x5605abd67028 <col:32> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' <LValueToRValue> part_of_explicit_cast
| | | |     `-DeclRefExpr 0x5605abd67008 <col:32> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' lvalue ParmVar 0x5605abd63d50 '__v' '__cmp_cat::_Ord':'std::__cmp_cat::_Ord'
| | | `-CompoundStmt 0x5605abd670b0 <line:262:5, col:7>
| | |-AccessSpecDecl 0x5605abd63f30 <line:264:3, col:9> col:3 public
| | |-VarDecl 0x5605abd63fa8 <line:266:5, col:34> col:34 less 'const strong_ordering':'const std::strong_ordering' static
| | |-VarDecl 0x5605abd64040 <line:267:5, col:34> col:34 equal 'const strong_ordering':'const std::strong_ordering' static
| | |-VarDecl 0x5605abd640d8 <line:268:5, col:34> col:34 equivalent 'const strong_ordering':'const std::strong_ordering' static
| | |-VarDecl 0x5605abd64170 <line:269:5, col:34> col:34 greater 'const strong_ordering':'const std::strong_ordering' static
| | |-CXXConversionDecl 0x5605abd64260 <line:272:5, line:273:59> line:272:15 constexpr operator partial_ordering 'partial_ordering () const noexcept' implicit-inline
| | | |-CompoundStmt 0x5605abd67200 <line:273:5, col:59>
| | | | `-ReturnStmt 0x5605abd671f0 <col:7, col:56>
| | | |   `-CXXFunctionalCastExpr 0x5605abd671c8 <col:14, col:56> 'partial_ordering':'std::partial_ordering' functional cast to partial_ordering <ConstructorConversion>
| | | |     `-CXXConstructExpr 0x5605abd67198 <col:14, col:56> 'partial_ordering':'std::partial_ordering' 'void (__cmp_cat::_Ord) noexcept'
| | | |       `-CXXFunctionalCastExpr 0x5605abd67170 <col:31, col:55> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' functional cast to __cmp_cat::_Ord <IntegralCast>
| | | |         `-ImplicitCastExpr 0x5605abd67158 <col:47> '__cmp_cat::type':'signed char' <LValueToRValue> part_of_explicit_cast
| | | |           `-MemberExpr 0x5605abd67128 <col:47> 'const __cmp_cat::type':'const signed char' lvalue ->_M_value 0x5605abd63cb0
| | | |             `-CXXThisExpr 0x5605abd67118 <col:47> 'const std::strong_ordering *' implicit this
| | | `-WarnUnusedResultAttr 0x5605abd64310 <line:271:7> nodiscard ""
| | |-CXXConversionDecl 0x5605abd64450 <line:276:5, line:277:56> line:276:15 constexpr operator weak_ordering 'weak_ordering () const noexcept' implicit-inline
| | | |-CompoundStmt 0x5605abd67358 <line:277:5, col:56>
| | | | `-ReturnStmt 0x5605abd67348 <col:7, col:53>
| | | |   `-CXXFunctionalCastExpr 0x5605abd67320 <col:14, col:53> 'weak_ordering':'std::weak_ordering' functional cast to weak_ordering <ConstructorConversion>
| | | |     `-CXXConstructExpr 0x5605abd672f0 <col:14, col:53> 'weak_ordering':'std::weak_ordering' 'void (__cmp_cat::_Ord) noexcept'
| | | |       `-CXXFunctionalCastExpr 0x5605abd672c8 <col:28, col:52> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' functional cast to __cmp_cat::_Ord <IntegralCast>
| | | |         `-ImplicitCastExpr 0x5605abd672b0 <col:44> '__cmp_cat::type':'signed char' <LValueToRValue> part_of_explicit_cast
| | | |           `-MemberExpr 0x5605abd67280 <col:44> 'const __cmp_cat::type':'const signed char' lvalue ->_M_value 0x5605abd63cb0
| | | |             `-CXXThisExpr 0x5605abd67270 <col:44> 'const std::strong_ordering *' implicit this
| | | `-WarnUnusedResultAttr 0x5605abd64500 <line:275:7> nodiscard ""
| | |-FriendDecl 0x5605abd64918 <line:281:5, line:283:33> line:282:5
| | | `-FunctionDecl 0x5605abd647c0 parent 0x5605abd38b10 <line:281:5, line:283:33> line:282:5 constexpr friend_undeclared operator== 'bool (strong_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd645a0 <col:16, col:32> col:32 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-ParmVarDecl 0x5605abd64660 <col:37, col:48> col:56 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd67518 <line:283:5, col:33>
| | |   | `-ReturnStmt 0x5605abd67508 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abd67410 <col:14, col:30> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abd673f8 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd673e0 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd67390 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |     |     `-DeclRefExpr 0x5605abd67370 <col:14> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd645a0 '__v' 'strong_ordering':'std::strong_ordering'
| | |   |     `-IntegerLiteral 0x5605abd673c0 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd64888 <line:280:7> nodiscard ""
| | |-FriendDecl 0x5605abd64ca8 <line:286:5, line:287:67> col:5
| | | `-FunctionDecl 0x5605abd64b50 parent 0x5605abd38b10 <line:286:5, line:287:67> col:5 used constexpr friend_undeclared operator== 'bool (strong_ordering, strong_ordering) noexcept' default implicit-inline
| | |   |-ParmVarDecl 0x5605abd64978 <col:16> col:31 used 'strong_ordering':'std::strong_ordering'
| | |   |-ParmVarDecl 0x5605abd649f8 <col:33> col:48 used 'strong_ordering':'std::strong_ordering'
| | |   |-CompoundStmt 0x5605abd966d0 <col:67>
| | |   | `-ReturnStmt 0x5605abd966c0 <col:67>
| | |   |   `-BinaryOperator 0x5605abd966a0 <col:67> 'bool' '=='
| | |   |     |-ImplicitCastExpr 0x5605abd96670 <col:67> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd96640 <col:67> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd965e0 <col:67> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |     |     `-DeclRefExpr 0x5605abd965a0 <col:67> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd64978 depth 0 index 0 'strong_ordering':'std::strong_ordering'
| | |   |     `-ImplicitCastExpr 0x5605abd96688 <col:67> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd96658 <col:67> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd96610 <col:67> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |           `-DeclRefExpr 0x5605abd965c0 <col:67> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd649f8 depth 0 index 1 'strong_ordering':'std::strong_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd64c18 <line:285:7> nodiscard ""
| | |-FriendDecl 0x5605abd64ff8 <line:290:5, line:292:32> line:291:5
| | | `-FunctionDecl 0x5605abd64ea0 parent 0x5605abd38b10 <line:290:5, line:292:32> line:291:5 constexpr friend_undeclared operator< 'bool (strong_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd64d08 <col:16, col:32> col:32 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-ParmVarDecl 0x5605abd64dc8 <col:37, col:48> col:56 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd67600 <line:292:5, col:32>
| | |   | `-ReturnStmt 0x5605abd675f0 <col:7, col:29>
| | |   |   `-BinaryOperator 0x5605abd675d0 <col:14, col:29> 'bool' '<'
| | |   |     |-ImplicitCastExpr 0x5605abd675b8 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd675a0 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd67550 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |     |     `-DeclRefExpr 0x5605abd67530 <col:14> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd64d08 '__v' 'strong_ordering':'std::strong_ordering'
| | |   |     `-IntegerLiteral 0x5605abd67580 <col:29> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd64f68 <line:289:7> nodiscard ""
| | |-FriendDecl 0x5605abd65348 <line:295:5, line:297:32> line:296:5
| | | `-FunctionDecl 0x5605abd651f0 parent 0x5605abd38b10 <line:295:5, line:297:32> line:296:5 constexpr friend_undeclared operator> 'bool (strong_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd65058 <col:16, col:32> col:32 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-ParmVarDecl 0x5605abd65118 <col:37, col:48> col:56 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd676e8 <line:297:5, col:32>
| | |   | `-ReturnStmt 0x5605abd676d8 <col:7, col:29>
| | |   |   `-BinaryOperator 0x5605abd676b8 <col:14, col:29> 'bool' '>'
| | |   |     |-ImplicitCastExpr 0x5605abd676a0 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd67688 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd67638 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |     |     `-DeclRefExpr 0x5605abd67618 <col:14> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd65058 '__v' 'strong_ordering':'std::strong_ordering'
| | |   |     `-IntegerLiteral 0x5605abd67668 <col:29> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd652b8 <line:294:7> nodiscard ""
| | |-FriendDecl 0x5605abd65698 <line:300:5, line:302:33> line:301:5
| | | `-FunctionDecl 0x5605abd65540 parent 0x5605abd38b10 <line:300:5, line:302:33> line:301:5 constexpr friend_undeclared operator<= 'bool (strong_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd653a8 <col:16, col:32> col:32 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-ParmVarDecl 0x5605abd65468 <col:37, col:48> col:56 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd677f0 <line:302:5, col:33>
| | |   | `-ReturnStmt 0x5605abd677e0 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abd677c0 <col:14, col:30> 'bool' '<='
| | |   |     |-ImplicitCastExpr 0x5605abd677a8 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd67790 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd67720 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |     |     `-DeclRefExpr 0x5605abd67700 <col:14> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd653a8 '__v' 'strong_ordering':'std::strong_ordering'
| | |   |     `-IntegerLiteral 0x5605abd67750 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd65608 <line:299:7> nodiscard ""
| | |-FriendDecl 0x5605abd659f8 <line:305:5, line:307:33> line:306:5
| | | `-FunctionDecl 0x5605abd658a0 parent 0x5605abd38b10 <line:305:5, line:307:33> line:306:5 constexpr friend_undeclared operator>= 'bool (strong_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd656f8 <col:16, col:32> col:32 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-ParmVarDecl 0x5605abd657c8 <col:37, col:48> col:56 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd678d8 <line:307:5, col:33>
| | |   | `-ReturnStmt 0x5605abd678c8 <col:7, col:30>
| | |   |   `-BinaryOperator 0x5605abd678a8 <col:14, col:30> 'bool' '>='
| | |   |     |-ImplicitCastExpr 0x5605abd67890 <col:14, col:18> 'int' <IntegralCast>
| | |   |     | `-ImplicitCastExpr 0x5605abd67878 <col:14, col:18> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |     |   `-MemberExpr 0x5605abd67828 <col:14, col:18> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |     |     `-DeclRefExpr 0x5605abd67808 <col:14> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd656f8 '__v' 'strong_ordering':'std::strong_ordering'
| | |   |     `-IntegerLiteral 0x5605abd67858 <col:30> 'int' 0
| | |   `-WarnUnusedResultAttr 0x5605abd65968 <line:304:7> nodiscard ""
| | |-FriendDecl 0x5605abd65dc8 <line:310:5, line:312:32> line:311:5
| | | `-FunctionDecl 0x5605abd65c70 parent 0x5605abd38b10 <line:310:5, line:312:32> line:311:5 constexpr friend_undeclared operator< 'bool (__cmp_cat::__unspec, strong_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd65a98 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd65b18 <col:37, col:53> col:53 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-CompoundStmt 0x5605abd679c0 <line:312:5, col:32>
| | |   | `-ReturnStmt 0x5605abd679b0 <col:7, col:22>
| | |   |   `-BinaryOperator 0x5605abd67990 <col:14, col:22> 'bool' '<'
| | |   |     |-IntegerLiteral 0x5605abd678f0 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd67978 <col:18, col:22> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd67960 <col:18, col:22> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd67930 <col:18, col:22> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |           `-DeclRefExpr 0x5605abd67910 <col:18> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd65b18 '__v' 'strong_ordering':'std::strong_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd65d38 <line:309:7> nodiscard ""
| | |-FriendDecl 0x5605abd66118 <line:315:5, line:317:32> line:316:5
| | | `-FunctionDecl 0x5605abd65fc0 parent 0x5605abd38b10 <line:315:5, line:317:32> line:316:5 constexpr friend_undeclared operator> 'bool (__cmp_cat::__unspec, strong_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd65e68 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd65ee8 <col:37, col:53> col:53 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-CompoundStmt 0x5605abd67aa8 <line:317:5, col:32>
| | |   | `-ReturnStmt 0x5605abd67a98 <col:7, col:22>
| | |   |   `-BinaryOperator 0x5605abd67a78 <col:14, col:22> 'bool' '>'
| | |   |     |-IntegerLiteral 0x5605abd679d8 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd67a60 <col:18, col:22> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd67a48 <col:18, col:22> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd67a18 <col:18, col:22> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |           `-DeclRefExpr 0x5605abd679f8 <col:18> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd65ee8 '__v' 'strong_ordering':'std::strong_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd66088 <line:314:7> nodiscard ""
| | |-FriendDecl 0x5605abd66468 <line:320:5, line:322:33> line:321:5
| | | `-FunctionDecl 0x5605abd66310 parent 0x5605abd38b10 <line:320:5, line:322:33> line:321:5 constexpr friend_undeclared operator<= 'bool (__cmp_cat::__unspec, strong_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd661b8 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd66238 <col:37, col:53> col:53 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-CompoundStmt 0x5605abd67b90 <line:322:5, col:33>
| | |   | `-ReturnStmt 0x5605abd67b80 <col:7, col:23>
| | |   |   `-BinaryOperator 0x5605abd67b60 <col:14, col:23> 'bool' '<='
| | |   |     |-IntegerLiteral 0x5605abd67ac0 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd67b48 <col:19, col:23> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd67b30 <col:19, col:23> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd67b00 <col:19, col:23> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |           `-DeclRefExpr 0x5605abd67ae0 <col:19> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd66238 '__v' 'strong_ordering':'std::strong_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd663d8 <line:319:7> nodiscard ""
| | |-FriendDecl 0x5605abd667b8 <line:325:5, line:327:33> line:326:5
| | | `-FunctionDecl 0x5605abd66660 parent 0x5605abd38b10 <line:325:5, line:327:33> line:326:5 constexpr friend_undeclared operator>= 'bool (__cmp_cat::__unspec, strong_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd66508 <col:16, col:27> col:35 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd66588 <col:37, col:53> col:53 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-CompoundStmt 0x5605abd67c78 <line:327:5, col:33>
| | |   | `-ReturnStmt 0x5605abd67c68 <col:7, col:23>
| | |   |   `-BinaryOperator 0x5605abd67c48 <col:14, col:23> 'bool' '>='
| | |   |     |-IntegerLiteral 0x5605abd67ba8 <col:14> 'int' 0
| | |   |     `-ImplicitCastExpr 0x5605abd67c30 <col:19, col:23> 'int' <IntegralCast>
| | |   |       `-ImplicitCastExpr 0x5605abd67c18 <col:19, col:23> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |         `-MemberExpr 0x5605abd67be8 <col:19, col:23> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |           `-DeclRefExpr 0x5605abd67bc8 <col:19> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd66588 '__v' 'strong_ordering':'std::strong_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd66728 <line:324:7> nodiscard ""
| | |-FriendDecl 0x5605abd66b88 <line:330:5, line:332:19> line:331:5
| | | `-FunctionDecl 0x5605abd66a30 parent 0x5605abd38b10 <line:330:5, line:332:19> line:331:5 constexpr friend_undeclared operator<=> 'strong_ordering (strong_ordering, __cmp_cat::__unspec) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd66818 <col:17, col:33> col:33 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-ParmVarDecl 0x5605abd668d8 <col:38, col:49> col:57 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-CompoundStmt 0x5605abd68370 <line:332:5, col:19>
| | |   | `-ReturnStmt 0x5605abd68360 <col:7, col:14>
| | |   |   `-CXXConstructExpr 0x5605abd68330 <col:14> 'strong_ordering':'std::strong_ordering' 'void (strong_ordering &&) noexcept'
| | |   |     `-ImplicitCastExpr 0x5605abd67cb0 <col:14> 'strong_ordering':'std::strong_ordering' xvalue <NoOp>
| | |   |       `-DeclRefExpr 0x5605abd67c90 <col:14> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd66818 '__v' 'strong_ordering':'std::strong_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd66af8 <line:329:7> nodiscard ""
| | |-FriendDecl 0x5605abd66f58 <line:335:5, line:337:63> line:336:5
| | | `-FunctionDecl 0x5605abd66e00 parent 0x5605abd38b10 <line:335:5, line:337:63> line:336:5 constexpr friend_undeclared operator<=> 'strong_ordering (__cmp_cat::__unspec, strong_ordering) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abd66c28 <col:17, col:28> col:36 '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |   |-ParmVarDecl 0x5605abd66ca8 <col:38, col:54> col:54 used __v 'strong_ordering':'std::strong_ordering'
| | |   |-CompoundStmt 0x5605abd68618 <line:337:5, col:63>
| | |   | `-ReturnStmt 0x5605abd68608 <col:7, col:60>
| | |   |   `-CXXFunctionalCastExpr 0x5605abd685e0 <col:14, col:60> 'strong_ordering':'std::strong_ordering' functional cast to strong_ordering <ConstructorConversion>
| | |   |     `-CXXConstructExpr 0x5605abd684a0 <col:14, col:60> 'strong_ordering':'std::strong_ordering' 'void (__cmp_cat::_Ord) noexcept'
| | |   |       `-CXXFunctionalCastExpr 0x5605abd68478 <col:30, col:59> '__cmp_cat::_Ord':'std::__cmp_cat::_Ord' functional cast to __cmp_cat::_Ord <IntegralCast>
| | |   |         `-UnaryOperator 0x5605abd68460 <col:46, col:51> 'int' prefix '-' cannot overflow
| | |   |           `-ImplicitCastExpr 0x5605abd68448 <col:47, col:51> 'int' <IntegralCast>
| | |   |             `-ImplicitCastExpr 0x5605abd68430 <col:47, col:51> '__cmp_cat::type':'signed char' <LValueToRValue>
| | |   |               `-MemberExpr 0x5605abd68400 <col:47, col:51> '__cmp_cat::type':'signed char' lvalue ._M_value 0x5605abd63cb0
| | |   |                 `-DeclRefExpr 0x5605abd683e0 <col:47> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd66ca8 '__v' 'strong_ordering':'std::strong_ordering'
| | |   `-WarnUnusedResultAttr 0x5605abd66ec8 <line:334:7> nodiscard ""
| | |-CXXConstructorDecl 0x5605abd67d38 <line:255:9> col:9 implicit used constexpr strong_ordering 'void (const strong_ordering &) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abd67e78 <col:9> col:9 used 'const strong_ordering &'
| | | |-CXXCtorInitializer Field 0x5605abd63cb0 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-ImplicitCastExpr 0x5605abd95698 <col:9> '__cmp_cat::type':'signed char' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abd95660 <col:9> 'const __cmp_cat::type':'const signed char' lvalue ._M_value 0x5605abd63cb0
| | | |     `-DeclRefExpr 0x5605abd95628 <col:9> 'const strong_ordering':'const std::strong_ordering' lvalue ParmVar 0x5605abd67e78 depth 0 index 0 'const strong_ordering &'
| | | `-CompoundStmt 0x5605abd956d8 <col:9>
| | |-CXXConstructorDecl 0x5605abd67f68 <col:9> col:9 implicit used constexpr strong_ordering 'void (strong_ordering &&) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abd680a8 <col:9> col:9 used 'strong_ordering &&'
| | | |-CXXCtorInitializer Field 0x5605abd63cb0 '_M_value' '__cmp_cat::type':'signed char'
| | | | `-ImplicitCastExpr 0x5605abd682e0 <col:9> '__cmp_cat::type':'signed char' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abd682a8 <col:9> '__cmp_cat::type':'signed char' xvalue ._M_value 0x5605abd63cb0
| | | |     `-CXXStaticCastExpr 0x5605abd68278 <col:9> 'strong_ordering':'std::strong_ordering' xvalue static_cast<strong_ordering &&> <NoOp>
| | | |       `-DeclRefExpr 0x5605abd68228 <col:9> 'strong_ordering':'std::strong_ordering' lvalue ParmVar 0x5605abd680a8 depth 0 index 0 'strong_ordering &&'
| | | `-CompoundStmt 0x5605abd68320 <col:9>
| | `-CXXDestructorDecl 0x5605abd684d8 <col:9> col:9 implicit referenced constexpr ~strong_ordering 'void () noexcept' inline default trivial
| |-VarDecl 0x5605abd68710 parent 0x5605abd63ab0 prev 0x5605abd63fa8 <line:341:3, line:342:46> col:20 referenced less 'const strong_ordering':'const std::strong_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | |-value: Struct
| | | `-field: Int -1
| | `-CXXConstructExpr 0x5605abd68870 <col:20, col:46> 'const strong_ordering':'const std::strong_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abd687e8 <col:25, col:42> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd38f70 'less' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abd68998 parent 0x5605abd63ab0 prev 0x5605abd64040 <line:344:3, line:345:53> col:20 referenced equal 'const strong_ordering':'const std::strong_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | |-value: Struct
| | | `-field: Int 0
| | `-CXXConstructExpr 0x5605abd68ac0 <col:20, col:53> 'const strong_ordering':'const std::strong_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abd68a70 <col:26, col:43> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd38ea0 'equivalent' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abd68be8 parent 0x5605abd63ab0 prev 0x5605abd640d8 <line:347:3, line:348:58> col:20 referenced equivalent 'const strong_ordering':'const std::strong_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | |-value: Struct
| | | `-field: Int 0
| | `-CXXConstructExpr 0x5605abd68d10 <col:20, col:58> 'const strong_ordering':'const std::strong_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abd68cc0 <col:31, col:48> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd38ea0 'equivalent' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-VarDecl 0x5605abd68e38 parent 0x5605abd63ab0 prev 0x5605abd64170 <line:350:3, line:351:52> col:20 referenced greater 'const strong_ordering':'const std::strong_ordering' inline constexpr callinit
| | |-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | |-value: Struct
| | | `-field: Int 1
| | `-CXXConstructExpr 0x5605abd68f60 <col:20, col:52> 'const strong_ordering':'const std::strong_ordering' 'void (__cmp_cat::_Ord) noexcept'
| |   `-DeclRefExpr 0x5605abd68f10 <col:28, col:45> 'std::__cmp_cat::_Ord' EnumConstant 0x5605abd39028 'greater' 'std::__cmp_cat::_Ord'
| |     `-NestedNameSpecifier TypeSpec 'std::__cmp_cat::_Ord'
| |       `-NestedNameSpecifier Namespace 0x5605abd38be0 '__cmp_cat'
| |-FunctionDecl 0x5605abd69120 <line:356:3, line:358:24> line:357:3 constexpr is_eq 'bool (partial_ordering) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abd68ff0 <col:9, col:26> col:26 used __cmp 'partial_ordering':'std::partial_ordering'
| | |-CompoundStmt 0x5605abd73ae0 <line:358:3, col:24>
| | | `-ReturnStmt 0x5605abd73ad0 <col:5, col:21>
| | |   `-CXXOperatorCallExpr 0x5605abd73a98 <col:12, col:21> 'bool' '==' adl
| | |     |-ImplicitCastExpr 0x5605abd73a80 <col:18> 'bool (*)(partial_ordering, __cmp_cat::__unspec) noexcept' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x5605abd73a00 <col:18> 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' lvalue Function 0x5605abb6b470 'operator==' 'bool (partial_ordering, __cmp_cat::__unspec) noexcept'
| | |     |-CXXConstructExpr 0x5605abd73708 <col:12> 'partial_ordering':'std::partial_ordering' 'void (const partial_ordering &) noexcept'
| | |     | `-ImplicitCastExpr 0x5605abd69720 <col:12> 'const partial_ordering':'const std::partial_ordering' lvalue <NoOp>
| | |     |   `-DeclRefExpr 0x5605abd69248 <col:12> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abd68ff0 '__cmp' 'partial_ordering':'std::partial_ordering'
| | |     `-ImplicitCastExpr 0x5605abd738d0 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' <ConstructorConversion>
| | |       `-ConstantExpr 0x5605abd73880 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |         |-value: Struct
| | |         `-CXXConstructExpr 0x5605abd73850 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' 'void (__unspec *) noexcept'
| | |           `-ImplicitCastExpr 0x5605abd73738 <col:21> '__unspec *' <NullToPointer>
| | |             `-IntegerLiteral 0x5605abd69268 <col:21> 'int' 0
| | `-WarnUnusedResultAttr 0x5605abd691d0 <line:355:5> nodiscard ""
| |-FunctionDecl 0x5605abd73bc8 <line:361:3, line:363:24> line:362:3 constexpr is_neq 'bool (partial_ordering) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abd73b10 <col:10, col:27> col:27 used __cmp 'partial_ordering':'std::partial_ordering'
| | |-CompoundStmt 0x5605abd73ed8 <line:363:3, col:24>
| | | `-ReturnStmt 0x5605abd73ec8 <col:5, col:21>
| | |   `-CXXRewrittenBinaryOperator 0x5605abd73eb0 <col:12, col:21> 'bool'
| | |     `-UnaryOperator 0x5605abd73e98 <col:18, col:21> 'bool' prefix '!' cannot overflow
| | |       `-CXXOperatorCallExpr 0x5605abd73e60 <col:12, col:21> 'bool' '==' adl
| | |         |-ImplicitCastExpr 0x5605abd73e48 <col:18> 'bool (*)(partial_ordering, __cmp_cat::__unspec) noexcept' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x5605abd73e28 <col:18> 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' lvalue Function 0x5605abb6b470 'operator==' 'bool (partial_ordering, __cmp_cat::__unspec) noexcept'
| | |         |-CXXConstructExpr 0x5605abd73d48 <col:12> 'partial_ordering':'std::partial_ordering' 'void (const partial_ordering &) noexcept'
| | |         | `-ImplicitCastExpr 0x5605abd73d30 <col:12> 'const partial_ordering':'const std::partial_ordering' lvalue <NoOp>
| | |         |   `-DeclRefExpr 0x5605abd73cf0 <col:12> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abd73b10 '__cmp' 'partial_ordering':'std::partial_ordering'
| | |         `-ImplicitCastExpr 0x5605abd73e10 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' <ConstructorConversion>
| | |           `-ConstantExpr 0x5605abd73dc0 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |             |-value: Struct
| | |             `-CXXConstructExpr 0x5605abd73d90 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' 'void (__unspec *) noexcept'
| | |               `-ImplicitCastExpr 0x5605abd73d78 <col:21> '__unspec *' <NullToPointer>
| | |                 `-IntegerLiteral 0x5605abd73d10 <col:21> 'int' 0
| | `-WarnUnusedResultAttr 0x5605abd73c78 <line:360:5> nodiscard ""
| |-FunctionDecl 0x5605abd73fc0 <line:366:3, line:368:23> line:367:3 constexpr is_lt 'bool (partial_ordering) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abd73f08 <col:11, col:28> col:28 used __cmp 'partial_ordering':'std::partial_ordering'
| | |-CompoundStmt 0x5605abd742a0 <line:368:3, col:23>
| | | `-ReturnStmt 0x5605abd74290 <col:5, col:20>
| | |   `-CXXOperatorCallExpr 0x5605abd74258 <col:12, col:20> 'bool' '<' adl
| | |     |-ImplicitCastExpr 0x5605abd74240 <col:18> 'bool (*)(partial_ordering, __cmp_cat::__unspec) noexcept' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x5605abd74220 <col:18> 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' lvalue Function 0x5605abb6bb40 'operator<' 'bool (partial_ordering, __cmp_cat::__unspec) noexcept'
| | |     |-CXXConstructExpr 0x5605abd74140 <col:12> 'partial_ordering':'std::partial_ordering' 'void (const partial_ordering &) noexcept'
| | |     | `-ImplicitCastExpr 0x5605abd74128 <col:12> 'const partial_ordering':'const std::partial_ordering' lvalue <NoOp>
| | |     |   `-DeclRefExpr 0x5605abd740e8 <col:12> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abd73f08 '__cmp' 'partial_ordering':'std::partial_ordering'
| | |     `-ImplicitCastExpr 0x5605abd74208 <col:20> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' <ConstructorConversion>
| | |       `-ConstantExpr 0x5605abd741b8 <col:20> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |         |-value: Struct
| | |         `-CXXConstructExpr 0x5605abd74188 <col:20> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' 'void (__unspec *) noexcept'
| | |           `-ImplicitCastExpr 0x5605abd74170 <col:20> '__unspec *' <NullToPointer>
| | |             `-IntegerLiteral 0x5605abd74108 <col:20> 'int' 0
| | `-WarnUnusedResultAttr 0x5605abd74070 <line:365:5> nodiscard ""
| |-FunctionDecl 0x5605abd74388 <line:371:3, line:373:24> line:372:3 constexpr is_lteq 'bool (partial_ordering) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abd742d0 <col:11, col:28> col:28 used __cmp 'partial_ordering':'std::partial_ordering'
| | |-CompoundStmt 0x5605abd74668 <line:373:3, col:24>
| | | `-ReturnStmt 0x5605abd74658 <col:5, col:21>
| | |   `-CXXOperatorCallExpr 0x5605abd74620 <col:12, col:21> 'bool' '<=' adl
| | |     |-ImplicitCastExpr 0x5605abd74608 <col:18> 'bool (*)(partial_ordering, __cmp_cat::__unspec) noexcept' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x5605abd745e8 <col:18> 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' lvalue Function 0x5605abb6c1c0 'operator<=' 'bool (partial_ordering, __cmp_cat::__unspec) noexcept'
| | |     |-CXXConstructExpr 0x5605abd74508 <col:12> 'partial_ordering':'std::partial_ordering' 'void (const partial_ordering &) noexcept'
| | |     | `-ImplicitCastExpr 0x5605abd744f0 <col:12> 'const partial_ordering':'const std::partial_ordering' lvalue <NoOp>
| | |     |   `-DeclRefExpr 0x5605abd744b0 <col:12> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abd742d0 '__cmp' 'partial_ordering':'std::partial_ordering'
| | |     `-ImplicitCastExpr 0x5605abd745d0 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' <ConstructorConversion>
| | |       `-ConstantExpr 0x5605abd74580 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |         |-value: Struct
| | |         `-CXXConstructExpr 0x5605abd74550 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' 'void (__unspec *) noexcept'
| | |           `-ImplicitCastExpr 0x5605abd74538 <col:21> '__unspec *' <NullToPointer>
| | |             `-IntegerLiteral 0x5605abd744d0 <col:21> 'int' 0
| | `-WarnUnusedResultAttr 0x5605abd74438 <line:370:5> nodiscard ""
| |-FunctionDecl 0x5605abd74750 <line:376:3, line:378:23> line:377:3 constexpr is_gt 'bool (partial_ordering) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abd74698 <col:11, col:28> col:28 used __cmp 'partial_ordering':'std::partial_ordering'
| | |-CompoundStmt 0x5605abd74a30 <line:378:3, col:23>
| | | `-ReturnStmt 0x5605abd74a20 <col:5, col:20>
| | |   `-CXXOperatorCallExpr 0x5605abd749e8 <col:12, col:20> 'bool' '>' adl
| | |     |-ImplicitCastExpr 0x5605abd749d0 <col:18> 'bool (*)(partial_ordering, __cmp_cat::__unspec) noexcept' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x5605abd749b0 <col:18> 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' lvalue Function 0x5605abb6be80 'operator>' 'bool (partial_ordering, __cmp_cat::__unspec) noexcept'
| | |     |-CXXConstructExpr 0x5605abd748d0 <col:12> 'partial_ordering':'std::partial_ordering' 'void (const partial_ordering &) noexcept'
| | |     | `-ImplicitCastExpr 0x5605abd748b8 <col:12> 'const partial_ordering':'const std::partial_ordering' lvalue <NoOp>
| | |     |   `-DeclRefExpr 0x5605abd74878 <col:12> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abd74698 '__cmp' 'partial_ordering':'std::partial_ordering'
| | |     `-ImplicitCastExpr 0x5605abd74998 <col:20> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' <ConstructorConversion>
| | |       `-ConstantExpr 0x5605abd74948 <col:20> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |         |-value: Struct
| | |         `-CXXConstructExpr 0x5605abd74918 <col:20> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' 'void (__unspec *) noexcept'
| | |           `-ImplicitCastExpr 0x5605abd74900 <col:20> '__unspec *' <NullToPointer>
| | |             `-IntegerLiteral 0x5605abd74898 <col:20> 'int' 0
| | `-WarnUnusedResultAttr 0x5605abd74800 <line:375:5> nodiscard ""
| |-FunctionDecl 0x5605abd74b18 <line:381:3, line:383:24> line:382:3 constexpr is_gteq 'bool (partial_ordering) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abd74a60 <col:11, col:28> col:28 used __cmp 'partial_ordering':'std::partial_ordering'
| | |-CompoundStmt 0x5605abd74df8 <line:383:3, col:24>
| | | `-ReturnStmt 0x5605abd74de8 <col:5, col:21>
| | |   `-CXXOperatorCallExpr 0x5605abd74db0 <col:12, col:21> 'bool' '>=' adl
| | |     |-ImplicitCastExpr 0x5605abd74d98 <col:18> 'bool (*)(partial_ordering, __cmp_cat::__unspec) noexcept' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x5605abd74d78 <col:18> 'bool (partial_ordering, __cmp_cat::__unspec) noexcept' lvalue Function 0x5605abb6c500 'operator>=' 'bool (partial_ordering, __cmp_cat::__unspec) noexcept'
| | |     |-CXXConstructExpr 0x5605abd74c98 <col:12> 'partial_ordering':'std::partial_ordering' 'void (const partial_ordering &) noexcept'
| | |     | `-ImplicitCastExpr 0x5605abd74c80 <col:12> 'const partial_ordering':'const std::partial_ordering' lvalue <NoOp>
| | |     |   `-DeclRefExpr 0x5605abd74c40 <col:12> 'partial_ordering':'std::partial_ordering' lvalue ParmVar 0x5605abd74a60 '__cmp' 'partial_ordering':'std::partial_ordering'
| | |     `-ImplicitCastExpr 0x5605abd74d60 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' <ConstructorConversion>
| | |       `-ConstantExpr 0x5605abd74d10 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec'
| | |         |-value: Struct
| | |         `-CXXConstructExpr 0x5605abd74ce0 <col:21> '__cmp_cat::__unspec':'std::__cmp_cat::__unspec' 'void (__unspec *) noexcept'
| | |           `-ImplicitCastExpr 0x5605abd74cc8 <col:21> '__unspec *' <NullToPointer>
| | |             `-IntegerLiteral 0x5605abd74c60 <col:21> 'int' 0
| | `-WarnUnusedResultAttr 0x5605abd74bc8 <line:380:5> nodiscard ""
| |-NamespaceDecl 0x5605abd74e18 prev 0x5605abd334a0 <line:385:3, line:415:3> line:385:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | |-VarTemplateDecl 0x5605abd74fc0 <line:387:5, line:388:48> col:33 __cmp_cat_id
| | | |-TemplateTypeParmDecl 0x5605abd74e90 <line:387:14, col:23> col:23 typename depth 0 index 0 _Tp
| | | |-VarDecl 0x5605abd74f50 <line:388:7, col:48> col:33 __cmp_cat_id 'const unsigned int' inline constexpr cinit
| | | | |-value: Int 1
| | | | `-ImplicitCastExpr 0x5605abd75038 <col:48> 'const unsigned int' <IntegralCast>
| | | |   `-IntegerLiteral 0x5605abd75018 <col:48> 'int' 1
| | | |-VarTemplateSpecialization 0x5605abd751f0 '__cmp_cat_id' 'const unsigned int'
| | | |-VarTemplateSpecialization 0x5605abd753e8 '__cmp_cat_id' 'const unsigned int'
| | | `-VarTemplateSpecialization 0x5605abd697a8 '__cmp_cat_id' 'const unsigned int'
| | |-VarTemplateSpecializationDecl 0x5605abd751f0 <line:389:5, line:390:66> col:33 referenced __cmp_cat_id 'const unsigned int' explicit_specialization inline constexpr cinit
| | | |-value: Int 2
| | | |-TemplateArgument type 'std::partial_ordering'
| | | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | `-ImplicitCastExpr 0x5605abd75328 <col:66> 'const unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x5605abd75308 <col:66> 'int' 2
| | |-VarTemplateSpecializationDecl 0x5605abd753e8 <line:391:5, line:392:63> col:33 referenced __cmp_cat_id 'const unsigned int' explicit_specialization inline constexpr cinit
| | | |-value: Int 4
| | | |-TemplateArgument type 'std::weak_ordering'
| | | | `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | | |   `-CXXRecord 0x5605abb73028 'weak_ordering'
| | | `-ImplicitCastExpr 0x5605abd75520 <col:63> 'const unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x5605abd75500 <col:63> 'int' 4
| | |-VarTemplateSpecializationDecl 0x5605abd697a8 <line:393:5, line:394:65> col:33 referenced __cmp_cat_id 'const unsigned int' explicit_specialization inline constexpr cinit
| | | |-value: Int 8
| | | |-TemplateArgument type 'std::strong_ordering'
| | | | `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | | |   `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | | `-ImplicitCastExpr 0x5605abd698e0 <col:65> 'const unsigned int' <IntegralCast>
| | |   `-IntegerLiteral 0x5605abd698c0 <col:65> 'int' 8
| | `-FunctionTemplateDecl 0x5605abd69b10 <line:396:5, line:414:7> line:397:22 __common_cmp_cat
| |   |-TemplateTypeParmDecl 0x5605abd69960 <line:396:14, col:26> col:26 referenced typename depth 0 index 0 ... _Ts
| |   |-FunctionDecl 0x5605abd69a60 <line:397:7, line:414:7> line:397:22 constexpr __common_cmp_cat 'auto ()' implicit-inline
| |   | `-CompoundStmt 0x5605abd6a350 <line:398:7, line:414:7>
| |   |   |-DeclStmt 0x5605abd69da0 <line:399:2, col:55>
| |   |   | `-VarDecl 0x5605abd69c70 <col:2, col:54> col:21 referenced __cats 'const unsigned int' constexpr cinit
| |   |   |   `-CXXFoldExpr 0x5605abd69d60 <col:30, col:54> '<dependent type>'
| |   |   |     |-<<<NULL>>>
| |   |   |     |-UnresolvedLookupExpr 0x5605abd69ce8 <col:31, col:47> '<dependent type>' lvalue (no ADL) = '__cmp_cat_id' 0x5605abd74fc0
| |   |   |     | `-TemplateArgument type '_Ts':'type-parameter-0-0'
| |   |   |     |   `-TemplateTypeParmType 0x5605abd699b0 '_Ts' dependent contains_unexpanded_pack depth 0 index 0 pack
| |   |   |     |     `-TemplateTypeParm 0x5605abd69960 '_Ts'
| |   |   |     `-<<<NULL>>>
| |   |   `-IfStmt 0x5605abd6a320 <line:401:2, line:413:28> has_else constexpr
| |   |     |-ImplicitCastExpr 0x5605abd69e60 <line:401:16, col:25> 'bool' <IntegralToBoolean>
| |   |     | `-BinaryOperator 0x5605abd69e40 <col:16, col:25> 'unsigned int' '&'
| |   |     |   |-ImplicitCastExpr 0x5605abd69e10 <col:16> 'unsigned int' <LValueToRValue>
| |   |     |   | `-DeclRefExpr 0x5605abd69db8 <col:16> 'const unsigned int' lvalue Var 0x5605abd69c70 '__cats' 'const unsigned int'
| |   |     |   `-ImplicitCastExpr 0x5605abd69e28 <col:25> 'unsigned int' <IntegralCast>
| |   |     |     `-IntegerLiteral 0x5605abd69df0 <col:25> 'int' 1
| |   |     |-ReturnStmt 0x5605abd69e78 <line:402:4>
| |   |     `-IfStmt 0x5605abd6a2f0 <line:405:7, line:413:28> has_else constexpr
| |   |       |-CXXFunctionalCastExpr 0x5605abd69fc8 <line:405:21, col:65> 'bool' functional cast to _Bool <Dependent>
| |   |       | `-BinaryOperator 0x5605abd69fa8 <col:26, col:64> 'unsigned int' '&'
| |   |       |   |-ImplicitCastExpr 0x5605abd69f20 <col:26> 'unsigned int' <LValueToRValue>
| |   |       |   | `-DeclRefExpr 0x5605abd69e98 <col:26> 'const unsigned int' lvalue Var 0x5605abd69c70 '__cats' 'const unsigned int'
| |   |       |   `-ImplicitCastExpr 0x5605abd69f90 <col:35, col:64> 'unsigned int' <LValueToRValue>
| |   |       |     `-DeclRefExpr 0x5605abd69f38 <col:35, col:64> 'const unsigned int' lvalue VarTemplateSpecialization 0x5605abd751f0 '__cmp_cat_id' 'const unsigned int' (VarTemplate 0x5605abd74fc0 '__cmp_cat_id') non_odr_use_constant
| |   |       |-ReturnStmt 0x5605abd6a058 <line:406:4, col:29>
| |   |       | `-DeclRefExpr 0x5605abd6a028 <col:11, col:29> 'const partial_ordering':'const std::partial_ordering' lvalue Var 0x5605abb729c8 'equivalent' 'const partial_ordering':'const std::partial_ordering'
| |   |       |   `-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| |   |       `-IfStmt 0x5605abd6a2c0 <line:409:7, line:413:28> has_else constexpr
| |   |         |-CXXFunctionalCastExpr 0x5605abd6a1a8 <line:409:21, col:62> 'bool' functional cast to _Bool <Dependent>
| |   |         | `-BinaryOperator 0x5605abd6a188 <col:26, col:61> 'unsigned int' '&'
| |   |         |   |-ImplicitCastExpr 0x5605abd6a100 <col:26> 'unsigned int' <LValueToRValue>
| |   |         |   | `-DeclRefExpr 0x5605abd6a078 <col:26> 'const unsigned int' lvalue Var 0x5605abd69c70 '__cats' 'const unsigned int'
| |   |         |   `-ImplicitCastExpr 0x5605abd6a170 <col:35, col:61> 'unsigned int' <LValueToRValue>
| |   |         |     `-DeclRefExpr 0x5605abd6a118 <col:35, col:61> 'const unsigned int' lvalue VarTemplateSpecialization 0x5605abd753e8 '__cmp_cat_id' 'const unsigned int' (VarTemplate 0x5605abd74fc0 '__cmp_cat_id') non_odr_use_constant
| |   |         |-ReturnStmt 0x5605abd6a238 <line:410:4, col:26>
| |   |         | `-DeclRefExpr 0x5605abd6a208 <col:11, col:26> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63178 'equivalent' 'const weak_ordering':'const std::weak_ordering'
| |   |         |   `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| |   |         `-ReturnStmt 0x5605abd6a2b0 <line:413:4, col:28>
| |   |           `-DeclRefExpr 0x5605abd6a280 <col:11, col:28> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68be8 'equivalent' 'const strong_ordering':'const std::strong_ordering'
| |   |             `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| |   `-FunctionDecl 0x5605abdc6300 <line:397:7, line:414:7> line:397:22 referenced constexpr __common_cmp_cat 'partial_ordering ()' implicit_instantiation implicit-inline
| |     |-TemplateArgument pack '<std::strong_ordering, std::partial_ordering>'
| |     | |-TemplateArgument type 'std::strong_ordering'
| |     | | `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| |     | |   `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| |     | `-TemplateArgument type 'std::partial_ordering'
| |     |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
| |     |     `-CXXRecord 0x5605abd39720 'partial_ordering'
| |     `-CompoundStmt 0x5605abdc6bd0 <line:398:7, line:414:7>
| |       |-DeclStmt 0x5605abdc6718 <line:399:2, col:55>
| |       | `-VarDecl 0x5605abdc6418 <col:2, col:47> col:21 referenced __cats 'const unsigned int' constexpr cinit
| |       |   |-value: Int 10
| |       |   `-BinaryOperator 0x5605abdc6698 <col:31, col:47> 'unsigned int' '|'
| |       |     |-ImplicitCastExpr 0x5605abdc6610 <col:31, col:47> 'unsigned int' <LValueToRValue>
| |       |     | `-DeclRefExpr 0x5605abdc65b8 <col:31, col:47> 'const unsigned int' lvalue VarTemplateSpecialization 0x5605abd697a8 '__cmp_cat_id' 'const unsigned int' (VarTemplate 0x5605abd74fc0 '__cmp_cat_id') non_odr_use_constant
| |       |     `-ImplicitCastExpr 0x5605abdc6680 <col:31, col:47> 'unsigned int' <LValueToRValue>
| |       |       `-DeclRefExpr 0x5605abdc6628 <col:31, col:47> 'const unsigned int' lvalue VarTemplateSpecialization 0x5605abd751f0 '__cmp_cat_id' 'const unsigned int' (VarTemplate 0x5605abd74fc0 '__cmp_cat_id') non_odr_use_constant
| |       `-IfStmt 0x5605abdc6ba0 <line:401:2, line:413:28> has_else constexpr
| |         |-ConstantExpr 0x5605abdc67d8 <line:401:16, col:25> 'bool'
| |         | |-value: Int 0
| |         | `-ImplicitCastExpr 0x5605abdc67c0 <col:16, col:25> 'bool' <IntegralToBoolean>
| |         |   `-BinaryOperator 0x5605abdc67a0 <col:16, col:25> 'unsigned int' '&'
| |         |     |-ImplicitCastExpr 0x5605abdc6770 <col:16> 'unsigned int' <LValueToRValue>
| |         |     | `-DeclRefExpr 0x5605abdc6750 <col:16> 'const unsigned int' lvalue Var 0x5605abdc6418 '__cats' 'const unsigned int' non_odr_use_constant
| |         |     `-ImplicitCastExpr 0x5605abdc6788 <col:25> 'unsigned int' <IntegralCast>
| |         |       `-IntegerLiteral 0x5605abd69df0 <col:25> 'int' 1
| |         |-CompoundStmt 0x5605abdc67f8 <line:402:4>
| |         `-IfStmt 0x5605abdc6b70 <line:405:7, line:413:28> has_else constexpr
| |           |-ConstantExpr 0x5605abdc6988 <line:405:21, col:65> 'bool'
| |           | |-value: Int 1
| |           | `-CXXFunctionalCastExpr 0x5605abdc6960 <col:21, col:65> 'bool' functional cast to _Bool <NoOp>
| |           |   `-ImplicitCastExpr 0x5605abdc6948 <col:26, col:64> 'bool' <IntegralToBoolean> part_of_explicit_cast
| |           |     `-BinaryOperator 0x5605abdc6928 <col:26, col:64> 'unsigned int' '&'
| |           |       |-ImplicitCastExpr 0x5605abdc68a0 <col:26> 'unsigned int' <LValueToRValue>
| |           |       | `-DeclRefExpr 0x5605abdc6880 <col:26> 'const unsigned int' lvalue Var 0x5605abdc6418 '__cats' 'const unsigned int' non_odr_use_constant
| |           |       `-ImplicitCastExpr 0x5605abdc6910 <col:35, col:64> 'unsigned int' <LValueToRValue>
| |           |         `-DeclRefExpr 0x5605abdc68b8 <col:35, col:64> 'const unsigned int' lvalue VarTemplateSpecialization 0x5605abd751f0 '__cmp_cat_id' 'const unsigned int' (VarTemplate 0x5605abd74fc0 '__cmp_cat_id') non_odr_use_constant
| |           |-ReturnStmt 0x5605abdc6b50 <line:406:4, col:29>
| |           | `-CXXConstructExpr 0x5605abdc6b20 <col:11, col:29> 'partial_ordering':'std::partial_ordering' 'void (const partial_ordering &) noexcept'
| |           |   `-DeclRefExpr 0x5605abd6a028 <col:11, col:29> 'const partial_ordering':'const std::partial_ordering' lvalue Var 0x5605abb729c8 'equivalent' 'const partial_ordering':'const std::partial_ordering'
| |           |     `-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| |           `-CompoundStmt 0x5605abdc6b60 <line:409:7, line:413:28>
| |-ClassTemplateDecl 0x5605abd6a4e8 <line:418:3, line:422:5> line:419:12 common_comparison_category
| | |-TemplateTypeParmDecl 0x5605abd6a390 <line:418:12, col:24> col:24 referenced typename depth 0 index 0 ... _Ts
| | |-CXXRecordDecl 0x5605abd6a438 <line:419:5, line:422:5> line:419:12 struct common_comparison_category definition
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abd6a800 <col:5, col:12> col:12 implicit struct common_comparison_category
| | | `-TypeAliasDecl 0x5605abd6aa28 <line:421:7, col:65> col:13 type 'decltype(__detail::__common_cmp_cat<_Ts...>())'
| | |   `-DecltypeType 0x5605abd6a9e0 'decltype(__detail::__common_cmp_cat<_Ts...>())' dependent
| | |     `-CallExpr 0x5605abd6a990 <col:29, col:64> '<dependent type>'
| | |       `-UnresolvedLookupExpr 0x5605abd6a918 <col:29, col:62> '<dependent type>' lvalue (no ADL) = '__common_cmp_cat' 0x5605abd69b10
| | |         `-TemplateArgument type '_Ts...':'type-parameter-0-0...'
| | |           `-PackExpansionType 0x5605abd6a660 '_Ts...' dependent
| | |             `-TemplateTypeParmType 0x5605abd6a3e0 '_Ts' dependent contains_unexpanded_pack depth 0 index 0 pack
| | |               `-TemplateTypeParm 0x5605abd6a390 '_Ts'
| | |-ClassTemplateSpecialization 0x5605abd6b018 'common_comparison_category'
| | |-ClassTemplateSpecialization 0x5605abd6b3a8 'common_comparison_category'
| | |-ClassTemplateSpecialization 0x5605abd6c968 'common_comparison_category'
| | |-ClassTemplateSpecialization 0x5605abd6ccb8 'common_comparison_category'
| | `-ClassTemplateSpecializationDecl 0x5605abdc5c68 <line:418:3, line:422:5> line:419:12 struct common_comparison_category definition implicit_instantiation
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument pack '<std::strong_ordering, std::partial_ordering>'
| |   | |-TemplateArgument type 'std::strong_ordering'
| |   | | `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| |   | |   `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| |   | `-TemplateArgument type 'std::partial_ordering'
| |   |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
| |   |     `-CXXRecord 0x5605abd39720 'partial_ordering'
| |   |-CXXRecordDecl 0x5605abdc5f60 <col:5, col:12> col:12 implicit struct common_comparison_category
| |   `-TypeAliasDecl 0x5605abdc6d88 <line:421:7, col:65> col:13 referenced type 'decltype(__detail::__common_cmp_cat<std::strong_ordering, std::partial_ordering>())':'std::partial_ordering'
| |     `-DecltypeType 0x5605abdc6d40 'decltype(__detail::__common_cmp_cat<std::strong_ordering, std::partial_ordering>())' sugar
| |       |-CallExpr 0x5605abdc6cf8 <col:29, col:64> 'partial_ordering':'std::partial_ordering'
| |       | `-ImplicitCastExpr 0x5605abdc6ce0 <col:29, col:62> 'partial_ordering (*)()' <FunctionToPointerDecay>
| |       |   `-DeclRefExpr 0x5605abdc6bf0 <col:29, col:62> 'partial_ordering ()' lvalue Function 0x5605abdc6300 '__common_cmp_cat' 'partial_ordering ()' (FunctionTemplate 0x5605abd69b10 '__common_cmp_cat') non_odr_use_unevaluated
| |       |     `-NestedNameSpecifier Namespace 0x5605abd74e18 '__detail'
| |       `-AutoType 0x5605abdc6a60 'partial_ordering' sugar
| |         `-ElaboratedType 0x5605abb6af80 'partial_ordering' sugar
| |           `-RecordType 0x5605abd397d0 'std::partial_ordering'
| |             `-CXXRecord 0x5605abd39720 'partial_ordering'
| |-ClassTemplatePartialSpecializationDecl 0x5605abd6ac40 <line:426:3, line:428:26> line:427:12 struct common_comparison_category definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<type-parameter-0-0>'
| | | `-TemplateArgument type 'type-parameter-0-0'
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateTypeParmDecl 0x5605abd6aac0 <line:426:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-CXXRecordDecl 0x5605abd6ae68 <line:427:5, col:12> col:12 implicit struct common_comparison_category
| | `-TypeAliasDecl 0x5605abd6af28 <line:428:7, col:20> col:13 type 'void'
| |   `-BuiltinType 0x5605aba9c9d0 'void'
| |-ClassTemplateSpecializationDecl 0x5605abd6b018 <line:430:3, line:432:38> line:431:12 struct common_comparison_category definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<std::partial_ordering>'
| | | `-TemplateArgument type 'std::partial_ordering'
| | |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |     `-CXXRecord 0x5605abd39720 'partial_ordering'
| | |-CXXRecordDecl 0x5605abd6b1f8 <col:5, col:12> col:12 implicit struct common_comparison_category
| | `-TypeAliasDecl 0x5605abd6b2b8 <line:432:7, col:20> col:13 type 'partial_ordering':'std::partial_ordering'
| |   `-ElaboratedType 0x5605abb6af80 'partial_ordering' sugar
| |     `-RecordType 0x5605abd397d0 'std::partial_ordering'
| |       `-CXXRecord 0x5605abd39720 'partial_ordering'
| |-ClassTemplateSpecializationDecl 0x5605abd6b3a8 <line:434:3, line:436:35> line:435:12 struct common_comparison_category definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<std::weak_ordering>'
| | | `-TemplateArgument type 'std::weak_ordering'
| | |   `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | |     `-CXXRecord 0x5605abb73028 'weak_ordering'
| | |-CXXRecordDecl 0x5605abd6b588 <col:5, col:12> col:12 implicit struct common_comparison_category
| | `-TypeAliasDecl 0x5605abd6b648 <line:436:7, col:20> col:13 type 'weak_ordering':'std::weak_ordering'
| |   `-ElaboratedType 0x5605abb73570 'weak_ordering' sugar
| |     `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| |       `-CXXRecord 0x5605abb73028 'weak_ordering'
| |-ClassTemplateSpecializationDecl 0x5605abd6c968 <line:438:3, line:440:37> line:439:12 struct common_comparison_category definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<std::strong_ordering>'
| | | `-TemplateArgument type 'std::strong_ordering'
| | |   `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | |     `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | |-CXXRecordDecl 0x5605abd6cb48 <col:5, col:12> col:12 implicit struct common_comparison_category
| | `-TypeAliasDecl 0x5605abd6cc08 <line:440:7, col:20> col:13 type 'strong_ordering':'std::strong_ordering'
| |   `-ElaboratedType 0x5605abd63f60 'strong_ordering' sugar
| |     `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| |       `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| |-ClassTemplateSpecializationDecl 0x5605abd6ccb8 <line:442:3, line:444:37> line:443:12 struct common_comparison_category definition explicit_specialization
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument pack '<>'
| | |-CXXRecordDecl 0x5605abd6ce78 <col:5, col:12> col:12 implicit struct common_comparison_category
| | `-TypeAliasDecl 0x5605abd6cf38 <line:444:7, col:20> col:13 type 'strong_ordering':'std::strong_ordering'
| |   `-ElaboratedType 0x5605abd63f60 'strong_ordering' sugar
| |     `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| |       `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| |-TypeAliasTemplateDecl 0x5605abd6d2a0 <line:446:3, line:448:54> line:447:5 common_comparison_category_t
| | |-TemplateTypeParmDecl 0x5605abd6cfd0 <line:446:12, col:24> col:24 referenced typename depth 0 index 0 ... _Ts
| | `-TypeAliasDecl 0x5605abd6d238 <line:447:5, line:448:54> line:447:11 common_comparison_category_t 'typename common_comparison_category<_Ts...>::type'
| |   `-DependentNameType 0x5605abd6d1c0 'typename common_comparison_category<_Ts...>::type' dependent
| |-NamespaceDecl 0x5605abd6d300 prev 0x5605abd74e18 <line:452:3, line:457:3> line:452:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | `-ConceptDecl 0x5605abd6d4c0 <line:454:5, line:456:57> line:455:15 __compares_as
| |   |-TemplateTypeParmDecl 0x5605abd6d378 <line:454:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abd6d408 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Cat
| |   `-ConceptSpecializationExpr 0x5605abd6da48 <line:456:4, col:57> 'bool' Concept 0x5605abd12b80 'same_as'
| |     |-ImplicitConceptSpecializationDecl 0x5605abd6d958 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:62:13> col:13
| |     | |-TemplateArgument type 'typename common_comparison_category<type-parameter-0-0, type-parameter-0-1>::type'
| |     | | `-DependentNameType 0x5605abd6d7d0 'typename common_comparison_category<type-parameter-0-0, type-parameter-0-1>::type' dependent
| |     | `-TemplateArgument type 'type-parameter-0-1'
| |     |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:456:12, col:50> type 'common_comparison_category_t<_Tp, _Cat>':'typename common_comparison_category<type-parameter-0-0, type-parameter-0-1>::type'
| |     | `-ElaboratedType 0x5605abd6d8c0 'common_comparison_category_t<_Tp, _Cat>' sugar dependent
| |     |   `-TemplateSpecializationType 0x5605abd6d850 'common_comparison_category_t<_Tp, _Cat>' sugar dependent alias
| |     |     |-name: 'common_comparison_category_t':'std::common_comparison_category_t' qualified
| |     |     | `-TypeAliasTemplateDecl 0x5605abd6d2a0 <line:446:3, line:448:54> line:447:5 common_comparison_category_t
| |     |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |     |     | `-TemplateTypeParmType 0x5605abd6d3d0 '_Tp' dependent depth 0 index 0
| |     |     |   `-TemplateTypeParm 0x5605abd6d378 '_Tp'
| |     |     |-TemplateArgument type '_Cat':'type-parameter-0-1'
| |     |     | `-TemplateTypeParmType 0x5605abd6d460 '_Cat' dependent depth 0 index 1
| |     |     |   `-TemplateTypeParm 0x5605abd6d408 '_Cat'
| |     |     `-DependentNameType 0x5605abd6d800 'typename common_comparison_category<_Tp, _Cat>::type' dependent
| |     `-TemplateArgument <line:456:53> type '_Cat':'type-parameter-0-1'
| |       `-TemplateTypeParmType 0x5605abd6d460 '_Cat' dependent depth 0 index 1
| |         `-TemplateTypeParm 0x5605abd6d408 '_Cat'
| |-ConceptDecl 0x5605abd6dbf0 <line:460:3, line:468:7> line:461:13 three_way_comparable
| | |-TemplateTypeParmDecl 0x5605abd6da78 <line:460:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd6db18 <col:26, col:42> col:35 referenced typename depth 0 index 1 _Cat
| | | `-TemplateArgument type 'partial_ordering':'std::partial_ordering'
| | |   `-ElaboratedType 0x5605abb6af80 'partial_ordering' sugar
| | |     `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |       `-CXXRecord 0x5605abd39720 'partial_ordering'
| | `-BinaryOperator 0x5605abd6e8f0 <line:462:9, line:468:7> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd6df40 <line:462:9, line:463:53> 'bool' '&&'
| |   | |-ConceptSpecializationExpr 0x5605abd6dda0 <line:462:9, col:48> 'bool' Concept 0x5605abd304f0 '__weakly_eq_cmp_with'
| |   | | |-ImplicitConceptSpecializationDecl 0x5605abd6dcb0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:302:15> col:15
| |   | | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | `-TemplateArgument type 'type-parameter-0-0'
| |   | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:462:40> type '_Tp':'type-parameter-0-0'
| |   | | | `-TemplateTypeParmType 0x5605abd6dad0 '_Tp' dependent depth 0 index 0
| |   | | |   `-TemplateTypeParm 0x5605abd6da78 '_Tp'
| |   | | `-TemplateArgument <col:45> type '_Tp':'type-parameter-0-0'
| |   | |   `-TemplateTypeParmType 0x5605abd6dad0 '_Tp' dependent depth 0 index 0
| |   | |     `-TemplateTypeParm 0x5605abd6da78 '_Tp'
| |   | `-ConceptSpecializationExpr 0x5605abd6df18 <line:463:10, col:53> 'bool' Concept 0x5605abd33660 '__partially_ordered_with'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd6de28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:325:15> col:15
| |   |   | |-TemplateArgument type 'type-parameter-0-0'
| |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   | `-TemplateArgument type 'type-parameter-0-0'
| |   |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:463:45> type '_Tp':'type-parameter-0-0'
| |   |   | `-TemplateTypeParmType 0x5605abd6dad0 '_Tp' dependent depth 0 index 0
| |   |   |   `-TemplateTypeParm 0x5605abd6da78 '_Tp'
| |   |   `-TemplateArgument <col:50> type '_Tp':'type-parameter-0-0'
| |   |     `-TemplateTypeParmType 0x5605abd6dad0 '_Tp' dependent depth 0 index 0
| |   |       `-TemplateTypeParm 0x5605abd6da78 '_Tp'
| |   `-RequiresExpr 0x5605abd6e8a8 <line:464:10, line:468:7> 'bool'
| |     |-ParmVarDecl 0x5605abd6e1c0 <line:464:19, col:50> col:50 referenced __a 'const remove_reference_t<_Tp> &'
| |     |-ParmVarDecl 0x5605abd6e490 <line:465:5, col:36> col:36 referenced __b 'const remove_reference_t<_Tp> &'
| |     `-CompoundRequirement 0x5605abd6e878 dependent
| |       |-BinaryOperator 0x5605abd6e5b8 <line:467:4, col:12> '<dependent type>' '<=>'
| |       | |-DeclRefExpr 0x5605abd6e578 <col:4> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd6e1c0 '__a' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |       | `-DeclRefExpr 0x5605abd6e598 <col:12> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd6e490 '__b' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |       `-ConceptSpecializationExpr 0x5605abd6e7e8 <col:21, col:49> 'bool' Concept 0x5605abd6d4c0 '__compares_as'
| |         |-ImplicitConceptSpecializationDecl 0x5605abd6e6f8 <line:455:15> col:15
| |         | |-TemplateArgument type 'type-parameter-1-0'
| |         | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |         | `-TemplateArgument type 'type-parameter-0-1'
| |         |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |         |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |         | `-TemplateTypeParmType 0x5605abd6e680 'expr-type' dependent depth 1 index 0
| |         |   `-TemplateTypeParm 0x5605abd6e618 'expr-type'
| |         `-TemplateArgument <line:467:45> type '_Cat':'type-parameter-0-1'
| |           `-TemplateTypeParmType 0x5605abd6db70 '_Cat' dependent depth 0 index 1
| |             `-TemplateTypeParm 0x5605abd6db18 '_Cat'
| |-ConceptDecl 0x5605abd6fb98 <line:470:3, line:486:7> line:471:13 three_way_comparable_with
| | |-TemplateTypeParmDecl 0x5605abd6f988 <line:470:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd6fa18 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-TemplateTypeParmDecl 0x5605abd6fab8 <col:40, col:56> col:49 referenced typename depth 0 index 2 _Cat
| | | `-TemplateArgument type 'partial_ordering':'std::partial_ordering'
| | |   `-ElaboratedType 0x5605abb6af80 'partial_ordering' sugar
| | |     `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |       `-CXXRecord 0x5605abd39720 'partial_ordering'
| | `-BinaryOperator 0x5605abd75a88 <line:472:9, line:486:7> 'bool' '&&'
| |   |-BinaryOperator 0x5605abd71120 <line:472:9, line:480:53> 'bool' '&&'
| |   | |-BinaryOperator 0x5605abd70fa0 <line:472:9, line:479:49> 'bool' '&&'
| |   | | |-BinaryOperator 0x5605abd70e20 <line:472:9, line:478:46> 'bool' '&&'
| |   | | | |-BinaryOperator 0x5605abd70478 <line:472:9, line:475:41> 'bool' '&&'
| |   | | | | |-BinaryOperator 0x5605abd6fe78 <line:472:9, line:473:40> 'bool' '&&'
| |   | | | | | |-ConceptSpecializationExpr 0x5605abd6fd10 <line:472:9, col:39> 'bool' Concept 0x5605abd6dbf0 'three_way_comparable'
| |   | | | | | | |-ImplicitConceptSpecializationDecl 0x5605abd6fc20 <line:461:13> col:13
| |   | | | | | | | |-TemplateArgument type 'type-parameter-0-0'
| |   | | | | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | | | | | | | `-TemplateArgument type 'type-parameter-0-2'
| |   | | | | | | |   `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |   | | | | | | |-TemplateArgument <line:472:30> type '_Tp':'type-parameter-0-0'
| |   | | | | | | | `-TemplateTypeParmType 0x5605abd6f9e0 '_Tp' dependent depth 0 index 0
| |   | | | | | | |   `-TemplateTypeParm 0x5605abd6f988 '_Tp'
| |   | | | | | | `-TemplateArgument <col:35> type '_Cat':'type-parameter-0-2'
| |   | | | | | |   `-TemplateTypeParmType 0x5605abd6fb10 '_Cat' dependent depth 0 index 2
| |   | | | | | |     `-TemplateTypeParm 0x5605abd6fab8 '_Cat'
| |   | | | | | `-ConceptSpecializationExpr 0x5605abd6fe50 <line:473:10, col:40> 'bool' Concept 0x5605abd6dbf0 'three_way_comparable'
| |   | | | | |   |-ImplicitConceptSpecializationDecl 0x5605abd6fd60 <line:461:13> col:13
| |   | | | | |   | |-TemplateArgument type 'type-parameter-0-1'
| |   | | | | |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | | | | |   | `-TemplateArgument type 'type-parameter-0-2'
| |   | | | | |   |   `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |   | | | | |   |-TemplateArgument <line:473:31> type '_Up':'type-parameter-0-1'
| |   | | | | |   | `-TemplateTypeParmType 0x5605abd6fa70 '_Up' dependent depth 0 index 1
| |   | | | | |   |   `-TemplateTypeParm 0x5605abd6fa18 '_Up'
| |   | | | | |   `-TemplateArgument <col:36> type '_Cat':'type-parameter-0-2'
| |   | | | | |     `-TemplateTypeParmType 0x5605abd6fb10 '_Cat' dependent depth 0 index 2
| |   | | | | |       `-TemplateTypeParm 0x5605abd6fab8 '_Cat'
| |   | | | | `-ConceptSpecializationExpr 0x5605abd70450 <line:474:10, line:475:41> 'bool' Concept 0x5605abd14fd0 'common_reference_with'
| |   | | | |   |-ImplicitConceptSpecializationDecl 0x5605abd70360 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:84:13> col:13
| |   | | | |   | |-TemplateArgument type 'const typename remove_reference<type-parameter-0-0>::type &'
| |   | | | |   | | `-LValueReferenceType 0x5605abd199e0 'const typename remove_reference<type-parameter-0-0>::type &' dependent
| |   | | | |   | |   `-QualType 0x5605abc0d391 'const typename remove_reference<type-parameter-0-0>::type' const
| |   | | | |   | |     `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| |   | | | |   | `-TemplateArgument type 'const typename remove_reference<type-parameter-0-1>::type &'
| |   | | | |   |   `-LValueReferenceType 0x5605abd1c210 'const typename remove_reference<type-parameter-0-1>::type &' dependent
| |   | | | |   |     `-QualType 0x5605abc8ad21 'const typename remove_reference<type-parameter-0-1>::type' const
| |   | | | |   |       `-DependentNameType 0x5605abc8ad20 'typename remove_reference<type-parameter-0-1>::type' dependent
| |   | | | |   |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:474:38, col:61> type 'const remove_reference_t<_Tp> &':'const typename remove_reference<type-parameter-0-0>::type &'
| |   | | | |   | `-LValueReferenceType 0x5605abd700a0 'const remove_reference_t<_Tp> &' dependent
| |   | | | |   |   `-QualType 0x5605abd70051 'const remove_reference_t<_Tp>' const
| |   | | | |   |     `-ElaboratedType 0x5605abd70050 'remove_reference_t<_Tp>' sugar dependent
| |   | | | |   |       `-TemplateSpecializationType 0x5605abd70000 'remove_reference_t<_Tp>' sugar dependent alias
| |   | | | |   |         |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   | | | |   |         | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   | | | |   |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | | | |   |         | `-TemplateTypeParmType 0x5605abd6f9e0 '_Tp' dependent depth 0 index 0
| |   | | | |   |         |   `-TemplateTypeParm 0x5605abd6f988 '_Tp'
| |   | | | |   |         `-DependentNameType 0x5605abd6ffb0 'typename remove_reference<_Tp>::type' dependent
| |   | | | |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:475:17, col:40> type 'const remove_reference_t<_Up> &':'const typename remove_reference<type-parameter-0-1>::type &'
| |   | | | |     `-LValueReferenceType 0x5605abd70300 'const remove_reference_t<_Up> &' dependent
| |   | | | |       `-QualType 0x5605abd702b1 'const remove_reference_t<_Up>' const
| |   | | | |         `-ElaboratedType 0x5605abd702b0 'remove_reference_t<_Up>' sugar dependent
| |   | | | |           `-TemplateSpecializationType 0x5605abd70260 'remove_reference_t<_Up>' sugar dependent alias
| |   | | | |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   | | | |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   | | | |             |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | | | |             | `-TemplateTypeParmType 0x5605abd6fa70 '_Up' dependent depth 0 index 1
| |   | | | |             |   `-TemplateTypeParm 0x5605abd6fa18 '_Up'
| |   | | | |             `-DependentNameType 0x5605abd70210 'typename remove_reference<_Up>::type' dependent
| |   | | | `-ConceptSpecializationExpr 0x5605abd70df8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:476:10, line:478:46> 'bool' Concept 0x5605abd6dbf0 'three_way_comparable'
| |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abd70d08 <line:461:13> col:13
| |   | | |   | |-TemplateArgument type 'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type'
| |   | | |   | | `-DependentNameType 0x5605abd330a0 'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type' dependent
| |   | | |   | `-TemplateArgument type 'type-parameter-0-2'
| |   | | |   |   `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |   | | |   |-TemplateArgument <line:477:4, line:478:39> type 'common_reference_t<const remove_reference_t<_Tp> &, const remove_reference_t<_Up> &>':'typename common_reference<const typename remove_reference<type-parameter-0-0>::type &, const typename remove_reference<type-parameter-0-1>::type &>::type'
| |   | | |   | `-ElaboratedType 0x5605abd70c70 'common_reference_t<const remove_reference_t<_Tp> &, const remove_reference_t<_Up> &>' sugar dependent
| |   | | |   |   `-TemplateSpecializationType 0x5605abd70c00 'common_reference_t<const remove_reference_t<_Tp> &, const remove_reference_t<_Up> &>' sugar dependent alias
| |   | | |   |     |-name: 'common_reference_t':'std::common_reference_t' qualified
| |   | | |   |     | `-TypeAliasTemplateDecl 0x5605abd033f0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3928:3, line:3929:67> col:5 common_reference_t
| |   | | |   |     |-TemplateArgument type 'const remove_reference_t<_Tp> &':'const typename remove_reference<type-parameter-0-0>::type &'
| |   | | |   |     | `-LValueReferenceType 0x5605abd706a0 'const remove_reference_t<_Tp> &' dependent
| |   | | |   |     |   `-QualType 0x5605abd70651 'const remove_reference_t<_Tp>' const
| |   | | |   |     |     `-ElaboratedType 0x5605abd70650 'remove_reference_t<_Tp>' sugar dependent
| |   | | |   |     |       `-TemplateSpecializationType 0x5605abd70600 'remove_reference_t<_Tp>' sugar dependent alias
| |   | | |   |     |         |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   | | |   |     |         | `-TypeAliasTemplateDecl 0x5605abc0d4a0 <line:1732:3, line:1733:64> col:5 remove_reference_t
| |   | | |   |     |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   | | |   |     |         | `-TemplateTypeParmType 0x5605abd6f9e0 '_Tp' dependent depth 0 index 0
| |   | | |   |     |         |   `-TemplateTypeParm 0x5605abd6f988 '_Tp'
| |   | | |   |     |         `-DependentNameType 0x5605abd705b0 'typename remove_reference<_Tp>::type' dependent
| |   | | |   |     |-TemplateArgument type 'const remove_reference_t<_Up> &':'const typename remove_reference<type-parameter-0-1>::type &'
| |   | | |   |     | `-LValueReferenceType 0x5605abd70900 'const remove_reference_t<_Up> &' dependent
| |   | | |   |     |   `-QualType 0x5605abd708b1 'const remove_reference_t<_Up>' const
| |   | | |   |     |     `-ElaboratedType 0x5605abd708b0 'remove_reference_t<_Up>' sugar dependent
| |   | | |   |     |       `-TemplateSpecializationType 0x5605abd70860 'remove_reference_t<_Up>' sugar dependent alias
| |   | | |   |     |         |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   | | |   |     |         | `-TypeAliasTemplateDecl 0x5605abc0d4a0 <line:1732:3, line:1733:64> col:5 remove_reference_t
| |   | | |   |     |         |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   | | |   |     |         | `-TemplateTypeParmType 0x5605abd6fa70 '_Up' dependent depth 0 index 1
| |   | | |   |     |         |   `-TemplateTypeParm 0x5605abd6fa18 '_Up'
| |   | | |   |     |         `-DependentNameType 0x5605abd70810 'typename remove_reference<_Up>::type' dependent
| |   | | |   |     `-DependentNameType 0x5605abd70bb0 'typename common_reference<const remove_reference_t<_Tp> &, const remove_reference_t<_Up> &>::type' dependent
| |   | | |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:478:42> type '_Cat':'type-parameter-0-2'
| |   | | |     `-TemplateTypeParmType 0x5605abd6fb10 '_Cat' dependent depth 0 index 2
| |   | | |       `-TemplateTypeParm 0x5605abd6fab8 '_Cat'
| |   | | `-ConceptSpecializationExpr 0x5605abd70f78 <line:479:10, col:49> 'bool' Concept 0x5605abd304f0 '__weakly_eq_cmp_with'
| |   | |   |-ImplicitConceptSpecializationDecl 0x5605abd70e88 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:302:15> col:15
| |   | |   | |-TemplateArgument type 'type-parameter-0-0'
| |   | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   | |   | `-TemplateArgument type 'type-parameter-0-1'
| |   | |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   | |   |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:479:41> type '_Tp':'type-parameter-0-0'
| |   | |   | `-TemplateTypeParmType 0x5605abd6f9e0 '_Tp' dependent depth 0 index 0
| |   | |   |   `-TemplateTypeParm 0x5605abd6f988 '_Tp'
| |   | |   `-TemplateArgument <col:46> type '_Up':'type-parameter-0-1'
| |   | |     `-TemplateTypeParmType 0x5605abd6fa70 '_Up' dependent depth 0 index 1
| |   | |       `-TemplateTypeParm 0x5605abd6fa18 '_Up'
| |   | `-ConceptSpecializationExpr 0x5605abd710f8 <line:480:10, col:53> 'bool' Concept 0x5605abd33660 '__partially_ordered_with'
| |   |   |-ImplicitConceptSpecializationDecl 0x5605abd71008 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:325:15> col:15
| |   |   | |-TemplateArgument type 'type-parameter-0-0'
| |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |   | `-TemplateArgument type 'type-parameter-0-1'
| |   |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   |   |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:480:45> type '_Tp':'type-parameter-0-0'
| |   |   | `-TemplateTypeParmType 0x5605abd6f9e0 '_Tp' dependent depth 0 index 0
| |   |   |   `-TemplateTypeParm 0x5605abd6f988 '_Tp'
| |   |   `-TemplateArgument <col:50> type '_Up':'type-parameter-0-1'
| |   |     `-TemplateTypeParmType 0x5605abd6fa70 '_Up' dependent depth 0 index 1
| |   |       `-TemplateTypeParm 0x5605abd6fa18 '_Up'
| |   `-RequiresExpr 0x5605abd75a38 <line:481:10, line:486:7> 'bool'
| |     |-ParmVarDecl 0x5605abd713a0 <line:481:19, col:50> col:50 referenced __t 'const remove_reference_t<_Tp> &'
| |     |-ParmVarDecl 0x5605abd71670 <line:482:5, col:36> col:36 referenced __u 'const remove_reference_t<_Up> &'
| |     |-CompoundRequirement 0x5605abd756f8 dependent
| |     | |-BinaryOperator 0x5605abd71798 <line:484:4, col:12> '<dependent type>' '<=>'
| |     | | |-DeclRefExpr 0x5605abd71758 <col:4> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd713a0 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |     | | `-DeclRefExpr 0x5605abd71778 <col:12> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd71670 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |     | `-ConceptSpecializationExpr 0x5605abd75668 <col:21, col:49> 'bool' Concept 0x5605abd6d4c0 '__compares_as'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abd718b8 <line:455:15> col:15
| |     |   | |-TemplateArgument type 'type-parameter-1-0'
| |     |   | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |     |   | `-TemplateArgument type 'type-parameter-0-2'
| |     |   |   `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |     |   |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |     |   | `-TemplateTypeParmType 0x5605abd71840 'expr-type' dependent depth 1 index 0
| |     |   |   `-TemplateTypeParm 0x5605abd717e0 'expr-type'
| |     |   `-TemplateArgument <line:484:45> type '_Cat':'type-parameter-0-2'
| |     |     `-TemplateTypeParmType 0x5605abd6fb10 '_Cat' dependent depth 0 index 2
| |     |       `-TemplateTypeParm 0x5605abd6fab8 '_Cat'
| |     `-CompoundRequirement 0x5605abd75a08 dependent
| |       |-BinaryOperator 0x5605abd75768 <line:485:4, col:12> '<dependent type>' '<=>'
| |       | |-DeclRefExpr 0x5605abd75728 <col:4> 'const remove_reference_t<_Up>':'const typename remove_reference<_Up>::type' lvalue ParmVar 0x5605abd71670 '__u' 'const remove_reference_t<_Up> &' non_odr_use_unevaluated
| |       | `-DeclRefExpr 0x5605abd75748 <col:12> 'const remove_reference_t<_Tp>':'const typename remove_reference<_Tp>::type' lvalue ParmVar 0x5605abd713a0 '__t' 'const remove_reference_t<_Tp> &' non_odr_use_unevaluated
| |       `-ConceptSpecializationExpr 0x5605abd75978 <col:21, col:49> 'bool' Concept 0x5605abd6d4c0 '__compares_as'
| |         |-ImplicitConceptSpecializationDecl 0x5605abd75888 <line:455:15> col:15
| |         | |-TemplateArgument type 'type-parameter-1-0'
| |         | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |         | `-TemplateArgument type 'type-parameter-0-2'
| |         |   `-TemplateTypeParmType 0x5605abb7bd90 'type-parameter-0-2' dependent depth 0 index 2
| |         |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |         | `-TemplateTypeParmType 0x5605abd75810 'expr-type' dependent depth 1 index 0
| |         |   `-TemplateTypeParm 0x5605abd757b0 'expr-type'
| |         `-TemplateArgument <line:485:45> type '_Cat':'type-parameter-0-2'
| |           `-TemplateTypeParmType 0x5605abd6fb10 '_Cat' dependent depth 0 index 2
| |             `-TemplateTypeParm 0x5605abd6fab8 '_Cat'
| |-NamespaceDecl 0x5605abd75ab0 prev 0x5605abd6d300 <line:488:3, line:509:3> line:488:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | |-TypeAliasTemplateDecl 0x5605abd75f30 <line:490:5, line:492:56> line:491:7 __cmp3way_res_t
| | | |-TemplateTypeParmDecl 0x5605abd75b28 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd75bb8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-TypeAliasDecl 0x5605abd75ec8 <line:491:7, line:492:56> line:491:13 __cmp3way_res_t 'decltype(std::declval<_Tp>() <=> std::declval<_Up>())'
| | |   `-DecltypeType 0x5605abd75e80 'decltype(std::declval<_Tp>() <=> std::declval<_Up>())' dependent
| | |     `-BinaryOperator 0x5605abd75e28 <line:492:13, col:55> '<dependent type>' '<=>'
| | |       |-CallExpr 0x5605abd75d40 <col:13, col:31> '<dependent type>'
| | |       | `-UnresolvedLookupExpr 0x5605abd75cc8 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | |       |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |       |     `-TemplateTypeParmType 0x5605abd75b80 '_Tp' dependent depth 0 index 0
| | |       |       `-TemplateTypeParm 0x5605abd75b28 '_Tp'
| | |       `-CallExpr 0x5605abd75e08 <col:37, col:55> '<dependent type>'
| | |         `-UnresolvedLookupExpr 0x5605abd75d90 <col:37, col:53> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | |           `-TemplateArgument type '_Up':'type-parameter-0-1'
| | |             `-TemplateTypeParmType 0x5605abd75c10 '_Up' dependent depth 0 index 1
| | |               `-TemplateTypeParm 0x5605abd75bb8 '_Up'
| | |-ClassTemplateDecl 0x5605abd76180 <line:499:5, line:501:9> line:500:14 __cmp3way_res_impl
| | | |-TemplateTypeParmDecl 0x5605abd75f90 <line:499:14, col:23> col:23 typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd76018 <col:28, col:37> col:37 typename depth 0 index 1 _Up
| | | `-CXXRecordDecl 0x5605abd760d0 <line:500:7, line:501:9> line:500:14 struct __cmp3way_res_impl definition
| | |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   `-CXXRecordDecl 0x5605abd76470 <col:7, col:14> col:14 implicit struct __cmp3way_res_impl
| | `-ClassTemplatePartialSpecializationDecl 0x5605abd771a8 <line:503:5, line:508:7> line:505:14 struct __cmp3way_res_impl definition explicit_specialization
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-TemplateArgument type 'type-parameter-0-0'
| |   | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |-TemplateArgument type 'type-parameter-0-1'
| |   | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   |-TemplateTypeParmDecl 0x5605abd76538 <line:503:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abd765c8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| |   |-RequiresExpr 0x5605abd770b0 <line:504:16, col:79> 'bool'
| |   | `-TypeRequirement 0x5605abd77098 dependent
| |   |   `-ElaboratedType 0x5605abd77030 'typename __cmp3way_res_t<__cref<_Tp>, __cref<_Up>>' sugar dependent
| |   |     `-TemplateSpecializationType 0x5605abd76fc0 '__cmp3way_res_t<__cref<_Tp>, __cref<_Up>>' sugar dependent alias
| |   |       |-name: '__cmp3way_res_t':'std::__detail::__cmp3way_res_t' qualified
| |   |       | `-TypeAliasTemplateDecl 0x5605abd75f30 <line:490:5, line:492:56> line:491:7 __cmp3way_res_t
| |   |       |-TemplateArgument type '__cref<_Tp>':'const typename remove_reference<type-parameter-0-0>::type &'
| |   |       | `-ElaboratedType 0x5605abd769b0 '__cref<_Tp>' sugar dependent
| |   |       |   `-TemplateSpecializationType 0x5605abd76960 '__cref<_Tp>' sugar dependent alias
| |   |       |     |-name: '__cref':'std::__detail::__cref' qualified
| |   |       |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |       |     | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |   |       |     |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |   |       |     `-LValueReferenceType 0x5605abd76900 'const remove_reference_t<_Tp> &' dependent
| |   |       |       `-QualType 0x5605abd768d1 'const remove_reference_t<_Tp>' const
| |   |       |         `-ElaboratedType 0x5605abd768d0 'remove_reference_t<_Tp>' sugar dependent
| |   |       |           `-TemplateSpecializationType 0x5605abd76880 'remove_reference_t<_Tp>' sugar dependent alias
| |   |       |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |       |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |       |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |       |             | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |   |       |             |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |   |       |             `-DependentNameType 0x5605abd76830 'typename remove_reference<_Tp>::type' dependent
| |   |       |-TemplateArgument type '__cref<_Up>':'const typename remove_reference<type-parameter-0-1>::type &'
| |   |       | `-ElaboratedType 0x5605abd76d00 '__cref<_Up>' sugar dependent
| |   |       |   `-TemplateSpecializationType 0x5605abd76cb0 '__cref<_Up>' sugar dependent alias
| |   |       |     |-name: '__cref':'std::__detail::__cref' qualified
| |   |       |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |       |     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |       |     | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |   |       |     |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |   |       |     `-LValueReferenceType 0x5605abd76c50 'const remove_reference_t<_Up> &' dependent
| |   |       |       `-QualType 0x5605abd76c21 'const remove_reference_t<_Up>' const
| |   |       |         `-ElaboratedType 0x5605abd76c20 'remove_reference_t<_Up>' sugar dependent
| |   |       |           `-TemplateSpecializationType 0x5605abd76bd0 'remove_reference_t<_Up>' sugar dependent alias
| |   |       |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |       |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |       |             |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |       |             | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |   |       |             |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |   |       |             `-DependentNameType 0x5605abd76b80 'typename remove_reference<_Up>::type' dependent
| |   |       `-DecltypeType 0x5605abd76f80 'decltype(std::declval<__cref<_Tp>>() <=> std::declval<__cref<_Up>>())' dependent
| |   |         `-BinaryOperator 0x5605abd76f28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:492:13, col:55> '<dependent type>' '<=>'
| |   |           |-CallExpr 0x5605abd76e40 <col:13, col:31> '<dependent type>'
| |   |           | `-UnresolvedLookupExpr 0x5605abd76dc8 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   |           |   `-TemplateArgument type '__cref<_Tp>':'const typename remove_reference<type-parameter-0-0>::type &'
| |   |           |     `-ElaboratedType 0x5605abd769b0 '__cref<_Tp>' sugar dependent
| |   |           |       `-TemplateSpecializationType 0x5605abd76960 '__cref<_Tp>' sugar dependent alias
| |   |           |         |-name: '__cref':'std::__detail::__cref' qualified
| |   |           |         | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |           |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |           |         | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |   |           |         |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |   |           |         `-LValueReferenceType 0x5605abd76900 'const remove_reference_t<_Tp> &' dependent
| |   |           |           `-QualType 0x5605abd768d1 'const remove_reference_t<_Tp>' const
| |   |           |             `-ElaboratedType 0x5605abd768d0 'remove_reference_t<_Tp>' sugar dependent
| |   |           |               `-TemplateSpecializationType 0x5605abd76880 'remove_reference_t<_Tp>' sugar dependent alias
| |   |           |                 |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |           |                 | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |           |                 |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |           |                 | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |   |           |                 |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |   |           |                 `-DependentNameType 0x5605abd76830 'typename remove_reference<_Tp>::type' dependent
| |   |           `-CallExpr 0x5605abd76f08 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:492:37, col:55> '<dependent type>'
| |   |             `-UnresolvedLookupExpr 0x5605abd76e90 <col:37, col:53> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   |               `-TemplateArgument type '__cref<_Up>':'const typename remove_reference<type-parameter-0-1>::type &'
| |   |                 `-ElaboratedType 0x5605abd76d00 '__cref<_Up>' sugar dependent
| |   |                   `-TemplateSpecializationType 0x5605abd76cb0 '__cref<_Up>' sugar dependent alias
| |   |                     |-name: '__cref':'std::__detail::__cref' qualified
| |   |                     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |   |                     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |                     | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |   |                     |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |   |                     `-LValueReferenceType 0x5605abd76c50 'const remove_reference_t<_Up> &' dependent
| |   |                       `-QualType 0x5605abd76c21 'const remove_reference_t<_Up>' const
| |   |                         `-ElaboratedType 0x5605abd76c20 'remove_reference_t<_Up>' sugar dependent
| |   |                           `-TemplateSpecializationType 0x5605abd76bd0 'remove_reference_t<_Up>' sugar dependent alias
| |   |                             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |   |                             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |   |                             |-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |                             | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |   |                             |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |   |                             `-DependentNameType 0x5605abd76b80 'typename remove_reference<_Up>::type' dependent
| |   |-CXXRecordDecl 0x5605abd77480 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:505:7, col:14> col:14 implicit struct __cmp3way_res_impl
| |   `-TypeAliasDecl 0x5605abd77ef8 <line:507:2, col:55> col:8 type '__cmp3way_res_t<__cref<_Tp>, __cref<_Up>>':'decltype(std::declval<__cref<_Tp>>() <=> std::declval<__cref<_Up>>())'
| |     `-ElaboratedType 0x5605abd77e70 '__cmp3way_res_t<__cref<_Tp>, __cref<_Up>>' sugar dependent
| |       `-TemplateSpecializationType 0x5605abd77e00 '__cmp3way_res_t<__cref<_Tp>, __cref<_Up>>' sugar dependent alias
| |         |-name: '__cmp3way_res_t':'std::__detail::__cmp3way_res_t' qualified
| |         | `-TypeAliasTemplateDecl 0x5605abd75f30 <line:490:5, line:492:56> line:491:7 __cmp3way_res_t
| |         |-TemplateArgument type '__cref<_Tp>':'const typename remove_reference<type-parameter-0-0>::type &'
| |         | `-ElaboratedType 0x5605abd77840 '__cref<_Tp>' sugar dependent
| |         |   `-TemplateSpecializationType 0x5605abd777f0 '__cref<_Tp>' sugar dependent alias
| |         |     |-name: '__cref':'std::__detail::__cref' qualified
| |         |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |         |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         |     | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |         |     |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |         |     `-LValueReferenceType 0x5605abd77790 'const remove_reference_t<_Tp> &' dependent
| |         |       `-QualType 0x5605abd77761 'const remove_reference_t<_Tp>' const
| |         |         `-ElaboratedType 0x5605abd77760 'remove_reference_t<_Tp>' sugar dependent
| |         |           `-TemplateSpecializationType 0x5605abd77710 'remove_reference_t<_Tp>' sugar dependent alias
| |         |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |         |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |         |             |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |         |             | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |         |             |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |         |             `-DependentNameType 0x5605abd776c0 'typename remove_reference<_Tp>::type' dependent
| |         |-TemplateArgument type '__cref<_Up>':'const typename remove_reference<type-parameter-0-1>::type &'
| |         | `-ElaboratedType 0x5605abd77b90 '__cref<_Up>' sugar dependent
| |         |   `-TemplateSpecializationType 0x5605abd77b40 '__cref<_Up>' sugar dependent alias
| |         |     |-name: '__cref':'std::__detail::__cref' qualified
| |         |     | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |         |     |-TemplateArgument type '_Up':'type-parameter-0-1'
| |         |     | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |         |     |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |         |     `-LValueReferenceType 0x5605abd77ae0 'const remove_reference_t<_Up> &' dependent
| |         |       `-QualType 0x5605abd77ab1 'const remove_reference_t<_Up>' const
| |         |         `-ElaboratedType 0x5605abd77ab0 'remove_reference_t<_Up>' sugar dependent
| |         |           `-TemplateSpecializationType 0x5605abd77a60 'remove_reference_t<_Up>' sugar dependent alias
| |         |             |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |         |             | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |         |             |-TemplateArgument type '_Up':'type-parameter-0-1'
| |         |             | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |         |             |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |         |             `-DependentNameType 0x5605abd77a10 'typename remove_reference<_Up>::type' dependent
| |         `-DecltypeType 0x5605abd77dc0 'decltype(std::declval<__cref<_Tp>>() <=> std::declval<__cref<_Up>>())' dependent
| |           `-BinaryOperator 0x5605abd77da0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:492:13, col:55> '<dependent type>' '<=>'
| |             |-CallExpr 0x5605abd77cb8 <col:13, col:31> '<dependent type>'
| |             | `-UnresolvedLookupExpr 0x5605abd77c40 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |             |   `-TemplateArgument type '__cref<_Tp>':'const typename remove_reference<type-parameter-0-0>::type &'
| |             |     `-ElaboratedType 0x5605abd77840 '__cref<_Tp>' sugar dependent
| |             |       `-TemplateSpecializationType 0x5605abd777f0 '__cref<_Tp>' sugar dependent alias
| |             |         |-name: '__cref':'std::__detail::__cref' qualified
| |             |         | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |             |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |             |         | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |             |         |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |             |         `-LValueReferenceType 0x5605abd77790 'const remove_reference_t<_Tp> &' dependent
| |             |           `-QualType 0x5605abd77761 'const remove_reference_t<_Tp>' const
| |             |             `-ElaboratedType 0x5605abd77760 'remove_reference_t<_Tp>' sugar dependent
| |             |               `-TemplateSpecializationType 0x5605abd77710 'remove_reference_t<_Tp>' sugar dependent alias
| |             |                 |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |             |                 | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |             |                 |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |             |                 | `-TemplateTypeParmType 0x5605abd76590 '_Tp' dependent depth 0 index 0
| |             |                 |   `-TemplateTypeParm 0x5605abd76538 '_Tp'
| |             |                 `-DependentNameType 0x5605abd776c0 'typename remove_reference<_Tp>::type' dependent
| |             `-CallExpr 0x5605abd77d80 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:492:37, col:55> '<dependent type>'
| |               `-UnresolvedLookupExpr 0x5605abd77d08 <col:37, col:53> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |                 `-TemplateArgument type '__cref<_Up>':'const typename remove_reference<type-parameter-0-1>::type &'
| |                   `-ElaboratedType 0x5605abd77b90 '__cref<_Up>' sugar dependent
| |                     `-TemplateSpecializationType 0x5605abd77b40 '__cref<_Up>' sugar dependent alias
| |                       |-name: '__cref':'std::__detail::__cref' qualified
| |                       | `-TypeAliasTemplateDecl 0x5605abd19ad8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:120:5, line:121:51> col:7 __cref
| |                       |-TemplateArgument type '_Up':'type-parameter-0-1'
| |                       | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |                       |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |                       `-LValueReferenceType 0x5605abd77ae0 'const remove_reference_t<_Up> &' dependent
| |                         `-QualType 0x5605abd77ab1 'const remove_reference_t<_Up>' const
| |                           `-ElaboratedType 0x5605abd77ab0 'remove_reference_t<_Up>' sugar dependent
| |                             `-TemplateSpecializationType 0x5605abd77a60 'remove_reference_t<_Up>' sugar dependent alias
| |                               |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| |                               | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| |                               |-TemplateArgument type '_Up':'type-parameter-0-1'
| |                               | `-TemplateTypeParmType 0x5605abd76620 '_Up' dependent depth 0 index 1
| |                               |   `-TemplateTypeParm 0x5605abd765c8 '_Up'
| |                               `-DependentNameType 0x5605abd77a10 'typename remove_reference<_Up>::type' dependent
| |-ClassTemplateDecl 0x5605abd781b0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:512:3, line:515:7> line:513:12 compare_three_way_result
| | |-TemplateTypeParmDecl 0x5605abd77f90 <line:512:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd78028 <col:26, col:41> col:35 referenced typename depth 0 index 1 _Up
| | | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   `-TemplateTypeParmType 0x5605abd77fe0 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abd77f90 '_Tp'
| | `-CXXRecordDecl 0x5605abd78100 <line:513:5, line:515:7> line:513:12 struct compare_three_way_result definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__detail::__cmp3way_res_impl<_Tp, _Up>':'__cmp3way_res_impl<_Tp, _Up>'
| |   `-CXXRecordDecl 0x5605abd785f8 <col:5, col:12> col:12 implicit struct compare_three_way_result
| |-TypeAliasTemplateDecl 0x5605abd78a30 <line:518:3, line:520:58> line:519:5 compare_three_way_result_t
| | |-TemplateTypeParmDecl 0x5605abd786c0 <line:518:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abd78758 <col:26, col:41> col:35 referenced typename depth 0 index 1 _Up
| | | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   `-TemplateTypeParmType 0x5605abd78710 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abd786c0 '_Tp'
| | `-TypeAliasDecl 0x5605abd789c8 <line:519:5, line:520:58> line:519:11 compare_three_way_result_t 'typename __detail::__cmp3way_res_impl<_Tp, _Up>::type'
| |   `-DependentNameType 0x5605abd78950 'typename __detail::__cmp3way_res_impl<_Tp, _Up>::type' dependent
| |-NamespaceDecl 0x5605abd78a90 prev 0x5605abd75ab0 <line:522:3, line:538:3> line:522:13 __detail
| | |-original Namespace 0x5605abb7ce80 '__detail'
| | `-ConceptDecl 0x5605abd78c50 <line:528:5, line:537:68> line:529:15 __3way_builtin_ptr_cmp
| |   |-TemplateTypeParmDecl 0x5605abd78b08 <line:528:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| |   |-TemplateTypeParmDecl 0x5605abd78b98 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| |   `-BinaryOperator 0x5605abd799a0 <line:530:4, line:537:68> 'bool' '&&'
| |     |-BinaryOperator 0x5605abd79640 <line:530:4, line:535:69> 'bool' '&&'
| |     | |-BinaryOperator 0x5605abd792c0 <line:530:4, line:533:47> 'bool' '&&'
| |     | | |-BinaryOperator 0x5605abd79158 <line:530:4, line:532:47> 'bool' '&&'
| |     | | | |-RequiresExpr 0x5605abd78f90 <line:530:4, line:531:59> 'bool'
| |     | | | | |-ParmVarDecl 0x5605abd78ce8 <line:530:13, col:19> col:19 referenced __t '_Tp &&'
| |     | | | | |-ParmVarDecl 0x5605abd78d98 <col:24, col:30> col:30 referenced __u '_Up &&'
| |     | | | | `-SimpleRequirement 0x5605abd78f60 dependent
| |     | | | |   `-BinaryOperator 0x5605abd78f40 <line:531:6, col:56> '<dependent type>' '<=>'
| |     | | | |     |-CXXStaticCastExpr 0x5605abd78eb0 <col:6, col:28> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |     | | | |     | `-DeclRefExpr 0x5605abd78e80 <col:25> '_Tp' lvalue ParmVar 0x5605abd78ce8 '__t' '_Tp &&' non_odr_use_unevaluated
| |     | | | |     `-CXXStaticCastExpr 0x5605abd78f10 <col:34, col:56> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |     | | | |       `-DeclRefExpr 0x5605abd78ee0 <col:53> '_Up' lvalue ParmVar 0x5605abd78d98 '__u' '_Up &&' non_odr_use_unevaluated
| |     | | | `-ConceptSpecializationExpr 0x5605abd79130 <line:532:7, col:47> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |     | | |   |-ImplicitConceptSpecializationDecl 0x5605abd79040 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:79:13> col:13
| |     | | |   | |-TemplateArgument type 'type-parameter-0-0'
| |     | | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | | |   | `-TemplateArgument type 'const volatile void *'
| |     | | |   |   `-PointerType 0x5605abd78ff0 'const volatile void *'
| |     | | |   |     `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| |     | | |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |     | | |   |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:532:22> type '_Tp':'type-parameter-0-0'
| |     | | |   | `-TemplateTypeParmType 0x5605abd78b60 '_Tp' dependent depth 0 index 0
| |     | | |   |   `-TemplateTypeParm 0x5605abd78b08 '_Tp'
| |     | | |   `-TemplateArgument <col:42, col:46> type 'const volatile void *'
| |     | | |     `-PointerType 0x5605abd78ff0 'const volatile void *'
| |     | | |       `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| |     | | |         `-BuiltinType 0x5605aba9c9d0 'void'
| |     | | `-ConceptSpecializationExpr 0x5605abd79298 <line:533:7, col:47> 'bool' Concept 0x5605abd14b90 'convertible_to'
| |     | |   |-ImplicitConceptSpecializationDecl 0x5605abd791a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:79:13> col:13
| |     | |   | |-TemplateArgument type 'type-parameter-0-1'
| |     | |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     | |   | `-TemplateArgument type 'const volatile void *'
| |     | |   |   `-PointerType 0x5605abd78ff0 'const volatile void *'
| |     | |   |     `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| |     | |   |       `-BuiltinType 0x5605aba9c9d0 'void'
| |     | |   |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:533:22> type '_Up':'type-parameter-0-1'
| |     | |   | `-TemplateTypeParmType 0x5605abd78bf0 '_Up' dependent depth 0 index 1
| |     | |   |   `-TemplateTypeParm 0x5605abd78b98 '_Up'
| |     | |   `-TemplateArgument <col:42, col:46> type 'const volatile void *'
| |     | |     `-PointerType 0x5605abd78ff0 'const volatile void *'
| |     | |       `-QualType 0x5605aba9c9d5 'const volatile void' const volatile
| |     | |         `-BuiltinType 0x5605aba9c9d0 'void'
| |     | `-UnaryOperator 0x5605abd79608 <line:534:7, line:535:69> 'bool' prefix '!' cannot overflow
| |     |   `-RequiresExpr 0x5605abd795c0 <line:534:9, line:535:69> 'bool'
| |     |     |-ParmVarDecl 0x5605abd792f8 <line:534:18, col:24> col:24 referenced __t '_Tp &&'
| |     |     |-ParmVarDecl 0x5605abd79378 <col:29, col:35> col:35 referenced __u '_Up &&'
| |     |     `-SimpleRequirement 0x5605abd79590 dependent
| |     |       `-CallExpr 0x5605abd79560 <line:535:6, col:66> '<dependent type>'
| |     |         |-UnresolvedLookupExpr 0x5605abd79460 <col:6, col:14> '<overloaded function type>' lvalue (ADL) = 'operator<=>' empty
| |     |         |-CXXStaticCastExpr 0x5605abd794d0 <col:18, col:40> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |     |         | `-DeclRefExpr 0x5605abd794a0 <col:37> '_Tp' lvalue ParmVar 0x5605abd792f8 '__t' '_Tp &&' non_odr_use_unevaluated
| |     |         `-CXXStaticCastExpr 0x5605abd79530 <col:43, col:65> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |     |           `-DeclRefExpr 0x5605abd79500 <col:62> '_Up' lvalue ParmVar 0x5605abd79378 '__u' '_Up &&' non_odr_use_unevaluated
| |     `-UnaryOperator 0x5605abd79988 <line:536:7, line:537:68> 'bool' prefix '!' cannot overflow
| |       `-RequiresExpr 0x5605abd79940 <line:536:9, line:537:68> 'bool'
| |         |-ParmVarDecl 0x5605abd79678 <line:536:18, col:24> col:24 referenced __t '_Tp &&'
| |         |-ParmVarDecl 0x5605abd796f8 <col:29, col:35> col:35 referenced __u '_Up &&'
| |         `-SimpleRequirement 0x5605abd79910 dependent
| |           `-CallExpr 0x5605abd798e8 <line:537:6, col:65> '<dependent type>'
| |             |-CXXDependentScopeMemberExpr 0x5605abd79840 <col:6, col:38> '<dependent type>' lvalue .operator<=>
| |             | `-CXXStaticCastExpr 0x5605abd79810 <col:6, col:28> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |             |   `-DeclRefExpr 0x5605abd797e0 <col:25> '_Tp' lvalue ParmVar 0x5605abd79678 '__t' '_Tp &&' non_odr_use_unevaluated
| |             `-CXXStaticCastExpr 0x5605abd798b8 <col:42, col:64> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |               `-DeclRefExpr 0x5605abd79888 <col:61> '_Up' lvalue ParmVar 0x5605abd796f8 '__u' '_Up &&' non_odr_use_unevaluated
| |-CXXRecordDecl 0x5605abd799c8 <line:544:3, line:567:3> line:544:10 referenced struct compare_three_way definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr
| | |-CXXRecordDecl 0x5605abd79b00 <col:3, col:10> col:10 implicit struct compare_three_way
| | |-FunctionTemplateDecl 0x5605abd7a198 <line:546:5, line:564:7> line:549:7 operator()
| | | |-TemplateTypeParmDecl 0x5605abd79bb0 <line:546:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd79c38 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | |-ConceptSpecializationExpr 0x5605abd79e08 <line:547:16, col:50> 'bool' Concept 0x5605abd6fb98 'three_way_comparable_with'
| | | | |-ImplicitConceptSpecializationDecl 0x5605abd79d00 <line:471:13> col:13
| | | | | |-TemplateArgument type 'type-parameter-0-0'
| | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | | |-TemplateArgument type 'type-parameter-0-1'
| | | | | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | | `-TemplateArgument type 'std::partial_ordering'
| | | | |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | | |     `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | | |-TemplateArgument <line:547:42> type '_Tp':'type-parameter-0-0'
| | | | | `-TemplateTypeParmType 0x5605abd79c00 '_Tp' dependent depth 0 index 0
| | | | |   `-TemplateTypeParm 0x5605abd79bb0 '_Tp'
| | | | `-TemplateArgument <col:47> type '_Up':'type-parameter-0-1'
| | | |   `-TemplateTypeParmType 0x5605abd79c90 '_Up' dependent depth 0 index 1
| | | |     `-TemplateTypeParm 0x5605abd79c38 '_Up'
| | | |-CXXMethodDecl 0x5605abd7a0e8 <line:548:7, line:564:7> line:549:7 constexpr operator() 'auto (_Tp &&, _Up &&) const noexcept(noexcept(std::declval<_Tp>() <=> std::declval<_Up>()))' implicit-inline
| | | | |-ParmVarDecl 0x5605abd79ea8 <col:33, col:39> col:39 referenced __t '_Tp &&'
| | | | |-ParmVarDecl 0x5605abd79f58 <col:44, col:50> col:50 referenced __u '_Up &&'
| | | | |-CompoundStmt 0x5605abd7b4e0 <line:551:7, line:564:7>
| | | | | `-IfStmt 0x5605abd7b4b0 <line:552:2, line:563:61> has_else constexpr
| | | | |   |-ConceptSpecializationExpr 0x5605abd7a8d8 <line:552:16, col:57> 'bool' Concept 0x5605abd78c50 '__3way_builtin_ptr_cmp'
| | | | |   | |-ImplicitConceptSpecializationDecl 0x5605abd7a7e8 <line:529:15> col:15
| | | | |   | | |-TemplateArgument type 'type-parameter-0-0'
| | | | |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | |   | | `-TemplateArgument type 'type-parameter-0-1'
| | | | |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | |   | |-TemplateArgument <line:552:49> type '_Tp':'type-parameter-0-0'
| | | | |   | | `-TemplateTypeParmType 0x5605abd79c00 '_Tp' dependent depth 0 index 0
| | | | |   | |   `-TemplateTypeParm 0x5605abd79bb0 '_Tp'
| | | | |   | `-TemplateArgument <col:54> type '_Up':'type-parameter-0-1'
| | | | |   |   `-TemplateTypeParmType 0x5605abd79c90 '_Up' dependent depth 0 index 1
| | | | |   |     `-TemplateTypeParm 0x5605abd79c38 '_Up'
| | | | |   |-CompoundStmt 0x5605abd7b380 <line:553:4, line:561:4>
| | | | |   | |-DeclStmt 0x5605abd7aae0 <line:554:6, col:56>
| | | | |   | | `-VarDecl 0x5605abd7a920 <col:6, col:55> col:11 referenced __pt 'const volatile void *' cinit
| | | | |   | |   `-CXXStaticCastExpr 0x5605abd7a9c0 <col:18, col:55> 'const volatile void *' static_cast<const volatile void *> <Dependent>
| | | | |   | |     `-DeclRefExpr 0x5605abd7a988 <col:52> '_Tp' lvalue ParmVar 0x5605abd79ea8 '__t' '_Tp &&'
| | | | |   | |-DeclStmt 0x5605abd7aca0 <line:555:6, col:56>
| | | | |   | | `-VarDecl 0x5605abd7ab18 <col:6, col:55> col:11 referenced __pu 'const volatile void *' cinit
| | | | |   | |   `-CXXStaticCastExpr 0x5605abd7abb8 <col:18, col:55> 'const volatile void *' static_cast<const volatile void *> <Dependent>
| | | | |   | |     `-DeclRefExpr 0x5605abd7ab80 <col:52> '_Up' lvalue ParmVar 0x5605abd79f58 '__u' '_Up &&'
| | | | |   | |-IfStmt 0x5605abd7aeb0 <line:556:6, line:557:24>
| | | | |   | | |-CallExpr 0x5605abd7ad88 <line:556:10, col:39> 'bool'
| | | | |   | | | `-ImplicitCastExpr 0x5605abd7ad70 <col:10, col:15> 'bool (*)() noexcept' <FunctionToPointerDecay>
| | | | |   | | |   `-DeclRefExpr 0x5605abd7ad08 <col:10, col:15> 'bool () noexcept' lvalue Function 0x5605abaf4ee0 '__is_constant_evaluated' 'bool () noexcept'
| | | | |   | | |     `-NestedNameSpecifier Namespace 0x5605abd38b10 'std'
| | | | |   | | `-ReturnStmt 0x5605abd7aea0 <line:557:8, col:24>
| | | | |   | |   `-BinaryOperator 0x5605abd7ae80 <col:15, col:24> 'std::strong_ordering' '<=>'
| | | | |   | |     |-ImplicitCastExpr 0x5605abd7ae18 <col:15> 'const volatile void *' <LValueToRValue>
| | | | |   | |     | `-DeclRefExpr 0x5605abd7ada8 <col:15> 'const volatile void *' lvalue Var 0x5605abd7a920 '__pt' 'const volatile void *'
| | | | |   | |     `-ImplicitCastExpr 0x5605abd7ae30 <col:24> 'const volatile void *' <LValueToRValue>
| | | | |   | |       `-DeclRefExpr 0x5605abd7ade0 <col:24> 'const volatile void *' lvalue Var 0x5605abd7ab18 '__pu' 'const volatile void *'
| | | | |   | |-DeclStmt 0x5605abd7b0d8 <line:558:6, col:58>
| | | | |   | | `-VarDecl 0x5605abd7aef0 <col:6, col:57> col:11 referenced __it 'unsigned long' cinit
| | | | |   | |   `-CXXReinterpretCastExpr 0x5605abd7afa8 <col:18, col:57> 'unsigned long' reinterpret_cast<unsigned long> <PointerToIntegral>
| | | | |   | |     `-ImplicitCastExpr 0x5605abd7af90 <col:53> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
| | | | |   | |       `-DeclRefExpr 0x5605abd7af58 <col:53> 'const volatile void *' lvalue Var 0x5605abd7a920 '__pt' 'const volatile void *'
| | | | |   | |-DeclStmt 0x5605abd7b2c8 <line:559:6, col:58>
| | | | |   | | `-VarDecl 0x5605abd7b110 <col:6, col:57> col:11 referenced __iu 'unsigned long' cinit
| | | | |   | |   `-CXXReinterpretCastExpr 0x5605abd7b1c8 <col:18, col:57> 'unsigned long' reinterpret_cast<unsigned long> <PointerToIntegral>
| | | | |   | |     `-ImplicitCastExpr 0x5605abd7b1b0 <col:53> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
| | | | |   | |       `-DeclRefExpr 0x5605abd7b178 <col:53> 'const volatile void *' lvalue Var 0x5605abd7ab18 '__pu' 'const volatile void *'
| | | | |   | `-ReturnStmt 0x5605abd7b370 <line:560:6, col:22>
| | | | |   |   `-BinaryOperator 0x5605abd7b350 <col:13, col:22> 'std::strong_ordering' '<=>'
| | | | |   |     |-ImplicitCastExpr 0x5605abd7b320 <col:13> 'unsigned long' <LValueToRValue>
| | | | |   |     | `-DeclRefExpr 0x5605abd7b2e0 <col:13> 'unsigned long' lvalue Var 0x5605abd7aef0 '__it' 'unsigned long'
| | | | |   |     `-ImplicitCastExpr 0x5605abd7b338 <col:22> 'unsigned long' <LValueToRValue>
| | | | |   |       `-DeclRefExpr 0x5605abd7b300 <col:22> 'unsigned long' lvalue Var 0x5605abd7b110 '__iu' 'unsigned long'
| | | | |   `-ReturnStmt 0x5605abd7b4a0 <line:563:4, col:61>
| | | | |     `-BinaryOperator 0x5605abd7b480 <col:11, col:61> '<dependent type>' '<=>'
| | | | |       |-CXXStaticCastExpr 0x5605abd7b3f0 <col:11, col:33> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | | |       | `-DeclRefExpr 0x5605abd7b3c0 <col:30> '_Tp' lvalue ParmVar 0x5605abd79ea8 '__t' '_Tp &&'
| | | | |       `-CXXStaticCastExpr 0x5605abd7b450 <col:39, col:61> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | | |         `-DeclRefExpr 0x5605abd7b420 <col:58> '_Up' lvalue ParmVar 0x5605abd79f58 '__u' '_Up &&'
| | | | `-WarnUnusedResultAttr 0x5605abd7a200 <line:549:20> nodiscard ""
| | | `-CXXMethodDecl 0x5605abdb7cb0 <line:548:7, line:564:7> line:549:7 used constexpr operator() 'std::strong_ordering (void *&&, void *&&) const noexcept(noexcept(std::declval<void *>() <=> std::declval<void *>()))' implicit_instantiation implicit-inline
| | |   |-TemplateArgument type 'void *'
| | |   | `-PointerType 0x5605aba9d150 'void *'
| | |   |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |   |-TemplateArgument type 'void *'
| | |   | `-PointerType 0x5605aba9d150 'void *'
| | |   |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |   |-ParmVarDecl 0x5605abdb7a88 <col:33, col:39> col:39 used __t 'void *&&'
| | |   |-ParmVarDecl 0x5605abdb7b68 <col:44, col:50> col:50 used __u 'void *&&'
| | |   |-CompoundStmt 0x5605abddef68 <line:551:7, line:564:7>
| | |   | `-IfStmt 0x5605abddef38 <line:552:2, line:563:61> has_else constexpr
| | |   |   |-ConstantExpr 0x5605abdde348 <line:552:16, col:57> 'bool'
| | |   |   | |-value: Int 1
| | |   |   | `-ConceptSpecializationExpr 0x5605abdde310 <col:16, col:57> 'bool' Concept 0x5605abd78c50 '__3way_builtin_ptr_cmp'
| | |   |   |   |-ImplicitConceptSpecializationDecl 0x5605abddc580 <line:529:15> col:15
| | |   |   |   | |-TemplateArgument type 'void *'
| | |   |   |   | | `-PointerType 0x5605aba9d150 'void *'
| | |   |   |   | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | |   |   |   | `-TemplateArgument type 'void *'
| | |   |   |   |   `-PointerType 0x5605aba9d150 'void *'
| | |   |   |   |     `-BuiltinType 0x5605aba9c9d0 'void'
| | |   |   |   |-TemplateArgument <line:552:49> type 'void *'
| | |   |   |   | `-SubstTemplateTypeParmType 0x5605abdb7ec0 'void *' sugar typename depth 0 index 0 _Tp
| | |   |   |   |   |-CXXMethod 0x5605abdb7cb0 'operator()' 'std::strong_ordering (void *&&, void *&&) const noexcept(noexcept(std::declval<void *>() <=> std::declval<void *>()))'
| | |   |   |   |   `-PointerType 0x5605aba9d150 'void *'
| | |   |   |   |     `-BuiltinType 0x5605aba9c9d0 'void'
| | |   |   |   `-TemplateArgument <col:54> type 'void *'
| | |   |   |     `-SubstTemplateTypeParmType 0x5605abdb7f00 'void *' sugar typename depth 0 index 1 _Up
| | |   |   |       |-CXXMethod 0x5605abdb7cb0 'operator()' 'std::strong_ordering (void *&&, void *&&) const noexcept(noexcept(std::declval<void *>() <=> std::declval<void *>()))'
| | |   |   |       `-PointerType 0x5605aba9d150 'void *'
| | |   |   |         `-BuiltinType 0x5605aba9c9d0 'void'
| | |   |   |-CompoundStmt 0x5605abddeee8 <line:553:4, line:561:4>
| | |   |   | |-DeclStmt 0x5605abdde548 <line:554:6, col:56>
| | |   |   | | `-VarDecl 0x5605abdde370 <col:6, col:55> col:11 used __pt 'const volatile void *' cinit
| | |   |   | |   `-CXXStaticCastExpr 0x5605abdde440 <col:18, col:55> 'const volatile void *' static_cast<const volatile void *> <NoOp>
| | |   |   | |     `-ImplicitCastExpr 0x5605abdde428 <col:52> 'const volatile void *' <NoOp> part_of_explicit_cast
| | |   |   | |       `-ImplicitCastExpr 0x5605abdde410 <col:52> 'void *' <LValueToRValue> part_of_explicit_cast
| | |   |   | |         `-DeclRefExpr 0x5605abdde3f0 <col:52> 'void *' lvalue ParmVar 0x5605abdb7a88 '__t' 'void *&&'
| | |   |   | |-DeclStmt 0x5605abdde738 <line:555:6, col:56>
| | |   |   | | `-VarDecl 0x5605abdde568 <col:6, col:55> col:11 used __pu 'const volatile void *' cinit
| | |   |   | |   `-CXXStaticCastExpr 0x5605abdde638 <col:18, col:55> 'const volatile void *' static_cast<const volatile void *> <NoOp>
| | |   |   | |     `-ImplicitCastExpr 0x5605abdde620 <col:52> 'const volatile void *' <NoOp> part_of_explicit_cast
| | |   |   | |       `-ImplicitCastExpr 0x5605abdde608 <col:52> 'void *' <LValueToRValue> part_of_explicit_cast
| | |   |   | |         `-DeclRefExpr 0x5605abdde5e8 <col:52> 'void *' lvalue ParmVar 0x5605abdb7b68 '__u' 'void *&&'
| | |   |   | |-IfStmt 0x5605abdde998 <line:556:6, line:557:24>
| | |   |   | | |-CallExpr 0x5605abdde768 <line:556:10, col:39> 'bool'
| | |   |   | | | `-ImplicitCastExpr 0x5605abdde750 <col:10, col:15> 'bool (*)() noexcept' <FunctionToPointerDecay>
| | |   |   | | |   `-DeclRefExpr 0x5605abd7ad08 <col:10, col:15> 'bool () noexcept' lvalue Function 0x5605abaf4ee0 '__is_constant_evaluated' 'bool () noexcept'
| | |   |   | | |     `-NestedNameSpecifier Namespace 0x5605abd38b10 'std'
| | |   |   | | `-ReturnStmt 0x5605abdde988 <line:557:8, col:24>
| | |   |   | |   `-BinaryOperator 0x5605abdde7f8 <col:15, col:24> 'std::strong_ordering' '<=>'
| | |   |   | |     |-ImplicitCastExpr 0x5605abdde7c8 <col:15> 'const volatile void *' <LValueToRValue>
| | |   |   | |     | `-DeclRefExpr 0x5605abdde788 <col:15> 'const volatile void *' lvalue Var 0x5605abdde370 '__pt' 'const volatile void *'
| | |   |   | |     `-ImplicitCastExpr 0x5605abdde7e0 <col:24> 'const volatile void *' <LValueToRValue>
| | |   |   | |       `-DeclRefExpr 0x5605abdde7a8 <col:24> 'const volatile void *' lvalue Var 0x5605abdde568 '__pu' 'const volatile void *'
| | |   |   | |-DeclStmt 0x5605abddeb68 <line:558:6, col:58>
| | |   |   | | `-VarDecl 0x5605abdde9c0 <col:6, col:57> col:11 used __it 'unsigned long' cinit
| | |   |   | |   `-CXXReinterpretCastExpr 0x5605abddea60 <col:18, col:57> 'unsigned long' reinterpret_cast<unsigned long> <PointerToIntegral>
| | |   |   | |     `-ImplicitCastExpr 0x5605abddea48 <col:53> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
| | |   |   | |       `-DeclRefExpr 0x5605abddea28 <col:53> 'const volatile void *' lvalue Var 0x5605abdde370 '__pt' 'const volatile void *'
| | |   |   | |-DeclStmt 0x5605abdded28 <line:559:6, col:58>
| | |   |   | | `-VarDecl 0x5605abddeb88 <col:6, col:57> col:11 used __iu 'unsigned long' cinit
| | |   |   | |   `-CXXReinterpretCastExpr 0x5605abddec28 <col:18, col:57> 'unsigned long' reinterpret_cast<unsigned long> <PointerToIntegral>
| | |   |   | |     `-ImplicitCastExpr 0x5605abddec10 <col:53> 'const volatile void *' <LValueToRValue> part_of_explicit_cast
| | |   |   | |       `-DeclRefExpr 0x5605abddebf0 <col:53> 'const volatile void *' lvalue Var 0x5605abdde568 '__pu' 'const volatile void *'
| | |   |   | `-ReturnStmt 0x5605abddeed8 <line:560:6, col:22>
| | |   |   |   `-BinaryOperator 0x5605abddedb0 <col:13, col:22> 'std::strong_ordering' '<=>'
| | |   |   |     |-ImplicitCastExpr 0x5605abdded80 <col:13> 'unsigned long' <LValueToRValue>
| | |   |   |     | `-DeclRefExpr 0x5605abdded40 <col:13> 'unsigned long' lvalue Var 0x5605abdde9c0 '__it' 'unsigned long'
| | |   |   |     `-ImplicitCastExpr 0x5605abdded98 <col:22> 'unsigned long' <LValueToRValue>
| | |   |   |       `-DeclRefExpr 0x5605abdded60 <col:22> 'unsigned long' lvalue Var 0x5605abddeb88 '__iu' 'unsigned long'
| | |   |   `-CompoundStmt 0x5605abddef28 <line:563:4, col:61>
| | |   `-WarnUnusedResultAttr 0x5605abdb7e60 <line:549:20> nodiscard ""
| | |-TypeAliasDecl 0x5605abd7a340 <line:566:5, col:28> col:11 is_transparent 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-CXXConstructorDecl 0x5605abd93888 <line:544:10> col:10 implicit referenced constexpr compare_three_way 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x5605abd939e8 <col:10> col:10 implicit constexpr compare_three_way 'void (const compare_three_way &)' inline default trivial noexcept-unevaluated 0x5605abd939e8
| | | `-ParmVarDecl 0x5605abd93b28 <col:10> col:10 'const compare_three_way &'
| | |-CXXConstructorDecl 0x5605abd93c18 <col:10> col:10 implicit constexpr compare_three_way 'void (compare_three_way &&)' inline default trivial noexcept-unevaluated 0x5605abd93c18
| | | `-ParmVarDecl 0x5605abd93d58 <col:10> col:10 'compare_three_way &&'
| | `-CXXDestructorDecl 0x5605abd93f60 <col:10> col:10 implicit referenced constexpr ~compare_three_way 'void () noexcept' inline default trivial
| |-NamespaceDecl 0x5605abd7b530 <line:571:3, line:1183:3> line:571:13 __compare
| | |-FunctionTemplateDecl 0x5605abd7da88 <line:573:5, line:613:7> line:575:7 __fp_weak_ordering
| | | |-TemplateTypeParmDecl 0x5605abd7b5d8 <line:573:14, col:29> col:29 referenced Concept 0x5605abd195d8 'floating_point' depth 0 index 0 _Tp
| | | | `-ConceptSpecializationExpr 0x5605abd7d760 <col:14> 'bool' Concept 0x5605abd195d8 'floating_point'
| | | |   |-ImplicitConceptSpecializationDecl 0x5605abd7d6a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:116:13> col:13
| | | |   | `-TemplateArgument type 'type-parameter-0-0'
| | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:573:29> type '_Tp':'type-parameter-0-0'
| | | |     `-TemplateTypeParmType 0x5605abd7d660 '_Tp' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x5605abd7b5d8 '_Tp'
| | | `-FunctionDecl 0x5605abd7d9d8 <line:574:7, line:613:7> line:575:7 constexpr __fp_weak_ordering 'weak_ordering (_Tp, _Tp)' implicit-inline
| | |   |-ParmVarDecl 0x5605abd7d808 <col:26, col:30> col:30 referenced __e '_Tp'
| | |   |-ParmVarDecl 0x5605abd7d888 <col:35, col:39> col:39 referenced __f '_Tp'
| | |   `-CompoundStmt 0x5605abd80780 <line:576:7, line:613:7>
| | |     |-DeclStmt 0x5605abd7f2d8 <line:579:2, line:588:3>
| | |     | `-VarDecl 0x5605abd7db90 <line:579:2, line:588:2> line:579:7 __cat 'auto' cinit
| | |     |   `-LambdaExpr 0x5605abd7f2b0 <col:15, line:588:2> '(lambda at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:579:15)'
| | |     |     |-CXXRecordDecl 0x5605abd7dc00 <line:579:15> col:15 implicit class definition
| | |     |     | |-DefinitionData lambda empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |     |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |     |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |     |     | | |-MoveConstructor exists simple trivial needs_implicit
| | |     |     | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |     |     | | |-MoveAssignment exists simple trivial needs_implicit
| | |     |     | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |     |     | |-CXXMethodDecl 0x5605abd7dd68 <col:31, line:588:2> line:579:15 operator() 'auto (_Tp) const -> int' inline
| | |     |     | | |-ParmVarDecl 0x5605abd7de38 <col:18, col:22> col:22 referenced __fp '_Tp'
| | |     |     | | `-CompoundStmt 0x5605abd7ee68 <col:35, line:588:2>
| | |     |     | |   |-DeclStmt 0x5605abd7e360 <line:580:4, col:55>
| | |     |     | |   | `-VarDecl 0x5605abd7dfb8 <col:4, col:54> col:14 referenced __sign 'const int' cinit
| | |     |     | |   |   `-ConditionalOperator 0x5605abd7e330 <col:23, col:54> '<dependent type>'
| | |     |     | |   |     |-CallExpr 0x5605abd7e2b0 <col:23, col:45> '<dependent type>'
| | |     |     | |   |     | |-DeclRefExpr 0x5605abd7e258 <col:23> '<builtin fn type>' Function 0x5605abd7e0b8 '__builtin_signbit' 'int (...) noexcept'
| | |     |     | |   |     | `-DeclRefExpr 0x5605abd7e290 <col:41> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |     | |   |     |-UnaryOperator 0x5605abd7e2f8 <col:49, col:50> 'int' prefix '-'
| | |     |     | |   |     | `-IntegerLiteral 0x5605abd7e2d8 <col:50> 'int' 1
| | |     |     | |   |     `-IntegerLiteral 0x5605abd7e310 <col:54> 'int' 1
| | |     |     | |   |-IfStmt 0x5605abd7e700 <line:581:4, line:582:35>
| | |     |     | |   | |-CallExpr 0x5605abd7e580 <line:581:8, col:31> '<dependent type>'
| | |     |     | |   | | |-DeclRefExpr 0x5605abd7e528 <col:8> '<builtin fn type>' Function 0x5605abd7e3d8 '__builtin_isnormal' 'int (...) noexcept'
| | |     |     | |   | | `-DeclRefExpr 0x5605abd7e560 <col:27> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |     | |   | `-ReturnStmt 0x5605abd7e6f0 <line:582:6, col:35>
| | |     |     | |   |   `-BinaryOperator 0x5605abd7e6d0 <col:13, col:35> '<dependent type>' '*'
| | |     |     | |   |     |-ParenExpr 0x5605abd7e678 <col:13, col:31> '<dependent type>'
| | |     |     | |   |     | `-ConditionalOperator 0x5605abd7e648 <col:14, col:30> '<dependent type>'
| | |     |     | |   |     |   |-BinaryOperator 0x5605abd7e5e8 <col:14, col:22> '<dependent type>' '=='
| | |     |     | |   |     |   | |-DeclRefExpr 0x5605abd7e5a8 <col:14> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |     | |   |     |   | `-IntegerLiteral 0x5605abd7e5c8 <col:22> 'int' 0
| | |     |     | |   |     |   |-IntegerLiteral 0x5605abd7e608 <col:26> 'int' 1
| | |     |     | |   |     |   `-IntegerLiteral 0x5605abd7e628 <col:30> 'int' 3
| | |     |     | |   |     `-DeclRefExpr 0x5605abd7e698 <col:35> 'const int' lvalue Var 0x5605abd7dfb8 '__sign' 'const int'
| | |     |     | |   |-IfStmt 0x5605abd7e9d8 <line:583:4, line:584:17>
| | |     |     | |   | |-CallExpr 0x5605abd7e928 <line:583:8, col:28> '<dependent type>'
| | |     |     | |   | | |-DeclRefExpr 0x5605abd7e8d0 <col:8> '<builtin fn type>' Function 0x5605abd7e780 '__builtin_isnan' 'int (...) noexcept'
| | |     |     | |   | | `-DeclRefExpr 0x5605abd7e908 <col:24> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |     | |   | `-ReturnStmt 0x5605abd7e9c8 <line:584:6, col:17>
| | |     |     | |   |   `-BinaryOperator 0x5605abd7e9a8 <col:13, col:17> 'int' '*'
| | |     |     | |   |     |-IntegerLiteral 0x5605abd7e950 <col:13> 'int' 5
| | |     |     | |   |     `-ImplicitCastExpr 0x5605abd7e990 <col:17> 'int' <LValueToRValue>
| | |     |     | |   |       `-DeclRefExpr 0x5605abd7e970 <col:17> 'const int' lvalue Var 0x5605abd7dfb8 '__sign' 'const int'
| | |     |     | |   |-IfStmt 0x5605abd7eda0 <line:585:4, line:586:17> has_var
| | |     |     | |   | |-DeclStmt 0x5605abd7edc8 <line:585:8, col:45>
| | |     |     | |   | | `-VarDecl 0x5605abd7ea18 <col:8, col:45> col:12 referenced __inf 'int' cinit
| | |     |     | |   | |   `-CallExpr 0x5605abd7ec88 <col:20, col:45> '<dependent type>'
| | |     |     | |   | |     |-DeclRefExpr 0x5605abd7ec30 <col:20> '<builtin fn type>' Function 0x5605abd7eae0 '__builtin_isinf_sign' 'int (...) noexcept'
| | |     |     | |   | |     `-DeclRefExpr 0x5605abd7ec68 <col:41> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |     | |   | |-ImplicitCastExpr 0x5605abd7ed00 <col:12> 'bool' <IntegralToBoolean>
| | |     |     | |   | | `-ImplicitCastExpr 0x5605abd7ece8 <col:12> 'int' <LValueToRValue>
| | |     |     | |   | |   `-DeclRefExpr 0x5605abd7ecb0 <col:12> 'int' lvalue Var 0x5605abd7ea18 '__inf' 'int'
| | |     |     | |   | `-ReturnStmt 0x5605abd7ed90 <line:586:6, col:17>
| | |     |     | |   |   `-BinaryOperator 0x5605abd7ed70 <col:13, col:17> 'int' '*'
| | |     |     | |   |     |-IntegerLiteral 0x5605abd7ed18 <col:13> 'int' 4
| | |     |     | |   |     `-ImplicitCastExpr 0x5605abd7ed58 <col:17> 'int' <LValueToRValue>
| | |     |     | |   |       `-DeclRefExpr 0x5605abd7ed38 <col:17> 'int' lvalue Var 0x5605abd7ea18 '__inf' 'int'
| | |     |     | |   `-ReturnStmt 0x5605abd7ee58 <line:587:4, col:15>
| | |     |     | |     `-BinaryOperator 0x5605abd7ee38 <col:11, col:15> 'int' '*'
| | |     |     | |       |-IntegerLiteral 0x5605abd7ede0 <col:11> 'int' 2
| | |     |     | |       `-ImplicitCastExpr 0x5605abd7ee20 <col:15> 'int' <LValueToRValue>
| | |     |     | |         `-DeclRefExpr 0x5605abd7ee00 <col:15> 'const int' lvalue Var 0x5605abd7dfb8 '__sign' 'const int'
| | |     |     | |-CXXConversionDecl 0x5605abd7f0f8 <line:579:15, line:588:2> line:579:15 implicit constexpr operator int (*)(type-parameter-0-0) 'auto (*() const noexcept)(_Tp) -> int' inline
| | |     |     | `-CXXMethodDecl 0x5605abd7f1b8 <col:15, line:588:2> line:579:15 implicit __invoke 'auto (_Tp) -> int' static inline
| | |     |     |   `-ParmVarDecl 0x5605abd7f088 <col:18, col:22> col:22 __fp '_Tp'
| | |     |     `-CompoundStmt 0x5605abd7ee68 <col:35, line:588:2>
| | |     |       |-DeclStmt 0x5605abd7e360 <line:580:4, col:55>
| | |     |       | `-VarDecl 0x5605abd7dfb8 <col:4, col:54> col:14 referenced __sign 'const int' cinit
| | |     |       |   `-ConditionalOperator 0x5605abd7e330 <col:23, col:54> '<dependent type>'
| | |     |       |     |-CallExpr 0x5605abd7e2b0 <col:23, col:45> '<dependent type>'
| | |     |       |     | |-DeclRefExpr 0x5605abd7e258 <col:23> '<builtin fn type>' Function 0x5605abd7e0b8 '__builtin_signbit' 'int (...) noexcept'
| | |     |       |     | `-DeclRefExpr 0x5605abd7e290 <col:41> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |       |     |-UnaryOperator 0x5605abd7e2f8 <col:49, col:50> 'int' prefix '-'
| | |     |       |     | `-IntegerLiteral 0x5605abd7e2d8 <col:50> 'int' 1
| | |     |       |     `-IntegerLiteral 0x5605abd7e310 <col:54> 'int' 1
| | |     |       |-IfStmt 0x5605abd7e700 <line:581:4, line:582:35>
| | |     |       | |-CallExpr 0x5605abd7e580 <line:581:8, col:31> '<dependent type>'
| | |     |       | | |-DeclRefExpr 0x5605abd7e528 <col:8> '<builtin fn type>' Function 0x5605abd7e3d8 '__builtin_isnormal' 'int (...) noexcept'
| | |     |       | | `-DeclRefExpr 0x5605abd7e560 <col:27> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |       | `-ReturnStmt 0x5605abd7e6f0 <line:582:6, col:35>
| | |     |       |   `-BinaryOperator 0x5605abd7e6d0 <col:13, col:35> '<dependent type>' '*'
| | |     |       |     |-ParenExpr 0x5605abd7e678 <col:13, col:31> '<dependent type>'
| | |     |       |     | `-ConditionalOperator 0x5605abd7e648 <col:14, col:30> '<dependent type>'
| | |     |       |     |   |-BinaryOperator 0x5605abd7e5e8 <col:14, col:22> '<dependent type>' '=='
| | |     |       |     |   | |-DeclRefExpr 0x5605abd7e5a8 <col:14> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |       |     |   | `-IntegerLiteral 0x5605abd7e5c8 <col:22> 'int' 0
| | |     |       |     |   |-IntegerLiteral 0x5605abd7e608 <col:26> 'int' 1
| | |     |       |     |   `-IntegerLiteral 0x5605abd7e628 <col:30> 'int' 3
| | |     |       |     `-DeclRefExpr 0x5605abd7e698 <col:35> 'const int' lvalue Var 0x5605abd7dfb8 '__sign' 'const int'
| | |     |       |-IfStmt 0x5605abd7e9d8 <line:583:4, line:584:17>
| | |     |       | |-CallExpr 0x5605abd7e928 <line:583:8, col:28> '<dependent type>'
| | |     |       | | |-DeclRefExpr 0x5605abd7e8d0 <col:8> '<builtin fn type>' Function 0x5605abd7e780 '__builtin_isnan' 'int (...) noexcept'
| | |     |       | | `-DeclRefExpr 0x5605abd7e908 <col:24> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |       | `-ReturnStmt 0x5605abd7e9c8 <line:584:6, col:17>
| | |     |       |   `-BinaryOperator 0x5605abd7e9a8 <col:13, col:17> 'int' '*'
| | |     |       |     |-IntegerLiteral 0x5605abd7e950 <col:13> 'int' 5
| | |     |       |     `-ImplicitCastExpr 0x5605abd7e990 <col:17> 'int' <LValueToRValue>
| | |     |       |       `-DeclRefExpr 0x5605abd7e970 <col:17> 'const int' lvalue Var 0x5605abd7dfb8 '__sign' 'const int'
| | |     |       |-IfStmt 0x5605abd7eda0 <line:585:4, line:586:17> has_var
| | |     |       | |-DeclStmt 0x5605abd7edc8 <line:585:8, col:45>
| | |     |       | | `-VarDecl 0x5605abd7ea18 <col:8, col:45> col:12 referenced __inf 'int' cinit
| | |     |       | |   `-CallExpr 0x5605abd7ec88 <col:20, col:45> '<dependent type>'
| | |     |       | |     |-DeclRefExpr 0x5605abd7ec30 <col:20> '<builtin fn type>' Function 0x5605abd7eae0 '__builtin_isinf_sign' 'int (...) noexcept'
| | |     |       | |     `-DeclRefExpr 0x5605abd7ec68 <col:41> '_Tp' lvalue ParmVar 0x5605abd7de38 '__fp' '_Tp'
| | |     |       | |-ImplicitCastExpr 0x5605abd7ed00 <col:12> 'bool' <IntegralToBoolean>
| | |     |       | | `-ImplicitCastExpr 0x5605abd7ece8 <col:12> 'int' <LValueToRValue>
| | |     |       | |   `-DeclRefExpr 0x5605abd7ecb0 <col:12> 'int' lvalue Var 0x5605abd7ea18 '__inf' 'int'
| | |     |       | `-ReturnStmt 0x5605abd7ed90 <line:586:6, col:17>
| | |     |       |   `-BinaryOperator 0x5605abd7ed70 <col:13, col:17> 'int' '*'
| | |     |       |     |-IntegerLiteral 0x5605abd7ed18 <col:13> 'int' 4
| | |     |       |     `-ImplicitCastExpr 0x5605abd7ed58 <col:17> 'int' <LValueToRValue>
| | |     |       |       `-DeclRefExpr 0x5605abd7ed38 <col:17> 'int' lvalue Var 0x5605abd7ea18 '__inf' 'int'
| | |     |       `-ReturnStmt 0x5605abd7ee58 <line:587:4, col:15>
| | |     |         `-BinaryOperator 0x5605abd7ee38 <col:11, col:15> 'int' '*'
| | |     |           |-IntegerLiteral 0x5605abd7ede0 <col:11> 'int' 2
| | |     |           `-ImplicitCastExpr 0x5605abd7ee20 <col:15> 'int' <LValueToRValue>
| | |     |             `-DeclRefExpr 0x5605abd7ee00 <col:15> 'const int' lvalue Var 0x5605abd7dfb8 '__sign' 'const int'
| | |     |-DeclStmt 0x5605abd7f3d8 <line:590:2, col:25>
| | |     | `-VarDecl 0x5605abd7f310 <col:2, col:22> col:7 referenced __po 'auto' cinit
| | |     |   `-BinaryOperator 0x5605abd7f3b8 <col:14, col:22> '<dependent type>' '<=>'
| | |     |     |-DeclRefExpr 0x5605abd7f378 <col:14> '_Tp' lvalue ParmVar 0x5605abd7d808 '__e' '_Tp'
| | |     |     `-DeclRefExpr 0x5605abd7f398 <col:22> '_Tp' lvalue ParmVar 0x5605abd7d888 '__f' '_Tp'
| | |     `-IfStmt 0x5605abd80750 <line:591:2, line:612:4> has_else
| | |       |-CallExpr 0x5605abd7f470 <line:591:6, col:16> '<dependent type>'
| | |       | |-UnresolvedLookupExpr 0x5605abd7f3f0 <col:6> '<overloaded function type>' lvalue (ADL) = 'is_lt' 0x5605abd73fc0
| | |       | `-DeclRefExpr 0x5605abd7f438 <col:12> 'auto' lvalue Var 0x5605abd7f310 '__po' 'auto'
| | |       |-ReturnStmt 0x5605abd7f6a0 <line:592:4, col:26>
| | |       | `-CXXConstructExpr 0x5605abd7f670 <col:11, col:26> 'weak_ordering':'std::weak_ordering' 'void (const weak_ordering &) noexcept'
| | |       |   `-DeclRefExpr 0x5605abd7f4d0 <col:11, col:26> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd62ef0 'less' 'const weak_ordering':'const std::weak_ordering'
| | |       |     `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |       `-IfStmt 0x5605abd80720 <line:593:7, line:612:4> has_else
| | |         |-CallExpr 0x5605abd7f718 <line:593:11, col:21> '<dependent type>'
| | |         | |-UnresolvedLookupExpr 0x5605abd7f6b0 <col:11> '<overloaded function type>' lvalue (ADL) = 'is_gt' 0x5605abd74750
| | |         | `-DeclRefExpr 0x5605abd7f6f8 <col:17> 'auto' lvalue Var 0x5605abd7f310 '__po' 'auto'
| | |         |-ReturnStmt 0x5605abd7f7d8 <line:594:4, col:26>
| | |         | `-CXXConstructExpr 0x5605abd7f7a8 <col:11, col:26> 'weak_ordering':'std::weak_ordering' 'void (const weak_ordering &) noexcept'
| | |         |   `-DeclRefExpr 0x5605abd7f778 <col:11, col:26> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63908 'greater' 'const weak_ordering':'const std::weak_ordering'
| | |         |     `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |         `-IfStmt 0x5605abd806f0 <line:595:7, line:612:4> has_else
| | |           |-BinaryOperator 0x5605abd7f870 <line:595:11, col:37> '<dependent type>' '=='
| | |           | |-DeclRefExpr 0x5605abd7f7e8 <col:11> 'auto' lvalue Var 0x5605abd7f310 '__po' 'auto'
| | |           | `-DeclRefExpr 0x5605abd7f840 <col:19, col:37> 'const partial_ordering':'const std::partial_ordering' lvalue Var 0x5605abb729c8 'equivalent' 'const partial_ordering':'const std::partial_ordering'
| | |           |   `-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| | |           |-ReturnStmt 0x5605abd7f928 <line:596:4, col:26>
| | |           | `-CXXConstructExpr 0x5605abd7f8f8 <col:11, col:26> 'weak_ordering':'std::weak_ordering' 'void (const weak_ordering &) noexcept'
| | |           |   `-DeclRefExpr 0x5605abd7f8c8 <col:11, col:26> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63178 'equivalent' 'const weak_ordering':'const std::weak_ordering'
| | |           |     `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |           `-CompoundStmt 0x5605abd806c8 <line:598:4, line:612:4>
| | |             |-DeclStmt 0x5605abd80190 <line:600:6, line:604:7>
| | |             | `-VarDecl 0x5605abd7f958 <line:600:6, line:604:6> line:600:11 referenced __isnan_sign 'auto' cinit
| | |             |   `-LambdaExpr 0x5605abd80168 <col:26, line:604:6> '(lambda at /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:600:26)'
| | |             |     |-CXXRecordDecl 0x5605abd7f9c8 <line:600:26> col:26 implicit class definition
| | |             |     | |-DefinitionData lambda empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |             |     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |             |     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |             |     | | |-MoveConstructor exists simple trivial needs_implicit
| | |             |     | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |             |     | | |-MoveAssignment exists simple trivial needs_implicit
| | |             |     | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |             |     | |-CXXMethodDecl 0x5605abd7fb28 <col:42, line:604:6> line:600:26 operator() 'auto (_Tp) const -> int' inline
| | |             |     | | |-ParmVarDecl 0x5605abd7fbf8 <col:29, col:33> col:33 referenced __fp '_Tp'
| | |             |     | | `-CompoundStmt 0x5605abd7fe98 <col:46, line:604:6>
| | |             |     | |   `-ReturnStmt 0x5605abd7fe88 <line:601:8, line:603:5>
| | |             |     | |     `-ConditionalOperator 0x5605abd7fe58 <line:601:15, line:603:5> '<dependent type>'
| | |             |     | |       |-CallExpr 0x5605abd7fd20 <line:601:15, col:35> '<dependent type>'
| | |             |     | |       | |-DeclRefExpr 0x5605abd7fce0 <col:15> '<builtin fn type>' Function 0x5605abd7e780 '__builtin_isnan' 'int (...) noexcept'
| | |             |     | |       | `-DeclRefExpr 0x5605abd7fd00 <col:31> '_Tp' lvalue ParmVar 0x5605abd7fbf8 '__fp' '_Tp'
| | |             |     | |       |-ConditionalOperator 0x5605abd7fe08 <line:602:5, col:36> '<dependent type>'
| | |             |     | |       | |-CallExpr 0x5605abd7fd88 <col:5, col:27> '<dependent type>'
| | |             |     | |       | | |-DeclRefExpr 0x5605abd7fd48 <col:5> '<builtin fn type>' Function 0x5605abd7e0b8 '__builtin_signbit' 'int (...) noexcept'
| | |             |     | |       | | `-DeclRefExpr 0x5605abd7fd68 <col:23> '_Tp' lvalue ParmVar 0x5605abd7fbf8 '__fp' '_Tp'
| | |             |     | |       | |-UnaryOperator 0x5605abd7fdd0 <col:31, col:32> 'int' prefix '-'
| | |             |     | |       | | `-IntegerLiteral 0x5605abd7fdb0 <col:32> 'int' 1
| | |             |     | |       | `-IntegerLiteral 0x5605abd7fde8 <col:36> 'int' 1
| | |             |     | |       `-IntegerLiteral 0x5605abd7fe38 <line:603:5> 'int' 0
| | |             |     | |-CXXConversionDecl 0x5605abd7ffb0 <line:600:26, line:604:6> line:600:26 implicit constexpr operator int (*)(type-parameter-0-0) 'auto (*() const noexcept)(_Tp) -> int' inline
| | |             |     | `-CXXMethodDecl 0x5605abd80070 <col:26, line:604:6> line:600:26 implicit __invoke 'auto (_Tp) -> int' static inline
| | |             |     |   `-ParmVarDecl 0x5605abd7ff40 <col:29, col:33> col:33 __fp '_Tp'
| | |             |     `-CompoundStmt 0x5605abd7fe98 <col:46, line:604:6>
| | |             |       `-ReturnStmt 0x5605abd7fe88 <line:601:8, line:603:5>
| | |             |         `-ConditionalOperator 0x5605abd7fe58 <line:601:15, line:603:5> '<dependent type>'
| | |             |           |-CallExpr 0x5605abd7fd20 <line:601:15, col:35> '<dependent type>'
| | |             |           | |-DeclRefExpr 0x5605abd7fce0 <col:15> '<builtin fn type>' Function 0x5605abd7e780 '__builtin_isnan' 'int (...) noexcept'
| | |             |           | `-DeclRefExpr 0x5605abd7fd00 <col:31> '_Tp' lvalue ParmVar 0x5605abd7fbf8 '__fp' '_Tp'
| | |             |           |-ConditionalOperator 0x5605abd7fe08 <line:602:5, col:36> '<dependent type>'
| | |             |           | |-CallExpr 0x5605abd7fd88 <col:5, col:27> '<dependent type>'
| | |             |           | | |-DeclRefExpr 0x5605abd7fd48 <col:5> '<builtin fn type>' Function 0x5605abd7e0b8 '__builtin_signbit' 'int (...) noexcept'
| | |             |           | | `-DeclRefExpr 0x5605abd7fd68 <col:23> '_Tp' lvalue ParmVar 0x5605abd7fbf8 '__fp' '_Tp'
| | |             |           | |-UnaryOperator 0x5605abd7fdd0 <col:31, col:32> 'int' prefix '-'
| | |             |           | | `-IntegerLiteral 0x5605abd7fdb0 <col:32> 'int' 1
| | |             |           | `-IntegerLiteral 0x5605abd7fde8 <col:36> 'int' 1
| | |             |           `-IntegerLiteral 0x5605abd7fe38 <line:603:5> 'int' 0
| | |             |-DeclStmt 0x5605abd80320 <line:605:6, col:58>
| | |             | `-VarDecl 0x5605abd801c8 <col:6, col:57> col:11 referenced __ord 'auto' cinit
| | |             |   `-BinaryOperator 0x5605abd80300 <col:19, col:57> '<dependent type>' '<=>'
| | |             |     |-CallExpr 0x5605abd80270 <col:19, col:35> '<dependent type>'
| | |             |     | |-DeclRefExpr 0x5605abd80230 <col:19> 'auto' lvalue Var 0x5605abd7f958 '__isnan_sign' 'auto'
| | |             |     | `-DeclRefExpr 0x5605abd80250 <col:32> '_Tp' lvalue ParmVar 0x5605abd7d808 '__e' '_Tp'
| | |             |     `-CallExpr 0x5605abd802d8 <col:41, col:57> '<dependent type>'
| | |             |       |-DeclRefExpr 0x5605abd80298 <col:41> 'auto' lvalue Var 0x5605abd7f958 '__isnan_sign' 'auto'
| | |             |       `-DeclRefExpr 0x5605abd802b8 <col:54> '_Tp' lvalue ParmVar 0x5605abd7d888 '__f' '_Tp'
| | |             `-IfStmt 0x5605abd80698 <line:606:6, line:611:30> has_else
| | |               |-CallExpr 0x5605abd803b8 <line:606:10, col:21> '<dependent type>'
| | |               | |-UnresolvedLookupExpr 0x5605abd80338 <col:10> '<overloaded function type>' lvalue (ADL) = 'is_eq' 0x5605abd69120
| | |               | `-DeclRefExpr 0x5605abd80380 <col:16> 'auto' lvalue Var 0x5605abd801c8 '__ord' 'auto'
| | |               |-ReturnStmt 0x5605abd80478 <line:607:8, col:30>
| | |               | `-CXXConstructExpr 0x5605abd80448 <col:15, col:30> 'weak_ordering':'std::weak_ordering' 'void (const weak_ordering &) noexcept'
| | |               |   `-DeclRefExpr 0x5605abd80418 <col:15, col:30> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63178 'equivalent' 'const weak_ordering':'const std::weak_ordering'
| | |               |     `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |               `-IfStmt 0x5605abd80668 <line:608:11, line:611:30> has_else
| | |                 |-CallExpr 0x5605abd804f0 <line:608:15, col:26> '<dependent type>'
| | |                 | |-UnresolvedLookupExpr 0x5605abd80488 <col:15> '<overloaded function type>' lvalue (ADL) = 'is_lt' 0x5605abd73fc0
| | |                 | `-DeclRefExpr 0x5605abd804d0 <col:21> 'auto' lvalue Var 0x5605abd801c8 '__ord' 'auto'
| | |                 |-ReturnStmt 0x5605abd805b0 <line:609:8, col:30>
| | |                 | `-CXXConstructExpr 0x5605abd80580 <col:15, col:30> 'weak_ordering':'std::weak_ordering' 'void (const weak_ordering &) noexcept'
| | |                 |   `-DeclRefExpr 0x5605abd80550 <col:15, col:30> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd62ef0 'less' 'const weak_ordering':'const std::weak_ordering'
| | |                 |     `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |                 `-ReturnStmt 0x5605abd80658 <line:611:8, col:30>
| | |                   `-CXXConstructExpr 0x5605abd80628 <col:15, col:30> 'weak_ordering':'std::weak_ordering' 'void (const weak_ordering &) noexcept'
| | |                     `-DeclRefExpr 0x5605abd805f8 <col:15, col:30> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63908 'greater' 'const weak_ordering':'const std::weak_ordering'
| | |                       `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |-FunctionDecl 0x5605abd807d0 <line:615:5, col:23> col:10 strong_order 'void ()' delete implicit-inline
| | |-ConceptDecl 0x5605abd809e0 <line:617:5, line:622:2> line:618:15 __adl_strong
| | | |-TemplateTypeParmDecl 0x5605abd80898 <line:617:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd80928 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-RequiresExpr 0x5605abd80db0 <line:618:30, line:622:2> 'bool'
| | |   |-ParmVarDecl 0x5605abd80a78 <line:618:39, col:45> col:45 referenced __t '_Tp &&'
| | |   |-ParmVarDecl 0x5605abd80b28 <col:50, col:56> col:56 referenced __u '_Up &&'
| | |   `-SimpleRequirement 0x5605abd80d80 dependent
| | |     `-CXXUnresolvedConstructExpr 0x5605abd80d58 <line:620:4, line:621:36> 'strong_ordering':'std::strong_ordering' 'strong_ordering':'std::strong_ordering'
| | |       `-CallExpr 0x5605abd80d28 <line:620:20, line:621:35> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x5605abd80c20 <line:620:20> '<overloaded function type>' lvalue (ADL) = 'strong_order' 0x5605abd807d0
| | |         |-CXXStaticCastExpr 0x5605abd80c98 <col:33, col:55> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |         | `-DeclRefExpr 0x5605abd80c68 <col:52> '_Tp' lvalue ParmVar 0x5605abd80a78 '__t' '_Tp &&' non_odr_use_unevaluated
| | |         `-CXXStaticCastExpr 0x5605abd80cf8 <line:621:12, col:34> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |           `-DeclRefExpr 0x5605abd80cc8 <col:31> '_Up' lvalue ParmVar 0x5605abd80b28 '__u' '_Up &&' non_odr_use_unevaluated
| | |-FunctionDecl 0x5605abd80e20 <line:624:5, col:21> col:10 weak_order 'void ()' delete implicit-inline
| | |-ConceptDecl 0x5605abd81030 <line:626:5, line:631:2> line:627:15 __adl_weak
| | | |-TemplateTypeParmDecl 0x5605abd80ee8 <line:626:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd80f78 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-RequiresExpr 0x5605abd81400 <line:627:28, line:631:2> 'bool'
| | |   |-ParmVarDecl 0x5605abd810c8 <line:627:37, col:43> col:43 referenced __t '_Tp &&'
| | |   |-ParmVarDecl 0x5605abd81178 <col:48, col:54> col:54 referenced __u '_Up &&'
| | |   `-SimpleRequirement 0x5605abd813d0 dependent
| | |     `-CXXUnresolvedConstructExpr 0x5605abd813a8 <line:629:4, line:630:32> 'weak_ordering':'std::weak_ordering' 'weak_ordering':'std::weak_ordering'
| | |       `-CallExpr 0x5605abd81378 <line:629:18, line:630:31> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x5605abd81270 <line:629:18> '<overloaded function type>' lvalue (ADL) = 'weak_order' 0x5605abd80e20
| | |         |-CXXStaticCastExpr 0x5605abd812e8 <col:29, col:51> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |         | `-DeclRefExpr 0x5605abd812b8 <col:48> '_Tp' lvalue ParmVar 0x5605abd810c8 '__t' '_Tp &&' non_odr_use_unevaluated
| | |         `-CXXStaticCastExpr 0x5605abd81348 <line:630:8, col:30> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |           `-DeclRefExpr 0x5605abd81318 <col:27> '_Up' lvalue ParmVar 0x5605abd81178 '__u' '_Up &&' non_odr_use_unevaluated
| | |-FunctionDecl 0x5605abd81470 <line:633:5, col:24> col:10 partial_order 'void ()' delete implicit-inline
| | |-ConceptDecl 0x5605abd837c0 <line:635:5, line:640:2> line:636:15 __adl_partial
| | | |-TemplateTypeParmDecl 0x5605abd81538 <line:635:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd815c8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-RequiresExpr 0x5605abd83b90 <line:636:31, line:640:2> 'bool'
| | |   |-ParmVarDecl 0x5605abd83858 <line:636:40, col:46> col:46 referenced __t '_Tp &&'
| | |   |-ParmVarDecl 0x5605abd83908 <col:51, col:57> col:57 referenced __u '_Up &&'
| | |   `-SimpleRequirement 0x5605abd83b60 dependent
| | |     `-CXXUnresolvedConstructExpr 0x5605abd83b38 <line:638:4, line:639:31> 'partial_ordering':'std::partial_ordering' 'partial_ordering':'std::partial_ordering'
| | |       `-CallExpr 0x5605abd83b08 <line:638:21, line:639:30> '<dependent type>'
| | |         |-UnresolvedLookupExpr 0x5605abd83a00 <line:638:21> '<overloaded function type>' lvalue (ADL) = 'partial_order' 0x5605abd81470
| | |         |-CXXStaticCastExpr 0x5605abd83a78 <col:35, col:57> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |         | `-DeclRefExpr 0x5605abd83a48 <col:54> '_Tp' lvalue ParmVar 0x5605abd83858 '__t' '_Tp &&' non_odr_use_unevaluated
| | |         `-CXXStaticCastExpr 0x5605abd83ad8 <line:639:7, col:29> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |           `-DeclRefExpr 0x5605abd83aa8 <col:26> '_Up' lvalue ParmVar 0x5605abd83908 '__u' '_Up &&' non_odr_use_unevaluated
| | |-ConceptDecl 0x5605abd83db8 <line:642:5, line:646:2> line:643:15 __cmp3way
| | | |-TemplateTypeParmDecl 0x5605abd83be0 <line:642:14, col:23> col:23 referenced typename depth 0 index 0 _Ord
| | | |-TemplateTypeParmDecl 0x5605abd83c68 <col:29, col:38> col:38 referenced typename depth 0 index 1 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd83cf8 <col:43, col:52> col:52 referenced typename depth 0 index 2 _Up
| | | `-RequiresExpr 0x5605abd84250 <line:643:27, line:646:2> 'bool'
| | |   |-ParmVarDecl 0x5605abd83e48 <line:643:36, col:42> col:42 referenced __t '_Tp &&'
| | |   |-ParmVarDecl 0x5605abd83f28 <col:47, col:53> col:53 referenced __u '_Up &&'
| | |   |-ParmVarDecl 0x5605abd83fd8 <col:58, col:76> col:76 referenced __c 'compare_three_way':'std::compare_three_way'
| | |   `-SimpleRequirement 0x5605abd84220 dependent
| | |     `-CXXUnresolvedConstructExpr 0x5605abd841f8 <line:645:4, col:62> '_Ord' '_Ord'
| | |       `-CallExpr 0x5605abd841c8 <col:9, col:61> '<dependent type>'
| | |         |-DeclRefExpr 0x5605abd840e8 <col:9> 'compare_three_way':'std::compare_three_way' lvalue ParmVar 0x5605abd83fd8 '__c' 'compare_three_way':'std::compare_three_way' non_odr_use_unevaluated
| | |         |-CXXStaticCastExpr 0x5605abd84138 <col:13, col:35> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |         | `-DeclRefExpr 0x5605abd84108 <col:32> '_Tp' lvalue ParmVar 0x5605abd83e48 '__t' '_Tp &&' non_odr_use_unevaluated
| | |         `-CXXStaticCastExpr 0x5605abd84198 <col:38, col:60> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |           `-DeclRefExpr 0x5605abd84168 <col:57> '_Up' lvalue ParmVar 0x5605abd83f28 '__u' '_Up &&' non_odr_use_unevaluated
| | |-ConceptDecl 0x5605abd843f0 <line:648:5, line:652:42> line:649:15 __strongly_ordered
| | | |-TemplateTypeParmDecl 0x5605abd842a8 <line:648:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd84338 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-BinaryOperator 0x5605abd84a58 <line:650:4, line:652:42> 'bool' '||'
| | |   |-BinaryOperator 0x5605abd84898 <line:650:4, line:651:45> 'bool' '||'
| | |   | |-ConceptSpecializationExpr 0x5605abd84568 <line:650:4, col:25> 'bool' Concept 0x5605abd809e0 '__adl_strong'
| | |   | | |-ImplicitConceptSpecializationDecl 0x5605abd84478 <line:618:15> col:15
| | |   | | | |-TemplateArgument type 'type-parameter-0-0'
| | |   | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | | | `-TemplateArgument type 'type-parameter-0-1'
| | |   | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | | |-TemplateArgument <line:650:17> type '_Tp':'type-parameter-0-0'
| | |   | | | `-TemplateTypeParmType 0x5605abd84300 '_Tp' dependent depth 0 index 0
| | |   | | |   `-TemplateTypeParm 0x5605abd842a8 '_Tp'
| | |   | | `-TemplateArgument <col:22> type '_Up':'type-parameter-0-1'
| | |   | |   `-TemplateTypeParmType 0x5605abd84390 '_Up' dependent depth 0 index 1
| | |   | |     `-TemplateTypeParm 0x5605abd84338 '_Up'
| | |   | `-ConceptSpecializationExpr 0x5605abd84870 <line:651:7, col:45> 'bool' Concept 0x5605abd195d8 'floating_point'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abd847b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:116:13> col:13
| | |   |   | `-TemplateArgument type 'typename remove_reference<type-parameter-0-0>::type'
| | |   |   |   `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| | |   |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:651:22, <scratch space>:238:1> type 'remove_reference_t<_Tp>':'typename remove_reference<type-parameter-0-0>::type'
| | |   |     `-ElaboratedType 0x5605abd84740 'remove_reference_t<_Tp>' sugar dependent
| | |   |       `-TemplateSpecializationType 0x5605abd846f0 'remove_reference_t<_Tp>' sugar dependent alias
| | |   |         |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | |   |         | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | |   |         |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   |         | `-TemplateTypeParmType 0x5605abd84300 '_Tp' dependent depth 0 index 0
| | |   |         |   `-TemplateTypeParm 0x5605abd842a8 '_Tp'
| | |   |         `-DependentNameType 0x5605abd846a0 'typename remove_reference<_Tp>::type' dependent
| | |   `-ConceptSpecializationExpr 0x5605abd84a30 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:652:7, col:42> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | |     |-ImplicitConceptSpecializationDecl 0x5605abd84908 <line:643:15> col:15
| | |     | |-TemplateArgument type 'std::strong_ordering'
| | |     | | `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | |     | |   `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | |     | |-TemplateArgument type 'type-parameter-0-0'
| | |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |     | `-TemplateArgument type 'type-parameter-0-1'
| | |     |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |     |-TemplateArgument <line:652:17> type 'strong_ordering':'std::strong_ordering'
| | |     | `-ElaboratedType 0x5605abd63f60 'strong_ordering' sugar
| | |     |   `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | |     |     `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | |     |-TemplateArgument <col:34> type '_Tp':'type-parameter-0-0'
| | |     | `-TemplateTypeParmType 0x5605abd84300 '_Tp' dependent depth 0 index 0
| | |     |   `-TemplateTypeParm 0x5605abd842a8 '_Tp'
| | |     `-TemplateArgument <col:39> type '_Up':'type-parameter-0-1'
| | |       `-TemplateTypeParmType 0x5605abd84390 '_Up' dependent depth 0 index 1
| | |         `-TemplateTypeParm 0x5605abd84338 '_Up'
| | |-ConceptDecl 0x5605abd84bc0 <line:654:5, line:655:69> col:15 __decayed_same_as
| | | |-TemplateTypeParmDecl 0x5605abd84a80 <line:654:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd84b08 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-ConceptSpecializationExpr 0x5605abd85148 <line:655:35, col:69> 'bool' Concept 0x5605abd12b80 'same_as'
| | |   |-ImplicitConceptSpecializationDecl 0x5605abd85058 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:62:13> col:13
| | |   | |-TemplateArgument type 'typename decay<type-parameter-0-0>::type'
| | |   | | `-DependentNameType 0x5605abc662c0 'typename decay<type-parameter-0-0>::type' dependent
| | |   | `-TemplateArgument type 'typename decay<type-parameter-0-1>::type'
| | |   |   `-DependentNameType 0x5605abc6ea70 'typename decay<type-parameter-0-1>::type' dependent
| | |   |-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:655:43, col:54> type 'decay_t<_Tp>':'typename decay<type-parameter-0-0>::type'
| | |   | `-ElaboratedType 0x5605abd84dc0 'decay_t<_Tp>' sugar dependent
| | |   |   `-TemplateSpecializationType 0x5605abd84d70 'decay_t<_Tp>' sugar dependent alias
| | |   |     |-name: 'decay_t':'std::decay_t' qualified
| | |   |     | `-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| | |   |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   |     | `-TemplateTypeParmType 0x5605abd84ad0 '_Tp' dependent depth 0 index 0
| | |   |     |   `-TemplateTypeParm 0x5605abd84a80 '_Tp'
| | |   |     `-DependentNameType 0x5605abd84d20 'typename decay<_Tp>::type' dependent
| | |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:655:57, <scratch space>:239:1> type 'decay_t<_Up>':'typename decay<type-parameter-0-1>::type'
| | |     `-ElaboratedType 0x5605abd84fe0 'decay_t<_Up>' sugar dependent
| | |       `-TemplateSpecializationType 0x5605abd84f90 'decay_t<_Up>' sugar dependent alias
| | |         |-name: 'decay_t':'std::decay_t' qualified
| | |         | `-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| | |         |-TemplateArgument type '_Up':'type-parameter-0-1'
| | |         | `-TemplateTypeParmType 0x5605abd84b60 '_Up' dependent depth 0 index 1
| | |         |   `-TemplateTypeParm 0x5605abd84b08 '_Up'
| | |         `-DependentNameType 0x5605abd84f40 'typename decay<_Up>::type' dependent
| | |-CXXRecordDecl 0x5605abd85178 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:657:5, line:973:5> line:657:11 referenced class _Strong_order definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr
| | | |-CXXRecordDecl 0x5605abd852b0 <col:5, col:11> col:11 implicit class _Strong_order
| | | |-FunctionTemplateDecl 0x5605abd855a8 <line:659:7, line:671:2> line:661:2 _S_noexcept
| | | | |-TemplateTypeParmDecl 0x5605abd85360 <line:659:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abd853e8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | `-CXXMethodDecl 0x5605abd854f8 <line:660:2, line:671:2> line:661:2 constexpr _S_noexcept 'bool ()' static implicit-inline
| | | |   `-CompoundStmt 0x5605abd942e0 <line:662:2, line:671:2>
| | | |     `-IfStmt 0x5605abd942b0 <line:663:4, line:670:27> has_else constexpr
| | | |       |-ConceptSpecializationExpr 0x5605abd8c4e0 <line:663:18, col:45> 'bool' Concept 0x5605abd195d8 'floating_point'
| | | |       | |-ImplicitConceptSpecializationDecl 0x5605abd8c428 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:116:13> col:13
| | | |       | | `-TemplateArgument type 'typename decay<type-parameter-0-0>::type'
| | | |       | |   `-DependentNameType 0x5605abc662c0 'typename decay<type-parameter-0-0>::type' dependent
| | | |       | `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:663:33, <scratch space>:240:1> type 'decay_t<_Tp>':'typename decay<type-parameter-0-0>::type'
| | | |       |   `-ElaboratedType 0x5605abd8c3b0 'decay_t<_Tp>' sugar dependent
| | | |       |     `-TemplateSpecializationType 0x5605abd8c360 'decay_t<_Tp>' sugar dependent alias
| | | |       |       |-name: 'decay_t':'std::decay_t' qualified
| | | |       |       | `-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| | | |       |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |       |       | `-TemplateTypeParmType 0x5605abd853b0 '_Tp' dependent depth 0 index 0
| | | |       |       |   `-TemplateTypeParm 0x5605abd85360 '_Tp'
| | | |       |       `-DependentNameType 0x5605abd8c310 'typename decay<_Tp>::type' dependent
| | | |       |-ReturnStmt 0x5605abd8c518 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:664:6, col:13>
| | | |       | `-CXXBoolLiteralExpr 0x5605abd8c508 <col:13> 'bool' true
| | | |       `-IfStmt 0x5605abd94280 <line:665:9, line:670:27> has_else constexpr
| | | |         |-ConceptSpecializationExpr 0x5605abd8c640 <line:665:23, col:44> 'bool' Concept 0x5605abd809e0 '__adl_strong'
| | | |         | |-ImplicitConceptSpecializationDecl 0x5605abd8c550 <line:618:15> col:15
| | | |         | | |-TemplateArgument type 'type-parameter-0-0'
| | | |         | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |         | | `-TemplateArgument type 'type-parameter-0-1'
| | | |         | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |         | |-TemplateArgument <line:665:36> type '_Tp':'type-parameter-0-0'
| | | |         | | `-TemplateTypeParmType 0x5605abd853b0 '_Tp' dependent depth 0 index 0
| | | |         | |   `-TemplateTypeParm 0x5605abd85360 '_Tp'
| | | |         | `-TemplateArgument <col:41> type '_Up':'type-parameter-0-1'
| | | |         |   `-TemplateTypeParmType 0x5605abd85440 '_Up' dependent depth 0 index 1
| | | |         |     `-TemplateTypeParm 0x5605abd853e8 '_Up'
| | | |         |-ReturnStmt 0x5605abd8c8c8 <line:666:6, line:667:30>
| | | |         | `-CXXNoexceptExpr 0x5605abd8c8a8 <line:666:13, line:667:30> 'bool'
| | | |         |   `-CXXUnresolvedConstructExpr 0x5605abd8c880 <line:666:22, line:667:29> 'strong_ordering':'std::strong_ordering' 'strong_ordering':'std::strong_ordering'
| | | |         |     `-CallExpr 0x5605abd8c850 <line:666:38, line:667:28> '<dependent type>'
| | | |         |       |-UnresolvedLookupExpr 0x5605abd8c678 <line:666:38> '<overloaded function type>' lvalue (ADL) = 'strong_order' 0x5605abd807d0
| | | |         |       |-CallExpr 0x5605abd8c768 <col:51, col:69> '<dependent type>'
| | | |         |       | `-UnresolvedLookupExpr 0x5605abd8c6f0 <col:51, col:67> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |         |       |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |         |       |     `-TemplateTypeParmType 0x5605abd853b0 '_Tp' dependent depth 0 index 0
| | | |         |       |       `-TemplateTypeParm 0x5605abd85360 '_Tp'
| | | |         |       `-CallExpr 0x5605abd8c830 <line:667:9, col:27> '<dependent type>'
| | | |         |         `-UnresolvedLookupExpr 0x5605abd8c7b8 <col:9, col:25> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |         |           `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |         |             `-TemplateTypeParmType 0x5605abd85440 '_Up' dependent depth 0 index 1
| | | |         |               `-TemplateTypeParm 0x5605abd853e8 '_Up'
| | | |         `-IfStmt 0x5605abd94260 <line:668:9, line:670:27> constexpr
| | | |           |-ConceptSpecializationExpr 0x5605abd93830 <line:668:23, col:58> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | | |           | |-ImplicitConceptSpecializationDecl 0x5605abd93708 <line:643:15> col:15
| | | |           | | |-TemplateArgument type 'std::strong_ordering'
| | | |           | | | `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | | |           | | |   `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | | |           | | |-TemplateArgument type 'type-parameter-0-0'
| | | |           | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |           | | `-TemplateArgument type 'type-parameter-0-1'
| | | |           | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |           | |-TemplateArgument <line:668:33> type 'strong_ordering':'std::strong_ordering'
| | | |           | | `-ElaboratedType 0x5605abd63f60 'strong_ordering' sugar
| | | |           | |   `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | | |           | |     `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | | |           | |-TemplateArgument <col:50> type '_Tp':'type-parameter-0-0'
| | | |           | | `-TemplateTypeParmType 0x5605abd853b0 '_Tp' dependent depth 0 index 0
| | | |           | |   `-TemplateTypeParm 0x5605abd85360 '_Tp'
| | | |           | `-TemplateArgument <col:55> type '_Up':'type-parameter-0-1'
| | | |           |   `-TemplateTypeParmType 0x5605abd85440 '_Up' dependent depth 0 index 1
| | | |           |     `-TemplateTypeParm 0x5605abd853e8 '_Up'
| | | |           `-ReturnStmt 0x5605abd94250 <line:669:6, line:670:27>
| | | |             `-CXXNoexceptExpr 0x5605abd94230 <line:669:13, line:670:27> 'bool'
| | | |               `-CallExpr 0x5605abd94200 <line:669:22, line:670:26> '<dependent type>'
| | | |                 |-CXXTemporaryObjectExpr 0x5605abd93f28 <line:669:22, col:40> 'compare_three_way':'std::compare_three_way' 'void () noexcept' zeroing
| | | |                 |-CallExpr 0x5605abd94118 <col:42, col:60> '<dependent type>'
| | | |                 | `-UnresolvedLookupExpr 0x5605abd940a0 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |                 |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |                 |     `-TemplateTypeParmType 0x5605abd853b0 '_Tp' dependent depth 0 index 0
| | | |                 |       `-TemplateTypeParm 0x5605abd85360 '_Tp'
| | | |                 `-CallExpr 0x5605abd941e0 <line:670:7, col:25> '<dependent type>'
| | | |                   `-UnresolvedLookupExpr 0x5605abd94168 <col:7, col:23> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |                     `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |                       `-TemplateTypeParmType 0x5605abd85440 '_Up' dependent depth 0 index 1
| | | |                         `-TemplateTypeParm 0x5605abd853e8 '_Up'
| | | |-FriendDecl 0x5605abd86698 <line:673:7, col:20> col:14 'class _Weak_order':'std::__compare::_Weak_order'
| | | | `-CXXRecordDecl 0x5605abd85620 parent 0x5605abd7b530 <col:14, col:20> col:20 friend_undeclared class _Weak_order
| | | |-FriendDecl 0x5605abd86820 <line:674:7, col:20> col:14 'class _Strong_fallback':'std::__compare::_Strong_fallback'
| | | | `-CXXRecordDecl 0x5605abd866e8 parent 0x5605abd7b530 <col:14, col:20> col:20 friend_undeclared class _Strong_fallback
| | | |-EnumDecl 0x5605abd86870 <line:677:7, line:684:7> line:677:18 referenced class _Fp_fmt 'int'
| | | | |-EnumConstantDecl 0x5605abd86958 <line:679:2> col:2 referenced _Binary16 'std::__compare::_Strong_order::_Fp_fmt'
| | | | |-EnumConstantDecl 0x5605abd869b8 <col:13> col:13 referenced _Binary32 'std::__compare::_Strong_order::_Fp_fmt'
| | | | |-EnumConstantDecl 0x5605abd86a18 <col:24> col:24 referenced _Binary64 'std::__compare::_Strong_order::_Fp_fmt'
| | | | |-EnumConstantDecl 0x5605abd86a78 <col:35> col:35 referenced _Binary128 'std::__compare::_Strong_order::_Fp_fmt'
| | | | |-EnumConstantDecl 0x5605abd86ad8 <line:680:2> col:2 referenced _X86_80bit 'std::__compare::_Strong_order::_Fp_fmt'
| | | | |-EnumConstantDecl 0x5605abd86b38 <line:681:2> col:2 referenced _M68k_80bit 'std::__compare::_Strong_order::_Fp_fmt'
| | | | |-EnumConstantDecl 0x5605abd86b98 <line:682:2> col:2 referenced _Dbldbl 'std::__compare::_Strong_order::_Fp_fmt'
| | | | `-EnumConstantDecl 0x5605abd86bf8 <line:683:2> col:2 _Bfloat16 'std::__compare::_Strong_order::_Fp_fmt'
| | | |-FunctionTemplateDecl 0x5605abd86e70 <line:699:7, line:741:2> line:701:2 _S_fp_fmt
| | | | |-TemplateTypeParmDecl 0x5605abd86c58 <line:699:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | `-CXXMethodDecl 0x5605abd86dc0 <line:700:2, line:741:2> line:701:2 consteval _S_fp_fmt '_Fp_fmt () noexcept' static implicit-inline
| | | |   `-CompoundStmt 0x5605abd94d68 <line:702:2, line:741:2>
| | | |     |-DeclStmt 0x5605abd946d8 <line:704:4, col:22>
| | | |     | `-UsingEnumDecl 0x5605abd94310 <col:4, col:15> col:15 Enum 0x5605abd86870 '_Fp_fmt'
| | | |     |-IfStmt 0x5605abd94880 <line:719:4, line:720:55> constexpr
| | | |     | |-TypeTraitExpr 0x5605abd94718 <line:719:18, col:44> 'bool' __is_same
| | | |     | | |-TemplateTypeParmType 0x5605abd86cb0 '_Tp' dependent depth 0 index 0
| | | |     | | | `-TemplateTypeParm 0x5605abd86c58 '_Tp'
| | | |     | | `-BuiltinType 0x5605aba9cbb0 'long double'
| | | |     | `-ReturnStmt 0x5605abd94870 <line:720:6, col:55>
| | | |     |   `-ConditionalOperator 0x5605abd94840 <<built-in>:261:26, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:720:55> 'std::__compare::_Strong_order::_Fp_fmt'
| | | |     |     |-BinaryOperator 0x5605abd947d0 <<built-in>:261:26, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:720:34> 'bool' '=='
| | | |     |     | |-ParenExpr 0x5605abd94778 <<built-in>:261:26, col:33> 'int'
| | | |     |     | | `-UnaryOperator 0x5605abd94760 <col:27, col:28> 'int' prefix '-'
| | | |     |     | |   `-IntegerLiteral 0x5605abd94740 <col:28> 'int' 16381
| | | |     |     | `-UnaryOperator 0x5605abd947b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:720:33, col:34> 'int' prefix '-'
| | | |     |     |   `-IntegerLiteral 0x5605abd94798 <col:34> 'int' 16381
| | | |     |     |-DeclRefExpr 0x5605abd947f0 <col:42> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86ad8 '_X86_80bit' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd94520 '_X86_80bit')
| | | |     |     `-DeclRefExpr 0x5605abd94818 <col:55> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86b38 '_M68k_80bit' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd94590 '_M68k_80bit')
| | | |     |-DeclStmt 0x5605abd949c8 <line:731:4, col:54>
| | | |     | `-VarDecl 0x5605abd948c0 <col:4, <built-in>:128:22> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:731:18 referenced __width 'const int' constexpr cinit
| | | |     |   `-ImplicitCastExpr 0x5605abd949b0 <col:28, <built-in>:128:22> 'const int' <IntegralCast>
| | | |     |     `-BinaryOperator 0x5605abd94990 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:731:28, <built-in>:128:22> 'unsigned long' '*'
| | | |     |       |-UnaryExprOrTypeTraitExpr 0x5605abd94938 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:731:28, col:38> 'unsigned long' sizeof '_Tp'
| | | |     |       `-ImplicitCastExpr 0x5605abd94978 <<built-in>:128:22> 'unsigned long' <IntegralCast>
| | | |     |         `-IntegerLiteral 0x5605abd94958 <col:22> 'int' 8
| | | |     `-IfStmt 0x5605abd94d38 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:733:4, line:740:13> has_else constexpr
| | | |       |-BinaryOperator 0x5605abd94a50 <line:733:18, col:29> 'bool' '=='
| | | |       | |-ImplicitCastExpr 0x5605abd94a38 <col:18> 'int' <LValueToRValue>
| | | |       | | `-DeclRefExpr 0x5605abd949e0 <col:18> 'const int' lvalue Var 0x5605abd948c0 '__width' 'const int'
| | | |       | `-IntegerLiteral 0x5605abd94a18 <col:29> 'int' 16
| | | |       |-ReturnStmt 0x5605abd94a98 <line:734:6, col:13>
| | | |       | `-DeclRefExpr 0x5605abd94a70 <col:13> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86958 '_Binary16' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd94360 '_Binary16')
| | | |       `-IfStmt 0x5605abd94d08 <line:735:9, line:740:13> has_else constexpr
| | | |         |-BinaryOperator 0x5605abd94b00 <line:735:23, col:34> 'bool' '=='
| | | |         | |-ImplicitCastExpr 0x5605abd94ae8 <col:23> 'int' <LValueToRValue>
| | | |         | | `-DeclRefExpr 0x5605abd94aa8 <col:23> 'const int' lvalue Var 0x5605abd948c0 '__width' 'const int'
| | | |         | `-IntegerLiteral 0x5605abd94ac8 <col:34> 'int' 32
| | | |         |-ReturnStmt 0x5605abd94b48 <line:736:6, col:13>
| | | |         | `-DeclRefExpr 0x5605abd94b20 <col:13> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd869b8 '_Binary32' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd943d0 '_Binary32')
| | | |         `-IfStmt 0x5605abd94cd8 <line:737:9, line:740:13> has_else constexpr
| | | |           |-BinaryOperator 0x5605abd94bb0 <line:737:23, col:34> 'bool' '=='
| | | |           | |-ImplicitCastExpr 0x5605abd94b98 <col:23> 'int' <LValueToRValue>
| | | |           | | `-DeclRefExpr 0x5605abd94b58 <col:23> 'const int' lvalue Var 0x5605abd948c0 '__width' 'const int'
| | | |           | `-IntegerLiteral 0x5605abd94b78 <col:34> 'int' 64
| | | |           |-ReturnStmt 0x5605abd94bf8 <line:738:6, col:13>
| | | |           | `-DeclRefExpr 0x5605abd94bd0 <col:13> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86a18 '_Binary64' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd94440 '_Binary64')
| | | |           `-IfStmt 0x5605abd94cb8 <line:739:9, line:740:13> constexpr
| | | |             |-BinaryOperator 0x5605abd94c60 <line:739:23, col:34> 'bool' '=='
| | | |             | |-ImplicitCastExpr 0x5605abd94c48 <col:23> 'int' <LValueToRValue>
| | | |             | | `-DeclRefExpr 0x5605abd94c08 <col:23> 'const int' lvalue Var 0x5605abd948c0 '__width' 'const int'
| | | |             | `-IntegerLiteral 0x5605abd94c28 <col:34> 'int' 128
| | | |             `-ReturnStmt 0x5605abd94ca8 <line:740:6, col:13>
| | | |               `-DeclRefExpr 0x5605abd94c80 <col:13> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86a78 '_Binary128' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd944b0 '_Binary128')
| | | |-TypeAliasDecl 0x5605abd86f00 <line:744:7, <built-in>:281:29> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:744:13 referenced int64_t 'long'
| | | | `-BuiltinType 0x5605aba9ca90 'long'
| | | |-TypeAliasDecl 0x5605abd86f80 <line:745:7, <built-in>:276:24> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:745:13 referenced int32_t 'int'
| | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | |-TypeAliasDecl 0x5605abd87000 <line:746:7, <built-in>:271:24> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:746:13 referenced int16_t 'short'
| | | | `-BuiltinType 0x5605aba9ca50 'short'
| | | |-TypeAliasDecl 0x5605abd87080 <line:747:7, <built-in>:313:39> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:747:13 referenced uint64_t 'unsigned long'
| | | | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| | | |-TypeAliasDecl 0x5605abd87100 <line:748:7, <built-in>:295:34> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:748:13 referenced uint16_t 'unsigned short'
| | | | `-BuiltinType 0x5605aba9caf0 'unsigned short'
| | | |-ClassTemplateDecl 0x5605abd872c8 <line:751:7, line:797:2> line:752:9 _Int
| | | | |-TemplateTypeParmDecl 0x5605abd87168 <line:751:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-CXXRecordDecl 0x5605abd87218 <line:752:2, line:797:2> line:752:9 struct _Int definition
| | | | | |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | | |-DefaultConstructor
| | | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | | |-CXXRecordDecl 0x5605abd87580 <col:2, col:9> col:9 implicit referenced struct _Int
| | | | | |-FieldDecl 0x5605abd876a8 <line:755:4, col:13> col:13 referenced _M_lo 'uint64_t':'unsigned long'
| | | | | |-FieldDecl 0x5605abd87710 <line:756:4, col:8> col:8 referenced _M_hi '_Tp'
| | | | | |-CXXConstructorDecl 0x5605abd879a0 <line:762:4, line:764:20> line:763:4 constexpr _Int<_Tp> 'void (_Tp, uint64_t) noexcept' implicit-inline
| | | | | | |-ParmVarDecl 0x5605abd87778 <col:9, col:13> col:13 referenced __hi '_Tp'
| | | | | | |-ParmVarDecl 0x5605abd877f8 <col:19, col:28> col:28 referenced __lo 'uint64_t':'unsigned long'
| | | | | | |-CXXCtorInitializer Field 0x5605abd87710 '_M_hi' '_Tp'
| | | | | | | `-ParenListExpr 0x5605abd94db8 <col:50, col:55> 'NULL TYPE'
| | | | | | |   `-DeclRefExpr 0x5605abd94d98 <col:51> '_Tp' lvalue ParmVar 0x5605abd87778 '__hi' '_Tp'
| | | | | | `-CompoundStmt 0x5605abd94ee0 <line:764:4, col:20>
| | | | | |   `-BinaryOperator 0x5605abd94ec0 <col:6, col:14> 'uint64_t':'unsigned long' lvalue '='
| | | | | |     |-MemberExpr 0x5605abd94e58 <col:6> 'uint64_t':'unsigned long' lvalue ->_M_lo 0x5605abd876a8
| | | | | |     | `-CXXThisExpr 0x5605abd94e48 <col:6> '_Int<_Tp> *' implicit this
| | | | | |     `-ImplicitCastExpr 0x5605abd94ea8 <col:14> 'uint64_t':'unsigned long' <LValueToRValue>
| | | | | |       `-DeclRefExpr 0x5605abd94e88 <col:14> 'uint64_t':'unsigned long' lvalue ParmVar 0x5605abd877f8 '__lo' 'uint64_t':'unsigned long'
| | | | | |-CXXConstructorDecl 0x5605abd87bc0 <line:766:4, line:768:20> line:767:4 constexpr _Int<_Tp> 'void (uint64_t) noexcept' implicit-inline
| | | | | | |-ParmVarDecl 0x5605abd87a90 <col:9, col:18> col:18 referenced __lo 'uint64_t':'unsigned long'
| | | | | | |-CXXCtorInitializer Field 0x5605abd87710 '_M_hi' '_Tp'
| | | | | | | `-ParenListExpr 0x5605abd94f18 <col:40, col:42> 'NULL TYPE'
| | | | | | |   `-IntegerLiteral 0x5605abd94ef8 <col:41> 'int' 0
| | | | | | `-CompoundStmt 0x5605abd95040 <line:768:4, col:20>
| | | | | |   `-BinaryOperator 0x5605abd95020 <col:6, col:14> 'uint64_t':'unsigned long' lvalue '='
| | | | | |     |-MemberExpr 0x5605abd94fb8 <col:6> 'uint64_t':'unsigned long' lvalue ->_M_lo 0x5605abd876a8
| | | | | |     | `-CXXThisExpr 0x5605abd94fa8 <col:6> '_Int<_Tp> *' implicit this
| | | | | |     `-ImplicitCastExpr 0x5605abd95008 <col:14> 'uint64_t':'unsigned long' <LValueToRValue>
| | | | | |       `-DeclRefExpr 0x5605abd94fe8 <col:14> 'uint64_t':'unsigned long' lvalue ParmVar 0x5605abd87a90 '__lo' 'uint64_t':'unsigned long'
| | | | | |-CXXMethodDecl 0x5605abd87eb8 <line:770:4, col:57> col:19 constexpr operator== 'bool (const _Int<_Tp> &) const' default implicit-inline
| | | | | | `-ParmVarDecl 0x5605abd87d50 <col:30, col:40> col:41 'const _Int<_Tp> &'
| | | | | |-CXXMethodDecl 0x5605abd88138 <line:781:4, line:787:4> line:782:4 constexpr operator^= '_Int<_Tp> &(const _Int<_Tp> &) noexcept' implicit-inline
| | | | | | |-ParmVarDecl 0x5605abd87fa0 <col:15, col:27> col:27 referenced __rhs 'const _Int<_Tp> &'
| | | | | | `-CompoundStmt 0x5605abd952b8 <line:783:4, line:787:4>
| | | | | |   |-CompoundAssignOperator 0x5605abd95130 <line:784:6, col:21> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | | | |   | |-MemberExpr 0x5605abd950b0 <col:6> '_Tp' lvalue ->_M_hi 0x5605abd87710
| | | | | |   | | `-CXXThisExpr 0x5605abd950a0 <col:6> '_Int<_Tp> *' implicit this
| | | | | |   | `-MemberExpr 0x5605abd95100 <col:15, col:21> 'const _Tp' lvalue ._M_hi 0x5605abd87710
| | | | | |   |   `-DeclRefExpr 0x5605abd950e0 <col:15> 'const _Int<_Tp>' lvalue ParmVar 0x5605abd87fa0 '__rhs' 'const _Int<_Tp> &'
| | | | | |   |-CompoundAssignOperator 0x5605abd95250 <line:785:6, col:21> 'uint64_t':'unsigned long' lvalue '^=' ComputeLHSTy='uint64_t':'unsigned long' ComputeResultTy='uint64_t':'unsigned long'
| | | | | |   | |-MemberExpr 0x5605abd951b8 <col:6> 'uint64_t':'unsigned long' lvalue ->_M_lo 0x5605abd876a8
| | | | | |   | | `-CXXThisExpr 0x5605abd951a8 <col:6> '_Int<_Tp> *' implicit this
| | | | | |   | `-ImplicitCastExpr 0x5605abd95238 <col:15, col:21> 'uint64_t':'unsigned long' <LValueToRValue>
| | | | | |   |   `-MemberExpr 0x5605abd95208 <col:15, col:21> 'const uint64_t':'const unsigned long' lvalue ._M_lo 0x5605abd876a8
| | | | | |   |     `-DeclRefExpr 0x5605abd951e8 <col:15> 'const _Int<_Tp>' lvalue ParmVar 0x5605abd87fa0 '__rhs' 'const _Int<_Tp> &'
| | | | | |   `-ReturnStmt 0x5605abd952a8 <line:786:6, col:14>
| | | | | |     `-UnaryOperator 0x5605abd95290 <col:13, col:14> '_Int<_Tp>' lvalue prefix '*' cannot overflow
| | | | | |       `-CXXThisExpr 0x5605abd95280 <col:14> '_Int<_Tp> *' this
| | | | | `-CXXMethodDecl 0x5605abd88350 <line:789:4, line:796:4> line:790:4 constexpr operator<=> 'strong_ordering (const _Int<_Tp> &) const noexcept' implicit-inline
| | | | |   |-ParmVarDecl 0x5605abd88220 <col:16, col:28> col:28 referenced __rhs 'const _Int<_Tp> &'
| | | | |   `-CompoundStmt 0x5605abd96960 <line:791:4, line:796:4>
| | | | |     |-DeclStmt 0x5605abd95410 <line:792:6, col:51>
| | | | |     | `-VarDecl 0x5605abd952f8 <col:6, col:46> col:22 referenced __cmp 'strong_ordering':'std::strong_ordering' cinit
| | | | |     |   `-BinaryOperator 0x5605abd953f0 <col:30, col:46> '<dependent type>' '<=>'
| | | | |     |     |-MemberExpr 0x5605abd95370 <col:30> 'const _Tp' lvalue ->_M_hi 0x5605abd87710
| | | | |     |     | `-CXXThisExpr 0x5605abd95360 <col:30> 'const _Int<_Tp> *' implicit this
| | | | |     |     `-MemberExpr 0x5605abd953c0 <col:40, col:46> 'const _Tp' lvalue ._M_hi 0x5605abd87710
| | | | |     |       `-DeclRefExpr 0x5605abd953a0 <col:40> 'const _Int<_Tp>' lvalue ParmVar 0x5605abd88220 '__rhs' 'const _Int<_Tp> &'
| | | | |     |-IfStmt 0x5605abd96850 <line:793:6, line:794:15>
| | | | |     | |-CXXRewrittenBinaryOperator 0x5605abd967b8 <line:793:10, col:36> 'bool'
| | | | |     | | `-UnaryOperator 0x5605abd967a0 <col:16, col:36> 'bool' prefix '!' cannot overflow
| | | | |     | |   `-CXXOperatorCallExpr 0x5605abd96768 <col:10, col:36> 'bool' '==' adl
| | | | |     | |     |-ImplicitCastExpr 0x5605abd96750 <col:16> 'bool (*)(strong_ordering, strong_ordering) noexcept' <FunctionToPointerDecay>
| | | | |     | |     | `-DeclRefExpr 0x5605abd96580 <col:16> 'bool (strong_ordering, strong_ordering) noexcept' lvalue Function 0x5605abd64b50 'operator==' 'bool (strong_ordering, strong_ordering) noexcept'
| | | | |     | |     |-CXXConstructExpr 0x5605abd96520 <col:10> 'strong_ordering':'std::strong_ordering' 'void (const strong_ordering &) noexcept'
| | | | |     | |     | `-ImplicitCastExpr 0x5605abd95590 <col:10> 'const strong_ordering':'const std::strong_ordering' lvalue <NoOp>
| | | | |     | |     |   `-DeclRefExpr 0x5605abd95428 <col:10> 'strong_ordering':'std::strong_ordering' lvalue Var 0x5605abd952f8 '__cmp' 'strong_ordering':'std::strong_ordering'
| | | | |     | |     `-CXXConstructExpr 0x5605abd96550 <col:19, col:36> 'strong_ordering':'std::strong_ordering' 'void (const strong_ordering &) noexcept'
| | | | |     | |       `-DeclRefExpr 0x5605abd95498 <col:19, col:36> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68998 'equal' 'const strong_ordering':'const std::strong_ordering'
| | | | |     | |         `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | | | |     | `-ReturnStmt 0x5605abd96838 <line:794:8, col:15> nrvo_candidate(Var 0x5605abd952f8 '__cmp' 'strong_ordering':'std::strong_ordering')
| | | | |     |   `-CXXConstructExpr 0x5605abd96808 <col:15> 'strong_ordering':'std::strong_ordering' 'void (strong_ordering &&) noexcept'
| | | | |     |     `-ImplicitCastExpr 0x5605abd967f0 <col:15> 'strong_ordering':'std::strong_ordering' xvalue <NoOp>
| | | | |     |       `-DeclRefExpr 0x5605abd967d0 <col:15> 'strong_ordering':'std::strong_ordering' lvalue Var 0x5605abd952f8 '__cmp' 'strong_ordering':'std::strong_ordering'
| | | | |     `-ReturnStmt 0x5605abd96950 <line:795:6, col:29>
| | | | |       `-BinaryOperator 0x5605abd96930 <col:13, col:29> 'std::strong_ordering' '<=>'
| | | | |         |-ImplicitCastExpr 0x5605abd96900 <col:13> 'uint64_t':'unsigned long' <LValueToRValue>
| | | | |         | `-MemberExpr 0x5605abd96880 <col:13> 'const uint64_t':'const unsigned long' lvalue ->_M_lo 0x5605abd876a8
| | | | |         |   `-CXXThisExpr 0x5605abd96870 <col:13> 'const _Int<_Tp> *' implicit this
| | | | |         `-ImplicitCastExpr 0x5605abd96918 <col:23, col:29> 'uint64_t':'unsigned long' <LValueToRValue>
| | | | |           `-MemberExpr 0x5605abd968d0 <col:23, col:29> 'const uint64_t':'const unsigned long' lvalue ._M_lo 0x5605abd876a8
| | | | |             `-DeclRefExpr 0x5605abd968b0 <col:23> 'const _Int<_Tp>' lvalue ParmVar 0x5605abd88220 '__rhs' 'const _Int<_Tp> &'
| | | | |-ClassTemplateSpecializationDecl 0x5605abd983f0 <line:751:7, line:797:2> line:752:9 struct _Int definition implicit_instantiation
| | | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | | |-DefaultConstructor defaulted_is_constexpr
| | | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | | |-TemplateArgument type 'int'
| | | | | | `-BuiltinType 0x5605aba9ca70 'int'
| | | | | |-CXXRecordDecl 0x5605abd98790 <col:2, col:9> col:9 implicit struct _Int
| | | | | |-FieldDecl 0x5605abd98840 <line:755:4, col:13> col:13 referenced _M_lo 'uint64_t':'unsigned long'
| | | | | |-FieldDecl 0x5605abd988d8 <line:756:4, col:8> col:8 referenced _M_hi 'int'
| | | | | |-CXXConstructorDecl 0x5605abd98b18 <line:762:4, line:764:20> line:763:4 constexpr _Int 'void (int, uint64_t) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd879a0
| | | | | | |-ParmVarDecl 0x5605abd98940 <col:9, col:13> col:13 __hi 'int'
| | | | | | `-ParmVarDecl 0x5605abd989b0 <col:19, col:28> col:28 __lo 'uint64_t':'unsigned long'
| | | | | |-CXXConstructorDecl 0x5605abd98cc8 <line:766:4, line:768:20> line:767:4 constexpr _Int 'void (uint64_t) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd87bc0
| | | | | | `-ParmVarDecl 0x5605abd98c08 <col:9, col:18> col:18 __lo 'uint64_t':'unsigned long'
| | | | | |-CXXMethodDecl 0x5605abd98f88 <line:770:4, col:57> col:19 constexpr operator== 'bool (const _Int<int> &) const' implicit_instantiation default noexcept-unevaluated 0x5605abd98f88 implicit-inline instantiated_from 0x5605abd87eb8
| | | | | | `-ParmVarDecl 0x5605abd98e70 <col:30, col:40> col:41 'const _Int<int> &'
| | | | | |-CXXMethodDecl 0x5605abd991f8 <line:781:4, line:787:4> line:782:4 constexpr operator^= '_Int<int> &(const _Int<int> &) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd88138
| | | | | | `-ParmVarDecl 0x5605abd990d0 <col:15, col:27> col:27 __rhs 'const _Int<int> &'
| | | | | `-CXXMethodDecl 0x5605abd99410 <line:789:4, line:796:4> line:790:4 constexpr operator<=> 'strong_ordering (const _Int<int> &) const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd88350
| | | | |   `-ParmVarDecl 0x5605abd992f0 <col:16, col:28> col:28 __rhs 'const _Int<int> &'
| | | | |-ClassTemplateSpecializationDecl 0x5605abd99570 <line:751:7, line:797:2> line:752:9 struct _Int definition implicit_instantiation
| | | | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | | |-DefaultConstructor defaulted_is_constexpr
| | | | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | | | |-MoveConstructor exists simple trivial
| | | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | | `-Destructor simple irrelevant trivial constexpr
| | | | | |-TemplateArgument type 'short'
| | | | | | `-BuiltinType 0x5605aba9ca50 'short'
| | | | | |-CXXRecordDecl 0x5605abd99868 <col:2, col:9> col:9 implicit struct _Int
| | | | | |-FieldDecl 0x5605abd99918 <line:755:4, col:13> col:13 referenced _M_lo 'uint64_t':'unsigned long'
| | | | | |-FieldDecl 0x5605abd999b8 <line:756:4, col:8> col:8 _M_hi 'short'
| | | | | |-CXXConstructorDecl 0x5605abd99bf8 <line:762:4, line:764:20> line:763:4 referenced constexpr _Int 'void (short, uint64_t) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd879a0
| | | | | | |-ParmVarDecl 0x5605abd99a20 <col:9, col:13> col:13 used __hi 'short'
| | | | | | |-ParmVarDecl 0x5605abd99a90 <col:19, col:28> col:28 used __lo 'uint64_t':'unsigned long'
| | | | | | |-CXXCtorInitializer Field 0x5605abd999b8 '_M_hi' 'short'
| | | | | | | `-ImplicitCastExpr 0x5605abd9b068 <col:51> 'short' <LValueToRValue>
| | | | | | |   `-DeclRefExpr 0x5605abd9b010 <col:51> 'short' lvalue ParmVar 0x5605abd99a20 '__hi' 'short'
| | | | | | `-CompoundStmt 0x5605abd9b158 <line:764:4, col:20>
| | | | | |   `-BinaryOperator 0x5605abd9b138 <col:6, col:14> 'uint64_t':'unsigned long' lvalue '='
| | | | | |     |-MemberExpr 0x5605abd9b0b8 <col:6> 'uint64_t':'unsigned long' lvalue ->_M_lo 0x5605abd99918
| | | | | |     | `-CXXThisExpr 0x5605abd9b0a8 <col:6> 'std::__compare::_Strong_order::_Int<short> *' implicit this
| | | | | |     `-ImplicitCastExpr 0x5605abd9b120 <col:14> 'uint64_t':'unsigned long' <LValueToRValue>
| | | | | |       `-DeclRefExpr 0x5605abd9b0e8 <col:14> 'uint64_t':'unsigned long' lvalue ParmVar 0x5605abd99a90 '__lo' 'uint64_t':'unsigned long'
| | | | | |-CXXConstructorDecl 0x5605abd99da8 <line:766:4, line:768:20> line:767:4 constexpr _Int 'void (uint64_t) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd87bc0
| | | | | | `-ParmVarDecl 0x5605abd99ce8 <col:9, col:18> col:18 __lo 'uint64_t':'unsigned long'
| | | | | |-CXXMethodDecl 0x5605abd9a068 <line:770:4, col:57> col:19 constexpr operator== 'bool (const _Int<short> &) const' implicit_instantiation default noexcept-unevaluated 0x5605abd9a068 implicit-inline instantiated_from 0x5605abd87eb8
| | | | | | `-ParmVarDecl 0x5605abd99f50 <col:30, col:40> col:41 'const _Int<short> &'
| | | | | |-CXXMethodDecl 0x5605abd9a2d8 <line:781:4, line:787:4> line:782:4 constexpr operator^= '_Int<short> &(const _Int<short> &) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd88138
| | | | | | `-ParmVarDecl 0x5605abd9a1b0 <col:15, col:27> col:27 __rhs 'const _Int<short> &'
| | | | | |-CXXMethodDecl 0x5605abd9a958 <line:789:4, line:796:4> line:790:4 constexpr operator<=> 'strong_ordering (const _Int<short> &) const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd88350
| | | | | | `-ParmVarDecl 0x5605abd9a3d0 <col:16, col:28> col:28 __rhs 'const _Int<short> &'
| | | | | |-CXXConstructorDecl 0x5605abd9aa98 <line:752:9> col:9 implicit constexpr _Int 'void (const _Int<short> &)' inline default trivial noexcept-unevaluated 0x5605abd9aa98
| | | | | | `-ParmVarDecl 0x5605abd9abd8 <col:9> col:9 'const _Int<short> &'
| | | | | |-CXXConstructorDecl 0x5605abd9acc8 <col:9> col:9 implicit constexpr _Int 'void (_Int<short> &&)' inline default trivial noexcept-unevaluated 0x5605abd9acc8
| | | | | | `-ParmVarDecl 0x5605abd9ae08 <col:9> col:9 '_Int<short> &&'
| | | | | `-CXXDestructorDecl 0x5605abd9b1b8 <col:9> col:9 implicit referenced constexpr ~_Int 'void () noexcept' inline default trivial
| | | | `-ClassTemplateSpecializationDecl 0x5605abd9b470 <line:751:7, line:797:2> line:752:9 struct _Int definition implicit_instantiation
| | | |   |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |   | |-DefaultConstructor defaulted_is_constexpr
| | | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |   | |-MoveConstructor exists simple trivial needs_implicit
| | | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |   | |-MoveAssignment exists simple trivial needs_implicit
| | | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |   |-TemplateArgument type 'long'
| | | |   | `-BuiltinType 0x5605aba9ca90 'long'
| | | |   |-CXXRecordDecl 0x5605abd9b7e0 <col:2, col:9> col:9 implicit struct _Int
| | | |   |-FieldDecl 0x5605abd9b890 <line:755:4, col:13> col:13 referenced _M_lo 'uint64_t':'unsigned long'
| | | |   |-FieldDecl 0x5605abd9b928 <line:756:4, col:8> col:8 referenced _M_hi 'long'
| | | |   |-CXXConstructorDecl 0x5605abd9bb68 <line:762:4, line:764:20> line:763:4 constexpr _Int 'void (long, uint64_t) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd879a0
| | | |   | |-ParmVarDecl 0x5605abd9b990 <col:9, col:13> col:13 __hi 'long'
| | | |   | `-ParmVarDecl 0x5605abd9ba00 <col:19, col:28> col:28 __lo 'uint64_t':'unsigned long'
| | | |   |-CXXConstructorDecl 0x5605abd9bd18 <line:766:4, line:768:20> line:767:4 constexpr _Int 'void (uint64_t) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd87bc0
| | | |   | `-ParmVarDecl 0x5605abd9bc58 <col:9, col:18> col:18 __lo 'uint64_t':'unsigned long'
| | | |   |-CXXMethodDecl 0x5605abd9bfd8 <line:770:4, col:57> col:19 constexpr operator== 'bool (const _Int<long> &) const' implicit_instantiation default noexcept-unevaluated 0x5605abd9bfd8 implicit-inline instantiated_from 0x5605abd87eb8
| | | |   | `-ParmVarDecl 0x5605abd9bec0 <col:30, col:40> col:41 'const _Int<long> &'
| | | |   |-CXXMethodDecl 0x5605abd9c248 <line:781:4, line:787:4> line:782:4 constexpr operator^= '_Int<long> &(const _Int<long> &) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd88138
| | | |   | `-ParmVarDecl 0x5605abd9c120 <col:15, col:27> col:27 __rhs 'const _Int<long> &'
| | | |   `-CXXMethodDecl 0x5605abd9c460 <line:789:4, line:796:4> line:790:4 constexpr operator<=> 'strong_ordering (const _Int<long> &) const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abd88350
| | | |     `-ParmVarDecl 0x5605abd9c340 <col:16, col:28> col:28 __rhs 'const _Int<long> &'
| | | |-FunctionTemplateDecl 0x5605abd8aa08 <line:799:7, line:809:2> line:801:2 _S_compl
| | | | |-TemplateTypeParmDecl 0x5605abd88440 <line:799:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | `-CXXMethodDecl 0x5605abd8a958 <line:800:2, line:809:2> line:801:2 constexpr _S_compl '_Tp (_Tp) noexcept' static implicit-inline
| | | |   |-ParmVarDecl 0x5605abd884f8 <col:11, col:15> col:15 referenced __t '_Tp'
| | | |   `-CompoundStmt 0x5605abd96f60 <line:802:2, line:809:2>
| | | |     |-DeclStmt 0x5605abd96ab0 <line:803:4, col:54>
| | | |     | `-VarDecl 0x5605abd969a8 <col:4, <built-in>:128:22> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:803:18 referenced __width 'const int' constexpr cinit
| | | |     |   `-ImplicitCastExpr 0x5605abd96a98 <col:28, <built-in>:128:22> 'const int' <IntegralCast>
| | | |     |     `-BinaryOperator 0x5605abd96a78 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:803:28, <built-in>:128:22> 'unsigned long' '*'
| | | |     |       |-UnaryExprOrTypeTraitExpr 0x5605abd96a20 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:803:28, col:38> 'unsigned long' sizeof '_Tp'
| | | |     |       `-ImplicitCastExpr 0x5605abd96a60 <<built-in>:128:22> 'unsigned long' <IntegralCast>
| | | |     |         `-IntegerLiteral 0x5605abd96a40 <col:22> 'int' 8
| | | |     |-DeclStmt 0x5605abd96e60 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:805:4, col:54>
| | | |     | `-VarDecl 0x5605abd96d08 <col:4, col:53> col:25 referenced __sign 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type' cinit
| | | |     |   `-BinaryOperator 0x5605abd96e40 <col:34, col:53> '<dependent type>' '>>'
| | | |     |     |-DeclRefExpr 0x5605abd96d70 <col:34> '_Tp' lvalue ParmVar 0x5605abd884f8 '__t' '_Tp'
| | | |     |     `-ParenExpr 0x5605abd96e20 <col:41, col:53> 'int'
| | | |     |       `-BinaryOperator 0x5605abd96e00 <col:42, col:52> 'int' '-'
| | | |     |         |-ImplicitCastExpr 0x5605abd96de8 <col:42> 'int' <LValueToRValue>
| | | |     |         | `-DeclRefExpr 0x5605abd96d90 <col:42> 'const int' lvalue Var 0x5605abd969a8 '__width' 'const int'
| | | |     |         `-IntegerLiteral 0x5605abd96dc8 <col:52> 'int' 1
| | | |     `-ReturnStmt 0x5605abd96f50 <line:808:4, col:29>
| | | |       `-BinaryOperator 0x5605abd96f30 <col:11, col:29> '<dependent type>' '^'
| | | |         |-DeclRefExpr 0x5605abd96e78 <col:11> '_Tp' lvalue ParmVar 0x5605abd884f8 '__t' '_Tp'
| | | |         `-ParenExpr 0x5605abd96f10 <col:17, col:29> '<dependent type>'
| | | |           `-BinaryOperator 0x5605abd96ef0 <col:18, col:28> '<dependent type>' '>>'
| | | |             |-DeclRefExpr 0x5605abd96e98 <col:18> 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type' lvalue Var 0x5605abd96d08 '__sign' 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type'
| | | |             `-IntegerLiteral 0x5605abd96ed0 <col:28> 'int' 1
| | | |-FunctionTemplateDecl 0x5605abd8aeb0 <line:812:7, line:822:2> line:814:2 _S_compl
| | | | |-TemplateTypeParmDecl 0x5605abd8aa88 <line:812:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | `-CXXMethodDecl 0x5605abd8ae00 <line:813:2, line:822:2> line:814:2 constexpr _S_compl '_Int<_Tp> (_Int<_Tp>) noexcept' static implicit-inline
| | | |   |-ParmVarDecl 0x5605abd8acb8 <col:11, col:21> col:21 referenced __t '_Int<_Tp>'
| | | |   `-CompoundStmt 0x5605abd977e8 <line:815:2, line:822:2>
| | | |     |-DeclStmt 0x5605abd970b0 <line:816:4, col:54>
| | | |     | `-VarDecl 0x5605abd96fa8 <col:4, <built-in>:128:22> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:816:18 referenced __width 'const int' constexpr cinit
| | | |     |   `-ImplicitCastExpr 0x5605abd97098 <col:28, <built-in>:128:22> 'const int' <IntegralCast>
| | | |     |     `-BinaryOperator 0x5605abd97078 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:816:28, <built-in>:128:22> 'unsigned long' '*'
| | | |     |       |-UnaryExprOrTypeTraitExpr 0x5605abd97020 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:816:28, col:38> 'unsigned long' sizeof '_Tp'
| | | |     |       `-ImplicitCastExpr 0x5605abd97060 <<built-in>:128:22> 'unsigned long' <IntegralCast>
| | | |     |         `-IntegerLiteral 0x5605abd97040 <col:22> 'int' 8
| | | |     |-DeclStmt 0x5605abd97498 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:817:4, col:60>
| | | |     | `-VarDecl 0x5605abd972f8 <col:4, col:59> col:25 referenced __sign 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type' cinit
| | | |     |   `-BinaryOperator 0x5605abd97478 <col:34, col:59> '<dependent type>' '>>'
| | | |     |     |-CXXDependentScopeMemberExpr 0x5605abd97380 <col:34, col:38> '<dependent type>' lvalue ._M_hi
| | | |     |     | `-DeclRefExpr 0x5605abd97360 <col:34> '_Int<_Tp>' lvalue ParmVar 0x5605abd8acb8 '__t' '_Int<_Tp>'
| | | |     |     `-ParenExpr 0x5605abd97458 <col:47, col:59> 'int'
| | | |     |       `-BinaryOperator 0x5605abd97438 <col:48, col:58> 'int' '-'
| | | |     |         |-ImplicitCastExpr 0x5605abd97420 <col:48> 'int' <LValueToRValue>
| | | |     |         | `-DeclRefExpr 0x5605abd973c8 <col:48> 'const int' lvalue Var 0x5605abd96fa8 '__width' 'const int'
| | | |     |         `-IntegerLiteral 0x5605abd97400 <col:58> 'int' 1
| | | |     |-CompoundAssignOperator 0x5605abd975b0 <line:818:4, col:30> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |     | |-CXXDependentScopeMemberExpr 0x5605abd974d0 <col:4, col:8> '<dependent type>' lvalue ._M_hi
| | | |     | | `-DeclRefExpr 0x5605abd974b0 <col:4> '_Int<_Tp>' lvalue ParmVar 0x5605abd8acb8 '__t' '_Int<_Tp>'
| | | |     | `-ParenExpr 0x5605abd97590 <col:17, col:30> '<dependent type>'
| | | |     |   `-BinaryOperator 0x5605abd97570 <col:18, col:28> '<dependent type>' '>>'
| | | |     |     |-DeclRefExpr 0x5605abd97518 <col:18> 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type' lvalue Var 0x5605abd972f8 '__sign' 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type'
| | | |     |     `-IntegerLiteral 0x5605abd97550 <col:28> 'int' 1
| | | |     |-DeclStmt 0x5605abd976b8 <line:819:4, col:35>
| | | |     | `-VarDecl 0x5605abd975f8 <col:4, col:29> col:13 referenced __sign64 'uint64_t':'unsigned long' cinit
| | | |     |   `-CStyleCastExpr 0x5605abd97690 <col:24, col:29> '_Tp' <Dependent>
| | | |     |     `-DeclRefExpr 0x5605abd97660 <col:29> 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type' lvalue Var 0x5605abd972f8 '__sign' 'make_unsigned_t<_Tp>':'typename make_unsigned<_Tp>::type'
| | | |     |-CompoundAssignOperator 0x5605abd97770 <line:820:4, col:17> '<dependent type>' lvalue '^=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |     | |-CXXDependentScopeMemberExpr 0x5605abd976f0 <col:4, col:8> '<dependent type>' lvalue ._M_lo
| | | |     | | `-DeclRefExpr 0x5605abd976d0 <col:4> '_Int<_Tp>' lvalue ParmVar 0x5605abd8acb8 '__t' '_Int<_Tp>'
| | | |     | `-DeclRefExpr 0x5605abd97738 <col:17> 'uint64_t':'unsigned long' lvalue Var 0x5605abd975f8 '__sign64' 'uint64_t':'unsigned long'
| | | |     `-ReturnStmt 0x5605abd977d8 <line:821:4, col:11>
| | | |       `-ImplicitCastExpr 0x5605abd977c0 <col:11> '_Int<_Tp>' xvalue <NoOp>
| | | |         `-DeclRefExpr 0x5605abd977a0 <col:11> '_Int<_Tp>' lvalue ParmVar 0x5605abd8acb8 '__t' '_Int<_Tp>'
| | | |-FunctionTemplateDecl 0x5605abd8b1e8 <line:825:7, line:866:2> line:827:2 _S_fp_bits
| | | | |-TemplateTypeParmDecl 0x5605abd8af40 <line:825:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | `-CXXMethodDecl 0x5605abd8b138 <line:826:2, line:866:2> line:827:2 constexpr _S_fp_bits 'auto (_Tp) noexcept' static implicit-inline
| | | |   |-ParmVarDecl 0x5605abd8aff8 <col:13, col:17> col:17 referenced __val '_Tp'
| | | |   `-CompoundStmt 0x5605abda0f70 <line:828:2, line:866:2>
| | | |     `-IfStmt 0x5605abda0f40 <line:829:4, line:865:6> has_else constexpr
| | | |       |-BinaryOperator 0x5605abd978f0 <line:829:18, col:47> 'bool' '=='
| | | |       | |-UnaryExprOrTypeTraitExpr 0x5605abd97838 <col:18, col:28> 'unsigned long' sizeof '_Tp'
| | | |       | `-UnaryExprOrTypeTraitExpr 0x5605abd978d0 <col:33, col:47> 'unsigned long' sizeof 'int64_t':'long'
| | | |       |-ReturnStmt 0x5605abd97968 <line:830:6, col:46>
| | | |       | `-BuiltinBitCastExpr 0x5605abd97940 <col:13, col:46> 'int64_t':'long' <Dependent>
| | | |       |   `-DeclRefExpr 0x5605abd97910 <col:41> '_Tp' lvalue ParmVar 0x5605abd8aff8 '__val' '_Tp'
| | | |       `-IfStmt 0x5605abda0f10 <line:831:9, line:865:6> has_else constexpr
| | | |         |-BinaryOperator 0x5605abd97a40 <line:831:23, col:52> 'bool' '=='
| | | |         | |-UnaryExprOrTypeTraitExpr 0x5605abd97988 <col:23, col:33> 'unsigned long' sizeof '_Tp'
| | | |         | `-UnaryExprOrTypeTraitExpr 0x5605abd97a20 <col:38, col:52> 'unsigned long' sizeof 'int32_t':'int'
| | | |         |-ReturnStmt 0x5605abd97ab8 <line:832:6, col:46>
| | | |         | `-BuiltinBitCastExpr 0x5605abd97a90 <col:13, col:46> 'int32_t':'int' <Dependent>
| | | |         |   `-DeclRefExpr 0x5605abd97a60 <col:41> '_Tp' lvalue ParmVar 0x5605abd8aff8 '__val' '_Tp'
| | | |         `-IfStmt 0x5605abda0ee0 <line:833:9, line:865:6> has_else constexpr
| | | |           |-BinaryOperator 0x5605abd97b90 <line:833:23, col:52> 'bool' '=='
| | | |           | |-UnaryExprOrTypeTraitExpr 0x5605abd97ad8 <col:23, col:33> 'unsigned long' sizeof '_Tp'
| | | |           | `-UnaryExprOrTypeTraitExpr 0x5605abd97b70 <col:38, col:52> 'unsigned long' sizeof 'int16_t':'short'
| | | |           |-ReturnStmt 0x5605abd97c08 <line:834:6, col:46>
| | | |           | `-BuiltinBitCastExpr 0x5605abd97be0 <col:13, col:46> 'int16_t':'short' <Dependent>
| | | |           |   `-DeclRefExpr 0x5605abd97bb0 <col:41> '_Tp' lvalue ParmVar 0x5605abd8aff8 '__val' '_Tp'
| | | |           `-CompoundStmt 0x5605abda0eb8 <line:836:6, line:865:6>
| | | |             |-DeclStmt 0x5605abd97ff8 <line:838:8, col:26>
| | | |             | `-UsingEnumDecl 0x5605abd97c30 <col:8, col:19> col:19 Enum 0x5605abd86870 '_Fp_fmt'
| | | |             |-DeclStmt 0x5605abd98158 <line:840:8, col:47>
| | | |             | `-VarDecl 0x5605abd98030 <col:8, col:46> col:23 referenced __fmt 'const auto' constexpr cinit
| | | |             |   `-CallExpr 0x5605abd98138 <col:31, col:46> '<dependent type>'
| | | |             |     `-UnresolvedLookupExpr 0x5605abd980c0 <col:31, col:44> '<dependent type>' lvalue (no ADL) = '_S_fp_fmt' 0x5605abd86e70
| | | |             |       `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |             |         `-TemplateTypeParmType 0x5605abd8af90 '_Tp' dependent depth 0 index 0
| | | |             |           `-TemplateTypeParm 0x5605abd8af40 '_Tp'
| | | |             `-IfStmt 0x5605abda0e88 <line:841:8, line:864:44> has_else constexpr
| | | |               |-BinaryOperator 0x5605abd98258 <line:841:22, col:54> '<dependent type>' '||'
| | | |               | |-BinaryOperator 0x5605abd981d0 <col:22, col:31> '<dependent type>' '=='
| | | |               | | |-DeclRefExpr 0x5605abd98170 <col:22> 'const auto' lvalue Var 0x5605abd98030 '__fmt' 'const auto'
| | | |               | | `-DeclRefExpr 0x5605abd981a8 <col:31> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86ad8 '_X86_80bit' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd97e40 '_X86_80bit')
| | | |               | `-BinaryOperator 0x5605abd98238 <col:45, col:54> '<dependent type>' '=='
| | | |               |   |-DeclRefExpr 0x5605abd981f0 <col:45> 'const auto' lvalue Var 0x5605abd98030 '__fmt' 'const auto'
| | | |               |   `-DeclRefExpr 0x5605abd98210 <col:54> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86b38 '_M68k_80bit' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abd97eb0 '_M68k_80bit')
| | | |               |-CompoundStmt 0x5605abd9c930 <line:842:3, line:853:3>
| | | |               | `-IfStmt 0x5605abd9c900 <line:843:5, line:852:7> has_else constexpr
| | | |               |   |-BinaryOperator 0x5605abd98330 <line:843:19, col:52> 'bool' '=='
| | | |               |   | |-UnaryExprOrTypeTraitExpr 0x5605abd98288 <col:19, col:29> 'unsigned long' sizeof '_Tp'
| | | |               |   | `-BinaryOperator 0x5605abd98310 <col:34, col:52> 'unsigned long' '*'
| | | |               |   |   |-ImplicitCastExpr 0x5605abd982f8 <col:34> 'unsigned long' <IntegralCast>
| | | |               |   |   | `-IntegerLiteral 0x5605abd982a8 <col:34> 'int' 3
| | | |               |   |   `-UnaryExprOrTypeTraitExpr 0x5605abd982d8 <col:38, col:52> 'unsigned long' sizeof 'int32_t':'int'
| | | |               |   |-CompoundStmt 0x5605abd9b3b0 <line:844:7, line:847:7>
| | | |               |   | |-DeclStmt 0x5605abd99540 <line:845:9, col:63>
| | | |               |   | | `-VarDecl 0x5605abd98370 <col:9, col:62> col:14 referenced __ival '_Int<int32_t>':'std::__compare::_Strong_order::_Int<int>' cinit
| | | |               |   | |   `-BuiltinBitCastExpr 0x5605abd98610 <col:23, col:62> '_Int<int32_t>':'std::__compare::_Strong_order::_Int<int>' <Dependent>
| | | |               |   | |     `-DeclRefExpr 0x5605abd985d0 <col:57> '_Tp' lvalue ParmVar 0x5605abd8aff8 '__val' '_Tp'
| | | |               |   | `-ReturnStmt 0x5605abd9b3a0 <line:846:9, col:56>
| | | |               |   |   `-CXXTemporaryObjectExpr 0x5605abd9b170 <col:16, col:56> '_Int<int16_t>':'std::__compare::_Strong_order::_Int<short>' 'void (short, uint64_t) noexcept'
| | | |               |   |     |-ImplicitCastExpr 0x5605abd9aea0 <col:30, col:37> 'short' <IntegralCast>
| | | |               |   |     | `-ImplicitCastExpr 0x5605abd9ae88 <col:30, col:37> 'int' <LValueToRValue>
| | | |               |   |     |   `-MemberExpr 0x5605abd99778 <col:30, col:37> 'int' lvalue ._M_hi 0x5605abd988d8
| | | |               |   |     |     `-DeclRefExpr 0x5605abd99740 <col:30> '_Int<int32_t>':'std::__compare::_Strong_order::_Int<int>' lvalue Var 0x5605abd98370 '__ival' '_Int<int32_t>':'std::__compare::_Strong_order::_Int<int>'
| | | |               |   |     `-ImplicitCastExpr 0x5605abd9aeb8 <col:44, col:51> 'uint64_t':'unsigned long' <LValueToRValue>
| | | |               |   |       `-MemberExpr 0x5605abd997c8 <col:44, col:51> 'uint64_t':'unsigned long' lvalue ._M_lo 0x5605abd98840
| | | |               |   |         `-DeclRefExpr 0x5605abd997a8 <col:44> '_Int<int32_t>':'std::__compare::_Strong_order::_Int<int>' lvalue Var 0x5605abd98370 '__ival' '_Int<int32_t>':'std::__compare::_Strong_order::_Int<int>'
| | | |               |   `-CompoundStmt 0x5605abd9c8e0 <line:849:7, line:852:7>
| | | |               |     |-DeclStmt 0x5605abd9c590 <line:850:9, col:63>
| | | |               |     | `-VarDecl 0x5605abd9b3f0 <col:9, col:62> col:14 referenced __ival '_Int<int64_t>':'std::__compare::_Strong_order::_Int<long>' cinit
| | | |               |     |   `-BuiltinBitCastExpr 0x5605abd9b660 <col:23, col:62> '_Int<int64_t>':'std::__compare::_Strong_order::_Int<long>' <Dependent>
| | | |               |     |     `-DeclRefExpr 0x5605abd9b620 <col:57> '_Tp' lvalue ParmVar 0x5605abd8aff8 '__val' '_Tp'
| | | |               |     `-ReturnStmt 0x5605abd9c8d0 <line:851:9, col:56>
| | | |               |       `-CXXTemporaryObjectExpr 0x5605abd9c7b0 <col:16, col:56> '_Int<int16_t>':'std::__compare::_Strong_order::_Int<short>' 'void (short, uint64_t) noexcept'
| | | |               |         |-ImplicitCastExpr 0x5605abd9c750 <col:30, col:37> 'short' <IntegralCast>
| | | |               |         | `-ImplicitCastExpr 0x5605abd9c738 <col:30, col:37> 'long' <LValueToRValue>
| | | |               |         |   `-MemberExpr 0x5605abd9c6b8 <col:30, col:37> 'long' lvalue ._M_hi 0x5605abd9b928
| | | |               |         |     `-DeclRefExpr 0x5605abd9c680 <col:30> '_Int<int64_t>':'std::__compare::_Strong_order::_Int<long>' lvalue Var 0x5605abd9b3f0 '__ival' '_Int<int64_t>':'std::__compare::_Strong_order::_Int<long>'
| | | |               |         `-ImplicitCastExpr 0x5605abd9c768 <col:44, col:51> 'uint64_t':'unsigned long' <LValueToRValue>
| | | |               |           `-MemberExpr 0x5605abd9c708 <col:44, col:51> 'uint64_t':'unsigned long' lvalue ._M_lo 0x5605abd9b890
| | | |               |             `-DeclRefExpr 0x5605abd9c6e8 <col:44> '_Int<int64_t>':'std::__compare::_Strong_order::_Int<long>' lvalue Var 0x5605abd9b3f0 '__ival' '_Int<int64_t>':'std::__compare::_Strong_order::_Int<long>'
| | | |               `-IfStmt 0x5605abda0e58 <line:854:13, line:864:44> has_else constexpr
| | | |                 |-BinaryOperator 0x5605abda0c98 <line:854:27, col:60> 'bool' '=='
| | | |                 | |-UnaryExprOrTypeTraitExpr 0x5605abda0bf0 <col:27, col:37> 'unsigned long' sizeof '_Tp'
| | | |                 | `-BinaryOperator 0x5605abda0c78 <col:42, col:60> 'unsigned long' '*'
| | | |                 |   |-ImplicitCastExpr 0x5605abda0c60 <col:42> 'unsigned long' <IntegralCast>
| | | |                 |   | `-IntegerLiteral 0x5605abda0c10 <col:42> 'int' 2
| | | |                 |   `-UnaryExprOrTypeTraitExpr 0x5605abda0c40 <col:46, col:60> 'unsigned long' sizeof 'int64_t':'long'
| | | |                 |-CompoundStmt 0x5605abda0d28 <line:855:3, line:861:3>
| | | |                 | `-ReturnStmt 0x5605abda0d18 <line:857:5, col:46>
| | | |                 |   `-BuiltinBitCastExpr 0x5605abda0cf0 <col:12, col:46> '__int128' <Dependent>
| | | |                 |     `-DeclRefExpr 0x5605abda0cb8 <col:41> '_Tp' lvalue ParmVar 0x5605abd8aff8 '__val' '_Tp'
| | | |                 `-DeclStmt 0x5605abda0e40 <line:863:3, line:864:44>
| | | |                   `-StaticAssertDecl 0x5605abda0e00 <line:863:3, line:864:43> line:863:3
| | | |                     |-BinaryOperator 0x5605abda0da0 <col:17, col:46> 'bool' '=='
| | | |                     | |-UnaryExprOrTypeTraitExpr 0x5605abda0d50 <col:17, col:27> 'unsigned long' sizeof '_Tp'
| | | |                     | `-UnaryExprOrTypeTraitExpr 0x5605abda0d80 <col:32, col:46> 'unsigned long' sizeof 'int64_t':'long'
| | | |                     `-StringLiteral 0x5605abda0dc0 <line:864:10> 'NULL TYPE' lvalue "unsupported floating-point type"
| | | |-FunctionTemplateDecl 0x5605abd8b660 <line:868:7, line:955:2> line:870:2 _S_fp_cmp
| | | | |-TemplateTypeParmDecl 0x5605abd8b318 <line:868:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | `-CXXMethodDecl 0x5605abd8b5b0 <line:869:2, line:955:2> line:870:2 constexpr _S_fp_cmp 'strong_ordering (_Tp, _Tp) noexcept' static implicit-inline
| | | |   |-ParmVarDecl 0x5605abd8b3d8 <col:12, col:16> col:16 referenced __x '_Tp'
| | | |   |-ParmVarDecl 0x5605abd8b458 <col:21, col:25> col:25 referenced __y '_Tp'
| | | |   `-CompoundStmt 0x5605abda3008 <line:871:2, line:955:2>
| | | |     |-DeclStmt 0x5605abda10a0 <line:885:4, col:31>
| | | |     | `-VarDecl 0x5605abda0fa8 <col:4, col:30> col:9 referenced __ix 'auto' cinit
| | | |     |   `-CallExpr 0x5605abda1078 <col:16, col:30> '<dependent type>'
| | | |     |     |-UnresolvedLookupExpr 0x5605abda1010 <col:16> '<overloaded function type>' lvalue (no ADL) = '_S_fp_bits' 0x5605abd8b1e8
| | | |     |     `-DeclRefExpr 0x5605abda1058 <col:27> '_Tp' lvalue ParmVar 0x5605abd8b3d8 '__x' '_Tp'
| | | |     |-DeclStmt 0x5605abda11d0 <line:886:4, col:31>
| | | |     | `-VarDecl 0x5605abda10d8 <col:4, col:30> col:9 referenced __iy 'auto' cinit
| | | |     |   `-CallExpr 0x5605abda11a8 <col:16, col:30> '<dependent type>'
| | | |     |     |-UnresolvedLookupExpr 0x5605abda1140 <col:16> '<overloaded function type>' lvalue (no ADL) = '_S_fp_bits' 0x5605abd8b1e8
| | | |     |     `-DeclRefExpr 0x5605abda1188 <col:27> '_Tp' lvalue ParmVar 0x5605abd8b458 '__y' '_Tp'
| | | |     |-IfStmt 0x5605abda1320 <line:888:4, line:889:30>
| | | |     | |-BinaryOperator 0x5605abda1258 <line:888:8, col:16> '<dependent type>' '=='
| | | |     | | |-DeclRefExpr 0x5605abda11e8 <col:8> 'auto' lvalue Var 0x5605abda0fa8 '__ix' 'auto'
| | | |     | | `-DeclRefExpr 0x5605abda1220 <col:16> 'auto' lvalue Var 0x5605abda10d8 '__iy' 'auto'
| | | |     | `-ReturnStmt 0x5605abda1310 <line:889:6, col:30>
| | | |     |   `-CXXConstructExpr 0x5605abda12e0 <col:13, col:30> 'strong_ordering':'std::strong_ordering' 'void (const strong_ordering &) noexcept'
| | | |     |     `-DeclRefExpr 0x5605abda12b0 <col:13, col:30> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68998 'equal' 'const strong_ordering':'const std::strong_ordering'
| | | |     |       `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | | |     |-DeclStmt 0x5605abda1720 <line:892:4, col:22>
| | | |     | `-UsingEnumDecl 0x5605abda1358 <col:4, col:15> col:15 Enum 0x5605abd86870 '_Fp_fmt'
| | | |     |-DeclStmt 0x5605abda1868 <line:894:4, col:43>
| | | |     | `-VarDecl 0x5605abda1758 <col:4, col:42> col:19 referenced __fmt 'const auto' constexpr cinit
| | | |     |   `-CallExpr 0x5605abda1848 <col:27, col:42> '<dependent type>'
| | | |     |     `-UnresolvedLookupExpr 0x5605abda17d0 <col:27, col:40> '<dependent type>' lvalue (no ADL) = '_S_fp_fmt' 0x5605abd86e70
| | | |     |       `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |     |         `-TemplateTypeParmType 0x5605abd8b370 '_Tp' dependent depth 0 index 0
| | | |     |           `-TemplateTypeParm 0x5605abd8b318 '_Tp'
| | | |     `-IfStmt 0x5605abda2fd8 <line:896:4, line:954:6> has_else constexpr
| | | |       |-BinaryOperator 0x5605abda18e0 <line:896:18, col:27> '<dependent type>' '=='
| | | |       | |-DeclRefExpr 0x5605abda1880 <col:18> 'const auto' lvalue Var 0x5605abda1758 '__fmt' 'const auto'
| | | |       | `-DeclRefExpr 0x5605abda18b8 <col:27> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86b98 '_Dbldbl' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abda1648 '_Dbldbl')
| | | |       |-CompoundStmt 0x5605abda2740 <line:897:6, line:920:6>
| | | |       | |-DeclStmt 0x5605abda1bd8 <line:900:8, col:57>
| | | |       | | `-CXXRecordDecl 0x5605abda1908 <col:8, col:56> col:15 referenced struct _Unpacked definition
| | | |       | |   |-DefinitionData aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | | |       | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |       | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |       | |   | |-MoveConstructor exists simple trivial needs_implicit
| | | |       | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |       | |   | |-MoveAssignment exists simple trivial needs_implicit
| | | |       | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |       | |   |-CXXRecordDecl 0x5605abda1a40 <col:8, col:15> col:15 implicit struct _Unpacked
| | | |       | |   |-FieldDecl 0x5605abda1b08 <col:27, col:34> col:34 _M_hi 'double'
| | | |       | |   `-FieldDecl 0x5605abda1b70 <col:41, col:49> col:49 _M_lo 'int64_t':'long'
| | | |       | |-DeclStmt 0x5605abda1d08 <line:901:8, col:54>
| | | |       | | `-VarDecl 0x5605abda1c10 <col:8, col:53> col:13 referenced __x2 'auto' cinit
| | | |       | |   `-BuiltinBitCastExpr 0x5605abda1ce0 <col:20, col:53> '_Unpacked' <Dependent>
| | | |       | |     `-DeclRefExpr 0x5605abda1cb0 <col:50> '_Tp' lvalue ParmVar 0x5605abd8b3d8 '__x' '_Tp'
| | | |       | |-DeclStmt 0x5605abda1e00 <line:902:8, col:54>
| | | |       | | `-VarDecl 0x5605abda1d40 <col:8, col:53> col:13 referenced __y2 'auto' cinit
| | | |       | |   `-BuiltinBitCastExpr 0x5605abda1dd8 <col:20, col:53> '_Unpacked' <Dependent>
| | | |       | |     `-DeclRefExpr 0x5605abda1da8 <col:50> '_Tp' lvalue ParmVar 0x5605abd8b458 '__y' '_Tp'
| | | |       | |-DeclStmt 0x5605abda2018 <line:905:8, col:54>
| | | |       | | `-VarDecl 0x5605abda1e38 <col:8, col:53> col:13 referenced __cmp 'auto' cinit
| | | |       | |   `-CallExpr 0x5605abda1fe8 <col:21, col:53> '<dependent type>'
| | | |       | |     |-UnresolvedLookupExpr 0x5605abda1ea0 <col:21> '<overloaded function type>' lvalue (no ADL) = '_S_fp_cmp' 0x5605abd8b660
| | | |       | |     |-CXXDependentScopeMemberExpr 0x5605abda1f20 <col:31, col:36> '<dependent type>' lvalue ._M_hi
| | | |       | |     | `-DeclRefExpr 0x5605abda1ee8 <col:31> 'auto' lvalue Var 0x5605abda1c10 '__x2' 'auto'
| | | |       | |     `-CXXDependentScopeMemberExpr 0x5605abda1fa0 <col:43, col:48> '<dependent type>' lvalue ._M_hi
| | | |       | |       `-DeclRefExpr 0x5605abda1f68 <col:43> 'auto' lvalue Var 0x5605abda1d40 '__y2' 'auto'
| | | |       | |-IfStmt 0x5605abda2140 <line:906:8, line:907:10>
| | | |       | | |-BinaryOperator 0x5605abda20d0 <line:906:12, col:38> '<dependent type>' '!='
| | | |       | | | |-DeclRefExpr 0x5605abda2030 <col:12> 'auto' lvalue Var 0x5605abda1e38 '__cmp' 'auto'
| | | |       | | | `-DeclRefExpr 0x5605abda20a0 <col:21, col:38> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68998 'equal' 'const strong_ordering':'const std::strong_ordering'
| | | |       | | |   `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | | |       | | `-ReturnStmt 0x5605abda2128 <line:907:3, col:10> nrvo_candidate(Var 0x5605abda1e38 '__cmp' 'auto')
| | | |       | |   `-ImplicitCastExpr 0x5605abda2110 <col:10> 'auto' xvalue <NoOp>
| | | |       | |     `-DeclRefExpr 0x5605abda20f0 <col:10> 'auto' lvalue Var 0x5605abda1e38 '__cmp' 'auto'
| | | |       | |-IfStmt 0x5605abda22b8 <line:911:8, line:912:27>
| | | |       | | |-CallExpr 0x5605abda21e8 <line:911:12, col:38> '<dependent type>'
| | | |       | | | |-DeclRefExpr 0x5605abda2160 <col:12> '<builtin fn type>' Function 0x5605abd7e780 '__builtin_isnan' 'int (...) noexcept'
| | | |       | | | `-CXXDependentScopeMemberExpr 0x5605abda21a0 <col:28, col:33> '<dependent type>' lvalue ._M_hi
| | | |       | | |   `-DeclRefExpr 0x5605abda2180 <col:28> 'auto' lvalue Var 0x5605abda1c10 '__x2' 'auto'
| | | |       | | `-ReturnStmt 0x5605abda22a8 <line:912:3, col:27>
| | | |       | |   `-CXXConstructExpr 0x5605abda2278 <col:10, col:27> 'strong_ordering':'std::strong_ordering' 'void (const strong_ordering &) noexcept'
| | | |       | |     `-DeclRefExpr 0x5605abda2248 <col:10, col:27> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68998 'equal' 'const strong_ordering':'const std::strong_ordering'
| | | |       | |       `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | | |       | |-IfStmt 0x5605abda2530 <line:915:8, line:916:27>
| | | |       | | |-BinaryOperator 0x5605abda2468 <line:915:12, col:67> '<dependent type>' '=='
| | | |       | | | |-ParenExpr 0x5605abda2428 <col:12, col:62> '<dependent type>'
| | | |       | | | | `-BinaryOperator 0x5605abda2408 <col:13, col:41> '<dependent type>' '&'
| | | |       | | | |   |-ParenExpr 0x5605abda23c8 <col:13, col:37> '<dependent type>'
| | | |       | | | |   | `-BinaryOperator 0x5605abda23a8 <col:14, col:32> '<dependent type>' '|'
| | | |       | | | |   |   |-CXXDependentScopeMemberExpr 0x5605abda22f8 <col:14, col:19> '<dependent type>' lvalue ._M_lo
| | | |       | | | |   |   | `-DeclRefExpr 0x5605abda22d8 <col:14> 'auto' lvalue Var 0x5605abda1c10 '__x2' 'auto'
| | | |       | | | |   |   `-CXXDependentScopeMemberExpr 0x5605abda2360 <col:27, col:32> '<dependent type>' lvalue ._M_lo
| | | |       | | | |   |     `-DeclRefExpr 0x5605abda2340 <col:27> 'auto' lvalue Var 0x5605abda1d40 '__y2' 'auto'
| | | |       | | | |   `-IntegerLiteral 0x5605abda23e8 <col:41> 'unsigned long long' 9223372036854775807
| | | |       | | | `-IntegerLiteral 0x5605abda2448 <col:67> 'int' 0
| | | |       | | `-ReturnStmt 0x5605abda2520 <line:916:3, col:27>
| | | |       | |   `-CXXConstructExpr 0x5605abda24f0 <col:10, col:27> 'strong_ordering':'std::strong_ordering' 'void (const strong_ordering &) noexcept'
| | | |       | |     `-DeclRefExpr 0x5605abda24c0 <col:10, col:27> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68998 'equal' 'const strong_ordering':'const std::strong_ordering'
| | | |       | |       `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | | |       | `-ReturnStmt 0x5605abda2730 <line:919:8, col:59>
| | | |       |   `-BinaryOperator 0x5605abda2710 <col:15, col:59> '<dependent type>' '<=>'
| | | |       |     |-CallExpr 0x5605abda2608 <col:15, col:34> '<dependent type>'
| | | |       |     | |-UnresolvedLookupExpr 0x5605abda2550 <col:15> '<overloaded function type>' lvalue (no ADL) = '_S_compl' 0x5605abd8aeb0 0x5605abd8aa08
| | | |       |     | `-CXXDependentScopeMemberExpr 0x5605abda25c0 <col:24, col:29> '<dependent type>' lvalue ._M_lo
| | | |       |     |   `-DeclRefExpr 0x5605abda25a0 <col:24> 'auto' lvalue Var 0x5605abda1c10 '__x2' 'auto'
| | | |       |     `-CallExpr 0x5605abda26e8 <col:40, col:59> '<dependent type>'
| | | |       |       |-UnresolvedLookupExpr 0x5605abda2630 <col:40> '<overloaded function type>' lvalue (no ADL) = '_S_compl' 0x5605abd8aeb0 0x5605abd8aa08
| | | |       |       `-CXXDependentScopeMemberExpr 0x5605abda26a0 <col:49, col:54> '<dependent type>' lvalue ._M_lo
| | | |       |         `-DeclRefExpr 0x5605abda2680 <col:49> 'auto' lvalue Var 0x5605abda1d40 '__y2' 'auto'
| | | |       `-CompoundStmt 0x5605abda2fb8 <line:922:6, line:954:6>
| | | |         |-IfStmt 0x5605abda2e28 <line:923:8, line:952:3> has_else constexpr
| | | |         | |-BinaryOperator 0x5605abda27d8 <line:923:22, col:31> '<dependent type>' '=='
| | | |         | | |-DeclRefExpr 0x5605abda2790 <col:22> 'const auto' lvalue Var 0x5605abda1758 '__fmt' 'const auto'
| | | |         | | `-DeclRefExpr 0x5605abda27b0 <col:31> 'std::__compare::_Strong_order::_Fp_fmt' EnumConstant 0x5605abd86b38 '_M68k_80bit' 'std::__compare::_Strong_order::_Fp_fmt' (UsingShadow 0x5605abda15d8 '_M68k_80bit')
| | | |         | |-CompoundStmt 0x5605abda2df0 <line:924:3, line:933:3>
| | | |         | | |-DeclStmt 0x5605abda2978 <line:928:5, col:41>
| | | |         | | | `-VarDecl 0x5605abda2878 <col:5, col:35> col:24 referenced __maxexp 'const uint16_t':'const unsigned short' constexpr cinit
| | | |         | | |   |-value: Int 32767
| | | |         | | |   `-ImplicitCastExpr 0x5605abda2900 <col:35> 'const uint16_t':'const unsigned short' <IntegralCast>
| | | |         | | |     `-IntegerLiteral 0x5605abda28e0 <col:35> 'int' 32767
| | | |         | | |-IfStmt 0x5605abda2b90 <line:929:5, line:930:29>
| | | |         | | | |-BinaryOperator 0x5605abda2a78 <line:929:9, col:36> '<dependent type>' '=='
| | | |         | | | | |-ParenExpr 0x5605abda2a38 <col:9, col:31> '<dependent type>'
| | | |         | | | | | `-BinaryOperator 0x5605abda2a18 <col:10, col:23> '<dependent type>' '&'
| | | |         | | | | |   |-CXXDependentScopeMemberExpr 0x5605abda29b0 <col:10, col:15> '<dependent type>' lvalue ._M_hi
| | | |         | | | | |   | `-DeclRefExpr 0x5605abda2990 <col:10> 'auto' lvalue Var 0x5605abda0fa8 '__ix' 'auto'
| | | |         | | | | |   `-DeclRefExpr 0x5605abda29f8 <col:23> 'const uint16_t':'const unsigned short' lvalue Var 0x5605abda2878 '__maxexp' 'const uint16_t':'const unsigned short'
| | | |         | | | | `-DeclRefExpr 0x5605abda2a58 <col:36> 'const uint16_t':'const unsigned short' lvalue Var 0x5605abda2878 '__maxexp' 'const uint16_t':'const unsigned short'
| | | |         | | | `-CompoundAssignOperator 0x5605abda2b60 <line:930:7, col:29> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |         | | |   |-CXXDependentScopeMemberExpr 0x5605abda2ab8 <col:7, col:12> '<dependent type>' lvalue ._M_lo
| | | |         | | |   | `-DeclRefExpr 0x5605abda2a98 <col:7> 'auto' lvalue Var 0x5605abda0fa8 '__ix' 'auto'
| | | |         | | |   `-BinaryOperator 0x5605abda2b40 <col:21, col:29> 'unsigned long long' '<<'
| | | |         | | |     |-IntegerLiteral 0x5605abda2b00 <col:21> 'unsigned long long' 1
| | | |         | | |     `-IntegerLiteral 0x5605abda2b20 <col:29> 'int' 63
| | | |         | | `-IfStmt 0x5605abda2dd0 <line:931:5, line:932:29>
| | | |         | |   |-BinaryOperator 0x5605abda2cb8 <line:931:9, col:36> '<dependent type>' '=='
| | | |         | |   | |-ParenExpr 0x5605abda2c78 <col:9, col:31> '<dependent type>'
| | | |         | |   | | `-BinaryOperator 0x5605abda2c58 <col:10, col:23> '<dependent type>' '&'
| | | |         | |   | |   |-CXXDependentScopeMemberExpr 0x5605abda2bf0 <col:10, col:15> '<dependent type>' lvalue ._M_hi
| | | |         | |   | |   | `-DeclRefExpr 0x5605abda2bb0 <col:10> 'auto' lvalue Var 0x5605abda10d8 '__iy' 'auto'
| | | |         | |   | |   `-DeclRefExpr 0x5605abda2c38 <col:23> 'const uint16_t':'const unsigned short' lvalue Var 0x5605abda2878 '__maxexp' 'const uint16_t':'const unsigned short'
| | | |         | |   | `-DeclRefExpr 0x5605abda2c98 <col:36> 'const uint16_t':'const unsigned short' lvalue Var 0x5605abda2878 '__maxexp' 'const uint16_t':'const unsigned short'
| | | |         | |   `-CompoundAssignOperator 0x5605abda2da0 <line:932:7, col:29> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | | |         | |     |-CXXDependentScopeMemberExpr 0x5605abda2cf8 <col:7, col:12> '<dependent type>' lvalue ._M_lo
| | | |         | |     | `-DeclRefExpr 0x5605abda2cd8 <col:7> 'auto' lvalue Var 0x5605abda10d8 '__iy' 'auto'
| | | |         | |     `-BinaryOperator 0x5605abda2d80 <col:21, col:29> 'unsigned long long' '<<'
| | | |         | |       |-IntegerLiteral 0x5605abda2d40 <col:21> 'unsigned long long' 1
| | | |         | |       `-IntegerLiteral 0x5605abda2d60 <col:29> 'int' 63
| | | |         | `-CompoundStmt 0x5605abda2e18 <line:935:3, line:952:3>
| | | |         `-ReturnStmt 0x5605abda2fa8 <line:953:8, col:47>
| | | |           `-BinaryOperator 0x5605abda2f88 <col:15, col:47> '<dependent type>' '<=>'
| | | |             |-CallExpr 0x5605abda2ec8 <col:15, col:28> '<dependent type>'
| | | |             | |-UnresolvedLookupExpr 0x5605abda2e58 <col:15> '<overloaded function type>' lvalue (no ADL) = '_S_compl' 0x5605abd8aeb0 0x5605abd8aa08
| | | |             | `-DeclRefExpr 0x5605abda2ea8 <col:24> 'auto' lvalue Var 0x5605abda0fa8 '__ix' 'auto'
| | | |             `-CallExpr 0x5605abda2f60 <col:34, col:47> '<dependent type>'
| | | |               |-UnresolvedLookupExpr 0x5605abda2ef0 <col:34> '<overloaded function type>' lvalue (no ADL) = '_S_compl' 0x5605abd8aeb0 0x5605abd8aa08
| | | |               `-DeclRefExpr 0x5605abda2f40 <col:43> 'auto' lvalue Var 0x5605abda10d8 '__iy' 'auto'
| | | |-AccessSpecDecl 0x5605abd8b6e8 <line:957:5, col:11> col:5 public
| | | |-FunctionTemplateDecl 0x5605abd8bec0 <line:958:7, line:972:2> line:961:2 operator()
| | | | |-TemplateTypeParmDecl 0x5605abd8b718 <line:958:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abd8b7d0 <col:30, col:53> col:53 referenced Concept 0x5605abd84bc0 '__decayed_same_as' depth 0 index 1 _Up
| | | | | `-ConceptSpecializationExpr 0x5605abd8b998 <col:30, col:51> 'bool' Concept 0x5605abd84bc0 '__decayed_same_as'
| | | | |   |-ImplicitConceptSpecializationDecl 0x5605abd8b8a8 <line:655:15> col:15
| | | | |   | |-TemplateArgument type 'type-parameter-0-1'
| | | | |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | |   | `-TemplateArgument type 'type-parameter-0-0'
| | | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | |   |-TemplateArgument <line:958:53> type '_Up':'type-parameter-0-1'
| | | | |   | `-TemplateTypeParmType 0x5605abd8b830 '_Up' dependent depth 0 index 1
| | | | |   |   `-TemplateTypeParm 0x5605abd8b7d0 '_Up'
| | | | |   `-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| | | | |     `-TemplateTypeParmType 0x5605abd8b770 '_Tp' dependent depth 0 index 0
| | | | |       `-TemplateTypeParm 0x5605abd8b718 '_Tp'
| | | | |-ConceptSpecializationExpr 0x5605abd8bb38 <line:959:11, col:38> 'bool' Concept 0x5605abd843f0 '__strongly_ordered'
| | | | | |-ImplicitConceptSpecializationDecl 0x5605abd8ba48 <line:649:15> col:15
| | | | | | |-TemplateArgument type 'type-parameter-0-0'
| | | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | | | `-TemplateArgument type 'type-parameter-0-1'
| | | | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | | |-TemplateArgument <line:959:30> type '_Tp':'type-parameter-0-0'
| | | | | | `-TemplateTypeParmType 0x5605abd8b770 '_Tp' dependent depth 0 index 0
| | | | | |   `-TemplateTypeParm 0x5605abd8b718 '_Tp'
| | | | | `-TemplateArgument <col:35> type '_Up':'type-parameter-0-1'
| | | | |   `-TemplateTypeParmType 0x5605abd8b830 '_Up' dependent depth 0 index 1
| | | | |     `-TemplateTypeParm 0x5605abd8b7d0 '_Up'
| | | | `-CXXMethodDecl 0x5605abd8be10 <line:960:2, line:972:2> line:961:2 constexpr operator() 'strong_ordering (_Tp &&, _Up &&) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
| | | |   |-ParmVarDecl 0x5605abd8bbd8 <col:28, col:34> col:34 referenced __e '_Tp &&'
| | | |   |-ParmVarDecl 0x5605abd8bc88 <col:39, col:45> col:45 referenced __f '_Up &&'
| | | |   |-CompoundStmt 0x5605abda3a28 <line:963:2, line:972:2>
| | | |   | `-IfStmt 0x5605abda39f8 <line:964:4, line:971:35> has_else constexpr
| | | |   |   |-ConceptSpecializationExpr 0x5605abda3330 <line:964:18, col:45> 'bool' Concept 0x5605abd195d8 'floating_point'
| | | |   |   | |-ImplicitConceptSpecializationDecl 0x5605abda3278 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:116:13> col:13
| | | |   |   | | `-TemplateArgument type 'typename decay<type-parameter-0-0>::type'
| | | |   |   | |   `-DependentNameType 0x5605abc662c0 'typename decay<type-parameter-0-0>::type' dependent
| | | |   |   | `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:964:33, <scratch space>:241:1> type 'decay_t<_Tp>':'typename decay<type-parameter-0-0>::type'
| | | |   |   |   `-ElaboratedType 0x5605abda3200 'decay_t<_Tp>' sugar dependent
| | | |   |   |     `-TemplateSpecializationType 0x5605abda31b0 'decay_t<_Tp>' sugar dependent alias
| | | |   |   |       |-name: 'decay_t':'std::decay_t' qualified
| | | |   |   |       | `-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| | | |   |   |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |   |   |       | `-TemplateTypeParmType 0x5605abd8b770 '_Tp' dependent depth 0 index 0
| | | |   |   |       |   `-TemplateTypeParm 0x5605abd8b718 '_Tp'
| | | |   |   |       `-DependentNameType 0x5605abda3160 'typename decay<_Tp>::type' dependent
| | | |   |   |-ReturnStmt 0x5605abda3410 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:965:6, col:31>
| | | |   |   | `-CallExpr 0x5605abda33e0 <col:13, col:31> '<dependent type>'
| | | |   |   |   |-UnresolvedLookupExpr 0x5605abda3358 <col:13> '<overloaded function type>' lvalue (no ADL) = '_S_fp_cmp' 0x5605abd8b660
| | | |   |   |   |-DeclRefExpr 0x5605abda33a0 <col:23> '_Tp' lvalue ParmVar 0x5605abd8bbd8 '__e' '_Tp &&'
| | | |   |   |   `-DeclRefExpr 0x5605abda33c0 <col:28> '_Up' lvalue ParmVar 0x5605abd8bc88 '__f' '_Up &&'
| | | |   |   `-IfStmt 0x5605abda39c8 <line:966:9, line:971:35> has_else constexpr
| | | |   |     |-ConceptSpecializationExpr 0x5605abda3538 <line:966:23, col:44> 'bool' Concept 0x5605abd809e0 '__adl_strong'
| | | |   |     | |-ImplicitConceptSpecializationDecl 0x5605abda3448 <line:618:15> col:15
| | | |   |     | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |     | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |     | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |     | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |     | |-TemplateArgument <line:966:36> type '_Tp':'type-parameter-0-0'
| | | |   |     | | `-TemplateTypeParmType 0x5605abd8b770 '_Tp' dependent depth 0 index 0
| | | |   |     | |   `-TemplateTypeParm 0x5605abd8b718 '_Tp'
| | | |   |     | `-TemplateArgument <col:41> type '_Up':'type-parameter-0-1'
| | | |   |     |   `-TemplateTypeParmType 0x5605abd8b830 '_Up' dependent depth 0 index 1
| | | |   |     |     `-TemplateTypeParm 0x5605abd8b7d0 '_Up'
| | | |   |     |-ReturnStmt 0x5605abda36d0 <line:967:6, line:968:31>
| | | |   |     | `-CXXUnresolvedConstructExpr 0x5605abda36a8 <line:967:13, line:968:31> 'strong_ordering':'std::strong_ordering' 'strong_ordering':'std::strong_ordering'
| | | |   |     |   `-CallExpr 0x5605abda3678 <line:967:29, line:968:30> '<dependent type>'
| | | |   |     |     |-UnresolvedLookupExpr 0x5605abda3570 <line:967:29> '<overloaded function type>' lvalue (ADL) = 'strong_order' 0x5605abd807d0
| | | |   |     |     |-CXXStaticCastExpr 0x5605abda35e8 <col:42, col:64> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |     |     | `-DeclRefExpr 0x5605abda35b8 <col:61> '_Tp' lvalue ParmVar 0x5605abd8bbd8 '__e' '_Tp &&'
| | | |   |     |     `-CXXStaticCastExpr 0x5605abda3648 <line:968:7, col:29> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |     |       `-DeclRefExpr 0x5605abda3618 <col:26> '_Up' lvalue ParmVar 0x5605abd8bc88 '__f' '_Up &&'
| | | |   |     `-IfStmt 0x5605abda39a8 <line:969:9, line:971:35> constexpr
| | | |   |       |-ConceptSpecializationExpr 0x5605abda3840 <line:969:23, col:58> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | | |   |       | |-ImplicitConceptSpecializationDecl 0x5605abda3718 <line:643:15> col:15
| | | |   |       | | |-TemplateArgument type 'std::strong_ordering'
| | | |   |       | | | `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | | |   |       | | |   `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | | |   |       | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |       | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |       | |-TemplateArgument <line:969:33> type 'strong_ordering':'std::strong_ordering'
| | | |   |       | | `-ElaboratedType 0x5605abd63f60 'strong_ordering' sugar
| | | |   |       | |   `-RecordType 0x5605abb6ae70 'std::strong_ordering'
| | | |   |       | |     `-CXXRecord 0x5605abd63ab0 'strong_ordering'
| | | |   |       | |-TemplateArgument <col:50> type '_Tp':'type-parameter-0-0'
| | | |   |       | | `-TemplateTypeParmType 0x5605abd8b770 '_Tp' dependent depth 0 index 0
| | | |   |       | |   `-TemplateTypeParm 0x5605abd8b718 '_Tp'
| | | |   |       | `-TemplateArgument <col:55> type '_Up':'type-parameter-0-1'
| | | |   |       |   `-TemplateTypeParmType 0x5605abd8b830 '_Up' dependent depth 0 index 1
| | | |   |       |     `-TemplateTypeParm 0x5605abd8b7d0 '_Up'
| | | |   |       `-ReturnStmt 0x5605abda3998 <line:970:6, line:971:35>
| | | |   |         `-CallExpr 0x5605abda3968 <line:970:13, line:971:35> '<dependent type>'
| | | |   |           |-CXXTemporaryObjectExpr 0x5605abda3878 <line:970:13, col:31> 'compare_three_way':'std::compare_three_way' 'void () noexcept' zeroing
| | | |   |           |-CXXStaticCastExpr 0x5605abda38d8 <col:33, col:55> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |           | `-DeclRefExpr 0x5605abda38a8 <col:52> '_Tp' lvalue ParmVar 0x5605abd8bbd8 '__e' '_Tp &&'
| | | |   |           `-CXXStaticCastExpr 0x5605abda3938 <line:971:12, col:34> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |             `-DeclRefExpr 0x5605abda3908 <col:31> '_Up' lvalue ParmVar 0x5605abd8bc88 '__f' '_Up &&'
| | | |   `-WarnUnusedResultAttr 0x5605abd8bf28 <line:961:15> nodiscard ""
| | | `-CXXDestructorDecl 0x5605abd8fbd8 <line:657:11> col:11 implicit referenced constexpr ~_Strong_order 'void () noexcept' inline default trivial
| | |-ConceptDecl 0x5605abda3c30 <line:975:5, line:980:34> line:976:15 __weakly_ordered
| | | |-TemplateTypeParmDecl 0x5605abda3af0 <line:975:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abda3b78 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-BinaryOperator 0x5605abda43e8 <line:977:4, line:980:34> 'bool' '||'
| | |   |-BinaryOperator 0x5605abda4288 <line:977:4, line:979:40> 'bool' '||'
| | |   | |-BinaryOperator 0x5605abda40e0 <line:977:4, line:978:26> 'bool' '||'
| | |   | | |-ConceptSpecializationExpr 0x5605abda3f60 <line:977:4, col:42> 'bool' Concept 0x5605abd195d8 'floating_point'
| | |   | | | |-ImplicitConceptSpecializationDecl 0x5605abda3ea8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:116:13> col:13
| | |   | | | | `-TemplateArgument type 'typename remove_reference<type-parameter-0-0>::type'
| | |   | | | |   `-DependentNameType 0x5605abc0d390 'typename remove_reference<type-parameter-0-0>::type' dependent
| | |   | | | `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:977:19, <scratch space>:242:1> type 'remove_reference_t<_Tp>':'typename remove_reference<type-parameter-0-0>::type'
| | |   | | |   `-ElaboratedType 0x5605abda3e30 'remove_reference_t<_Tp>' sugar dependent
| | |   | | |     `-TemplateSpecializationType 0x5605abda3de0 'remove_reference_t<_Tp>' sugar dependent alias
| | |   | | |       |-name: 'remove_reference_t':'std::remove_reference_t' qualified
| | |   | | |       | `-TypeAliasTemplateDecl 0x5605abc0d4a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:1732:3, line:1733:64> col:5 remove_reference_t
| | |   | | |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   | | |       | `-TemplateTypeParmType 0x5605abda3b40 '_Tp' dependent depth 0 index 0
| | |   | | |       |   `-TemplateTypeParm 0x5605abda3af0 '_Tp'
| | |   | | |       `-DependentNameType 0x5605abda3d90 'typename remove_reference<_Tp>::type' dependent
| | |   | | `-ConceptSpecializationExpr 0x5605abda40b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:978:7, col:26> 'bool' Concept 0x5605abd81030 '__adl_weak'
| | |   | |   |-ImplicitConceptSpecializationDecl 0x5605abda3fc8 <line:627:15> col:15
| | |   | |   | |-TemplateArgument type 'type-parameter-0-0'
| | |   | |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | |   | `-TemplateArgument type 'type-parameter-0-1'
| | |   | |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | |   |-TemplateArgument <line:978:18> type '_Tp':'type-parameter-0-0'
| | |   | |   | `-TemplateTypeParmType 0x5605abda3b40 '_Tp' dependent depth 0 index 0
| | |   | |   |   `-TemplateTypeParm 0x5605abda3af0 '_Tp'
| | |   | |   `-TemplateArgument <col:23> type '_Up':'type-parameter-0-1'
| | |   | |     `-TemplateTypeParmType 0x5605abda3bd0 '_Up' dependent depth 0 index 1
| | |   | |       `-TemplateTypeParm 0x5605abda3b78 '_Up'
| | |   | `-ConceptSpecializationExpr 0x5605abda4260 <line:979:7, col:40> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abda4138 <line:643:15> col:15
| | |   |   | |-TemplateArgument type 'std::weak_ordering'
| | |   |   | | `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | |   |   | |   `-CXXRecord 0x5605abb73028 'weak_ordering'
| | |   |   | |-TemplateArgument type 'type-parameter-0-0'
| | |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |   | `-TemplateArgument type 'type-parameter-0-1'
| | |   |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |   |-TemplateArgument <line:979:17> type 'weak_ordering':'std::weak_ordering'
| | |   |   | `-ElaboratedType 0x5605abb73570 'weak_ordering' sugar
| | |   |   |   `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | |   |   |     `-CXXRecord 0x5605abb73028 'weak_ordering'
| | |   |   |-TemplateArgument <col:32> type '_Tp':'type-parameter-0-0'
| | |   |   | `-TemplateTypeParmType 0x5605abda3b40 '_Tp' dependent depth 0 index 0
| | |   |   |   `-TemplateTypeParm 0x5605abda3af0 '_Tp'
| | |   |   `-TemplateArgument <col:37> type '_Up':'type-parameter-0-1'
| | |   |     `-TemplateTypeParmType 0x5605abda3bd0 '_Up' dependent depth 0 index 1
| | |   |       `-TemplateTypeParm 0x5605abda3b78 '_Up'
| | |   `-ConceptSpecializationExpr 0x5605abda43c0 <line:980:7, col:34> 'bool' Concept 0x5605abd843f0 '__strongly_ordered'
| | |     |-ImplicitConceptSpecializationDecl 0x5605abda42d0 <line:649:15> col:15
| | |     | |-TemplateArgument type 'type-parameter-0-0'
| | |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |     | `-TemplateArgument type 'type-parameter-0-1'
| | |     |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |     |-TemplateArgument <line:980:26> type '_Tp':'type-parameter-0-0'
| | |     | `-TemplateTypeParmType 0x5605abda3b40 '_Tp' dependent depth 0 index 0
| | |     |   `-TemplateTypeParm 0x5605abda3af0 '_Tp'
| | |     `-TemplateArgument <col:31> type '_Up':'type-parameter-0-1'
| | |       `-TemplateTypeParmType 0x5605abda3bd0 '_Up' dependent depth 0 index 1
| | |         `-TemplateTypeParm 0x5605abda3b78 '_Up'
| | |-CXXRecordDecl 0x5605abda4410 prev 0x5605abd85620 <line:982:5, line:1022:5> line:982:11 referenced class _Weak_order definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr
| | | |-CXXRecordDecl 0x5605abda4510 <col:5, col:11> col:11 implicit class _Weak_order
| | | |-FunctionTemplateDecl 0x5605abda4808 <line:984:7, line:998:2> line:986:2 _S_noexcept
| | | | |-TemplateTypeParmDecl 0x5605abda45c0 <line:984:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abda4648 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | `-CXXMethodDecl 0x5605abda4758 <line:985:2, line:998:2> line:986:2 constexpr _S_noexcept 'bool ()' static implicit-inline
| | | |   `-CompoundStmt 0x5605abd8efd0 <line:987:2, line:998:2>
| | | |     `-IfStmt 0x5605abd8efa0 <line:988:4, line:997:50> has_else constexpr
| | | |       |-ConceptSpecializationExpr 0x5605abd8e4e0 <line:988:18, col:45> 'bool' Concept 0x5605abd195d8 'floating_point'
| | | |       | |-ImplicitConceptSpecializationDecl 0x5605abd8e428 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:116:13> col:13
| | | |       | | `-TemplateArgument type 'typename decay<type-parameter-0-0>::type'
| | | |       | |   `-DependentNameType 0x5605abc662c0 'typename decay<type-parameter-0-0>::type' dependent
| | | |       | `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:988:33, <scratch space>:243:1> type 'decay_t<_Tp>':'typename decay<type-parameter-0-0>::type'
| | | |       |   `-ElaboratedType 0x5605abd8e3b0 'decay_t<_Tp>' sugar dependent
| | | |       |     `-TemplateSpecializationType 0x5605abd8e360 'decay_t<_Tp>' sugar dependent alias
| | | |       |       |-name: 'decay_t':'std::decay_t' qualified
| | | |       |       | `-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| | | |       |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |       |       | `-TemplateTypeParmType 0x5605abda4610 '_Tp' dependent depth 0 index 0
| | | |       |       |   `-TemplateTypeParm 0x5605abda45c0 '_Tp'
| | | |       |       `-DependentNameType 0x5605abd8e310 'typename decay<_Tp>::type' dependent
| | | |       |-ReturnStmt 0x5605abd8e518 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:989:6, col:13>
| | | |       | `-CXXBoolLiteralExpr 0x5605abd8e508 <col:13> 'bool' true
| | | |       `-IfStmt 0x5605abd8ef70 <line:990:9, line:997:50> has_else constexpr
| | | |         |-ConceptSpecializationExpr 0x5605abd8e640 <line:990:23, col:42> 'bool' Concept 0x5605abd81030 '__adl_weak'
| | | |         | |-ImplicitConceptSpecializationDecl 0x5605abd8e550 <line:627:15> col:15
| | | |         | | |-TemplateArgument type 'type-parameter-0-0'
| | | |         | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |         | | `-TemplateArgument type 'type-parameter-0-1'
| | | |         | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |         | |-TemplateArgument <line:990:34> type '_Tp':'type-parameter-0-0'
| | | |         | | `-TemplateTypeParmType 0x5605abda4610 '_Tp' dependent depth 0 index 0
| | | |         | |   `-TemplateTypeParm 0x5605abda45c0 '_Tp'
| | | |         | `-TemplateArgument <col:39> type '_Up':'type-parameter-0-1'
| | | |         |   `-TemplateTypeParmType 0x5605abda46a0 '_Up' dependent depth 0 index 1
| | | |         |     `-TemplateTypeParm 0x5605abda4648 '_Up'
| | | |         |-ReturnStmt 0x5605abd8e8c8 <line:991:6, line:992:33>
| | | |         | `-CXXNoexceptExpr 0x5605abd8e8a8 <line:991:13, line:992:33> 'bool'
| | | |         |   `-CXXUnresolvedConstructExpr 0x5605abd8e880 <line:991:22, line:992:32> 'weak_ordering':'std::weak_ordering' 'weak_ordering':'std::weak_ordering'
| | | |         |     `-CallExpr 0x5605abd8e850 <line:991:36, line:992:31> '<dependent type>'
| | | |         |       |-UnresolvedLookupExpr 0x5605abd8e678 <line:991:36> '<overloaded function type>' lvalue (ADL) = 'weak_order' 0x5605abd80e20
| | | |         |       |-CallExpr 0x5605abd8e768 <col:47, col:65> '<dependent type>'
| | | |         |       | `-UnresolvedLookupExpr 0x5605abd8e6f0 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |         |       |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |         |       |     `-TemplateTypeParmType 0x5605abda4610 '_Tp' dependent depth 0 index 0
| | | |         |       |       `-TemplateTypeParm 0x5605abda45c0 '_Tp'
| | | |         |       `-CallExpr 0x5605abd8e830 <line:992:12, col:30> '<dependent type>'
| | | |         |         `-UnresolvedLookupExpr 0x5605abd8e7b8 <col:12, col:28> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |         |           `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |         |             `-TemplateTypeParmType 0x5605abda46a0 '_Up' dependent depth 0 index 1
| | | |         |               `-TemplateTypeParm 0x5605abda4648 '_Up'
| | | |         `-IfStmt 0x5605abd8ef40 <line:993:9, line:997:50> has_else constexpr
| | | |           |-ConceptSpecializationExpr 0x5605abd8ea38 <line:993:23, col:56> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | | |           | |-ImplicitConceptSpecializationDecl 0x5605abd8e910 <line:643:15> col:15
| | | |           | | |-TemplateArgument type 'std::weak_ordering'
| | | |           | | | `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | | |           | | |   `-CXXRecord 0x5605abb73028 'weak_ordering'
| | | |           | | |-TemplateArgument type 'type-parameter-0-0'
| | | |           | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |           | | `-TemplateArgument type 'type-parameter-0-1'
| | | |           | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |           | |-TemplateArgument <line:993:33> type 'weak_ordering':'std::weak_ordering'
| | | |           | | `-ElaboratedType 0x5605abb73570 'weak_ordering' sugar
| | | |           | |   `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | | |           | |     `-CXXRecord 0x5605abb73028 'weak_ordering'
| | | |           | |-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| | | |           | | `-TemplateTypeParmType 0x5605abda4610 '_Tp' dependent depth 0 index 0
| | | |           | |   `-TemplateTypeParm 0x5605abda45c0 '_Tp'
| | | |           | `-TemplateArgument <col:53> type '_Up':'type-parameter-0-1'
| | | |           |   `-TemplateTypeParmType 0x5605abda46a0 '_Up' dependent depth 0 index 1
| | | |           |     `-TemplateTypeParm 0x5605abda4648 '_Up'
| | | |           |-ReturnStmt 0x5605abd8ec80 <line:994:6, line:995:27>
| | | |           | `-CXXNoexceptExpr 0x5605abd8ec60 <line:994:13, line:995:27> 'bool'
| | | |           |   `-CallExpr 0x5605abd8ec30 <line:994:22, line:995:26> '<dependent type>'
| | | |           |     |-CXXTemporaryObjectExpr 0x5605abd8ea70 <line:994:22, col:40> 'compare_three_way':'std::compare_three_way' 'void () noexcept' zeroing
| | | |           |     |-CallExpr 0x5605abd8eb48 <col:42, col:60> '<dependent type>'
| | | |           |     | `-UnresolvedLookupExpr 0x5605abd8ead0 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |           |     |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |           |     |     `-TemplateTypeParmType 0x5605abda4610 '_Tp' dependent depth 0 index 0
| | | |           |     |       `-TemplateTypeParm 0x5605abda45c0 '_Tp'
| | | |           |     `-CallExpr 0x5605abd8ec10 <line:995:7, col:25> '<dependent type>'
| | | |           |       `-UnresolvedLookupExpr 0x5605abd8eb98 <col:7, col:23> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |           |         `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |           |           `-TemplateTypeParmType 0x5605abda46a0 '_Up' dependent depth 0 index 1
| | | |           |             `-TemplateTypeParm 0x5605abda4648 '_Up'
| | | |           `-IfStmt 0x5605abd8ef20 <line:996:9, line:997:50> constexpr
| | | |             |-ConceptSpecializationExpr 0x5605abd8eda8 <line:996:23, col:50> 'bool' Concept 0x5605abd843f0 '__strongly_ordered'
| | | |             | |-ImplicitConceptSpecializationDecl 0x5605abd8ecb8 <line:649:15> col:15
| | | |             | | |-TemplateArgument type 'type-parameter-0-0'
| | | |             | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |             | | `-TemplateArgument type 'type-parameter-0-1'
| | | |             | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |             | |-TemplateArgument <line:996:42> type '_Tp':'type-parameter-0-0'
| | | |             | | `-TemplateTypeParmType 0x5605abda4610 '_Tp' dependent depth 0 index 0
| | | |             | |   `-TemplateTypeParm 0x5605abda45c0 '_Tp'
| | | |             | `-TemplateArgument <col:47> type '_Up':'type-parameter-0-1'
| | | |             |   `-TemplateTypeParmType 0x5605abda46a0 '_Up' dependent depth 0 index 1
| | | |             |     `-TemplateTypeParm 0x5605abda4648 '_Up'
| | | |             `-ReturnStmt 0x5605abd8ef10 <line:997:6, col:50>
| | | |               `-CallExpr 0x5605abd8eef0 <col:13, col:50> '<dependent type>'
| | | |                 `-UnresolvedLookupExpr 0x5605abd8ee58 <col:13, col:48> '<dependent type>' lvalue (no ADL) = '_S_noexcept' 0x5605abd855a8
| | | |                   |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |                   | `-TemplateTypeParmType 0x5605abda4610 '_Tp' dependent depth 0 index 0
| | | |                   |   `-TemplateTypeParm 0x5605abda45c0 '_Tp'
| | | |                   `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |                     `-TemplateTypeParmType 0x5605abda46a0 '_Up' dependent depth 0 index 1
| | | |                       `-TemplateTypeParm 0x5605abda4648 '_Up'
| | | |-FriendDecl 0x5605abda49c0 <line:1000:7, col:20> col:14 'class _Partial_order':'std::__compare::_Partial_order'
| | | | `-CXXRecordDecl 0x5605abda4880 parent 0x5605abd7b530 <col:14, col:20> col:20 friend_undeclared class _Partial_order
| | | |-FriendDecl 0x5605abda4b50 <line:1001:7, col:20> col:14 'class _Weak_fallback':'std::__compare::_Weak_fallback'
| | | | `-CXXRecordDecl 0x5605abda4a10 parent 0x5605abd7b530 <col:14, col:20> col:20 friend_undeclared class _Weak_fallback
| | | |-AccessSpecDecl 0x5605abda4ba0 <line:1003:5, col:11> col:5 public
| | | |-FunctionTemplateDecl 0x5605abd8dec0 <line:1004:7, line:1021:2> line:1007:2 operator()
| | | | |-TemplateTypeParmDecl 0x5605abd8d728 <line:1004:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abd8d7c8 <col:30, col:53> col:53 referenced Concept 0x5605abd84bc0 '__decayed_same_as' depth 0 index 1 _Up
| | | | | `-ConceptSpecializationExpr 0x5605abd8d998 <col:30, col:51> 'bool' Concept 0x5605abd84bc0 '__decayed_same_as'
| | | | |   |-ImplicitConceptSpecializationDecl 0x5605abd8d8a8 <line:655:15> col:15
| | | | |   | |-TemplateArgument type 'type-parameter-0-1'
| | | | |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | |   | `-TemplateArgument type 'type-parameter-0-0'
| | | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | |   |-TemplateArgument <line:1004:53> type '_Up':'type-parameter-0-1'
| | | | |   | `-TemplateTypeParmType 0x5605abd8d830 '_Up' dependent depth 0 index 1
| | | | |   |   `-TemplateTypeParm 0x5605abd8d7c8 '_Up'
| | | | |   `-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| | | | |     `-TemplateTypeParmType 0x5605abd8d780 '_Tp' dependent depth 0 index 0
| | | | |       `-TemplateTypeParm 0x5605abd8d728 '_Tp'
| | | | |-ConceptSpecializationExpr 0x5605abd8db38 <line:1005:11, col:36> 'bool' Concept 0x5605abda3c30 '__weakly_ordered'
| | | | | |-ImplicitConceptSpecializationDecl 0x5605abd8da48 <line:976:15> col:15
| | | | | | |-TemplateArgument type 'type-parameter-0-0'
| | | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | | | `-TemplateArgument type 'type-parameter-0-1'
| | | | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | | |-TemplateArgument <line:1005:28> type '_Tp':'type-parameter-0-0'
| | | | | | `-TemplateTypeParmType 0x5605abd8d780 '_Tp' dependent depth 0 index 0
| | | | | |   `-TemplateTypeParm 0x5605abd8d728 '_Tp'
| | | | | `-TemplateArgument <col:33> type '_Up':'type-parameter-0-1'
| | | | |   `-TemplateTypeParmType 0x5605abd8d830 '_Up' dependent depth 0 index 1
| | | | |     `-TemplateTypeParm 0x5605abd8d7c8 '_Up'
| | | | `-CXXMethodDecl 0x5605abd8de10 <line:1006:2, line:1021:2> line:1007:2 constexpr operator() 'weak_ordering (_Tp &&, _Up &&) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
| | | |   |-ParmVarDecl 0x5605abd8dbd8 <col:28, col:34> col:34 referenced __e '_Tp &&'
| | | |   |-ParmVarDecl 0x5605abd8dc88 <col:39, col:45> col:45 referenced __f '_Up &&'
| | | |   |-CompoundStmt 0x5605abd8feb8 <line:1009:2, line:1021:2>
| | | |   | `-IfStmt 0x5605abd8fe88 <line:1010:4, line:1020:31> has_else constexpr
| | | |   |   |-ConceptSpecializationExpr 0x5605abd8f2d0 <line:1010:18, col:45> 'bool' Concept 0x5605abd195d8 'floating_point'
| | | |   |   | |-ImplicitConceptSpecializationDecl 0x5605abd8f218 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:116:13> col:13
| | | |   |   | | `-TemplateArgument type 'typename decay<type-parameter-0-0>::type'
| | | |   |   | |   `-DependentNameType 0x5605abc662c0 'typename decay<type-parameter-0-0>::type' dependent
| | | |   |   | `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:1010:33, <scratch space>:244:1> type 'decay_t<_Tp>':'typename decay<type-parameter-0-0>::type'
| | | |   |   |   `-ElaboratedType 0x5605abd8f1a0 'decay_t<_Tp>' sugar dependent
| | | |   |   |     `-TemplateSpecializationType 0x5605abd8f150 'decay_t<_Tp>' sugar dependent alias
| | | |   |   |       |-name: 'decay_t':'std::decay_t' qualified
| | | |   |   |       | `-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| | | |   |   |       |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |   |   |       | `-TemplateTypeParmType 0x5605abd8d780 '_Tp' dependent depth 0 index 0
| | | |   |   |       |   `-TemplateTypeParm 0x5605abd8d728 '_Tp'
| | | |   |   |       `-DependentNameType 0x5605abd8f100 'typename decay<_Tp>::type' dependent
| | | |   |   |-ReturnStmt 0x5605abd8f3e8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:1011:6, col:51>
| | | |   |   | `-CallExpr 0x5605abd8f3b8 <col:13, col:51> '<dependent type>'
| | | |   |   |   |-UnresolvedLookupExpr 0x5605abd8f330 <col:13, col:24> '<overloaded function type>' lvalue (no ADL) = '__fp_weak_ordering' 0x5605abd7da88
| | | |   |   |   |-DeclRefExpr 0x5605abd8f378 <col:43> '_Tp' lvalue ParmVar 0x5605abd8dbd8 '__e' '_Tp &&'
| | | |   |   |   `-DeclRefExpr 0x5605abd8f398 <col:48> '_Up' lvalue ParmVar 0x5605abd8dc88 '__f' '_Up &&'
| | | |   |   `-IfStmt 0x5605abd8fe58 <line:1012:9, line:1020:31> has_else constexpr
| | | |   |     |-ConceptSpecializationExpr 0x5605abd8f510 <line:1012:23, col:42> 'bool' Concept 0x5605abd81030 '__adl_weak'
| | | |   |     | |-ImplicitConceptSpecializationDecl 0x5605abd8f420 <line:627:15> col:15
| | | |   |     | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |     | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |     | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |     | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |     | |-TemplateArgument <line:1012:34> type '_Tp':'type-parameter-0-0'
| | | |   |     | | `-TemplateTypeParmType 0x5605abd8d780 '_Tp' dependent depth 0 index 0
| | | |   |     | |   `-TemplateTypeParm 0x5605abd8d728 '_Tp'
| | | |   |     | `-TemplateArgument <col:39> type '_Up':'type-parameter-0-1'
| | | |   |     |   `-TemplateTypeParmType 0x5605abd8d830 '_Up' dependent depth 0 index 1
| | | |   |     |     `-TemplateTypeParm 0x5605abd8d7c8 '_Up'
| | | |   |     |-ReturnStmt 0x5605abd8f6a8 <line:1013:6, line:1014:34>
| | | |   |     | `-CXXUnresolvedConstructExpr 0x5605abd8f680 <line:1013:13, line:1014:34> 'weak_ordering':'std::weak_ordering' 'weak_ordering':'std::weak_ordering'
| | | |   |     |   `-CallExpr 0x5605abd8f650 <line:1013:27, line:1014:33> '<dependent type>'
| | | |   |     |     |-UnresolvedLookupExpr 0x5605abd8f548 <line:1013:27> '<overloaded function type>' lvalue (ADL) = 'weak_order' 0x5605abd80e20
| | | |   |     |     |-CXXStaticCastExpr 0x5605abd8f5c0 <col:38, col:60> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |     |     | `-DeclRefExpr 0x5605abd8f590 <col:57> '_Tp' lvalue ParmVar 0x5605abd8dbd8 '__e' '_Tp &&'
| | | |   |     |     `-CXXStaticCastExpr 0x5605abd8f620 <line:1014:10, col:32> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |     |       `-DeclRefExpr 0x5605abd8f5f0 <col:29> '_Up' lvalue ParmVar 0x5605abd8dc88 '__f' '_Up &&'
| | | |   |     `-IfStmt 0x5605abd8fe28 <line:1015:9, line:1020:31> has_else constexpr
| | | |   |       |-ConceptSpecializationExpr 0x5605abd8f860 <line:1015:23, col:56> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | | |   |       | |-ImplicitConceptSpecializationDecl 0x5605abd8f738 <line:643:15> col:15
| | | |   |       | | |-TemplateArgument type 'std::weak_ordering'
| | | |   |       | | | `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | | |   |       | | |   `-CXXRecord 0x5605abb73028 'weak_ordering'
| | | |   |       | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |       | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |       | |-TemplateArgument <line:1015:33> type 'weak_ordering':'std::weak_ordering'
| | | |   |       | | `-ElaboratedType 0x5605abb73570 'weak_ordering' sugar
| | | |   |       | |   `-RecordType 0x5605abb6ace0 'std::weak_ordering'
| | | |   |       | |     `-CXXRecord 0x5605abb73028 'weak_ordering'
| | | |   |       | |-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| | | |   |       | | `-TemplateTypeParmType 0x5605abd8d780 '_Tp' dependent depth 0 index 0
| | | |   |       | |   `-TemplateTypeParm 0x5605abd8d728 '_Tp'
| | | |   |       | `-TemplateArgument <col:53> type '_Up':'type-parameter-0-1'
| | | |   |       |   `-TemplateTypeParmType 0x5605abd8d830 '_Up' dependent depth 0 index 1
| | | |   |       |     `-TemplateTypeParm 0x5605abd8d7c8 '_Up'
| | | |   |       |-ReturnStmt 0x5605abd8f9b8 <line:1016:6, line:1017:35>
| | | |   |       | `-CallExpr 0x5605abd8f988 <line:1016:13, line:1017:35> '<dependent type>'
| | | |   |       |   |-CXXTemporaryObjectExpr 0x5605abd8f898 <line:1016:13, col:31> 'compare_three_way':'std::compare_three_way' 'void () noexcept' zeroing
| | | |   |       |   |-CXXStaticCastExpr 0x5605abd8f8f8 <col:33, col:55> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |       |   | `-DeclRefExpr 0x5605abd8f8c8 <col:52> '_Tp' lvalue ParmVar 0x5605abd8dbd8 '__e' '_Tp &&'
| | | |   |       |   `-CXXStaticCastExpr 0x5605abd8f958 <line:1017:12, col:34> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |       |     `-DeclRefExpr 0x5605abd8f928 <col:31> '_Up' lvalue ParmVar 0x5605abd8dc88 '__f' '_Up &&'
| | | |   |       `-IfStmt 0x5605abd8fe08 <line:1018:9, line:1020:31> constexpr
| | | |   |         |-ConceptSpecializationExpr 0x5605abd8fae0 <line:1018:23, col:50> 'bool' Concept 0x5605abd843f0 '__strongly_ordered'
| | | |   |         | |-ImplicitConceptSpecializationDecl 0x5605abd8f9f0 <line:649:15> col:15
| | | |   |         | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |         | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |         | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |         | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |         | |-TemplateArgument <line:1018:42> type '_Tp':'type-parameter-0-0'
| | | |   |         | | `-TemplateTypeParmType 0x5605abd8d780 '_Tp' dependent depth 0 index 0
| | | |   |         | |   `-TemplateTypeParm 0x5605abd8d728 '_Tp'
| | | |   |         | `-TemplateArgument <col:47> type '_Up':'type-parameter-0-1'
| | | |   |         |   `-TemplateTypeParmType 0x5605abd8d830 '_Up' dependent depth 0 index 1
| | | |   |         |     `-TemplateTypeParm 0x5605abd8d7c8 '_Up'
| | | |   |         `-ReturnStmt 0x5605abd8fdf8 <line:1019:6, line:1020:31>
| | | |   |           `-CallExpr 0x5605abd8fdc8 <line:1019:13, line:1020:31> '<dependent type>'
| | | |   |             |-CXXFunctionalCastExpr 0x5605abd8fce0 <line:1019:13, col:27> '_Strong_order':'std::__compare::_Strong_order' functional cast to _Strong_order <NoOp>
| | | |   |             | `-InitListExpr 0x5605abd8fb90 <col:26, col:27> '_Strong_order':'std::__compare::_Strong_order'
| | | |   |             |-CXXStaticCastExpr 0x5605abd8fd38 <col:29, col:51> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |             | `-DeclRefExpr 0x5605abd8fd08 <col:48> '_Tp' lvalue ParmVar 0x5605abd8dbd8 '__e' '_Tp &&'
| | | |   |             `-CXXStaticCastExpr 0x5605abd8fd98 <line:1020:8, col:30> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |               `-DeclRefExpr 0x5605abd8fd68 <col:27> '_Up' lvalue ParmVar 0x5605abd8dc88 '__f' '_Up &&'
| | | |   `-WarnUnusedResultAttr 0x5605abd8df28 <line:1007:15> nodiscard ""
| | | `-CXXDestructorDecl 0x5605abda5d08 <line:982:11> col:11 implicit referenced constexpr ~_Weak_order 'void () noexcept' inline default trivial
| | |-ConceptDecl 0x5605abd90050 <line:1024:5, line:1028:30> line:1025:15 __partially_ordered
| | | |-TemplateTypeParmDecl 0x5605abd8ff08 <line:1024:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abd8ff98 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-BinaryOperator 0x5605abd904d8 <line:1026:4, line:1028:30> 'bool' '||'
| | |   |-BinaryOperator 0x5605abd90378 <line:1026:4, line:1027:41> 'bool' '||'
| | |   | |-ConceptSpecializationExpr 0x5605abd901c8 <line:1026:4, col:26> 'bool' Concept 0x5605abd837c0 '__adl_partial'
| | |   | | |-ImplicitConceptSpecializationDecl 0x5605abd900d8 <line:636:15> col:15
| | |   | | | |-TemplateArgument type 'type-parameter-0-0'
| | |   | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | | | `-TemplateArgument type 'type-parameter-0-1'
| | |   | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | | |-TemplateArgument <line:1026:18> type '_Tp':'type-parameter-0-0'
| | |   | | | `-TemplateTypeParmType 0x5605abd8ff60 '_Tp' dependent depth 0 index 0
| | |   | | |   `-TemplateTypeParm 0x5605abd8ff08 '_Tp'
| | |   | | `-TemplateArgument <col:23> type '_Up':'type-parameter-0-1'
| | |   | |   `-TemplateTypeParmType 0x5605abd8fff0 '_Up' dependent depth 0 index 1
| | |   | |     `-TemplateTypeParm 0x5605abd8ff98 '_Up'
| | |   | `-ConceptSpecializationExpr 0x5605abd90350 <line:1027:5, col:41> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abd90228 <line:643:15> col:15
| | |   |   | |-TemplateArgument type 'std::partial_ordering'
| | |   |   | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |   |   | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | |   |   | |-TemplateArgument type 'type-parameter-0-0'
| | |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |   | `-TemplateArgument type 'type-parameter-0-1'
| | |   |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |   |-TemplateArgument <line:1027:15> type 'partial_ordering':'std::partial_ordering'
| | |   |   | `-ElaboratedType 0x5605abb6af80 'partial_ordering' sugar
| | |   |   |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | |   |   |     `-CXXRecord 0x5605abd39720 'partial_ordering'
| | |   |   |-TemplateArgument <col:33> type '_Tp':'type-parameter-0-0'
| | |   |   | `-TemplateTypeParmType 0x5605abd8ff60 '_Tp' dependent depth 0 index 0
| | |   |   |   `-TemplateTypeParm 0x5605abd8ff08 '_Tp'
| | |   |   `-TemplateArgument <col:38> type '_Up':'type-parameter-0-1'
| | |   |     `-TemplateTypeParmType 0x5605abd8fff0 '_Up' dependent depth 0 index 1
| | |   |       `-TemplateTypeParm 0x5605abd8ff98 '_Up'
| | |   `-ConceptSpecializationExpr 0x5605abd904b0 <line:1028:5, col:30> 'bool' Concept 0x5605abda3c30 '__weakly_ordered'
| | |     |-ImplicitConceptSpecializationDecl 0x5605abd903c0 <line:976:15> col:15
| | |     | |-TemplateArgument type 'type-parameter-0-0'
| | |     | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |     | `-TemplateArgument type 'type-parameter-0-1'
| | |     |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |     |-TemplateArgument <line:1028:22> type '_Tp':'type-parameter-0-0'
| | |     | `-TemplateTypeParmType 0x5605abd8ff60 '_Tp' dependent depth 0 index 0
| | |     |   `-TemplateTypeParm 0x5605abd8ff08 '_Tp'
| | |     `-TemplateArgument <col:27> type '_Up':'type-parameter-0-1'
| | |       `-TemplateTypeParmType 0x5605abd8fff0 '_Up' dependent depth 0 index 1
| | |         `-TemplateTypeParm 0x5605abd8ff98 '_Up'
| | |-CXXRecordDecl 0x5605abd90500 prev 0x5605abda4880 <line:1030:5, line:1065:5> line:1030:11 referenced class _Partial_order definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr
| | | |-CXXRecordDecl 0x5605abd90600 <col:5, col:11> col:11 implicit class _Partial_order
| | | |-FunctionTemplateDecl 0x5605abd908f8 <line:1032:7, line:1044:2> line:1034:2 _S_noexcept
| | | | |-TemplateTypeParmDecl 0x5605abd906b0 <line:1032:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abd90738 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | `-CXXMethodDecl 0x5605abd90848 <line:1033:2, line:1044:2> line:1034:2 constexpr _S_noexcept 'bool ()' static implicit-inline
| | | |   `-CompoundStmt 0x5605abda5560 <line:1035:2, line:1044:2>
| | | |     `-IfStmt 0x5605abda5530 <line:1036:4, line:1043:48> has_else constexpr
| | | |       |-ConceptSpecializationExpr 0x5605abda4c00 <line:1036:18, col:40> 'bool' Concept 0x5605abd837c0 '__adl_partial'
| | | |       | |-ImplicitConceptSpecializationDecl 0x5605abd91628 <line:636:15> col:15
| | | |       | | |-TemplateArgument type 'type-parameter-0-0'
| | | |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |       | | `-TemplateArgument type 'type-parameter-0-1'
| | | |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |       | |-TemplateArgument <line:1036:32> type '_Tp':'type-parameter-0-0'
| | | |       | | `-TemplateTypeParmType 0x5605abd90700 '_Tp' dependent depth 0 index 0
| | | |       | |   `-TemplateTypeParm 0x5605abd906b0 '_Tp'
| | | |       | `-TemplateArgument <col:37> type '_Up':'type-parameter-0-1'
| | | |       |   `-TemplateTypeParmType 0x5605abd90790 '_Up' dependent depth 0 index 1
| | | |       |     `-TemplateTypeParm 0x5605abd90738 '_Up'
| | | |       |-ReturnStmt 0x5605abda4e88 <line:1037:6, line:1038:30>
| | | |       | `-CXXNoexceptExpr 0x5605abda4e68 <line:1037:13, line:1038:30> 'bool'
| | | |       |   `-CXXUnresolvedConstructExpr 0x5605abda4e40 <line:1037:22, line:1038:29> 'partial_ordering':'std::partial_ordering' 'partial_ordering':'std::partial_ordering'
| | | |       |     `-CallExpr 0x5605abda4e10 <line:1037:39, line:1038:28> '<dependent type>'
| | | |       |       |-UnresolvedLookupExpr 0x5605abda4c38 <line:1037:39> '<overloaded function type>' lvalue (ADL) = 'partial_order' 0x5605abd81470
| | | |       |       |-CallExpr 0x5605abda4d28 <col:53, col:71> '<dependent type>'
| | | |       |       | `-UnresolvedLookupExpr 0x5605abda4cb0 <col:53, col:69> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |       |       |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |       |       |     `-TemplateTypeParmType 0x5605abd90700 '_Tp' dependent depth 0 index 0
| | | |       |       |       `-TemplateTypeParm 0x5605abd906b0 '_Tp'
| | | |       |       `-CallExpr 0x5605abda4df0 <line:1038:9, col:27> '<dependent type>'
| | | |       |         `-UnresolvedLookupExpr 0x5605abda4d78 <col:9, col:25> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |       |           `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |       |             `-TemplateTypeParmType 0x5605abd90790 '_Up' dependent depth 0 index 1
| | | |       |               `-TemplateTypeParm 0x5605abd90738 '_Up'
| | | |       `-IfStmt 0x5605abda5500 <line:1039:9, line:1043:48> has_else constexpr
| | | |         |-ConceptSpecializationExpr 0x5605abda4ff8 <line:1039:23, col:59> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | | |         | |-ImplicitConceptSpecializationDecl 0x5605abda4ed0 <line:643:15> col:15
| | | |         | | |-TemplateArgument type 'std::partial_ordering'
| | | |         | | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | |         | | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | |         | | |-TemplateArgument type 'type-parameter-0-0'
| | | |         | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |         | | `-TemplateArgument type 'type-parameter-0-1'
| | | |         | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |         | |-TemplateArgument <line:1039:33> type 'partial_ordering':'std::partial_ordering'
| | | |         | | `-ElaboratedType 0x5605abb6af80 'partial_ordering' sugar
| | | |         | |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | |         | |     `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | |         | |-TemplateArgument <col:51> type '_Tp':'type-parameter-0-0'
| | | |         | | `-TemplateTypeParmType 0x5605abd90700 '_Tp' dependent depth 0 index 0
| | | |         | |   `-TemplateTypeParm 0x5605abd906b0 '_Tp'
| | | |         | `-TemplateArgument <col:56> type '_Up':'type-parameter-0-1'
| | | |         |   `-TemplateTypeParmType 0x5605abd90790 '_Up' dependent depth 0 index 1
| | | |         |     `-TemplateTypeParm 0x5605abd90738 '_Up'
| | | |         |-ReturnStmt 0x5605abda5240 <line:1040:6, line:1041:27>
| | | |         | `-CXXNoexceptExpr 0x5605abda5220 <line:1040:13, line:1041:27> 'bool'
| | | |         |   `-CallExpr 0x5605abda51f0 <line:1040:22, line:1041:26> '<dependent type>'
| | | |         |     |-CXXTemporaryObjectExpr 0x5605abda5030 <line:1040:22, col:40> 'compare_three_way':'std::compare_three_way' 'void () noexcept' zeroing
| | | |         |     |-CallExpr 0x5605abda5108 <col:42, col:60> '<dependent type>'
| | | |         |     | `-UnresolvedLookupExpr 0x5605abda5090 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |         |     |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |         |     |     `-TemplateTypeParmType 0x5605abd90700 '_Tp' dependent depth 0 index 0
| | | |         |     |       `-TemplateTypeParm 0x5605abd906b0 '_Tp'
| | | |         |     `-CallExpr 0x5605abda51d0 <line:1041:7, col:25> '<dependent type>'
| | | |         |       `-UnresolvedLookupExpr 0x5605abda5158 <col:7, col:23> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |         |         `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |         |           `-TemplateTypeParmType 0x5605abd90790 '_Up' dependent depth 0 index 1
| | | |         |             `-TemplateTypeParm 0x5605abd90738 '_Up'
| | | |         `-IfStmt 0x5605abda54e0 <line:1042:9, line:1043:48> constexpr
| | | |           |-ConceptSpecializationExpr 0x5605abda5368 <line:1042:23, col:48> 'bool' Concept 0x5605abda3c30 '__weakly_ordered'
| | | |           | |-ImplicitConceptSpecializationDecl 0x5605abda5278 <line:976:15> col:15
| | | |           | | |-TemplateArgument type 'type-parameter-0-0'
| | | |           | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |           | | `-TemplateArgument type 'type-parameter-0-1'
| | | |           | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |           | |-TemplateArgument <line:1042:40> type '_Tp':'type-parameter-0-0'
| | | |           | | `-TemplateTypeParmType 0x5605abd90700 '_Tp' dependent depth 0 index 0
| | | |           | |   `-TemplateTypeParm 0x5605abd906b0 '_Tp'
| | | |           | `-TemplateArgument <col:45> type '_Up':'type-parameter-0-1'
| | | |           |   `-TemplateTypeParmType 0x5605abd90790 '_Up' dependent depth 0 index 1
| | | |           |     `-TemplateTypeParm 0x5605abd90738 '_Up'
| | | |           `-ReturnStmt 0x5605abda54d0 <line:1043:6, col:48>
| | | |             `-CallExpr 0x5605abda54b0 <col:13, col:48> '<dependent type>'
| | | |               `-UnresolvedLookupExpr 0x5605abda5418 <col:13, col:46> '<dependent type>' lvalue (no ADL) = '_S_noexcept' 0x5605abda4808
| | | |                 |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |                 | `-TemplateTypeParmType 0x5605abd90700 '_Tp' dependent depth 0 index 0
| | | |                 |   `-TemplateTypeParm 0x5605abd906b0 '_Tp'
| | | |                 `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |                   `-TemplateTypeParmType 0x5605abd90790 '_Up' dependent depth 0 index 1
| | | |                     `-TemplateTypeParm 0x5605abd90738 '_Up'
| | | |-FriendDecl 0x5605abd90ab0 <line:1046:7, col:20> col:14 'class _Partial_fallback':'std::__compare::_Partial_fallback'
| | | | `-CXXRecordDecl 0x5605abd90970 parent 0x5605abd7b530 <col:14, col:20> col:20 friend_undeclared class _Partial_fallback
| | | |-AccessSpecDecl 0x5605abd90b00 <line:1048:5, col:11> col:5 public
| | | |-FunctionTemplateDecl 0x5605abd912c0 <line:1049:7, line:1064:2> line:1052:2 operator()
| | | | |-TemplateTypeParmDecl 0x5605abd90b30 <line:1049:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abd90bc8 <col:30, col:53> col:53 referenced Concept 0x5605abd84bc0 '__decayed_same_as' depth 0 index 1 _Up
| | | | | `-ConceptSpecializationExpr 0x5605abd90d98 <col:30, col:51> 'bool' Concept 0x5605abd84bc0 '__decayed_same_as'
| | | | |   |-ImplicitConceptSpecializationDecl 0x5605abd90ca8 <line:655:15> col:15
| | | | |   | |-TemplateArgument type 'type-parameter-0-1'
| | | | |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | |   | `-TemplateArgument type 'type-parameter-0-0'
| | | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | |   |-TemplateArgument <line:1049:53> type '_Up':'type-parameter-0-1'
| | | | |   | `-TemplateTypeParmType 0x5605abd90c30 '_Up' dependent depth 0 index 1
| | | | |   |   `-TemplateTypeParm 0x5605abd90bc8 '_Up'
| | | | |   `-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| | | | |     `-TemplateTypeParmType 0x5605abd90b80 '_Tp' dependent depth 0 index 0
| | | | |       `-TemplateTypeParm 0x5605abd90b30 '_Tp'
| | | | |-ConceptSpecializationExpr 0x5605abd90f38 <line:1050:11, col:39> 'bool' Concept 0x5605abd90050 '__partially_ordered'
| | | | | |-ImplicitConceptSpecializationDecl 0x5605abd90e48 <line:1025:15> col:15
| | | | | | |-TemplateArgument type 'type-parameter-0-0'
| | | | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | | | `-TemplateArgument type 'type-parameter-0-1'
| | | | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | | | |-TemplateArgument <line:1050:31> type '_Tp':'type-parameter-0-0'
| | | | | | `-TemplateTypeParmType 0x5605abd90b80 '_Tp' dependent depth 0 index 0
| | | | | |   `-TemplateTypeParm 0x5605abd90b30 '_Tp'
| | | | | `-TemplateArgument <col:36> type '_Up':'type-parameter-0-1'
| | | | |   `-TemplateTypeParmType 0x5605abd90c30 '_Up' dependent depth 0 index 1
| | | | |     `-TemplateTypeParm 0x5605abd90bc8 '_Up'
| | | | `-CXXMethodDecl 0x5605abd91210 <line:1051:2, line:1064:2> line:1052:2 constexpr operator() 'partial_ordering (_Tp &&, _Up &&) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
| | | |   |-ParmVarDecl 0x5605abd90fd8 <col:28, col:34> col:34 referenced __e '_Tp &&'
| | | |   |-ParmVarDecl 0x5605abd91088 <col:39, col:45> col:45 referenced __f '_Up &&'
| | | |   |-CompoundStmt 0x5605abda5fb8 <line:1054:2, line:1064:2>
| | | |   | `-IfStmt 0x5605abda5f88 <line:1055:4, line:1063:29> has_else constexpr
| | | |   |   |-ConceptSpecializationExpr 0x5605abda5690 <line:1055:18, col:40> 'bool' Concept 0x5605abd837c0 '__adl_partial'
| | | |   |   | |-ImplicitConceptSpecializationDecl 0x5605abda55a0 <line:636:15> col:15
| | | |   |   | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |   | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |   | |-TemplateArgument <line:1055:32> type '_Tp':'type-parameter-0-0'
| | | |   |   | | `-TemplateTypeParmType 0x5605abd90b80 '_Tp' dependent depth 0 index 0
| | | |   |   | |   `-TemplateTypeParm 0x5605abd90b30 '_Tp'
| | | |   |   | `-TemplateArgument <col:37> type '_Up':'type-parameter-0-1'
| | | |   |   |   `-TemplateTypeParmType 0x5605abd90c30 '_Up' dependent depth 0 index 1
| | | |   |   |     `-TemplateTypeParm 0x5605abd90bc8 '_Up'
| | | |   |   |-ReturnStmt 0x5605abda5828 <line:1056:6, line:1057:33>
| | | |   |   | `-CXXUnresolvedConstructExpr 0x5605abda5800 <line:1056:13, line:1057:33> 'partial_ordering':'std::partial_ordering' 'partial_ordering':'std::partial_ordering'
| | | |   |   |   `-CallExpr 0x5605abda57d0 <line:1056:30, line:1057:32> '<dependent type>'
| | | |   |   |     |-UnresolvedLookupExpr 0x5605abda56c8 <line:1056:30> '<overloaded function type>' lvalue (ADL) = 'partial_order' 0x5605abd81470
| | | |   |   |     |-CXXStaticCastExpr 0x5605abda5740 <col:44, col:66> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |   |     | `-DeclRefExpr 0x5605abda5710 <col:63> '_Tp' lvalue ParmVar 0x5605abd90fd8 '__e' '_Tp &&'
| | | |   |   |     `-CXXStaticCastExpr 0x5605abda57a0 <line:1057:9, col:31> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |   |       `-DeclRefExpr 0x5605abda5770 <col:28> '_Up' lvalue ParmVar 0x5605abd91088 '__f' '_Up &&'
| | | |   |   `-IfStmt 0x5605abda5f58 <line:1058:9, line:1063:29> has_else constexpr
| | | |   |     |-ConceptSpecializationExpr 0x5605abda5998 <line:1058:23, col:59> 'bool' Concept 0x5605abd83db8 '__cmp3way'
| | | |   |     | |-ImplicitConceptSpecializationDecl 0x5605abda5870 <line:643:15> col:15
| | | |   |     | | |-TemplateArgument type 'std::partial_ordering'
| | | |   |     | | | `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | |   |     | | |   `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | |   |     | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |     | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |     | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |     | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |     | |-TemplateArgument <line:1058:33> type 'partial_ordering':'std::partial_ordering'
| | | |   |     | | `-ElaboratedType 0x5605abb6af80 'partial_ordering' sugar
| | | |   |     | |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
| | | |   |     | |     `-CXXRecord 0x5605abd39720 'partial_ordering'
| | | |   |     | |-TemplateArgument <col:51> type '_Tp':'type-parameter-0-0'
| | | |   |     | | `-TemplateTypeParmType 0x5605abd90b80 '_Tp' dependent depth 0 index 0
| | | |   |     | |   `-TemplateTypeParm 0x5605abd90b30 '_Tp'
| | | |   |     | `-TemplateArgument <col:56> type '_Up':'type-parameter-0-1'
| | | |   |     |   `-TemplateTypeParmType 0x5605abd90c30 '_Up' dependent depth 0 index 1
| | | |   |     |     `-TemplateTypeParm 0x5605abd90bc8 '_Up'
| | | |   |     |-ReturnStmt 0x5605abda5af0 <line:1059:6, line:1060:35>
| | | |   |     | `-CallExpr 0x5605abda5ac0 <line:1059:13, line:1060:35> '<dependent type>'
| | | |   |     |   |-CXXTemporaryObjectExpr 0x5605abda59d0 <line:1059:13, col:31> 'compare_three_way':'std::compare_three_way' 'void () noexcept' zeroing
| | | |   |     |   |-CXXStaticCastExpr 0x5605abda5a30 <col:33, col:55> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |     |   | `-DeclRefExpr 0x5605abda5a00 <col:52> '_Tp' lvalue ParmVar 0x5605abd90fd8 '__e' '_Tp &&'
| | | |   |     |   `-CXXStaticCastExpr 0x5605abda5a90 <line:1060:12, col:34> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |     |     `-DeclRefExpr 0x5605abda5a60 <col:31> '_Up' lvalue ParmVar 0x5605abd91088 '__f' '_Up &&'
| | | |   |     `-IfStmt 0x5605abda5f38 <line:1061:9, line:1063:29> constexpr
| | | |   |       |-ConceptSpecializationExpr 0x5605abda5c18 <line:1061:23, col:48> 'bool' Concept 0x5605abda3c30 '__weakly_ordered'
| | | |   |       | |-ImplicitConceptSpecializationDecl 0x5605abda5b28 <line:976:15> col:15
| | | |   |       | | |-TemplateArgument type 'type-parameter-0-0'
| | | |   |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   |       | | `-TemplateArgument type 'type-parameter-0-1'
| | | |   |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |   |       | |-TemplateArgument <line:1061:40> type '_Tp':'type-parameter-0-0'
| | | |   |       | | `-TemplateTypeParmType 0x5605abd90b80 '_Tp' dependent depth 0 index 0
| | | |   |       | |   `-TemplateTypeParm 0x5605abd90b30 '_Tp'
| | | |   |       | `-TemplateArgument <col:45> type '_Up':'type-parameter-0-1'
| | | |   |       |   `-TemplateTypeParmType 0x5605abd90c30 '_Up' dependent depth 0 index 1
| | | |   |       |     `-TemplateTypeParm 0x5605abd90bc8 '_Up'
| | | |   |       `-ReturnStmt 0x5605abda5f28 <line:1062:6, line:1063:29>
| | | |   |         `-CallExpr 0x5605abda5ef8 <line:1062:13, line:1063:29> '<dependent type>'
| | | |   |           |-CXXFunctionalCastExpr 0x5605abda5e10 <line:1062:13, col:25> '_Weak_order':'std::__compare::_Weak_order' functional cast to _Weak_order <NoOp>
| | | |   |           | `-InitListExpr 0x5605abda5cc0 <col:24, col:25> '_Weak_order':'std::__compare::_Weak_order'
| | | |   |           |-CXXStaticCastExpr 0x5605abda5e68 <col:27, col:49> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |   |           | `-DeclRefExpr 0x5605abda5e38 <col:46> '_Tp' lvalue ParmVar 0x5605abd90fd8 '__e' '_Tp &&'
| | | |   |           `-CXXStaticCastExpr 0x5605abda5ec8 <line:1063:6, col:28> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | | |   |             `-DeclRefExpr 0x5605abda5e98 <col:25> '_Up' lvalue ParmVar 0x5605abd91088 '__f' '_Up &&'
| | | |   `-WarnUnusedResultAttr 0x5605abd91328 <line:1052:15> nodiscard ""
| | | `-CXXDestructorDecl 0x5605abdac998 <line:1030:11> col:11 implicit referenced constexpr ~_Partial_order 'void () noexcept' inline default trivial
| | |-ConceptDecl 0x5605abda6150 <line:1067:5, line:1074:2> line:1068:15 __op_eq_lt
| | | |-TemplateTypeParmDecl 0x5605abda6008 <line:1067:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abda6098 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-RequiresExpr 0x5605abda6a88 <line:1068:28, line:1074:2> 'bool'
| | |   |-ParmVarDecl 0x5605abda61e8 <line:1068:37, col:43> col:43 referenced __t '_Tp &&'
| | |   |-ParmVarDecl 0x5605abda6298 <col:48, col:54> col:54 referenced __u '_Up &&'
| | |   |-CompoundRequirement 0x5605abda66d8 dependent
| | |   | |-BinaryOperator 0x5605abda6440 <line:1070:6, col:55> '<dependent type>' '=='
| | |   | | |-CXXStaticCastExpr 0x5605abda63b0 <col:6, col:28> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |   | | | `-DeclRefExpr 0x5605abda6380 <col:25> '_Tp' lvalue ParmVar 0x5605abda61e8 '__t' '_Tp &&' non_odr_use_unevaluated
| | |   | | `-CXXStaticCastExpr 0x5605abda6410 <col:33, col:55> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |   | |   `-DeclRefExpr 0x5605abda63e0 <col:52> '_Up' lvalue ParmVar 0x5605abda6298 '__u' '_Up &&' non_odr_use_unevaluated
| | |   | `-ConceptSpecializationExpr 0x5605abda6648 <line:1071:9, col:28> 'bool' Concept 0x5605abd14b90 'convertible_to'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abda6558 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:79:13> col:13
| | |   |   | |-TemplateArgument type 'type-parameter-1-0'
| | |   |   | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | |   |   | `-TemplateArgument type 'bool'
| | |   |   |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | |   |   |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| | |   |   | `-TemplateTypeParmType 0x5605abda64e0 'expr-type' dependent depth 1 index 0
| | |   |   |   `-TemplateTypeParm 0x5605abda6478 'expr-type'
| | |   |   `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:1071:24> type 'bool'
| | |   |     `-BuiltinType 0x5605aba9c9f0 'bool'
| | |   `-CompoundRequirement 0x5605abda6a58 dependent
| | |     |-BinaryOperator 0x5605abda67c8 <line:1072:6, col:54> '<dependent type>' '<'
| | |     | |-CXXStaticCastExpr 0x5605abda6738 <col:6, col:28> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |     | | `-DeclRefExpr 0x5605abda6708 <col:25> '_Tp' lvalue ParmVar 0x5605abda61e8 '__t' '_Tp &&' non_odr_use_unevaluated
| | |     | `-CXXStaticCastExpr 0x5605abda6798 <col:32, col:54> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |     |   `-DeclRefExpr 0x5605abda6768 <col:51> '_Up' lvalue ParmVar 0x5605abda6298 '__u' '_Up &&' non_odr_use_unevaluated
| | |     `-ConceptSpecializationExpr 0x5605abda69c8 <line:1073:9, col:28> 'bool' Concept 0x5605abd14b90 'convertible_to'
| | |       |-ImplicitConceptSpecializationDecl 0x5605abda68d8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:79:13> col:13
| | |       | |-TemplateArgument type 'type-parameter-1-0'
| | |       | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | |       | `-TemplateArgument type 'bool'
| | |       |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | |       |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| | |       | `-TemplateTypeParmType 0x5605abda6860 'expr-type' dependent depth 1 index 0
| | |       |   `-TemplateTypeParm 0x5605abda6800 'expr-type'
| | |       `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:1073:24> type 'bool'
| | |         `-BuiltinType 0x5605aba9c9f0 'bool'
| | |-CXXRecordDecl 0x5605abda6ae0 prev 0x5605abd866e8 <line:1076:5, line:1106:5> line:1076:11 referenced class _Strong_fallback definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abda6c18 <col:5, col:11> col:11 implicit class _Strong_fallback
| | | |-FunctionTemplateDecl 0x5605abda6f18 <line:1078:7, line:1087:2> line:1080:2 _S_noexcept
| | | | |-TemplateTypeParmDecl 0x5605abda6cc8 <line:1078:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abda6d58 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | `-CXXMethodDecl 0x5605abda6e68 <line:1079:2, line:1087:2> line:1080:2 constexpr _S_noexcept 'bool ()' static implicit-inline
| | | |   `-CompoundStmt 0x5605abda8230 <line:1081:2, line:1087:2>
| | | |     `-IfStmt 0x5605abda8200 <line:1082:4, line:1086:67> has_else constexpr
| | | |       |-ConceptSpecializationExpr 0x5605abda7c78 <line:1082:18, col:45> 'bool' Concept 0x5605abd843f0 '__strongly_ordered'
| | | |       | |-ImplicitConceptSpecializationDecl 0x5605abda7b88 <line:649:15> col:15
| | | |       | | |-TemplateArgument type 'type-parameter-0-0'
| | | |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |       | | `-TemplateArgument type 'type-parameter-0-1'
| | | |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |       | |-TemplateArgument <line:1082:37> type '_Tp':'type-parameter-0-0'
| | | |       | | `-TemplateTypeParmType 0x5605abda6d20 '_Tp' dependent depth 0 index 0
| | | |       | |   `-TemplateTypeParm 0x5605abda6cc8 '_Tp'
| | | |       | `-TemplateArgument <col:42> type '_Up':'type-parameter-0-1'
| | | |       |   `-TemplateTypeParmType 0x5605abda6db0 '_Up' dependent depth 0 index 1
| | | |       |     `-TemplateTypeParm 0x5605abda6d58 '_Up'
| | | |       |-ReturnStmt 0x5605abda7db0 <line:1083:6, col:50>
| | | |       | `-CallExpr 0x5605abda7d90 <col:13, col:50> '<dependent type>'
| | | |       |   `-UnresolvedLookupExpr 0x5605abda7cf8 <col:13, col:48> '<dependent type>' lvalue (no ADL) = '_S_noexcept' 0x5605abd855a8
| | | |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |       |     | `-TemplateTypeParmType 0x5605abda6d20 '_Tp' dependent depth 0 index 0
| | | |       |     |   `-TemplateTypeParm 0x5605abda6cc8 '_Tp'
| | | |       |     `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |       |       `-TemplateTypeParmType 0x5605abda6db0 '_Up' dependent depth 0 index 1
| | | |       |         `-TemplateTypeParm 0x5605abda6d58 '_Up'
| | | |       `-ReturnStmt 0x5605abda81f0 <line:1085:6, line:1086:67>
| | | |         `-BinaryOperator 0x5605abda81d0 <line:1085:13, line:1086:67> 'bool' '&&'
| | | |           |-CXXNoexceptExpr 0x5605abda7fa8 <line:1085:13, col:70> 'bool'
| | | |           | `-CXXUnresolvedConstructExpr 0x5605abda7f80 <col:22, col:69> 'bool' 'bool'
| | | |           |   `-BinaryOperator 0x5605abda7f60 <col:27, col:68> '<dependent type>' '=='
| | | |           |     |-CallExpr 0x5605abda7e78 <col:27, col:45> '<dependent type>'
| | | |           |     | `-UnresolvedLookupExpr 0x5605abda7e00 <col:27, col:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |           |     |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |           |     |     `-TemplateTypeParmType 0x5605abda6d20 '_Tp' dependent depth 0 index 0
| | | |           |     |       `-TemplateTypeParm 0x5605abda6cc8 '_Tp'
| | | |           |     `-CallExpr 0x5605abda7f40 <col:50, col:68> '<dependent type>'
| | | |           |       `-UnresolvedLookupExpr 0x5605abda7ec8 <col:50, col:66> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |           |         `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |           |           `-TemplateTypeParmType 0x5605abda6db0 '_Up' dependent depth 0 index 1
| | | |           |             `-TemplateTypeParm 0x5605abda6d58 '_Up'
| | | |           `-CXXNoexceptExpr 0x5605abda81b0 <line:1086:11, col:67> 'bool'
| | | |             `-CXXUnresolvedConstructExpr 0x5605abda8188 <col:20, col:66> 'bool' 'bool'
| | | |               `-BinaryOperator 0x5605abda8168 <col:25, col:65> '<dependent type>' '<'
| | | |                 |-CallExpr 0x5605abda8080 <col:25, col:43> '<dependent type>'
| | | |                 | `-UnresolvedLookupExpr 0x5605abda8008 <col:25, col:41> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |                 |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |                 |     `-TemplateTypeParmType 0x5605abda6d20 '_Tp' dependent depth 0 index 0
| | | |                 |       `-TemplateTypeParm 0x5605abda6cc8 '_Tp'
| | | |                 `-CallExpr 0x5605abda8148 <col:47, col:65> '<dependent type>'
| | | |                   `-UnresolvedLookupExpr 0x5605abda80d0 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |                     `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |                       `-TemplateTypeParmType 0x5605abda6db0 '_Up' dependent depth 0 index 1
| | | |                         `-TemplateTypeParm 0x5605abda6d58 '_Up'
| | | |-AccessSpecDecl 0x5605abda6f90 <line:1089:5, col:11> col:5 public
| | | `-FunctionTemplateDecl 0x5605abda7870 <line:1090:7, line:1105:2> line:1093:2 operator()
| | |   |-TemplateTypeParmDecl 0x5605abda6fc0 <line:1090:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | |   |-TemplateTypeParmDecl 0x5605abda7058 <col:30, col:53> col:53 referenced Concept 0x5605abd84bc0 '__decayed_same_as' depth 0 index 1 _Up
| | |   | `-ConceptSpecializationExpr 0x5605abda7228 <col:30, col:51> 'bool' Concept 0x5605abd84bc0 '__decayed_same_as'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abda7138 <line:655:15> col:15
| | |   |   | |-TemplateArgument type 'type-parameter-0-1'
| | |   |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |   | `-TemplateArgument type 'type-parameter-0-0'
| | |   |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |   |-TemplateArgument <line:1090:53> type '_Up':'type-parameter-0-1'
| | |   |   | `-TemplateTypeParmType 0x5605abda70c0 '_Up' dependent depth 0 index 1
| | |   |   |   `-TemplateTypeParm 0x5605abda7058 '_Up'
| | |   |   `-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| | |   |     `-TemplateTypeParmType 0x5605abda7010 '_Tp' dependent depth 0 index 0
| | |   |       `-TemplateTypeParm 0x5605abda6fc0 '_Tp'
| | |   |-BinaryOperator 0x5605abda7530 <line:1091:11, col:62> 'bool' '||'
| | |   | |-ConceptSpecializationExpr 0x5605abda73b0 <col:11, col:38> 'bool' Concept 0x5605abd843f0 '__strongly_ordered'
| | |   | | |-ImplicitConceptSpecializationDecl 0x5605abda72c0 <line:649:15> col:15
| | |   | | | |-TemplateArgument type 'type-parameter-0-0'
| | |   | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | | | `-TemplateArgument type 'type-parameter-0-1'
| | |   | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | | |-TemplateArgument <line:1091:30> type '_Tp':'type-parameter-0-0'
| | |   | | | `-TemplateTypeParmType 0x5605abda7010 '_Tp' dependent depth 0 index 0
| | |   | | |   `-TemplateTypeParm 0x5605abda6fc0 '_Tp'
| | |   | | `-TemplateArgument <col:35> type '_Up':'type-parameter-0-1'
| | |   | |   `-TemplateTypeParmType 0x5605abda70c0 '_Up' dependent depth 0 index 1
| | |   | |     `-TemplateTypeParm 0x5605abda7058 '_Up'
| | |   | `-ConceptSpecializationExpr 0x5605abda7508 <col:43, col:62> 'bool' Concept 0x5605abda6150 '__op_eq_lt'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abda7418 <line:1068:15> col:15
| | |   |   | |-TemplateArgument type 'type-parameter-0-0'
| | |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |   | `-TemplateArgument type 'type-parameter-0-1'
| | |   |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |   |-TemplateArgument <line:1091:54> type '_Tp':'type-parameter-0-0'
| | |   |   | `-TemplateTypeParmType 0x5605abda7010 '_Tp' dependent depth 0 index 0
| | |   |   |   `-TemplateTypeParm 0x5605abda6fc0 '_Tp'
| | |   |   `-TemplateArgument <col:59> type '_Up':'type-parameter-0-1'
| | |   |     `-TemplateTypeParmType 0x5605abda70c0 '_Up' dependent depth 0 index 1
| | |   |       `-TemplateTypeParm 0x5605abda7058 '_Up'
| | |   `-CXXMethodDecl 0x5605abda77c0 <line:1092:2, line:1105:2> line:1093:2 constexpr operator() 'strong_ordering (_Tp &&, _Up &&) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
| | |     |-ParmVarDecl 0x5605abda75c8 <col:28, col:34> col:34 referenced __e '_Tp &&'
| | |     |-ParmVarDecl 0x5605abda7678 <col:39, col:45> col:45 referenced __f '_Up &&'
| | |     |-CompoundStmt 0x5605abda88d8 <line:1095:2, line:1105:2>
| | |     | `-IfStmt 0x5605abda88a8 <line:1096:4, line:1104:27> has_else constexpr
| | |     |   |-ConceptSpecializationExpr 0x5605abda8360 <line:1096:18, col:45> 'bool' Concept 0x5605abd843f0 '__strongly_ordered'
| | |     |   | |-ImplicitConceptSpecializationDecl 0x5605abda8270 <line:649:15> col:15
| | |     |   | | |-TemplateArgument type 'type-parameter-0-0'
| | |     |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |     |   | | `-TemplateArgument type 'type-parameter-0-1'
| | |     |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |     |   | |-TemplateArgument <line:1096:37> type '_Tp':'type-parameter-0-0'
| | |     |   | | `-TemplateTypeParmType 0x5605abda7010 '_Tp' dependent depth 0 index 0
| | |     |   | |   `-TemplateTypeParm 0x5605abda6fc0 '_Tp'
| | |     |   | `-TemplateArgument <col:42> type '_Up':'type-parameter-0-1'
| | |     |   |   `-TemplateTypeParmType 0x5605abda70c0 '_Up' dependent depth 0 index 1
| | |     |   |     `-TemplateTypeParm 0x5605abda7058 '_Up'
| | |     |   |-ReturnStmt 0x5605abda8530 <line:1097:6, line:1098:31>
| | |     |   | `-CallExpr 0x5605abda8500 <line:1097:13, line:1098:31> '<dependent type>'
| | |     |   |   |-CXXFunctionalCastExpr 0x5605abda8418 <line:1097:13, col:27> '_Strong_order':'std::__compare::_Strong_order' functional cast to _Strong_order <NoOp>
| | |     |   |   | `-InitListExpr 0x5605abda83d8 <col:26, col:27> '_Strong_order':'std::__compare::_Strong_order'
| | |     |   |   |-CXXStaticCastExpr 0x5605abda8470 <col:29, col:51> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |     |   |   | `-DeclRefExpr 0x5605abda8440 <col:48> '_Tp' lvalue ParmVar 0x5605abda75c8 '__e' '_Tp &&'
| | |     |   |   `-CXXStaticCastExpr 0x5605abda84d0 <line:1098:8, col:30> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |     |   |     `-DeclRefExpr 0x5605abda84a0 <col:27> '_Up' lvalue ParmVar 0x5605abda7678 '__f' '_Up &&'
| | |     |   `-ReturnStmt 0x5605abda8898 <line:1100:6, line:1104:27>
| | |     |     `-ConditionalOperator 0x5605abda8868 <line:1100:13, line:1104:27> '<dependent type>'
| | |     |       |-BinaryOperator 0x5605abda8600 <line:1100:13, col:62> '<dependent type>' '=='
| | |     |       | |-CXXStaticCastExpr 0x5605abda8570 <col:13, col:35> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |     |       | | `-DeclRefExpr 0x5605abda8540 <col:32> '_Tp' lvalue ParmVar 0x5605abda75c8 '__e' '_Tp &&'
| | |     |       | `-CXXStaticCastExpr 0x5605abda85d0 <col:40, col:62> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |     |       |   `-DeclRefExpr 0x5605abda85a0 <col:59> '_Up' lvalue ParmVar 0x5605abda7678 '__f' '_Up &&'
| | |     |       |-DeclRefExpr 0x5605abda8658 <line:1101:10, col:27> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68998 'equal' 'const strong_ordering':'const std::strong_ordering'
| | |     |       | `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | |     |       `-ConditionalOperator 0x5605abda8838 <line:1102:10, line:1104:27> '<dependent type>'
| | |     |         |-BinaryOperator 0x5605abda8748 <line:1102:10, col:58> '<dependent type>' '<'
| | |     |         | |-CXXStaticCastExpr 0x5605abda86b8 <col:10, col:32> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |     |         | | `-DeclRefExpr 0x5605abda8688 <col:29> '_Tp' lvalue ParmVar 0x5605abda75c8 '__e' '_Tp &&'
| | |     |         | `-CXXStaticCastExpr 0x5605abda8718 <col:36, col:58> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |     |         |   `-DeclRefExpr 0x5605abda86e8 <col:55> '_Up' lvalue ParmVar 0x5605abda7678 '__f' '_Up &&'
| | |     |         |-DeclRefExpr 0x5605abda87a0 <line:1103:10, col:27> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68710 'less' 'const strong_ordering':'const std::strong_ordering'
| | |     |         | `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | |     |         `-DeclRefExpr 0x5605abda8808 <line:1104:10, col:27> 'const strong_ordering':'const std::strong_ordering' lvalue Var 0x5605abd68e38 'greater' 'const strong_ordering':'const std::strong_ordering'
| | |     |           `-NestedNameSpecifier TypeSpec 'std::strong_ordering'
| | |     `-WarnUnusedResultAttr 0x5605abda78d8 <line:1093:15> nodiscard ""
| | |-CXXRecordDecl 0x5605abda8928 prev 0x5605abda4a10 <line:1108:5, line:1138:5> line:1108:11 referenced class _Weak_fallback definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abda8a28 <col:5, col:11> col:11 implicit class _Weak_fallback
| | | |-FunctionTemplateDecl 0x5605abda8d58 <line:1110:7, line:1119:2> line:1112:2 _S_noexcept
| | | | |-TemplateTypeParmDecl 0x5605abda8ad8 <line:1110:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | | |-TemplateTypeParmDecl 0x5605abda8b68 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | | `-CXXMethodDecl 0x5605abda8ca8 <line:1111:2, line:1119:2> line:1112:2 constexpr _S_noexcept 'bool ()' static implicit-inline
| | | |   `-CompoundStmt 0x5605abdaa060 <line:1113:2, line:1119:2>
| | | |     `-IfStmt 0x5605abdaa030 <line:1114:4, line:1118:67> has_else constexpr
| | | |       |-ConceptSpecializationExpr 0x5605abda9aa8 <line:1114:18, col:43> 'bool' Concept 0x5605abda3c30 '__weakly_ordered'
| | | |       | |-ImplicitConceptSpecializationDecl 0x5605abda99b8 <line:976:15> col:15
| | | |       | | |-TemplateArgument type 'type-parameter-0-0'
| | | |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |       | | `-TemplateArgument type 'type-parameter-0-1'
| | | |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | | |       | |-TemplateArgument <line:1114:35> type '_Tp':'type-parameter-0-0'
| | | |       | | `-TemplateTypeParmType 0x5605abda8b30 '_Tp' dependent depth 0 index 0
| | | |       | |   `-TemplateTypeParm 0x5605abda8ad8 '_Tp'
| | | |       | `-TemplateArgument <col:40> type '_Up':'type-parameter-0-1'
| | | |       |   `-TemplateTypeParmType 0x5605abda8bc0 '_Up' dependent depth 0 index 1
| | | |       |     `-TemplateTypeParm 0x5605abda8b68 '_Up'
| | | |       |-ReturnStmt 0x5605abda9be0 <line:1115:6, col:48>
| | | |       | `-CallExpr 0x5605abda9bc0 <col:13, col:48> '<dependent type>'
| | | |       |   `-UnresolvedLookupExpr 0x5605abda9b28 <col:13, col:46> '<dependent type>' lvalue (no ADL) = '_S_noexcept' 0x5605abda4808
| | | |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |       |     | `-TemplateTypeParmType 0x5605abda8b30 '_Tp' dependent depth 0 index 0
| | | |       |     |   `-TemplateTypeParm 0x5605abda8ad8 '_Tp'
| | | |       |     `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |       |       `-TemplateTypeParmType 0x5605abda8bc0 '_Up' dependent depth 0 index 1
| | | |       |         `-TemplateTypeParm 0x5605abda8b68 '_Up'
| | | |       `-ReturnStmt 0x5605abdaa020 <line:1117:6, line:1118:67>
| | | |         `-BinaryOperator 0x5605abdaa000 <line:1117:13, line:1118:67> 'bool' '&&'
| | | |           |-CXXNoexceptExpr 0x5605abda9dd8 <line:1117:13, col:70> 'bool'
| | | |           | `-CXXUnresolvedConstructExpr 0x5605abda9db0 <col:22, col:69> 'bool' 'bool'
| | | |           |   `-BinaryOperator 0x5605abda9d90 <col:27, col:68> '<dependent type>' '=='
| | | |           |     |-CallExpr 0x5605abda9ca8 <col:27, col:45> '<dependent type>'
| | | |           |     | `-UnresolvedLookupExpr 0x5605abda9c30 <col:27, col:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |           |     |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |           |     |     `-TemplateTypeParmType 0x5605abda8b30 '_Tp' dependent depth 0 index 0
| | | |           |     |       `-TemplateTypeParm 0x5605abda8ad8 '_Tp'
| | | |           |     `-CallExpr 0x5605abda9d70 <col:50, col:68> '<dependent type>'
| | | |           |       `-UnresolvedLookupExpr 0x5605abda9cf8 <col:50, col:66> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |           |         `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |           |           `-TemplateTypeParmType 0x5605abda8bc0 '_Up' dependent depth 0 index 1
| | | |           |             `-TemplateTypeParm 0x5605abda8b68 '_Up'
| | | |           `-CXXNoexceptExpr 0x5605abda9fe0 <line:1118:11, col:67> 'bool'
| | | |             `-CXXUnresolvedConstructExpr 0x5605abda9fb8 <col:20, col:66> 'bool' 'bool'
| | | |               `-BinaryOperator 0x5605abda9f98 <col:25, col:65> '<dependent type>' '<'
| | | |                 |-CallExpr 0x5605abda9eb0 <col:25, col:43> '<dependent type>'
| | | |                 | `-UnresolvedLookupExpr 0x5605abda9e38 <col:25, col:41> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |                 |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | | |                 |     `-TemplateTypeParmType 0x5605abda8b30 '_Tp' dependent depth 0 index 0
| | | |                 |       `-TemplateTypeParm 0x5605abda8ad8 '_Tp'
| | | |                 `-CallExpr 0x5605abda9f78 <col:47, col:65> '<dependent type>'
| | | |                   `-UnresolvedLookupExpr 0x5605abda9f00 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| | | |                     `-TemplateArgument type '_Up':'type-parameter-0-1'
| | | |                       `-TemplateTypeParmType 0x5605abda8bc0 '_Up' dependent depth 0 index 1
| | | |                         `-TemplateTypeParm 0x5605abda8b68 '_Up'
| | | |-AccessSpecDecl 0x5605abda8dd0 <line:1121:5, col:11> col:5 public
| | | `-FunctionTemplateDecl 0x5605abda96a0 <line:1122:7, line:1137:2> line:1125:2 operator()
| | |   |-TemplateTypeParmDecl 0x5605abda8e00 <line:1122:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | |   |-TemplateTypeParmDecl 0x5605abda8e98 <col:30, col:53> col:53 referenced Concept 0x5605abd84bc0 '__decayed_same_as' depth 0 index 1 _Up
| | |   | `-ConceptSpecializationExpr 0x5605abda9068 <col:30, col:51> 'bool' Concept 0x5605abd84bc0 '__decayed_same_as'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abda8f78 <line:655:15> col:15
| | |   |   | |-TemplateArgument type 'type-parameter-0-1'
| | |   |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |   | `-TemplateArgument type 'type-parameter-0-0'
| | |   |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |   |-TemplateArgument <line:1122:53> type '_Up':'type-parameter-0-1'
| | |   |   | `-TemplateTypeParmType 0x5605abda8f00 '_Up' dependent depth 0 index 1
| | |   |   |   `-TemplateTypeParm 0x5605abda8e98 '_Up'
| | |   |   `-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| | |   |     `-TemplateTypeParmType 0x5605abda8e50 '_Tp' dependent depth 0 index 0
| | |   |       `-TemplateTypeParm 0x5605abda8e00 '_Tp'
| | |   |-BinaryOperator 0x5605abda9358 <line:1123:11, col:60> 'bool' '||'
| | |   | |-ConceptSpecializationExpr 0x5605abda91f0 <col:11, col:36> 'bool' Concept 0x5605abda3c30 '__weakly_ordered'
| | |   | | |-ImplicitConceptSpecializationDecl 0x5605abda9100 <line:976:15> col:15
| | |   | | | |-TemplateArgument type 'type-parameter-0-0'
| | |   | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | | | `-TemplateArgument type 'type-parameter-0-1'
| | |   | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | | |-TemplateArgument <line:1123:28> type '_Tp':'type-parameter-0-0'
| | |   | | | `-TemplateTypeParmType 0x5605abda8e50 '_Tp' dependent depth 0 index 0
| | |   | | |   `-TemplateTypeParm 0x5605abda8e00 '_Tp'
| | |   | | `-TemplateArgument <col:33> type '_Up':'type-parameter-0-1'
| | |   | |   `-TemplateTypeParmType 0x5605abda8f00 '_Up' dependent depth 0 index 1
| | |   | |     `-TemplateTypeParm 0x5605abda8e98 '_Up'
| | |   | `-ConceptSpecializationExpr 0x5605abda9330 <col:41, col:60> 'bool' Concept 0x5605abda6150 '__op_eq_lt'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abda9240 <line:1068:15> col:15
| | |   |   | |-TemplateArgument type 'type-parameter-0-0'
| | |   |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |   | `-TemplateArgument type 'type-parameter-0-1'
| | |   |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   |   |-TemplateArgument <line:1123:52> type '_Tp':'type-parameter-0-0'
| | |   |   | `-TemplateTypeParmType 0x5605abda8e50 '_Tp' dependent depth 0 index 0
| | |   |   |   `-TemplateTypeParm 0x5605abda8e00 '_Tp'
| | |   |   `-TemplateArgument <col:57> type '_Up':'type-parameter-0-1'
| | |   |     `-TemplateTypeParmType 0x5605abda8f00 '_Up' dependent depth 0 index 1
| | |   |       `-TemplateTypeParm 0x5605abda8e98 '_Up'
| | |   `-CXXMethodDecl 0x5605abda95f0 <line:1124:2, line:1137:2> line:1125:2 constexpr operator() 'weak_ordering (_Tp &&, _Up &&) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
| | |     |-ParmVarDecl 0x5605abda93f8 <col:28, col:34> col:34 referenced __e '_Tp &&'
| | |     |-ParmVarDecl 0x5605abda94a8 <col:39, col:45> col:45 referenced __f '_Up &&'
| | |     |-CompoundStmt 0x5605abdaa708 <line:1127:2, line:1137:2>
| | |     | `-IfStmt 0x5605abdaa6d8 <line:1128:4, line:1136:25> has_else constexpr
| | |     |   |-ConceptSpecializationExpr 0x5605abdaa190 <line:1128:18, col:43> 'bool' Concept 0x5605abda3c30 '__weakly_ordered'
| | |     |   | |-ImplicitConceptSpecializationDecl 0x5605abdaa0a0 <line:976:15> col:15
| | |     |   | | |-TemplateArgument type 'type-parameter-0-0'
| | |     |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |     |   | | `-TemplateArgument type 'type-parameter-0-1'
| | |     |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |     |   | |-TemplateArgument <line:1128:35> type '_Tp':'type-parameter-0-0'
| | |     |   | | `-TemplateTypeParmType 0x5605abda8e50 '_Tp' dependent depth 0 index 0
| | |     |   | |   `-TemplateTypeParm 0x5605abda8e00 '_Tp'
| | |     |   | `-TemplateArgument <col:40> type '_Up':'type-parameter-0-1'
| | |     |   |   `-TemplateTypeParmType 0x5605abda8f00 '_Up' dependent depth 0 index 1
| | |     |   |     `-TemplateTypeParm 0x5605abda8e98 '_Up'
| | |     |   |-ReturnStmt 0x5605abdaa360 <line:1129:6, line:1130:29>
| | |     |   | `-CallExpr 0x5605abdaa330 <line:1129:13, line:1130:29> '<dependent type>'
| | |     |   |   |-CXXFunctionalCastExpr 0x5605abdaa248 <line:1129:13, col:25> '_Weak_order':'std::__compare::_Weak_order' functional cast to _Weak_order <NoOp>
| | |     |   |   | `-InitListExpr 0x5605abdaa208 <col:24, col:25> '_Weak_order':'std::__compare::_Weak_order'
| | |     |   |   |-CXXStaticCastExpr 0x5605abdaa2a0 <col:27, col:49> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |     |   |   | `-DeclRefExpr 0x5605abdaa270 <col:46> '_Tp' lvalue ParmVar 0x5605abda93f8 '__e' '_Tp &&'
| | |     |   |   `-CXXStaticCastExpr 0x5605abdaa300 <line:1130:6, col:28> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |     |   |     `-DeclRefExpr 0x5605abdaa2d0 <col:25> '_Up' lvalue ParmVar 0x5605abda94a8 '__f' '_Up &&'
| | |     |   `-ReturnStmt 0x5605abdaa6c8 <line:1132:6, line:1136:25>
| | |     |     `-ConditionalOperator 0x5605abdaa698 <line:1132:13, line:1136:25> '<dependent type>'
| | |     |       |-BinaryOperator 0x5605abdaa430 <line:1132:13, col:62> '<dependent type>' '=='
| | |     |       | |-CXXStaticCastExpr 0x5605abdaa3a0 <col:13, col:35> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |     |       | | `-DeclRefExpr 0x5605abdaa370 <col:32> '_Tp' lvalue ParmVar 0x5605abda93f8 '__e' '_Tp &&'
| | |     |       | `-CXXStaticCastExpr 0x5605abdaa400 <col:40, col:62> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |     |       |   `-DeclRefExpr 0x5605abdaa3d0 <col:59> '_Up' lvalue ParmVar 0x5605abda94a8 '__f' '_Up &&'
| | |     |       |-DeclRefExpr 0x5605abdaa488 <line:1133:10, col:25> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63178 'equivalent' 'const weak_ordering':'const std::weak_ordering'
| | |     |       | `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |     |       `-ConditionalOperator 0x5605abdaa668 <line:1134:10, line:1136:25> '<dependent type>'
| | |     |         |-BinaryOperator 0x5605abdaa578 <line:1134:10, col:58> '<dependent type>' '<'
| | |     |         | |-CXXStaticCastExpr 0x5605abdaa4e8 <col:10, col:32> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |     |         | | `-DeclRefExpr 0x5605abdaa4b8 <col:29> '_Tp' lvalue ParmVar 0x5605abda93f8 '__e' '_Tp &&'
| | |     |         | `-CXXStaticCastExpr 0x5605abdaa548 <col:36, col:58> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |     |         |   `-DeclRefExpr 0x5605abdaa518 <col:55> '_Up' lvalue ParmVar 0x5605abda94a8 '__f' '_Up &&'
| | |     |         |-DeclRefExpr 0x5605abdaa5d0 <line:1135:10, col:25> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd62ef0 'less' 'const weak_ordering':'const std::weak_ordering'
| | |     |         | `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |     |         `-DeclRefExpr 0x5605abdaa638 <line:1136:10, col:25> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63908 'greater' 'const weak_ordering':'const std::weak_ordering'
| | |     |           `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
| | |     `-WarnUnusedResultAttr 0x5605abda9708 <line:1125:15> nodiscard ""
| | |-ConceptDecl 0x5605abdaa8a0 <line:1142:5, line:1148:2> line:1143:15 __op_eq_lt_lt
| | | |-TemplateTypeParmDecl 0x5605abdaa758 <line:1142:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5605abdaa7e8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | | `-BinaryOperator 0x5605abdab000 <line:1143:31, line:1148:2> 'bool' '&&'
| | |   |-ConceptSpecializationExpr 0x5605abdaaa00 <line:1143:31, col:50> 'bool' Concept 0x5605abda6150 '__op_eq_lt'
| | |   | |-ImplicitConceptSpecializationDecl 0x5605abdaa910 <line:1068:15> col:15
| | |   | | |-TemplateArgument type 'type-parameter-0-0'
| | |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   | | `-TemplateArgument type 'type-parameter-0-1'
| | |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |   | |-TemplateArgument <line:1143:42> type '_Tp':'type-parameter-0-0'
| | |   | | `-TemplateTypeParmType 0x5605abdaa7b0 '_Tp' dependent depth 0 index 0
| | |   | |   `-TemplateTypeParm 0x5605abdaa758 '_Tp'
| | |   | `-TemplateArgument <col:47> type '_Up':'type-parameter-0-1'
| | |   |   `-TemplateTypeParmType 0x5605abdaa840 '_Up' dependent depth 0 index 1
| | |   |     `-TemplateTypeParm 0x5605abdaa7e8 '_Up'
| | |   `-RequiresExpr 0x5605abdaafb8 <line:1144:5, line:1148:2> 'bool'
| | |     |-ParmVarDecl 0x5605abdaaa78 <line:1144:14, col:20> col:20 referenced __t '_Tp &&'
| | |     |-ParmVarDecl 0x5605abdaab28 <col:25, col:31> col:31 referenced __u '_Up &&'
| | |     `-CompoundRequirement 0x5605abdaaf88 dependent
| | |       |-BinaryOperator 0x5605abdaacf0 <line:1146:6, col:54> '<dependent type>' '<'
| | |       | |-CXXStaticCastExpr 0x5605abdaac60 <col:6, col:28> '_Up' xvalue static_cast<_Up &&> <Dependent>
| | |       | | `-DeclRefExpr 0x5605abdaac30 <col:25> '_Up' lvalue ParmVar 0x5605abdaab28 '__u' '_Up &&' non_odr_use_unevaluated
| | |       | `-CXXStaticCastExpr 0x5605abdaacc0 <col:32, col:54> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | |       |   `-DeclRefExpr 0x5605abdaac90 <col:51> '_Tp' lvalue ParmVar 0x5605abdaaa78 '__t' '_Tp &&' non_odr_use_unevaluated
| | |       `-ConceptSpecializationExpr 0x5605abdaaef8 <line:1147:9, col:28> 'bool' Concept 0x5605abd14b90 'convertible_to'
| | |         |-ImplicitConceptSpecializationDecl 0x5605abdaae08 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:79:13> col:13
| | |         | |-TemplateArgument type 'type-parameter-1-0'
| | |         | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | |         | `-TemplateArgument type 'bool'
| | |         |   `-BuiltinType 0x5605aba9c9f0 'bool'
| | |         |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| | |         | `-TemplateTypeParmType 0x5605abdaad90 'expr-type' dependent depth 1 index 0
| | |         |   `-TemplateTypeParm 0x5605abdaad28 'expr-type'
| | |         `-TemplateArgument </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:1147:24> type 'bool'
| | |           `-BuiltinType 0x5605aba9c9f0 'bool'
| | `-CXXRecordDecl 0x5605abdab028 prev 0x5605abd90970 <line:1150:5, line:1182:5> line:1150:11 referenced class _Partial_fallback definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abdab128 <col:5, col:11> col:11 implicit class _Partial_fallback
| |   |-FunctionTemplateDecl 0x5605abdab428 <line:1152:7, line:1161:2> line:1154:2 _S_noexcept
| |   | |-TemplateTypeParmDecl 0x5605abdab1d8 <line:1152:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |   | |-TemplateTypeParmDecl 0x5605abdab268 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| |   | `-CXXMethodDecl 0x5605abdab378 <line:1153:2, line:1161:2> line:1154:2 constexpr _S_noexcept 'bool ()' static implicit-inline
| |   |   `-CompoundStmt 0x5605abdac770 <line:1155:2, line:1161:2>
| |   |     `-IfStmt 0x5605abdac740 <line:1156:4, line:1160:67> has_else constexpr
| |   |       |-ConceptSpecializationExpr 0x5605abdac188 <line:1156:18, col:46> 'bool' Concept 0x5605abd90050 '__partially_ordered'
| |   |       | |-ImplicitConceptSpecializationDecl 0x5605abdac098 <line:1025:15> col:15
| |   |       | | |-TemplateArgument type 'type-parameter-0-0'
| |   |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |   |       | | `-TemplateArgument type 'type-parameter-0-1'
| |   |       | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |   |       | |-TemplateArgument <line:1156:38> type '_Tp':'type-parameter-0-0'
| |   |       | | `-TemplateTypeParmType 0x5605abdab230 '_Tp' dependent depth 0 index 0
| |   |       | |   `-TemplateTypeParm 0x5605abdab1d8 '_Tp'
| |   |       | `-TemplateArgument <col:43> type '_Up':'type-parameter-0-1'
| |   |       |   `-TemplateTypeParmType 0x5605abdab2c0 '_Up' dependent depth 0 index 1
| |   |       |     `-TemplateTypeParm 0x5605abdab268 '_Up'
| |   |       |-ReturnStmt 0x5605abdac2f0 <line:1157:6, col:51>
| |   |       | `-CallExpr 0x5605abdac2d0 <col:13, col:51> '<dependent type>'
| |   |       |   `-UnresolvedLookupExpr 0x5605abdac238 <col:13, col:49> '<dependent type>' lvalue (no ADL) = '_S_noexcept' 0x5605abd908f8
| |   |       |     |-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |       |     | `-TemplateTypeParmType 0x5605abdab230 '_Tp' dependent depth 0 index 0
| |   |       |     |   `-TemplateTypeParm 0x5605abdab1d8 '_Tp'
| |   |       |     `-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |       |       `-TemplateTypeParmType 0x5605abdab2c0 '_Up' dependent depth 0 index 1
| |   |       |         `-TemplateTypeParm 0x5605abdab268 '_Up'
| |   |       `-ReturnStmt 0x5605abdac730 <line:1159:6, line:1160:67>
| |   |         `-BinaryOperator 0x5605abdac710 <line:1159:13, line:1160:67> 'bool' '&&'
| |   |           |-CXXNoexceptExpr 0x5605abdac4e8 <line:1159:13, col:70> 'bool'
| |   |           | `-CXXUnresolvedConstructExpr 0x5605abdac4c0 <col:22, col:69> 'bool' 'bool'
| |   |           |   `-BinaryOperator 0x5605abdac4a0 <col:27, col:68> '<dependent type>' '=='
| |   |           |     |-CallExpr 0x5605abdac3b8 <col:27, col:45> '<dependent type>'
| |   |           |     | `-UnresolvedLookupExpr 0x5605abdac340 <col:27, col:43> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   |           |     |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |           |     |     `-TemplateTypeParmType 0x5605abdab230 '_Tp' dependent depth 0 index 0
| |   |           |     |       `-TemplateTypeParm 0x5605abdab1d8 '_Tp'
| |   |           |     `-CallExpr 0x5605abdac480 <col:50, col:68> '<dependent type>'
| |   |           |       `-UnresolvedLookupExpr 0x5605abdac408 <col:50, col:66> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   |           |         `-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |           |           `-TemplateTypeParmType 0x5605abdab2c0 '_Up' dependent depth 0 index 1
| |   |           |             `-TemplateTypeParm 0x5605abdab268 '_Up'
| |   |           `-CXXNoexceptExpr 0x5605abdac6f0 <line:1160:11, col:67> 'bool'
| |   |             `-CXXUnresolvedConstructExpr 0x5605abdac6c8 <col:20, col:66> 'bool' 'bool'
| |   |               `-BinaryOperator 0x5605abdac6a8 <col:25, col:65> '<dependent type>' '<'
| |   |                 |-CallExpr 0x5605abdac5c0 <col:25, col:43> '<dependent type>'
| |   |                 | `-UnresolvedLookupExpr 0x5605abdac548 <col:25, col:41> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   |                 |   `-TemplateArgument type '_Tp':'type-parameter-0-0'
| |   |                 |     `-TemplateTypeParmType 0x5605abdab230 '_Tp' dependent depth 0 index 0
| |   |                 |       `-TemplateTypeParm 0x5605abdab1d8 '_Tp'
| |   |                 `-CallExpr 0x5605abdac688 <col:47, col:65> '<dependent type>'
| |   |                   `-UnresolvedLookupExpr 0x5605abdac610 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
| |   |                     `-TemplateArgument type '_Up':'type-parameter-0-1'
| |   |                       `-TemplateTypeParmType 0x5605abdab2c0 '_Up' dependent depth 0 index 1
| |   |                         `-TemplateTypeParm 0x5605abdab268 '_Up'
| |   |-AccessSpecDecl 0x5605abdab4a0 <line:1163:5, col:11> col:5 public
| |   `-FunctionTemplateDecl 0x5605abdabd80 <line:1164:7, line:1181:2> line:1167:2 operator()
| |     |-TemplateTypeParmDecl 0x5605abdab4d0 <line:1164:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| |     |-TemplateTypeParmDecl 0x5605abdab568 <col:30, col:53> col:53 referenced Concept 0x5605abd84bc0 '__decayed_same_as' depth 0 index 1 _Up
| |     | `-ConceptSpecializationExpr 0x5605abdab738 <col:30, col:51> 'bool' Concept 0x5605abd84bc0 '__decayed_same_as'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abdab648 <line:655:15> col:15
| |     |   | |-TemplateArgument type 'type-parameter-0-1'
| |     |   | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     |   | `-TemplateArgument type 'type-parameter-0-0'
| |     |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     |   |-TemplateArgument <line:1164:53> type '_Up':'type-parameter-0-1'
| |     |   | `-TemplateTypeParmType 0x5605abdab5d0 '_Up' dependent depth 0 index 1
| |     |   |   `-TemplateTypeParm 0x5605abdab568 '_Up'
| |     |   `-TemplateArgument <col:48> type '_Tp':'type-parameter-0-0'
| |     |     `-TemplateTypeParmType 0x5605abdab520 '_Tp' dependent depth 0 index 0
| |     |       `-TemplateTypeParm 0x5605abdab4d0 '_Tp'
| |     |-BinaryOperator 0x5605abdaba40 <line:1165:11, col:66> 'bool' '||'
| |     | |-ConceptSpecializationExpr 0x5605abdab8c0 <col:11, col:39> 'bool' Concept 0x5605abd90050 '__partially_ordered'
| |     | | |-ImplicitConceptSpecializationDecl 0x5605abdab7d0 <line:1025:15> col:15
| |     | | | |-TemplateArgument type 'type-parameter-0-0'
| |     | | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     | | | `-TemplateArgument type 'type-parameter-0-1'
| |     | | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     | | |-TemplateArgument <line:1165:31> type '_Tp':'type-parameter-0-0'
| |     | | | `-TemplateTypeParmType 0x5605abdab520 '_Tp' dependent depth 0 index 0
| |     | | |   `-TemplateTypeParm 0x5605abdab4d0 '_Tp'
| |     | | `-TemplateArgument <col:36> type '_Up':'type-parameter-0-1'
| |     | |   `-TemplateTypeParmType 0x5605abdab5d0 '_Up' dependent depth 0 index 1
| |     | |     `-TemplateTypeParm 0x5605abdab568 '_Up'
| |     | `-ConceptSpecializationExpr 0x5605abdaba18 <col:44, col:66> 'bool' Concept 0x5605abdaa8a0 '__op_eq_lt_lt'
| |     |   |-ImplicitConceptSpecializationDecl 0x5605abdab928 <line:1143:15> col:15
| |     |   | |-TemplateArgument type 'type-parameter-0-0'
| |     |   | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |     |   | `-TemplateArgument type 'type-parameter-0-1'
| |     |   |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |     |   |-TemplateArgument <line:1165:58> type '_Tp':'type-parameter-0-0'
| |     |   | `-TemplateTypeParmType 0x5605abdab520 '_Tp' dependent depth 0 index 0
| |     |   |   `-TemplateTypeParm 0x5605abdab4d0 '_Tp'
| |     |   `-TemplateArgument <col:63> type '_Up':'type-parameter-0-1'
| |     |     `-TemplateTypeParmType 0x5605abdab5d0 '_Up' dependent depth 0 index 1
| |     |       `-TemplateTypeParm 0x5605abdab568 '_Up'
| |     `-CXXMethodDecl 0x5605abdabcd0 <line:1166:2, line:1181:2> line:1167:2 constexpr operator() 'partial_ordering (_Tp &&, _Up &&) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
| |       |-ParmVarDecl 0x5605abdabad8 <col:28, col:34> col:34 referenced __e '_Tp &&'
| |       |-ParmVarDecl 0x5605abdabb88 <col:39, col:45> col:45 referenced __f '_Up &&'
| |       |-CompoundStmt 0x5605abdad0f0 <line:1169:2, line:1181:2>
| |       | `-IfStmt 0x5605abdad0c0 <line:1170:4, line:1180:28> has_else constexpr
| |       |   |-ConceptSpecializationExpr 0x5605abdac8a0 <line:1170:18, col:46> 'bool' Concept 0x5605abd90050 '__partially_ordered'
| |       |   | |-ImplicitConceptSpecializationDecl 0x5605abdac7b0 <line:1025:15> col:15
| |       |   | | |-TemplateArgument type 'type-parameter-0-0'
| |       |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| |       |   | | `-TemplateArgument type 'type-parameter-0-1'
| |       |   | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| |       |   | |-TemplateArgument <line:1170:38> type '_Tp':'type-parameter-0-0'
| |       |   | | `-TemplateTypeParmType 0x5605abdab520 '_Tp' dependent depth 0 index 0
| |       |   | |   `-TemplateTypeParm 0x5605abdab4d0 '_Tp'
| |       |   | `-TemplateArgument <col:43> type '_Up':'type-parameter-0-1'
| |       |   |   `-TemplateTypeParmType 0x5605abdab5d0 '_Up' dependent depth 0 index 1
| |       |   |     `-TemplateTypeParm 0x5605abdab568 '_Up'
| |       |   |-ReturnStmt 0x5605abdacbb8 <line:1171:6, line:1172:32>
| |       |   | `-CallExpr 0x5605abdacb88 <line:1171:13, line:1172:32> '<dependent type>'
| |       |   |   |-CXXFunctionalCastExpr 0x5605abdacaa0 <line:1171:13, col:28> '_Partial_order':'std::__compare::_Partial_order' functional cast to _Partial_order <NoOp>
| |       |   |   | `-InitListExpr 0x5605abdac950 <col:27, col:28> '_Partial_order':'std::__compare::_Partial_order'
| |       |   |   |-CXXStaticCastExpr 0x5605abdacaf8 <col:30, col:52> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |       |   |   | `-DeclRefExpr 0x5605abdacac8 <col:49> '_Tp' lvalue ParmVar 0x5605abdabad8 '__e' '_Tp &&'
| |       |   |   `-CXXStaticCastExpr 0x5605abdacb58 <line:1172:9, col:31> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |       |   |     `-DeclRefExpr 0x5605abdacb28 <col:28> '_Up' lvalue ParmVar 0x5605abdabb88 '__f' '_Up &&'
| |       |   `-ReturnStmt 0x5605abdad0b0 <line:1174:6, line:1180:28>
| |       |     `-ConditionalOperator 0x5605abdad080 <line:1174:13, line:1180:28> '<dependent type>'
| |       |       |-BinaryOperator 0x5605abdacca0 <line:1174:13, col:62> '<dependent type>' '=='
| |       |       | |-CXXStaticCastExpr 0x5605abdacbf8 <col:13, col:35> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |       |       | | `-DeclRefExpr 0x5605abdacbc8 <col:32> '_Tp' lvalue ParmVar 0x5605abdabad8 '__e' '_Tp &&'
| |       |       | `-CXXStaticCastExpr 0x5605abdacc70 <col:40, col:62> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |       |       |   `-DeclRefExpr 0x5605abdacc40 <col:59> '_Up' lvalue ParmVar 0x5605abdabb88 '__f' '_Up &&'
| |       |       |-DeclRefExpr 0x5605abdaccf8 <line:1175:10, col:28> 'const partial_ordering':'const std::partial_ordering' lvalue Var 0x5605abb729c8 'equivalent' 'const partial_ordering':'const std::partial_ordering'
| |       |       | `-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| |       |       `-ConditionalOperator 0x5605abdad050 <line:1176:10, line:1180:28> '<dependent type>'
| |       |         |-BinaryOperator 0x5605abdacde8 <line:1176:10, col:58> '<dependent type>' '<'
| |       |         | |-CXXStaticCastExpr 0x5605abdacd58 <col:10, col:32> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |       |         | | `-DeclRefExpr 0x5605abdacd28 <col:29> '_Tp' lvalue ParmVar 0x5605abdabad8 '__e' '_Tp &&'
| |       |         | `-CXXStaticCastExpr 0x5605abdacdb8 <col:36, col:58> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |       |         |   `-DeclRefExpr 0x5605abdacd88 <col:55> '_Up' lvalue ParmVar 0x5605abdabb88 '__f' '_Up &&'
| |       |         |-DeclRefExpr 0x5605abdace40 <line:1177:10, col:28> 'const partial_ordering':'const std::partial_ordering' lvalue Var 0x5605abb72710 'less' 'const partial_ordering':'const std::partial_ordering'
| |       |         | `-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| |       |         `-ConditionalOperator 0x5605abdad020 <line:1178:10, line:1180:28> '<dependent type>'
| |       |           |-BinaryOperator 0x5605abdacf30 <line:1178:10, col:58> '<dependent type>' '<'
| |       |           | |-CXXStaticCastExpr 0x5605abdacea0 <col:10, col:32> '_Up' xvalue static_cast<_Up &&> <Dependent>
| |       |           | | `-DeclRefExpr 0x5605abdace70 <col:29> '_Up' lvalue ParmVar 0x5605abdabb88 '__f' '_Up &&'
| |       |           | `-CXXStaticCastExpr 0x5605abdacf00 <col:36, col:58> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |       |           |   `-DeclRefExpr 0x5605abdaced0 <col:55> '_Tp' lvalue ParmVar 0x5605abdabad8 '__e' '_Tp &&'
| |       |           |-DeclRefExpr 0x5605abdacf88 <line:1179:10, col:28> 'const partial_ordering':'const std::partial_ordering' lvalue Var 0x5605abb72c18 'greater' 'const partial_ordering':'const std::partial_ordering'
| |       |           | `-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| |       |           `-DeclRefExpr 0x5605abdacff0 <line:1180:10, col:28> 'const partial_ordering':'const std::partial_ordering' lvalue Var 0x5605abb72e80 'unordered' 'const partial_ordering':'const std::partial_ordering'
| |       |             `-NestedNameSpecifier TypeSpec 'std::partial_ordering'
| |       `-WarnUnusedResultAttr 0x5605abdabde8 <line:1167:15> nodiscard ""
| |-NamespaceDecl 0x5605abdad158 <line:1187:3, line:1203:3> line:1187:20 _Cpo inline
| | |-VarDecl 0x5605abdad268 <line:1189:5, col:60> col:47 strong_order 'const __compare::_Strong_order':'const std::__compare::_Strong_order' inline constexpr listinit
| | | |-value: Struct
| | | `-InitListExpr 0x5605abdad310 <col:59, col:60> 'const __compare::_Strong_order':'const std::__compare::_Strong_order'
| | |-VarDecl 0x5605abdad508 <line:1191:5, col:56> col:45 weak_order 'const __compare::_Weak_order':'const std::__compare::_Weak_order' inline constexpr listinit
| | | |-value: Struct
| | | `-InitListExpr 0x5605abdad5b0 <col:55, col:56> 'const __compare::_Weak_order':'const std::__compare::_Weak_order'
| | |-VarDecl 0x5605abdad7a8 <line:1193:5, col:62> col:48 partial_order 'const __compare::_Partial_order':'const std::__compare::_Partial_order' inline constexpr listinit
| | | |-value: Struct
| | | `-InitListExpr 0x5605abdad850 <col:61, col:62> 'const __compare::_Partial_order':'const std::__compare::_Partial_order'
| | |-VarDecl 0x5605abdada48 <line:1195:5, line:1196:37> col:7 compare_strong_order_fallback 'const __compare::_Strong_fallback':'const std::__compare::_Strong_fallback' inline constexpr listinit
| | | |-value: Struct
| | | `-InitListExpr 0x5605abdadaf0 <col:36, col:37> 'const __compare::_Strong_fallback':'const std::__compare::_Strong_fallback'
| | |-VarDecl 0x5605abdadce8 <line:1198:5, line:1199:35> col:7 compare_weak_order_fallback 'const __compare::_Weak_fallback':'const std::__compare::_Weak_fallback' inline constexpr listinit
| | | |-value: Struct
| | | `-InitListExpr 0x5605abdadd90 <col:34, col:35> 'const __compare::_Weak_fallback':'const std::__compare::_Weak_fallback'
| | `-VarDecl 0x5605abdadf88 <line:1201:5, line:1202:38> col:7 compare_partial_order_fallback 'const __compare::_Partial_fallback':'const std::__compare::_Partial_fallback' inline constexpr listinit
| |   |-value: Struct
| |   `-InitListExpr 0x5605abdae030 <col:37, col:38> 'const __compare::_Partial_fallback':'const std::__compare::_Partial_fallback'
| `-NamespaceDecl 0x5605abdae1a8 prev 0x5605abd78a90 <line:1206:3, line:1251:3> line:1206:13 __detail
|   |-original Namespace 0x5605abb7ce80 '__detail'
|   |-CXXRecordDecl 0x5605abdae220 <line:1209:22, line:1244:5> line:1209:29 struct _Synth3way definition
|   | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial constexpr needs_implicit
|   | |-CXXRecordDecl 0x5605abdae360 <col:22, col:29> col:29 implicit struct _Synth3way
|   | |-FunctionTemplateDecl 0x5605abdae8d8 <line:1211:7, line:1219:2> line:1213:2 _S_noexcept
|   | | |-TemplateTypeParmDecl 0x5605abdae410 <line:1211:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
|   | | |-TemplateTypeParmDecl 0x5605abdae498 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
|   | | `-CXXMethodDecl 0x5605abdae828 <line:1212:2, line:1219:2> line:1213:2 constexpr _S_noexcept 'bool (const _Tp *, const _Up *)' static implicit-inline
|   | |   |-ParmVarDecl 0x5605abdae5c8 <col:14, col:31> col:25 referenced __t 'const _Tp *' cinit
|   | |   | `-CXXNullPtrLiteralExpr 0x5605abdaf580 <col:31> 'std::nullptr_t'
|   | |   |-ParmVarDecl 0x5605abdae6a8 <col:40, col:57> col:51 referenced __u 'const _Up *' cinit
|   | |   | `-CXXNullPtrLiteralExpr 0x5605abdaf590 <col:57> 'std::nullptr_t'
|   | |   `-CompoundStmt 0x5605abdafd08 <line:1214:2, line:1219:2>
|   | |     `-IfStmt 0x5605abdafcd8 <line:1215:4, line:1218:58> has_else constexpr
|   | |       |-ConceptSpecializationExpr 0x5605abdaf9d0 <line:1215:18, col:52> 'bool' Concept 0x5605abd6fb98 'three_way_comparable_with'
|   | |       | |-ImplicitConceptSpecializationDecl 0x5605abdaf8c8 <line:471:13> col:13
|   | |       | | |-TemplateArgument type 'type-parameter-0-0'
|   | |       | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
|   | |       | | |-TemplateArgument type 'type-parameter-0-1'
|   | |       | | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
|   | |       | | `-TemplateArgument type 'std::partial_ordering'
|   | |       | |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
|   | |       | |     `-CXXRecord 0x5605abd39720 'partial_ordering'
|   | |       | |-TemplateArgument <line:1215:44> type '_Tp':'type-parameter-0-0'
|   | |       | | `-TemplateTypeParmType 0x5605abdae460 '_Tp' dependent depth 0 index 0
|   | |       | |   `-TemplateTypeParm 0x5605abdae410 '_Tp'
|   | |       | `-TemplateArgument <col:49> type '_Up':'type-parameter-0-1'
|   | |       |   `-TemplateTypeParmType 0x5605abdae4f0 '_Up' dependent depth 0 index 1
|   | |       |     `-TemplateTypeParm 0x5605abdae498 '_Up'
|   | |       |-ReturnStmt 0x5605abdafad8 <line:1216:6, col:35>
|   | |       | `-CXXNoexceptExpr 0x5605abdafab8 <col:13, col:35> 'bool'
|   | |       |   `-BinaryOperator 0x5605abdafa98 <col:22, col:32> '<dependent type>' '<=>'
|   | |       |     |-UnaryOperator 0x5605abdafa30 <col:22, col:23> 'const _Tp' lvalue prefix '*' cannot overflow
|   | |       |     | `-ImplicitCastExpr 0x5605abdafa18 <col:23> 'const _Tp *' <LValueToRValue>
|   | |       |     |   `-DeclRefExpr 0x5605abdaf9f8 <col:23> 'const _Tp *' lvalue ParmVar 0x5605abdae5c8 '__t' 'const _Tp *' non_odr_use_unevaluated
|   | |       |     `-UnaryOperator 0x5605abdafa80 <col:31, col:32> 'const _Up' lvalue prefix '*' cannot overflow
|   | |       |       `-ImplicitCastExpr 0x5605abdafa68 <col:32> 'const _Up *' <LValueToRValue>
|   | |       |         `-DeclRefExpr 0x5605abdafa48 <col:32> 'const _Up *' lvalue ParmVar 0x5605abdae6a8 '__u' 'const _Up *' non_odr_use_unevaluated
|   | |       `-ReturnStmt 0x5605abdafcc8 <line:1218:6, col:58>
|   | |         `-BinaryOperator 0x5605abdafca8 <col:13, col:58> 'bool' '&&'
|   | |           |-CXXNoexceptExpr 0x5605abdafba8 <col:13, col:33> 'bool'
|   | |           | `-BinaryOperator 0x5605abdafb88 <col:22, col:30> '<dependent type>' '<'
|   | |           |   |-UnaryOperator 0x5605abdafb20 <col:22, col:23> 'const _Tp' lvalue prefix '*' cannot overflow
|   | |           |   | `-ImplicitCastExpr 0x5605abdafb08 <col:23> 'const _Tp *' <LValueToRValue>
|   | |           |   |   `-DeclRefExpr 0x5605abdafae8 <col:23> 'const _Tp *' lvalue ParmVar 0x5605abdae5c8 '__t' 'const _Tp *' non_odr_use_unevaluated
|   | |           |   `-UnaryOperator 0x5605abdafb70 <col:29, col:30> 'const _Up' lvalue prefix '*' cannot overflow
|   | |           |     `-ImplicitCastExpr 0x5605abdafb58 <col:30> 'const _Up *' <LValueToRValue>
|   | |           |       `-DeclRefExpr 0x5605abdafb38 <col:30> 'const _Up *' lvalue ParmVar 0x5605abdae6a8 '__u' 'const _Up *' non_odr_use_unevaluated
|   | |           `-CXXNoexceptExpr 0x5605abdafc88 <col:38, col:58> 'bool'
|   | |             `-BinaryOperator 0x5605abdafc68 <col:47, col:55> '<dependent type>' '<'
|   | |               |-UnaryOperator 0x5605abdafc00 <col:47, col:48> 'const _Up' lvalue prefix '*' cannot overflow
|   | |               | `-ImplicitCastExpr 0x5605abdafbe8 <col:48> 'const _Up *' <LValueToRValue>
|   | |               |   `-DeclRefExpr 0x5605abdafbc8 <col:48> 'const _Up *' lvalue ParmVar 0x5605abdae6a8 '__u' 'const _Up *' non_odr_use_unevaluated
|   | |               `-UnaryOperator 0x5605abdafc50 <col:54, col:55> 'const _Tp' lvalue prefix '*' cannot overflow
|   | |                 `-ImplicitCastExpr 0x5605abdafc38 <col:55> 'const _Tp *' <LValueToRValue>
|   | |                   `-DeclRefExpr 0x5605abdafc18 <col:55> 'const _Tp *' lvalue ParmVar 0x5605abdae5c8 '__t' 'const _Tp *' non_odr_use_unevaluated
|   | `-FunctionTemplateDecl 0x5605abdaf3d8 <line:1221:7, line:1243:2> line:1224:2 operator()
|   |   |-TemplateTypeParmDecl 0x5605abdae960 <line:1221:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
|   |   |-TemplateTypeParmDecl 0x5605abdae9e8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
|   |   `-CXXMethodDecl 0x5605abdaf2f8 <line:1223:2, line:1243:2> line:1224:2 constexpr operator() 'auto (const _Tp &, const _Up &) const noexcept(_S_noexcept<_Tp, _Up>())' implicit-inline
|   |     |-ParmVarDecl 0x5605abdaeae8 <col:13, col:24> col:24 referenced __t 'const _Tp &'
|   |     |-ParmVarDecl 0x5605abdaeb98 <col:29, col:40> col:40 referenced __u 'const _Up &'
|   |     |-RequiresExpr 0x5605abdaf1f0 <line:1226:11, line:1230:2> 'bool'
|   |     | |-CompoundRequirement 0x5605abdaef30 dependent
|   |     | | |-BinaryOperator 0x5605abdaed10 <line:1228:6, col:12> '<dependent type>' '<'
|   |     | | | |-DeclRefExpr 0x5605abdaecd0 <col:6> 'const _Tp' lvalue ParmVar 0x5605abdaeae8 '__t' 'const _Tp &' non_odr_use_unevaluated
|   |     | | | `-DeclRefExpr 0x5605abdaecf0 <col:12> 'const _Up' lvalue ParmVar 0x5605abdaeb98 '__u' 'const _Up &' non_odr_use_unevaluated
|   |     | | `-ConceptSpecializationExpr 0x5605abdaeea0 <col:21> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
|   |     | |   |-ImplicitConceptSpecializationDecl 0x5605abdaede8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:291:15> col:15
|   |     | |   | `-TemplateArgument type 'type-parameter-1-0'
|   |     | |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
|   |     | |   `-TemplateArgument type 'expr-type':'type-parameter-1-0'
|   |     | |     `-TemplateTypeParmType 0x5605abdaeda0 'expr-type' dependent depth 1 index 0
|   |     | |       `-TemplateTypeParm 0x5605abdaed38 'expr-type'
|   |     | `-CompoundRequirement 0x5605abdaf1c0 dependent
|   |     |   |-BinaryOperator 0x5605abdaefa0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:1229:6, col:12> '<dependent type>' '<'
|   |     |   | |-DeclRefExpr 0x5605abdaef60 <col:6> 'const _Up' lvalue ParmVar 0x5605abdaeb98 '__u' 'const _Up &' non_odr_use_unevaluated
|   |     |   | `-DeclRefExpr 0x5605abdaef80 <col:12> 'const _Tp' lvalue ParmVar 0x5605abdaeae8 '__t' 'const _Tp &' non_odr_use_unevaluated
|   |     |   `-ConceptSpecializationExpr 0x5605abdaf130 <col:21> 'bool' Concept 0x5605abd2fd98 '__boolean_testable'
|   |     |     |-ImplicitConceptSpecializationDecl 0x5605abdaf078 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:291:15> col:15
|   |     |     | `-TemplateArgument type 'type-parameter-1-0'
|   |     |     |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
|   |     |     `-TemplateArgument type 'expr-type':'type-parameter-1-0'
|   |     |       `-TemplateTypeParmType 0x5605abdaf030 'expr-type' dependent depth 1 index 0
|   |     |         `-TemplateTypeParm 0x5605abdaefc8 'expr-type'
|   |     |-CompoundStmt 0x5605abdb01b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/compare:1231:2, line:1243:2>
|   |     | `-IfStmt 0x5605abdb0188 <line:1232:4, line:1242:6> has_else constexpr
|   |     |   |-ConceptSpecializationExpr 0x5605abdafe50 <line:1232:18, col:52> 'bool' Concept 0x5605abd6fb98 'three_way_comparable_with'
|   |     |   | |-ImplicitConceptSpecializationDecl 0x5605abdafd48 <line:471:13> col:13
|   |     |   | | |-TemplateArgument type 'type-parameter-0-0'
|   |     |   | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
|   |     |   | | |-TemplateArgument type 'type-parameter-0-1'
|   |     |   | | | `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
|   |     |   | | `-TemplateArgument type 'std::partial_ordering'
|   |     |   | |   `-RecordType 0x5605abd397d0 'std::partial_ordering'
|   |     |   | |     `-CXXRecord 0x5605abd39720 'partial_ordering'
|   |     |   | |-TemplateArgument <line:1232:44> type '_Tp':'type-parameter-0-0'
|   |     |   | | `-TemplateTypeParmType 0x5605abdae9b0 '_Tp' dependent depth 0 index 0
|   |     |   | |   `-TemplateTypeParm 0x5605abdae960 '_Tp'
|   |     |   | `-TemplateArgument <col:49> type '_Up':'type-parameter-0-1'
|   |     |   |   `-TemplateTypeParmType 0x5605abdaea40 '_Up' dependent depth 0 index 1
|   |     |   |     `-TemplateTypeParm 0x5605abdae9e8 '_Up'
|   |     |   |-ReturnStmt 0x5605abdafed8 <line:1233:6, col:21>
|   |     |   | `-BinaryOperator 0x5605abdafeb8 <col:13, col:21> '<dependent type>' '<=>'
|   |     |   |   |-DeclRefExpr 0x5605abdafe78 <col:13> 'const _Tp' lvalue ParmVar 0x5605abdaeae8 '__t' 'const _Tp &'
|   |     |   |   `-DeclRefExpr 0x5605abdafe98 <col:21> 'const _Up' lvalue ParmVar 0x5605abdaeb98 '__u' 'const _Up &'
|   |     |   `-CompoundStmt 0x5605abdb0170 <line:1235:6, line:1242:6>
|   |     |     `-IfStmt 0x5605abdb0140 <line:1236:8, line:1241:25> has_else
|   |     |       |-BinaryOperator 0x5605abdaff28 <line:1236:12, col:18> '<dependent type>' '<'
|   |     |       | |-DeclRefExpr 0x5605abdafee8 <col:12> 'const _Tp' lvalue ParmVar 0x5605abdaeae8 '__t' 'const _Tp &'
|   |     |       | `-DeclRefExpr 0x5605abdaff08 <col:18> 'const _Up' lvalue ParmVar 0x5605abdaeb98 '__u' 'const _Up &'
|   |     |       |-ReturnStmt 0x5605abdaffb0 <line:1237:3, col:25>
|   |     |       | `-DeclRefExpr 0x5605abdaff80 <col:10, col:25> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd62ef0 'less' 'const weak_ordering':'const std::weak_ordering'
|   |     |       |   `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
|   |     |       `-IfStmt 0x5605abdb0110 <line:1238:13, line:1241:25> has_else
|   |     |         |-BinaryOperator 0x5605abdb0000 <line:1238:17, col:23> '<dependent type>' '<'
|   |     |         | |-DeclRefExpr 0x5605abdaffc0 <col:17> 'const _Up' lvalue ParmVar 0x5605abdaeb98 '__u' 'const _Up &'
|   |     |         | `-DeclRefExpr 0x5605abdaffe0 <col:23> 'const _Tp' lvalue ParmVar 0x5605abdaeae8 '__t' 'const _Tp &'
|   |     |         |-ReturnStmt 0x5605abdb0088 <line:1239:3, col:25>
|   |     |         | `-DeclRefExpr 0x5605abdb0058 <col:10, col:25> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63908 'greater' 'const weak_ordering':'const std::weak_ordering'
|   |     |         |   `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
|   |     |         `-ReturnStmt 0x5605abdb0100 <line:1241:3, col:25>
|   |     |           `-DeclRefExpr 0x5605abdb00d0 <col:10, col:25> 'const weak_ordering':'const std::weak_ordering' lvalue Var 0x5605abd63178 'equivalent' 'const weak_ordering':'const std::weak_ordering'
|   |     |             `-NestedNameSpecifier TypeSpec 'std::weak_ordering'
|   |     `-WarnUnusedResultAttr 0x5605abdaf440 <line:1222:4> nodiscard ""
|   |-VarDecl 0x5605abdb0260 <line:1209:5, line:1244:22> col:7 referenced __synth3way 'const struct _Synth3way':'const std::__detail::_Synth3way' inline constexpr cinit
|   | |-value: Struct
|   | `-InitListExpr 0x5605abdb0308 <col:21, col:22> 'const struct _Synth3way':'const std::__detail::_Synth3way'
|   `-TypeAliasTemplateDecl 0x5605abdb0980 <line:1247:5, line:1250:28> line:1248:7 __synth3way_t
|     |-TemplateTypeParmDecl 0x5605abdb0498 <line:1247:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
|     |-TemplateTypeParmDecl 0x5605abdb0538 <col:28, col:43> col:37 referenced typename depth 0 index 1 _Up
|     | `-TemplateArgument type '_Tp':'type-parameter-0-0'
|     |   `-TemplateTypeParmType 0x5605abdb04f0 '_Tp' dependent depth 0 index 0
|     |     `-TemplateTypeParm 0x5605abdb0498 '_Tp'
|     `-TypeAliasDecl 0x5605abdb0918 <line:1248:7, line:1250:28> line:1248:13 __synth3way_t 'decltype(__detail::__synth3way(std::declval<_Tp &>(), std::declval<_Up &>()))'
|       `-DecltypeType 0x5605abdb08d0 'decltype(__detail::__synth3way(std::declval<_Tp &>(), std::declval<_Up &>()))' dependent
|         `-CallExpr 0x5605abdb0868 <line:1249:13, line:1250:27> '<dependent type>'
|           |-DeclRefExpr 0x5605abdb0640 <line:1249:13, col:23> 'const struct _Synth3way':'const std::__detail::_Synth3way' lvalue Var 0x5605abdb0260 '__synth3way' 'const struct _Synth3way':'const std::__detail::_Synth3way' non_odr_use_unevaluated
|           | `-NestedNameSpecifier Namespace 0x5605abdae1a8 '__detail'
|           |-CallExpr 0x5605abdb0748 <col:35, col:54> '<dependent type>'
|           | `-UnresolvedLookupExpr 0x5605abdb06d0 <col:35, col:52> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
|           |   `-TemplateArgument type '_Tp &':'type-parameter-0-0 &'
|           |     `-LValueReferenceType 0x5605abdb0670 '_Tp &' dependent
|           |       `-TemplateTypeParmType 0x5605abdb04f0 '_Tp' dependent depth 0 index 0
|           |         `-TemplateTypeParm 0x5605abdb0498 '_Tp'
|           `-CallExpr 0x5605abdb0848 <line:1250:7, col:26> '<dependent type>'
|             `-UnresolvedLookupExpr 0x5605abdb07d0 <col:7, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0x5605abc78370
|               `-TemplateArgument type '_Up &':'type-parameter-0-1 &'
|                 `-LValueReferenceType 0x5605abdb0770 '_Up &' dependent
|                   `-TemplateTypeParmType 0x5605abdb0590 '_Up' dependent depth 0 index 1
|                     `-TemplateTypeParm 0x5605abdb0538 '_Up'
|-LinkageSpecDecl 0x5605abd7e060 <line:580:23> col:23 implicit C
| `-FunctionDecl 0x5605abd7e0b8 <col:23> col:23 implicit referenced __builtin_signbit 'int (...) noexcept' extern
|   |-BuiltinAttr 0x5605abd7e160 <<invalid sloc>> Implicit 1140
|   |-NoThrowAttr 0x5605abd7e1b8 <col:23> Implicit
|   `-ConstAttr 0x5605abd7e1e0 <col:23> Implicit
|-LinkageSpecDecl 0x5605abd7e380 <line:581:8> col:8 implicit C
| `-FunctionDecl 0x5605abd7e3d8 <col:8> col:8 implicit referenced __builtin_isnormal 'int (...) noexcept' extern
|   |-BuiltinAttr 0x5605abd7e480 <<invalid sloc>> Implicit 782
|   |-NoThrowAttr 0x5605abd7e4d8 <col:8> Implicit
|   `-ConstAttr 0x5605abd7e500 <col:8> Implicit
|-LinkageSpecDecl 0x5605abd7e728 <line:583:8> col:8 implicit C
| `-FunctionDecl 0x5605abd7e780 <col:8> col:8 implicit referenced __builtin_isnan 'int (...) noexcept' extern
|   |-BuiltinAttr 0x5605abd7e828 <<invalid sloc>> Implicit 781
|   |-NoThrowAttr 0x5605abd7e880 <col:8> Implicit
|   `-ConstAttr 0x5605abd7e8a8 <col:8> Implicit
|-LinkageSpecDecl 0x5605abd7ea88 <line:585:20> col:20 implicit C
| `-FunctionDecl 0x5605abd7eae0 <col:20> col:20 implicit referenced __builtin_isinf_sign 'int (...) noexcept' extern
|   |-BuiltinAttr 0x5605abd7eb88 <<invalid sloc>> Implicit 776
|   |-NoThrowAttr 0x5605abd7ebe0 <col:20> Implicit
|   `-ConstAttr 0x5605abd7ec08 <col:20> Implicit
|-NamespaceDecl 0x5605abdb0a30 prev 0x5605abd38b10 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/coroutine:60:1, line:357:1> line:60:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-VisibilityAttr 0x5605abdb0aa0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
| |-NamespaceDecl 0x5605abdb0b00 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/coroutine:64:3, line:342:3> line:64:20 __n4861 inline
| | |-ClassTemplateDecl 0x5605abdb0dd0 <line:71:3, line:72:12> col:12 coroutine_traits
| | | |-TemplateTypeParmDecl 0x5605abdb0b90 <line:71:13, col:22> col:22 typename depth 0 index 0 _Result
| | | |-TemplateTypeParmDecl 0x5605abdb0c68 <col:31, col:43> col:43 typename depth 0 index 1 ... _ArgTypes
| | | `-CXXRecordDecl 0x5605abdb0d20 <line:72:5, col:12> col:12 struct coroutine_traits
| | |-ClassTemplateDecl 0x5605abdb12e0 <line:74:3, line:75:36> col:11 __coroutine_traits_impl
| | | |-TemplateTypeParmDecl 0x5605abdb10b8 <line:74:13, col:22> col:22 typename depth 0 index 0 _Result
| | | |-TemplateTypeParmDecl 0x5605abdb1158 <col:31, col:42> col:40 typename depth 0 index 1
| | | | `-TemplateArgument type 'void'
| | | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | | `-CXXRecordDecl 0x5605abdb1230 <line:75:4, col:36> col:11 struct __coroutine_traits_impl definition
| | |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   `-CXXRecordDecl 0x5605abdb15d0 <col:4, col:11> col:11 implicit struct __coroutine_traits_impl
| | |-ClassTemplatePartialSpecializationDecl 0x5605abdb1998 <line:77:3, line:87:5> line:80:12 struct __coroutine_traits_impl definition explicit_specialization
| | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-TemplateArgument type 'type-parameter-0-0'
| | | | `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |-TemplateArgument type 'void'
| | | | `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-TemplateTypeParmDecl 0x5605abdb1698 <line:77:13, col:22> col:22 referenced typename depth 0 index 0 _Result
| | | |-RequiresExpr 0x5605abdb1848 <line:79:14, col:57> 'bool'
| | | | `-TypeRequirement 0x5605abdb1830 dependent
| | | |   `-DependentNameType 0x5605abdb17e0 'typename _Result::promise_type' dependent
| | | |-CXXRecordDecl 0x5605abdb1bc0 <line:80:5, col:12> col:12 implicit struct __coroutine_traits_impl
| | | `-TypeAliasDecl 0x5605abdb1cc8 <line:86:7, col:46> col:13 promise_type 'typename _Result::promise_type'
| | |   `-DependentNameType 0x5605abdb17e0 'typename _Result::promise_type' dependent
| | |-ClassTemplateDecl 0x5605abdb1f38 prev 0x5605abdb0dd0 <line:89:3, line:90:65> col:12 coroutine_traits
| | | |-TemplateTypeParmDecl 0x5605abdb1d60 <line:89:13, col:22> col:22 referenced typename depth 0 index 0 _Result
| | | |-TemplateTypeParmDecl 0x5605abdb1de8 <col:31, col:43> col:43 typename depth 0 index 1 ... _ArgTypes
| | | `-CXXRecordDecl 0x5605abdb1ea0 prev 0x5605abdb0d20 <line:90:5, col:65> col:12 struct coroutine_traits definition
| | |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveConstructor exists simple trivial needs_implicit
| | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |   | |-MoveAssignment exists simple trivial needs_implicit
| | |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |   |-public '__coroutine_traits_impl<_Result>'
| | |   `-CXXRecordDecl 0x5605abdb20e8 <col:5, col:12> col:12 implicit struct coroutine_traits
| | |-ClassTemplateDecl 0x5605abdb2338 <line:94:3, line:95:12> col:12 coroutine_handle
| | | |-TemplateTypeParmDecl 0x5605abdb21c0 <line:94:13, col:33> col:22 typename depth 0 index 0 _Promise
| | | | `-TemplateArgument type 'void'
| | | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-CXXRecordDecl 0x5605abdb2288 <line:95:5, col:12> col:12 struct coroutine_handle
| | | | `-TypeNullableAttr 0x5605abdb2580 <<invalid sloc>> Implicit
| | | |-ClassTemplateSpecialization 0x5605abdb2608 'coroutine_handle'
| | | `-ClassTemplateSpecialization 0x5605abde2348 'coroutine_handle'
| | |-ClassTemplateSpecializationDecl 0x5605abdb2608 <line:97:3, line:143:3> line:98:5 struct coroutine_handle definition explicit_specialization
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr
| | | |-TemplateArgument type 'void'
| | | | `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-CXXRecordDecl 0x5605abdb27e8 <line:97:15, line:98:5> col:5 implicit referenced struct coroutine_handle
| | | |-AccessSpecDecl 0x5605abdb2898 <line:100:5, col:11> col:5 public
| | | |-CXXConstructorDecl 0x5605abdb2938 <line:102:7, col:67> col:17 used constexpr coroutine_handle 'void () noexcept' implicit-inline
| | | | |-CXXCtorInitializer Field 0x5605abdb4978 '_M_fr_ptr' 'void *'
| | | | | `-ImplicitCastExpr 0x5605abdb4a10 <col:57> 'void *' <NullToPointer>
| | | | |   `-CXXNullPtrLiteralExpr 0x5605abdb49e0 <col:57> 'std::nullptr_t'
| | | | `-CompoundStmt 0x5605abdb4a50 <col:66, col:67>
| | | |-CXXConstructorDecl 0x5605abdb3c88 <line:104:7, line:106:8> line:104:17 constexpr coroutine_handle 'void (std::nullptr_t) noexcept' implicit-inline
| | | | |-ParmVarDecl 0x5605abdb2aa0 <col:34, col:49> col:49 used __h 'std::nullptr_t'
| | | | |-CXXCtorInitializer Field 0x5605abdb4978 '_M_fr_ptr' 'void *'
| | | | | `-ImplicitCastExpr 0x5605abdb4aa0 <line:105:14> 'void *' <NullToPointer>
| | | | |   `-DeclRefExpr 0x5605abdb4a60 <col:14> 'std::nullptr_t' lvalue ParmVar 0x5605abdb2aa0 '__h' 'std::nullptr_t'
| | | | `-CompoundStmt 0x5605abdb4ae0 <line:106:7, col:8>
| | | |-CXXMethodDecl 0x5605abdb3f98 <line:108:7, line:112:7> line:108:25 operator= 'coroutine_handle<void> &(std::nullptr_t) noexcept' implicit-inline
| | | | |-ParmVarDecl 0x5605abdb3df8 <col:35, col:40> col:49 'std::nullptr_t'
| | | | `-CompoundStmt 0x5605abdb4bf8 <line:109:7, line:112:7>
| | | |   |-BinaryOperator 0x5605abdb4ba0 <line:110:2, col:14> 'void *' lvalue '='
| | | |   | |-MemberExpr 0x5605abdb4b48 <col:2> 'void *' lvalue ->_M_fr_ptr 0x5605abdb4978
| | | |   | | `-CXXThisExpr 0x5605abdb4b38 <col:2> 'std::coroutine_handle<void> *' implicit this
| | | |   | `-ImplicitCastExpr 0x5605abdb4b88 <col:14> 'void *' <NullToPointer>
| | | |   |   `-CXXNullPtrLiteralExpr 0x5605abdb4b78 <col:14> 'std::nullptr_t'
| | | |   `-ReturnStmt 0x5605abdb4be8 <line:111:2, col:10>
| | | |     `-UnaryOperator 0x5605abdb4bd0 <col:9, col:10> 'std::coroutine_handle<void>' lvalue prefix '*' cannot overflow
| | | |       `-CXXThisExpr 0x5605abdb4bc0 <col:10> 'std::coroutine_handle<void> *' this
| | | |-AccessSpecDecl 0x5605abdb4068 <line:114:5, col:11> col:5 public
| | | |-CXXMethodDecl 0x5605abdb4128 <line:116:7, col:68> col:23 used constexpr address 'void *() const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abdb4c80 <col:48, col:68>
| | | |   `-ReturnStmt 0x5605abdb4c70 <col:50, col:57>
| | | |     `-ImplicitCastExpr 0x5605abdb4c58 <col:57> 'void *' <LValueToRValue>
| | | |       `-MemberExpr 0x5605abdb4c28 <col:57> 'void *const' lvalue ->_M_fr_ptr 0x5605abdb4978
| | | |         `-CXXThisExpr 0x5605abdb4c18 <col:57> 'const std::coroutine_handle<void> *' implicit this
| | | |-CXXMethodDecl 0x5605abdb4340 <line:118:7, line:123:7> line:118:41 used constexpr from_address 'coroutine_handle<void> (void *) noexcept' static implicit-inline
| | | | |-ParmVarDecl 0x5605abdb4208 <col:54, col:60> col:60 used __a 'void *'
| | | | `-CompoundStmt 0x5605abdb55a8 <line:119:7, line:123:7>
| | | |   |-DeclStmt 0x5605abdb52c8 <line:120:2, col:25>
| | | |   | `-VarDecl 0x5605abdb4cb0 <col:2, col:19> col:19 used __self 'coroutine_handle<void>':'std::coroutine_handle<void>' nrvo callinit
| | | |   |   `-CXXConstructExpr 0x5605abdb5288 <col:19> 'coroutine_handle<void>':'std::coroutine_handle<void>' 'void () noexcept'
| | | |   |-BinaryOperator 0x5605abdb5368 <line:121:2, col:21> 'void *' lvalue '='
| | | |   | |-MemberExpr 0x5605abdb5300 <col:2, col:9> 'void *' lvalue ._M_fr_ptr 0x5605abdb4978
| | | |   | | `-DeclRefExpr 0x5605abdb52e0 <col:2> 'coroutine_handle<void>':'std::coroutine_handle<void>' lvalue Var 0x5605abdb4cb0 '__self' 'coroutine_handle<void>':'std::coroutine_handle<void>'
| | | |   | `-ImplicitCastExpr 0x5605abdb5350 <col:21> 'void *' <LValueToRValue>
| | | |   |   `-DeclRefExpr 0x5605abdb5330 <col:21> 'void *' lvalue ParmVar 0x5605abdb4208 '__a' 'void *'
| | | |   `-ReturnStmt 0x5605abdb5590 <line:122:2, col:9> nrvo_candidate(Var 0x5605abdb4cb0 '__self' 'coroutine_handle<void>':'std::coroutine_handle<void>')
| | | |     `-CXXConstructExpr 0x5605abdb5560 <col:9> 'coroutine_handle<void>':'std::coroutine_handle<void>' 'void (coroutine_handle<void> &&) noexcept'
| | | |       `-ImplicitCastExpr 0x5605abdb53a8 <col:9> 'coroutine_handle<void>':'std::coroutine_handle<void>' xvalue <NoOp>
| | | |         `-DeclRefExpr 0x5605abdb5388 <col:9> 'coroutine_handle<void>':'std::coroutine_handle<void>' lvalue Var 0x5605abdb4cb0 '__self' 'coroutine_handle<void>':'std::coroutine_handle<void>'
| | | |-AccessSpecDecl 0x5605abdb4410 <line:125:5, col:11> col:5 public
| | | |-CXXConversionDecl 0x5605abdb4478 <line:127:7, line:130:7> line:127:26 constexpr operator bool 'bool () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abdb5688 <line:128:7, line:130:7>
| | | |   `-ReturnStmt 0x5605abdb5678 <line:129:2, col:23>
| | | |     `-CXXFunctionalCastExpr 0x5605abdb5650 <col:9, col:23> 'bool' functional cast to _Bool <NoOp>
| | | |       `-ImplicitCastExpr 0x5605abdb5638 <col:14> 'bool' <PointerToBoolean> part_of_explicit_cast
| | | |         `-ImplicitCastExpr 0x5605abdb5620 <col:14> 'void *' <LValueToRValue> part_of_explicit_cast
| | | |           `-MemberExpr 0x5605abdb55f0 <col:14> 'void *const' lvalue ->_M_fr_ptr 0x5605abdb4978
| | | |             `-CXXThisExpr 0x5605abdb55e0 <col:14> 'const std::coroutine_handle<void> *' implicit this
| | | |-CXXMethodDecl 0x5605abdb4578 <line:132:7, col:75> col:12 done 'bool () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abdb5a08 <col:34, col:75>
| | | |   `-ReturnStmt 0x5605abdb59f8 <col:36, col:72>
| | | |     `-CallExpr 0x5605abdb59b8 <col:43, col:72> 'bool'
| | | |       |-ImplicitCastExpr 0x5605abdb59a0 <col:43> 'bool (*)(void *) noexcept' <BuiltinFnToFnPtr>
| | | |       | `-DeclRefExpr 0x5605abdb58d8 <col:43> '<builtin fn type>' Function 0x5605abdb5738 '__builtin_coro_done' 'bool (void *) noexcept'
| | | |       `-ImplicitCastExpr 0x5605abdb59e0 <col:63> 'void *' <LValueToRValue>
| | | |         `-MemberExpr 0x5605abdb5920 <col:63> 'void *const' lvalue ->_M_fr_ptr 0x5605abdb4978
| | | |           `-CXXThisExpr 0x5605abdb5910 <col:63> 'const std::coroutine_handle<void> *' implicit this
| | | |-CXXMethodDecl 0x5605abdb4698 <line:135:7, col:43> col:12 operator() 'void () const' implicit-inline
| | | | `-CompoundStmt 0x5605abdb5ac8 <col:31, col:43>
| | | |   `-CXXMemberCallExpr 0x5605abdb5aa8 <col:33, col:40> 'void'
| | | |     `-MemberExpr 0x5605abdb5a78 <col:33> '<bound member function type>' ->resume 0x5605abdb4780
| | | |       `-CXXThisExpr 0x5605abdb5a68 <col:33> 'const std::coroutine_handle<void> *' implicit this
| | | |-CXXMethodDecl 0x5605abdb4780 <line:137:7, col:63> col:12 used resume 'void () const' implicit-inline
| | | | `-CompoundStmt 0x5605abdb6b78 <col:27, col:63>
| | | |   `-CallExpr 0x5605abdb6b38 <col:29, col:60> 'void'
| | | |     |-ImplicitCastExpr 0x5605abdb6b20 <col:29> 'void (*)(void *)' <BuiltinFnToFnPtr>
| | | |     | `-DeclRefExpr 0x5605abdb6a58 <col:29> '<builtin fn type>' Function 0x5605abdb5b78 '__builtin_coro_resume' 'void (void *)'
| | | |     `-ImplicitCastExpr 0x5605abdb6b60 <col:51> 'void *' <LValueToRValue>
| | | |       `-MemberExpr 0x5605abdb6aa0 <col:51> 'void *const' lvalue ->_M_fr_ptr 0x5605abdb4978
| | | |         `-CXXThisExpr 0x5605abdb6a90 <col:51> 'const std::coroutine_handle<void> *' implicit this
| | | |-CXXMethodDecl 0x5605abdb4868 <line:139:7, col:65> col:12 destroy 'void () const' implicit-inline
| | | | `-CompoundStmt 0x5605abdb6e50 <col:28, col:65>
| | | |   `-CallExpr 0x5605abdb6e10 <col:30, col:62> 'void'
| | | |     |-ImplicitCastExpr 0x5605abdb6df8 <col:30> 'void (*)(void *)' <BuiltinFnToFnPtr>
| | | |     | `-DeclRefExpr 0x5605abdb6d68 <col:30> '<builtin fn type>' Function 0x5605abdb6bf0 '__builtin_coro_destroy' 'void (void *)'
| | | |     `-ImplicitCastExpr 0x5605abdb6e38 <col:53> 'void *' <LValueToRValue>
| | | |       `-MemberExpr 0x5605abdb6db0 <col:53> 'void *const' lvalue ->_M_fr_ptr 0x5605abdb4978
| | | |         `-CXXThisExpr 0x5605abdb6da0 <col:53> 'const std::coroutine_handle<void> *' implicit this
| | | |-AccessSpecDecl 0x5605abdb4930 <line:141:5, col:14> col:5 protected
| | | |-FieldDecl 0x5605abdb4978 <line:142:7, col:13> col:13 referenced _M_fr_ptr 'void *'
| | | |-CXXConstructorDecl 0x5605abdb4d88 <line:98:5> col:5 implicit constexpr coroutine_handle 'void (const coroutine_handle<void> &)' inline default trivial noexcept-unevaluated 0x5605abdb4d88
| | | | `-ParmVarDecl 0x5605abdb4ec8 <col:5> col:5 'const coroutine_handle<void> &'
| | | |-CXXConstructorDecl 0x5605abdb4fb8 <col:5> col:5 implicit used constexpr coroutine_handle 'void (coroutine_handle<void> &&) noexcept' inline default trivial
| | | | |-ParmVarDecl 0x5605abdb50f8 <col:5> col:5 used 'coroutine_handle<void> &&'
| | | | |-CXXCtorInitializer Field 0x5605abdb4978 '_M_fr_ptr' 'void *'
| | | | | `-ImplicitCastExpr 0x5605abdb5510 <col:5> 'void *' <LValueToRValue>
| | | | |   `-MemberExpr 0x5605abdb54d8 <col:5> 'void *' xvalue ._M_fr_ptr 0x5605abdb4978
| | | | |     `-CXXStaticCastExpr 0x5605abdb54a8 <col:5> 'coroutine_handle<void>':'std::coroutine_handle<void>' xvalue static_cast<coroutine_handle<void> &&> <NoOp>
| | | | |       `-DeclRefExpr 0x5605abdb5458 <col:5> 'coroutine_handle<void>':'std::coroutine_handle<void>' lvalue ParmVar 0x5605abdb50f8 depth 0 index 0 'coroutine_handle<void> &&'
| | | | `-CompoundStmt 0x5605abdb5550 <col:5>
| | | `-CXXDestructorDecl 0x5605abde3dd8 <col:5> col:5 implicit referenced constexpr ~coroutine_handle 'void () noexcept' inline default trivial
| | |-FunctionDecl 0x5605abdb7170 <line:147:3, line:151:3> line:148:3 constexpr operator== 'bool (coroutine_handle<>, coroutine_handle<>) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abdb6f18 <col:14, col:33> col:33 used __a 'coroutine_handle<>':'std::coroutine_handle<void>'
| | | |-ParmVarDecl 0x5605abdb7018 <col:38, col:57> col:57 used __b 'coroutine_handle<>':'std::coroutine_handle<void>'
| | | `-CompoundStmt 0x5605abdb7390 <line:149:3, line:151:3>
| | |   `-ReturnStmt 0x5605abdb7380 <line:150:5, col:41>
| | |     `-BinaryOperator 0x5605abdb7360 <col:12, col:41> 'bool' '=='
| | |       |-CXXMemberCallExpr 0x5605abdb72b8 <col:12, col:24> 'void *'
| | |       | `-MemberExpr 0x5605abdb7270 <col:12, col:16> '<bound member function type>' .address 0x5605abdb4128
| | |       |   `-ImplicitCastExpr 0x5605abdb72a0 <col:12> 'const std::coroutine_handle<void>' lvalue <NoOp>
| | |       |     `-DeclRefExpr 0x5605abdb7250 <col:12> 'coroutine_handle<>':'std::coroutine_handle<void>' lvalue ParmVar 0x5605abdb6f18 '__a' 'coroutine_handle<>':'std::coroutine_handle<void>'
| | |       `-CXXMemberCallExpr 0x5605abdb7340 <col:29, col:41> 'void *'
| | |         `-MemberExpr 0x5605abdb72f8 <col:29, col:33> '<bound member function type>' .address 0x5605abdb4128
| | |           `-ImplicitCastExpr 0x5605abdb7328 <col:29> 'const std::coroutine_handle<void>' lvalue <NoOp>
| | |             `-DeclRefExpr 0x5605abdb72d8 <col:29> 'coroutine_handle<>':'std::coroutine_handle<void>' lvalue ParmVar 0x5605abdb7018 '__b' 'coroutine_handle<>':'std::coroutine_handle<void>'
| | |-FunctionDecl 0x5605abdb76a0 <line:154:3, line:158:3> line:155:3 constexpr operator<=> 'strong_ordering (coroutine_handle<>, coroutine_handle<>) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abdb7448 <col:15, col:34> col:34 used __a 'coroutine_handle<>':'std::coroutine_handle<void>'
| | | |-ParmVarDecl 0x5605abdb7548 <col:39, col:58> col:58 used __b 'coroutine_handle<>':'std::coroutine_handle<void>'
| | | `-CompoundStmt 0x5605abddf0e0 <line:156:3, line:158:3>
| | |   `-ReturnStmt 0x5605abddf0d0 <line:157:5, col:65>
| | |     `-ExprWithCleanups 0x5605abddf0b8 <col:12, col:65> 'std::strong_ordering'
| | |       `-CXXOperatorCallExpr 0x5605abddf078 <col:12, col:65> 'std::strong_ordering' '()'
| | |         |-ImplicitCastExpr 0x5605abddf000 <col:36, col:65> 'std::strong_ordering (*)(void *&&, void *&&) const noexcept(noexcept(std::declval<void *>() <=> std::declval<void *>()))' <FunctionToPointerDecay>
| | |         | `-DeclRefExpr 0x5605abddef80 <col:36, col:65> 'std::strong_ordering (void *&&, void *&&) const noexcept(noexcept(std::declval<void *>() <=> std::declval<void *>()))' lvalue CXXMethod 0x5605abdb7cb0 'operator()' 'std::strong_ordering (void *&&, void *&&) const noexcept(noexcept(std::declval<void *>() <=> std::declval<void *>()))'
| | |         |-ImplicitCastExpr 0x5605abddf030 <col:12, col:35> 'const std::compare_three_way' lvalue <NoOp>
| | |         | `-MaterializeTemporaryExpr 0x5605abddf018 <col:12, col:35> 'std::compare_three_way' lvalue
| | |         |   `-CXXTemporaryObjectExpr 0x5605abdb7830 <col:12, col:35> 'std::compare_three_way' 'void () noexcept' zeroing
| | |         |-MaterializeTemporaryExpr 0x5605abddf048 <col:37, col:49> 'void *' xvalue
| | |         | `-CXXMemberCallExpr 0x5605abdb78c8 <col:37, col:49> 'void *'
| | |         |   `-MemberExpr 0x5605abdb7880 <col:37, col:41> '<bound member function type>' .address 0x5605abdb4128
| | |         |     `-ImplicitCastExpr 0x5605abdb78b0 <col:37> 'const std::coroutine_handle<void>' lvalue <NoOp>
| | |         |       `-DeclRefExpr 0x5605abdb7860 <col:37> 'coroutine_handle<>':'std::coroutine_handle<void>' lvalue ParmVar 0x5605abdb7448 '__a' 'coroutine_handle<>':'std::coroutine_handle<void>'
| | |         `-MaterializeTemporaryExpr 0x5605abddf060 <col:52, col:64> 'void *' xvalue
| | |           `-CXXMemberCallExpr 0x5605abdb7950 <col:52, col:64> 'void *'
| | |             `-MemberExpr 0x5605abdb7908 <col:52, col:56> '<bound member function type>' .address 0x5605abdb4128
| | |               `-ImplicitCastExpr 0x5605abdb7938 <col:52> 'const std::coroutine_handle<void>' lvalue <NoOp>
| | |                 `-DeclRefExpr 0x5605abdb78e8 <col:52> 'coroutine_handle<>':'std::coroutine_handle<void>' lvalue ParmVar 0x5605abdb7548 '__b' 'coroutine_handle<>':'std::coroutine_handle<void>'
| | |-ClassTemplateDecl 0x5605abddf240 prev 0x5605abdb2338 <line:192:3, line:256:5> line:193:12 coroutine_handle
| | | |-TemplateTypeParmDecl 0x5605abddf100 <line:192:13, col:22> col:22 referenced typename depth 0 index 0 _Promise
| | | | `-TemplateArgument type 'void'
| | | |   |-inherited from TemplateTypeParm 0x5605abdb21c0 '_Promise'
| | | |   `-BuiltinType 0x5605aba9c9d0 'void'
| | | |-CXXRecordDecl 0x5605abddf1a8 prev 0x5605abdb2288 <line:193:5, line:256:5> line:193:12 struct coroutine_handle definition
| | | | |-DefinitionData standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists non_trivial user_provided constexpr defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-TypeNullableAttr 0x5605abddf330 <<invalid sloc>> Inherited Implicit
| | | | |-CXXRecordDecl 0x5605abddf360 <col:5, col:12> col:12 implicit referenced struct coroutine_handle
| | | | |-CXXConstructorDecl 0x5605abddf488 <line:197:7, col:47> col:17 constexpr coroutine_handle<_Promise> 'void () noexcept' implicit-inline
| | | | | `-CompoundStmt 0x5605abde08c8 <col:45, col:47>
| | | | |-CXXConstructorDecl 0x5605abddf690 <line:199:7, col:56> col:17 constexpr coroutine_handle<_Promise> 'void (nullptr_t) noexcept' implicit-inline
| | | | | |-ParmVarDecl 0x5605abddf598 <col:34> col:43 'nullptr_t':'std::nullptr_t'
| | | | | `-CompoundStmt 0x5605abde08d8 <col:54, col:56>
| | | | |-CXXMethodDecl 0x5605abddf918 <line:201:7, line:208:7> line:202:7 from_promise 'coroutine_handle<_Promise> (_Promise &)' static implicit-inline
| | | | | |-ParmVarDecl 0x5605abddf7e8 <col:20, col:30> col:30 referenced __p '_Promise &'
| | | | | `-CompoundStmt 0x5605abde0f40 <line:203:7, line:208:7>
| | | | |   |-DeclStmt 0x5605abde0968 <line:204:2, col:25>
| | | | |   | `-VarDecl 0x5605abde0900 <col:2, col:19> col:19 referenced __self 'coroutine_handle<_Promise>' nrvo
| | | | |   |-BinaryOperator 0x5605abde0ed0 <line:205:2, line:206:68> 'void *' lvalue '='
| | | | |   | |-MemberExpr 0x5605abde09b8 <line:205:2, col:9> 'void *' lvalue ._M_fr_ptr 0x5605abde0838
| | | | |   | | `-DeclRefExpr 0x5605abde0980 <col:2> 'coroutine_handle<_Promise>' lvalue Var 0x5605abde0900 '__self' 'coroutine_handle<_Promise>'
| | | | |   | `-CallExpr 0x5605abde0e68 <line:206:6, col:68> 'void *'
| | | | |   |   |-ImplicitCastExpr 0x5605abde0e50 <col:6> 'void *(*)(void *, int, bool) noexcept' <BuiltinFnToFnPtr>
| | | | |   |   | `-DeclRefExpr 0x5605abde0d28 <col:6> '<builtin fn type>' Function 0x5605abde0a98 '__builtin_coro_promise' 'void *(void *, int, bool) noexcept'
| | | | |   |   |-ImplicitCastExpr 0x5605abde0ea0 <col:29, col:38> 'void *' <BitCast>
| | | | |   |   | `-CStyleCastExpr 0x5605abde0db0 <col:29, col:38> 'char *' <Dependent>
| | | | |   |   |   `-UnaryOperator 0x5605abde0d80 <col:37, col:38> '<dependent type>' prefix '&' cannot overflow
| | | | |   |   |     `-DeclRefExpr 0x5605abde0d60 <col:38> '_Promise' lvalue ParmVar 0x5605abddf7e8 '__p' '_Promise &'
| | | | |   |   |-ImplicitCastExpr 0x5605abde0eb8 <col:43, col:61> 'int' <IntegralCast>
| | | | |   |   | `-UnaryExprOrTypeTraitExpr 0x5605abde0de8 <col:43, col:61> 'unsigned long' __alignof '_Promise'
| | | | |   |   `-CXXBoolLiteralExpr 0x5605abde0e08 <col:64> 'bool' true
| | | | |   `-ReturnStmt 0x5605abde0f28 <line:207:2, col:9> nrvo_candidate(Var 0x5605abde0900 '__self' 'coroutine_handle<_Promise>')
| | | | |     `-ImplicitCastExpr 0x5605abde0f10 <col:9> 'coroutine_handle<_Promise>' xvalue <NoOp>
| | | | |       `-DeclRefExpr 0x5605abde0ef0 <col:9> 'coroutine_handle<_Promise>' lvalue Var 0x5605abde0900 '__self' 'coroutine_handle<_Promise>'
| | | | |-CXXMethodDecl 0x5605abddfb98 <line:210:7, line:214:7> line:210:25 operator= 'coroutine_handle<_Promise> &(nullptr_t) noexcept' implicit-inline
| | | | | |-ParmVarDecl 0x5605abddf9f8 <col:35> col:44 'nullptr_t':'std::nullptr_t'
| | | | | `-CompoundStmt 0x5605abde1070 <line:211:7, line:214:7>
| | | | |   |-BinaryOperator 0x5605abde1018 <line:212:2, col:14> 'void *' lvalue '='
| | | | |   | |-MemberExpr 0x5605abde0fc0 <col:2> 'void *' lvalue ->_M_fr_ptr 0x5605abde0838
| | | | |   | | `-CXXThisExpr 0x5605abde0fb0 <col:2> 'coroutine_handle<_Promise> *' implicit this
| | | | |   | `-ImplicitCastExpr 0x5605abde1000 <col:14> 'void *' <NullToPointer>
| | | | |   |   `-CXXNullPtrLiteralExpr 0x5605abde0ff0 <col:14> 'std::nullptr_t'
| | | | |   `-ReturnStmt 0x5605abde1060 <line:213:2, col:10>
| | | | |     `-UnaryOperator 0x5605abde1048 <col:9, col:10> 'coroutine_handle<_Promise>' lvalue prefix '*' cannot overflow
| | | | |       `-CXXThisExpr 0x5605abde1038 <col:10> 'coroutine_handle<_Promise> *' this
| | | | |-CXXMethodDecl 0x5605abddfcc8 <line:218:7, col:68> col:23 referenced constexpr address 'void *() const noexcept' implicit-inline
| | | | | `-CompoundStmt 0x5605abde10f8 <col:48, col:68>
| | | | |   `-ReturnStmt 0x5605abde10e8 <col:50, col:57>
| | | | |     `-ImplicitCastExpr 0x5605abde10d0 <col:57> 'void *' <LValueToRValue>
| | | | |       `-MemberExpr 0x5605abde10a0 <col:57> 'void *const' lvalue ->_M_fr_ptr 0x5605abde0838
| | | | |         `-CXXThisExpr 0x5605abde1090 <col:57> 'const coroutine_handle<_Promise> *' implicit this
| | | | |-CXXMethodDecl 0x5605abddfee0 <line:220:7, line:225:7> line:220:41 constexpr from_address 'coroutine_handle<_Promise> (void *) noexcept' static implicit-inline
| | | | | |-ParmVarDecl 0x5605abddfda8 <col:54, col:60> col:60 referenced __a 'void *'
| | | | | `-CompoundStmt 0x5605abde12b8 <line:221:7, line:225:7>
| | | | |   |-DeclStmt 0x5605abde1190 <line:222:2, col:25>
| | | | |   | `-VarDecl 0x5605abde1128 <col:2, col:19> col:19 referenced __self 'coroutine_handle<_Promise>' nrvo
| | | | |   |-BinaryOperator 0x5605abde1248 <line:223:2, col:21> 'void *' lvalue '='
| | | | |   | |-MemberExpr 0x5605abde11e0 <col:2, col:9> 'void *' lvalue ._M_fr_ptr 0x5605abde0838
| | | | |   | | `-DeclRefExpr 0x5605abde11a8 <col:2> 'coroutine_handle<_Promise>' lvalue Var 0x5605abde1128 '__self' 'coroutine_handle<_Promise>'
| | | | |   | `-ImplicitCastExpr 0x5605abde1230 <col:21> 'void *' <LValueToRValue>
| | | | |   |   `-DeclRefExpr 0x5605abde1210 <col:21> 'void *' lvalue ParmVar 0x5605abddfda8 '__a' 'void *'
| | | | |   `-ReturnStmt 0x5605abde12a0 <line:224:2, col:9> nrvo_candidate(Var 0x5605abde1128 '__self' 'coroutine_handle<_Promise>')
| | | | |     `-ImplicitCastExpr 0x5605abde1288 <col:9> 'coroutine_handle<_Promise>' xvalue <NoOp>
| | | | |       `-DeclRefExpr 0x5605abde1268 <col:9> 'coroutine_handle<_Promise>' lvalue Var 0x5605abde1128 '__self' 'coroutine_handle<_Promise>'
| | | | |-CXXConversionDecl 0x5605abde0108 <line:228:7, line:229:61> line:228:17 constexpr operator coroutine_handle 'coroutine_handle<> () const noexcept' implicit-inline
| | | | | `-CompoundStmt 0x5605abde1430 <line:229:7, col:61>
| | | | |   `-ReturnStmt 0x5605abde1420 <col:9, col:58>
| | | | |     `-CallExpr 0x5605abde13f8 <col:16, col:58> '<dependent type>'
| | | | |       |-DeclRefExpr 0x5605abde1368 <col:16, col:36> 'coroutine_handle<void> (void *) noexcept' lvalue CXXMethod 0x5605abdb4340 'from_address' 'coroutine_handle<void> (void *) noexcept'
| | | | |       | `-NestedNameSpecifier TypeSpec 'coroutine_handle<>':'std::coroutine_handle<void>'
| | | | |       `-CallExpr 0x5605abde13d8 <col:49, col:57> '<dependent type>'
| | | | |         `-MemberExpr 0x5605abde13a8 <col:49> '<bound member function type>' ->address 0x5605abddfcc8
| | | | |           `-CXXThisExpr 0x5605abde1398 <col:49> 'const coroutine_handle<_Promise> *' implicit this
| | | | |-CXXConversionDecl 0x5605abde0218 <line:232:7, line:235:7> line:232:26 constexpr operator bool 'bool () const noexcept' implicit-inline
| | | | | `-CompoundStmt 0x5605abde14d0 <line:233:7, line:235:7>
| | | | |   `-ReturnStmt 0x5605abde14c0 <line:234:2, col:23>
| | | | |     `-CXXFunctionalCastExpr 0x5605abde1498 <col:9, col:23> 'bool' functional cast to _Bool <Dependent>
| | | | |       `-MemberExpr 0x5605abde1468 <col:14> 'void *const' lvalue ->_M_fr_ptr 0x5605abde0838
| | | | |         `-CXXThisExpr 0x5605abde1458 <col:14> 'const coroutine_handle<_Promise> *' implicit this
| | | | |-CXXMethodDecl 0x5605abde0320 <line:237:7, col:75> col:12 done 'bool () const noexcept' implicit-inline
| | | | | `-CompoundStmt 0x5605abde1b60 <col:34, col:75>
| | | | |   `-ReturnStmt 0x5605abde1b50 <col:36, col:72>
| | | | |     `-CallExpr 0x5605abde1b10 <col:43, col:72> 'bool'
| | | | |       |-ImplicitCastExpr 0x5605abde1af8 <col:43> 'bool (*)(void *) noexcept' <BuiltinFnToFnPtr>
| | | | |       | `-DeclRefExpr 0x5605abde14e8 <col:43> '<builtin fn type>' Function 0x5605abdb5738 '__builtin_coro_done' 'bool (void *) noexcept'
| | | | |       `-ImplicitCastExpr 0x5605abde1b38 <col:63> 'void *' <LValueToRValue>
| | | | |         `-MemberExpr 0x5605abde1518 <col:63> 'void *const' lvalue ->_M_fr_ptr 0x5605abde0838
| | | | |           `-CXXThisExpr 0x5605abde1508 <col:63> 'const coroutine_handle<_Promise> *' implicit this
| | | | |-CXXMethodDecl 0x5605abde0408 <line:240:7, col:43> col:12 operator() 'void () const' implicit-inline
| | | | | `-CompoundStmt 0x5605abde1c20 <col:31, col:43>
| | | | |   `-CallExpr 0x5605abde1c00 <col:33, col:40> '<dependent type>'
| | | | |     `-MemberExpr 0x5605abde1bd0 <col:33> '<bound member function type>' ->resume 0x5605abde04f0
| | | | |       `-CXXThisExpr 0x5605abde1bc0 <col:33> 'const coroutine_handle<_Promise> *' implicit this
| | | | |-CXXMethodDecl 0x5605abde04f0 <line:242:7, col:63> col:12 referenced resume 'void () const' implicit-inline
| | | | | `-CompoundStmt 0x5605abde1d08 <col:27, col:63>
| | | | |   `-CallExpr 0x5605abde1cc8 <col:29, col:60> 'void'
| | | | |     |-ImplicitCastExpr 0x5605abde1cb0 <col:29> 'void (*)(void *)' <BuiltinFnToFnPtr>
| | | | |     | `-DeclRefExpr 0x5605abde1c38 <col:29> '<builtin fn type>' Function 0x5605abdb5b78 '__builtin_coro_resume' 'void (void *)'
| | | | |     `-ImplicitCastExpr 0x5605abde1cf0 <col:51> 'void *' <LValueToRValue>
| | | | |       `-MemberExpr 0x5605abde1c68 <col:51> 'void *const' lvalue ->_M_fr_ptr 0x5605abde0838
| | | | |         `-CXXThisExpr 0x5605abde1c58 <col:51> 'const coroutine_handle<_Promise> *' implicit this
| | | | |-CXXMethodDecl 0x5605abde05d8 <line:244:7, col:65> col:12 destroy 'void () const' implicit-inline
| | | | | `-CompoundStmt 0x5605abde1df0 <col:28, col:65>
| | | | |   `-CallExpr 0x5605abde1db0 <col:30, col:62> 'void'
| | | | |     |-ImplicitCastExpr 0x5605abde1d98 <col:30> 'void (*)(void *)' <BuiltinFnToFnPtr>
| | | | |     | `-DeclRefExpr 0x5605abde1d20 <col:30> '<builtin fn type>' Function 0x5605abdb6bf0 '__builtin_coro_destroy' 'void (void *)'
| | | | |     `-ImplicitCastExpr 0x5605abde1dd8 <col:53> 'void *' <LValueToRValue>
| | | | |       `-MemberExpr 0x5605abde1d50 <col:53> 'void *const' lvalue ->_M_fr_ptr 0x5605abde0838
| | | | |         `-CXXThisExpr 0x5605abde1d40 <col:53> 'const coroutine_handle<_Promise> *' implicit this
| | | | |-CXXMethodDecl 0x5605abde0728 <line:247:7, line:252:7> line:247:17 promise '_Promise &() const' implicit-inline
| | | | | `-CompoundStmt 0x5605abde20b8 <line:248:7, line:252:7>
| | | | |   |-DeclStmt 0x5605abde1fc8 <line:249:2, line:250:68>
| | | | |   | `-VarDecl 0x5605abde1e28 <line:249:2, line:250:67> line:249:8 referenced __t 'void *' cinit
| | | | |   |   `-CallExpr 0x5605abde1f60 <line:250:6, col:67> 'void *'
| | | | |   |     |-ImplicitCastExpr 0x5605abde1f48 <col:6> 'void *(*)(void *, int, bool) noexcept' <BuiltinFnToFnPtr>
| | | | |   |     | `-DeclRefExpr 0x5605abde1e90 <col:6> '<builtin fn type>' Function 0x5605abde0a98 '__builtin_coro_promise' 'void *(void *, int, bool) noexcept'
| | | | |   |     |-ImplicitCastExpr 0x5605abde1f98 <col:30> 'void *' <LValueToRValue>
| | | | |   |     | `-MemberExpr 0x5605abde1ec0 <col:30> 'void *const' lvalue ->_M_fr_ptr 0x5605abde0838
| | | | |   |     |   `-CXXThisExpr 0x5605abde1eb0 <col:30> 'const coroutine_handle<_Promise> *' implicit this
| | | | |   |     |-ImplicitCastExpr 0x5605abde1fb0 <col:41, col:59> 'int' <IntegralCast>
| | | | |   |     | `-UnaryExprOrTypeTraitExpr 0x5605abde1f00 <col:41, col:59> 'unsigned long' __alignof '_Promise'
| | | | |   |     `-CXXBoolLiteralExpr 0x5605abde1f20 <col:62> 'bool' false
| | | | |   `-ReturnStmt 0x5605abde20a8 <line:251:2, col:36>
| | | | |     `-UnaryOperator 0x5605abde2090 <col:9, col:36> '_Promise' lvalue prefix '*' cannot overflow
| | | | |       `-CXXStaticCastExpr 0x5605abde2060 <col:10, col:36> '_Promise *' static_cast<_Promise *> <Dependent>
| | | | |         `-DeclRefExpr 0x5605abde1fe0 <col:33> 'void *' lvalue Var 0x5605abde1e28 '__t' 'void *'
| | | | |-AccessSpecDecl 0x5605abde07f0 <line:254:5, col:12> col:5 private
| | | | `-FieldDecl 0x5605abde0838 <line:255:7, col:25> col:13 referenced _M_fr_ptr 'void *'
| | | |   `-ImplicitCastExpr 0x5605abde08b0 <col:25> 'void *' <NullToPointer>
| | | |     `-CXXNullPtrLiteralExpr 0x5605abde08a0 <col:25> 'std::nullptr_t'
| | | |-ClassTemplateSpecialization 0x5605abdb2608 'coroutine_handle'
| | | `-ClassTemplateSpecialization 0x5605abde2348 'coroutine_handle'
| | |-CXXRecordDecl 0x5605abde20e0 <line:259:3, line:261:3> line:259:10 referenced struct noop_coroutine_promise definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr
| | | |-CXXRecordDecl 0x5605abde2220 <col:3, col:10> col:10 implicit struct noop_coroutine_promise
| | | `-CXXDestructorDecl 0x5605abde4440 <col:10> col:10 implicit referenced constexpr ~noop_coroutine_promise 'void () noexcept' inline default trivial
| | |-ClassTemplateSpecializationDecl 0x5605abde2348 <line:265:3, line:310:5> line:266:12 struct coroutine_handle definition explicit_specialization
| | | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr
| | | |-TemplateArgument type 'std::noop_coroutine_promise'
| | | | `-RecordType 0x5605abde2190 'std::noop_coroutine_promise'
| | | |   `-CXXRecord 0x5605abde20e0 'noop_coroutine_promise'
| | | |-CXXRecordDecl 0x5605abde2528 <col:5, col:12> col:12 implicit referenced struct coroutine_handle
| | | |-CXXConversionDecl 0x5605abde26f8 <line:271:7, line:272:61> line:271:17 constexpr operator coroutine_handle 'coroutine_handle<> () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde3ef0 <line:272:7, col:61>
| | | |   `-ReturnStmt 0x5605abde3ee0 <col:9, col:58>
| | | |     `-CallExpr 0x5605abde3da8 <col:16, col:58> 'coroutine_handle<void>':'std::coroutine_handle<void>'
| | | |       |-ImplicitCastExpr 0x5605abde3d90 <col:16, col:36> 'coroutine_handle<void> (*)(void *) noexcept' <FunctionToPointerDecay>
| | | |       | `-DeclRefExpr 0x5605abde3b88 <col:16, col:36> 'coroutine_handle<void> (void *) noexcept' lvalue CXXMethod 0x5605abdb4340 'from_address' 'coroutine_handle<void> (void *) noexcept'
| | | |       |   `-NestedNameSpecifier TypeSpec 'coroutine_handle<>':'std::coroutine_handle<void>'
| | | |       `-CXXMemberCallExpr 0x5605abde3c30 <col:49, col:57> 'void *'
| | | |         `-MemberExpr 0x5605abde3bc8 <col:49> '<bound member function type>' ->address 0x5605abde2ec0
| | | |           `-CXXThisExpr 0x5605abde3bb8 <col:49> 'const std::coroutine_handle<noop_coroutine_promise> *' implicit this
| | | |-CXXConversionDecl 0x5605abde2808 <line:275:7, col:72> col:26 constexpr operator bool 'bool () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde3f28 <col:57, col:72>
| | | |   `-ReturnStmt 0x5605abde3f18 <col:59, col:66>
| | | |     `-CXXBoolLiteralExpr 0x5605abde3f08 <col:66> 'bool' true
| | | |-CXXMethodDecl 0x5605abde2910 <line:277:7, col:60> col:22 constexpr done 'bool () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde3f60 <col:44, col:60>
| | | |   `-ReturnStmt 0x5605abde3f50 <col:46, col:53>
| | | |     `-CXXBoolLiteralExpr 0x5605abde3f40 <col:53> 'bool' false
| | | |-CXXMethodDecl 0x5605abde2a30 <line:280:7, col:41> col:12 operator() 'void () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde3f78 <col:40, col:41>
| | | |-CXXMethodDecl 0x5605abde2b20 <line:282:7, col:37> col:12 resume 'void () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde3f88 <col:36, col:37>
| | | |-CXXMethodDecl 0x5605abde2c10 <line:284:7, col:38> col:12 destroy 'void () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde3f98 <col:37, col:38>
| | | |-CXXMethodDecl 0x5605abde2dc8 <line:287:7, line:288:27> line:287:31 promise 'noop_coroutine_promise &() const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde4008 <line:288:7, col:27>
| | | |   `-ReturnStmt 0x5605abde3ff8 <col:9, col:22>
| | | |     `-MemberExpr 0x5605abde3fc8 <col:16, col:22> 'struct noop_coroutine_promise':'std::noop_coroutine_promise' lvalue .__p 0x5605abde3698
| | | |       `-DeclRefExpr 0x5605abde3fa8 <col:16> '__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame' lvalue Var 0x5605abde3748 '_S_fr' '__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame'
| | | |-CXXMethodDecl 0x5605abde2ec0 <line:291:7, col:68> col:23 used constexpr address 'void *() const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde4088 <col:48, col:68>
| | | |   `-ReturnStmt 0x5605abde4078 <col:50, col:57>
| | | |     `-ImplicitCastExpr 0x5605abde4060 <col:57> 'void *' <LValueToRValue>
| | | |       `-MemberExpr 0x5605abde4030 <col:57> 'void *const' lvalue ->_M_fr_ptr 0x5605abde3930
| | | |         `-CXXThisExpr 0x5605abde4020 <col:57> 'const std::coroutine_handle<noop_coroutine_promise> *' implicit this
| | | |-AccessSpecDecl 0x5605abde2f88 <line:293:5, col:12> col:5 private
| | | |-FriendDecl 0x5605abde3148 <line:294:7, col:48> col:31
| | | | `-FunctionDecl 0x5605abde3070 parent 0x5605abdb0b00 <col:7, col:48> col:31 friend_undeclared noop_coroutine 'coroutine_handle<noop_coroutine_promise> () noexcept'
| | | |-CXXRecordDecl 0x5605abde3198 <line:296:7, line:303:7> line:296:14 referenced struct __frame definition
| | | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | | |-DefaultConstructor exists non_trivial constexpr needs_implicit defaulted_is_constexpr
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | | |-CXXRecordDecl 0x5605abde32d0 <col:7, col:14> col:14 implicit struct __frame
| | | | |-CXXMethodDecl 0x5605abde33d8 <line:298:2, col:41> col:14 used __dummy_resume_destroy 'void ()' static implicit-inline
| | | | | `-CompoundStmt 0x5605abde40a0 <col:39, col:41>
| | | | |-FieldDecl 0x5605abde3568 <line:300:2, col:18> col:9 __r 'void (*)()'
| | | | | `-ImplicitCastExpr 0x5605abde39b8 <col:18> 'void (*)()' <FunctionToPointerDecay>
| | | | |   `-DeclRefExpr 0x5605abde3998 <col:18> 'void ()' lvalue CXXMethod 0x5605abde33d8 '__dummy_resume_destroy' 'void ()'
| | | | |-FieldDecl 0x5605abde35f0 <line:301:2, col:18> col:9 __d 'void (*)()'
| | | | | `-ImplicitCastExpr 0x5605abde39f0 <col:18> 'void (*)()' <FunctionToPointerDecay>
| | | | |   `-DeclRefExpr 0x5605abde39d0 <col:18> 'void ()' lvalue CXXMethod 0x5605abde33d8 '__dummy_resume_destroy' 'void ()'
| | | | `-FieldDecl 0x5605abde3698 <line:302:2, col:32> col:32 referenced __p 'struct noop_coroutine_promise':'std::noop_coroutine_promise'
| | | |-VarDecl 0x5605abde3748 <line:305:7, col:22> col:22 used _S_fr '__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame' static
| | | |-CXXConstructorDecl 0x5605abde3848 <line:307:7, col:52> col:16 used constexpr coroutine_handle 'void () noexcept' default implicit-inline
| | | | |-CXXCtorInitializer Field 0x5605abde3930 '_M_fr_ptr' 'void *'
| | | | | `-CXXDefaultInitExpr 0x5605abde4e00 <col:16> 'void *' has rewritten init
| | | | |   `-ImplicitCastExpr 0x5605abde3ae0 <line:309:25, col:26> 'void *' <BitCast>
| | | | |     `-UnaryOperator 0x5605abde3a60 <col:25, col:26> '__frame *' prefix '&' cannot overflow
| | | | |       `-DeclRefExpr 0x5605abde3a08 <col:26> '__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame' lvalue Var 0x5605abde3748 '_S_fr' '__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame'
| | | | `-CompoundStmt 0x5605abde4e50 <line:307:52>
| | | |-FieldDecl 0x5605abde3930 <line:309:7, col:26> col:13 referenced _M_fr_ptr 'void *'
| | | | `-ImplicitCastExpr 0x5605abde3ae0 <col:25, col:26> 'void *' <BitCast>
| | | |   `-UnaryOperator 0x5605abde3a60 <col:25, col:26> '__frame *' prefix '&' cannot overflow
| | | |     `-DeclRefExpr 0x5605abde3a08 <col:26> '__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame' lvalue Var 0x5605abde3748 '_S_fr' '__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame'
| | | |-CXXConstructorDecl 0x5605abde49a8 <line:266:12> col:12 implicit constexpr coroutine_handle 'void (const coroutine_handle<noop_coroutine_promise> &)' inline default trivial noexcept-unevaluated 0x5605abde49a8
| | | | `-ParmVarDecl 0x5605abde4ae8 <col:12> col:12 'const coroutine_handle<noop_coroutine_promise> &'
| | | |-CXXConstructorDecl 0x5605abde4bd8 <col:12> col:12 implicit constexpr coroutine_handle 'void (coroutine_handle<noop_coroutine_promise> &&)' inline default trivial noexcept-unevaluated 0x5605abde4bd8
| | | | `-ParmVarDecl 0x5605abde4d18 <col:12> col:12 'coroutine_handle<noop_coroutine_promise> &&'
| | | `-CXXDestructorDecl 0x5605abde4e98 <col:12> col:12 implicit referenced constexpr ~coroutine_handle 'void () noexcept' inline default trivial
| | |-TypeAliasDecl 0x5605abde4188 <line:312:3, col:72> col:9 referenced noop_coroutine_handle 'coroutine_handle<noop_coroutine_promise>':'std::coroutine_handle<noop_coroutine_promise>'
| | | `-ElaboratedType 0x5605abde4110 'coroutine_handle<noop_coroutine_promise>' sugar
| | |   `-TemplateSpecializationType 0x5605abde40c0 'coroutine_handle<noop_coroutine_promise>' sugar
| | |     |-name: 'coroutine_handle':'std::coroutine_handle' qualified
| | |     | `-ClassTemplateDecl 0x5605abddf240 prev 0x5605abdb2338 <line:192:3, line:256:5> line:193:12 coroutine_handle
| | |     |-TemplateArgument type 'noop_coroutine_promise':'std::noop_coroutine_promise'
| | |     | `-ElaboratedType 0x5605abde2300 'noop_coroutine_promise' sugar
| | |     |   `-RecordType 0x5605abde2190 'std::noop_coroutine_promise'
| | |     |     `-CXXRecord 0x5605abde20e0 'noop_coroutine_promise'
| | |     `-RecordType 0x5605abde2440 'std::coroutine_handle<noop_coroutine_promise>'
| | |       `-ClassTemplateSpecialization 0x5605abde2348 'coroutine_handle'
| | |-VarDecl 0x5605abde42e8 parent 0x5605abde2348 prev 0x5605abde3748 <line:314:3, line:315:32> col:26 used _S_fr 'noop_coroutine_handle::__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame' inline listinit
| | | |-NestedNameSpecifier TypeSpec 'std::noop_coroutine_handle':'std::coroutine_handle<noop_coroutine_promise>'
| | | `-InitListExpr 0x5605abde43e0 <col:31, col:32> 'noop_coroutine_handle::__frame':'std::coroutine_handle<std::noop_coroutine_promise>::__frame'
| | |   |-CXXDefaultInitExpr 0x5605abde4550 <col:32> 'void (*)()' has rewritten init
| | |   | `-ImplicitCastExpr 0x5605abde39b8 <line:300:18> 'void (*)()' <FunctionToPointerDecay>
| | |   |   `-DeclRefExpr 0x5605abde3998 <col:18> 'void ()' lvalue CXXMethod 0x5605abde33d8 '__dummy_resume_destroy' 'void ()'
| | |   |-CXXDefaultInitExpr 0x5605abde4578 <line:315:32> 'void (*)()' has rewritten init
| | |   | `-ImplicitCastExpr 0x5605abde39f0 <line:301:18> 'void (*)()' <FunctionToPointerDecay>
| | |   |   `-DeclRefExpr 0x5605abde39d0 <col:18> 'void ()' lvalue CXXMethod 0x5605abde33d8 '__dummy_resume_destroy' 'void ()'
| | |   `-InitListExpr 0x5605abde45e0 <line:315:32> 'struct noop_coroutine_promise':'std::noop_coroutine_promise'
| | |-FunctionDecl 0x5605abde48b0 prev 0x5605abde3070 <line:317:3, line:320:3> line:317:32 noop_coroutine 'noop_coroutine_handle () noexcept' inline
| | | `-CompoundStmt 0x5605abde4fb0 <line:318:3, line:320:3>
| | |   `-ReturnStmt 0x5605abde4fa0 <line:319:5, col:34>
| | |     `-CXXTemporaryObjectExpr 0x5605abde4e60 <col:12, col:34> 'noop_coroutine_handle':'std::coroutine_handle<noop_coroutine_promise>' 'void () noexcept' zeroing
| | |-CXXRecordDecl 0x5605abde4fd0 <line:324:3, line:331:3> line:324:10 struct suspend_always definition
| | | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-CXXRecordDecl 0x5605abde5110 <col:3, col:10> col:10 implicit struct suspend_always
| | | |-CXXMethodDecl 0x5605abde5220 <line:326:5, col:65> col:20 constexpr await_ready 'bool () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abde56d0 <col:49, col:65>
| | | |   `-ReturnStmt 0x5605abde56c0 <col:51, col:58>
| | | |     `-CXXBoolLiteralExpr 0x5605abde56b0 <col:58> 'bool' false
| | | |-CXXMethodDecl 0x5605abde54b0 <line:328:5, col:70> col:20 constexpr await_suspend 'void (coroutine_handle<>) const noexcept' implicit-inline
| | | | |-ParmVarDecl 0x5605abde5378 <col:34, col:51> col:52 'coroutine_handle<>':'std::coroutine_handle<void>'
| | | | `-CompoundStmt 0x5605abde56e8 <col:69, col:70>
| | | `-CXXMethodDecl 0x5605abde55a8 <line:330:5, col:51> col:20 constexpr await_resume 'void () const noexcept' implicit-inline
| | |   `-CompoundStmt 0x5605abde56f8 <col:50, col:51>
| | `-CXXRecordDecl 0x5605abde5710 <line:333:3, line:340:3> line:333:10 struct suspend_never definition
| |   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-CXXRecordDecl 0x5605abde5850 <col:3, col:10> col:10 implicit struct suspend_never
| |   |-CXXMethodDecl 0x5605abde5960 <line:335:5, col:64> col:20 constexpr await_ready 'bool () const noexcept' implicit-inline
| |   | `-CompoundStmt 0x5605abde6340 <col:49, col:64>
| |   |   `-ReturnStmt 0x5605abde6330 <col:51, col:58>
| |   |     `-CXXBoolLiteralExpr 0x5605abde6320 <col:58> 'bool' true
| |   |-CXXMethodDecl 0x5605abde6120 <line:337:5, col:70> col:20 constexpr await_suspend 'void (coroutine_handle<>) const noexcept' implicit-inline
| |   | |-ParmVarDecl 0x5605abde6028 <col:34, col:51> col:52 'coroutine_handle<>':'std::coroutine_handle<void>'
| |   | `-CompoundStmt 0x5605abde6358 <col:69, col:70>
| |   `-CXXMethodDecl 0x5605abde6218 <line:339:5, col:51> col:20 constexpr await_resume 'void () const noexcept' implicit-inline
| |     `-CompoundStmt 0x5605abde6368 <col:50, col:51>
| |-ClassTemplateDecl 0x5605abde64d8 <line:344:3, col:33> col:33 hash
| | |-TemplateTypeParmDecl 0x5605abde6380 <col:12, col:21> col:21 typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abde6428 <col:26, col:33> col:33 struct hash
| `-ClassTemplatePartialSpecializationDecl 0x5605abde6940 <line:346:3, line:354:5> line:347:12 struct hash definition explicit_specialization
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial constexpr needs_implicit
|   |-TemplateArgument type 'coroutine_handle<type-parameter-0-0>'
|   | `-TemplateSpecializationType 0x5605abdb24b0 'coroutine_handle<type-parameter-0-0>' dependent
|   |   |-name: 'std::coroutine_handle'
|   |   | `-ClassTemplateDecl 0x5605abdb2338 <line:94:3, line:95:12> col:12 coroutine_handle
|   |   `-TemplateArgument type 'type-parameter-0-0'
|   |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
|   |-TemplateTypeParmDecl 0x5605abde6728 <line:346:12, col:21> col:21 referenced typename depth 0 index 0 _Promise
|   |-CXXRecordDecl 0x5605abde6b40 <line:347:5, col:12> col:12 implicit struct hash
|   `-CXXMethodDecl 0x5605abde6ea0 <line:349:7, line:353:7> line:350:7 operator() 'size_t (const coroutine_handle<_Promise> &) const noexcept' implicit-inline
|     |-ParmVarDecl 0x5605abde6d30 <col:18, col:52> col:52 referenced __h 'const coroutine_handle<_Promise> &'
|     `-CompoundStmt 0x5605abde7088 <line:351:7, line:353:7>
|       `-ReturnStmt 0x5605abde7078 <line:352:2, col:47>
|         `-CXXReinterpretCastExpr 0x5605abde7048 <col:9, col:47> 'size_t':'unsigned long' reinterpret_cast<size_t> <Dependent>
|           `-CallExpr 0x5605abde7018 <col:34, col:46> '<dependent type>'
|             `-CXXDependentScopeMemberExpr 0x5605abde6fd0 <col:34, col:38> '<dependent type>' lvalue .address
|               `-DeclRefExpr 0x5605abde6fb0 <col:34> 'const coroutine_handle<_Promise>' lvalue ParmVar 0x5605abde6d30 '__h' 'const coroutine_handle<_Promise> &'
|-LinkageSpecDecl 0x5605abdb56e0 <line:132:43> col:43 implicit C
| `-FunctionDecl 0x5605abdb5738 <col:43> col:43 implicit used __builtin_coro_done 'bool (void *) noexcept' extern
|   |-ParmVarDecl 0x5605abdb5840 <<invalid sloc>> <invalid sloc> 'void *'
|   |-BuiltinAttr 0x5605abdb57e0 <<invalid sloc>> Implicit 367
|   `-NoThrowAttr 0x5605abdb58b0 <col:43> Implicit
|-LinkageSpecDecl 0x5605abdb5b20 <line:137:29> col:29 implicit C
| `-FunctionDecl 0x5605abdb5b78 <col:29> col:29 implicit used __builtin_coro_resume 'void (void *)' extern
|   |-ParmVarDecl 0x5605abdb69e8 <<invalid sloc>> <invalid sloc> 'void *'
|   `-BuiltinAttr 0x5605abdb5c20 <<invalid sloc>> Implicit 374
|-LinkageSpecDecl 0x5605abdb6b98 <line:139:30> col:30 implicit C
| `-FunctionDecl 0x5605abdb6bf0 <col:30> col:30 implicit used __builtin_coro_destroy 'void (void *)' extern
|   |-ParmVarDecl 0x5605abdb6cf8 <<invalid sloc>> <invalid sloc> 'void *'
|   `-BuiltinAttr 0x5605abdb6c98 <<invalid sloc>> Implicit 366
|-LinkageSpecDecl 0x5605abde0a40 <line:206:6> col:6 implicit C
| `-FunctionDecl 0x5605abde0a98 <col:6> col:6 implicit referenced __builtin_coro_promise 'void *(void *, int, bool) noexcept' extern
|   |-ParmVarDecl 0x5605abde0ba0 <<invalid sloc>> <invalid sloc> 'void *'
|   |-ParmVarDecl 0x5605abde0c10 <<invalid sloc>> <invalid sloc> 'int'
|   |-ParmVarDecl 0x5605abde0c80 <<invalid sloc>> <invalid sloc> 'bool'
|   |-BuiltinAttr 0x5605abde0b40 <<invalid sloc>> Implicit 373
|   `-NoThrowAttr 0x5605abde0d00 <col:6> Implicit
|-NamespaceDecl 0x5605abde70a8 prev 0x5605abdb0a30 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:38:1, line:91:1> line:38:11 std
| |-original Namespace 0x5605abaf4398 'std'
| `-CXXRecordDecl 0x5605abde7120 <line:43:3, line:88:3> line:43:10 referenced struct source_location definition
|   |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists non_trivial user_provided constexpr defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   | |-MoveConstructor exists simple trivial
|   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial constexpr
|   |-CXXRecordDecl 0x5605abde7260 <col:3, col:10> col:10 implicit referenced struct source_location
|   |-AccessSpecDecl 0x5605abde7310 <line:45:3, col:10> col:3 private
|   |-TypeAliasDecl 0x5605abde7358 <line:46:5, <built-in>:349:40> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:46:11 referenced uint_least32_t 'unsigned int'
|   | `-BuiltinType 0x5605aba9cb10 'unsigned int'
|   |-CXXRecordDecl 0x5605abde73c0 <line:47:5, line:53:5> line:47:12 referenced struct __impl definition
|   | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial constexpr needs_implicit
|   | |-CXXRecordDecl 0x5605abde7500 <col:5, col:12> col:12 implicit struct __impl
|   | |-FieldDecl 0x5605abde75c8 <line:49:7, col:19> col:19 referenced _M_file_name 'const char *'
|   | |-FieldDecl 0x5605abde7638 <line:50:7, col:19> col:19 referenced _M_function_name 'const char *'
|   | |-FieldDecl 0x5605abde76a8 <line:51:7, col:16> col:16 referenced _M_line 'unsigned int'
|   | `-FieldDecl 0x5605abde7718 <line:52:7, col:16> col:16 referenced _M_column 'unsigned int'
|   |-TypeAliasDecl 0x5605abde7818 <line:54:5, col:68> col:11 referenced __builtin_ret_type 'decltype(__builtin_source_location())':'const std::source_location::__impl *'
|   | `-DecltypeType 0x5605abde77d0 'decltype(__builtin_source_location())' sugar
|   |   |-SourceLocExpr 0x5605abde77b0 <col:41, col:67> 'const std::source_location::__impl *'
|   |   `-PointerType 0x5605abde7780 'const std::source_location::__impl *'
|   |     `-QualType 0x5605abde7471 'const std::source_location::__impl' const
|   |       `-RecordType 0x5605abde7470 'std::source_location::__impl'
|   |         `-CXXRecord 0x5605abde73c0 '__impl'
|   |-AccessSpecDecl 0x5605abde7880 <line:56:3, col:9> col:3 public
|   |-CXXMethodDecl 0x5605abde7ac0 <line:59:5, line:65:5> line:60:5 used consteval current 'source_location (__builtin_ret_type) noexcept' static implicit-inline
|   | |-ParmVarDecl 0x5605abde7958 <col:13, col:64> col:32 used __p '__builtin_ret_type':'const std::source_location::__impl *' cinit
|   | | `-SourceLocExpr 0x5605abde82a8 <col:38, col:64> 'const std::source_location::__impl *'
|   | `-CompoundStmt 0x5605abde8c68 <line:61:5, line:65:5>
|   |   |-DeclStmt 0x5605abde8948 <line:62:7, col:28>
|   |   | `-VarDecl 0x5605abde8308 <col:7, col:23> col:23 used __ret 'source_location':'std::source_location' nrvo callinit
|   |   |   `-CXXConstructExpr 0x5605abde8908 <col:23> 'source_location':'std::source_location' 'void () noexcept'
|   |   |-BinaryOperator 0x5605abde8a30 <line:63:7, col:54> 'const __impl *' lvalue '='
|   |   | |-MemberExpr 0x5605abde8980 <col:7, col:13> 'const __impl *' lvalue ._M_impl 0x5605abde8240
|   |   | | `-DeclRefExpr 0x5605abde8960 <col:7> 'source_location':'std::source_location' lvalue Var 0x5605abde8308 '__ret' 'source_location':'std::source_location'
|   |   | `-CXXStaticCastExpr 0x5605abde8a00 <col:23, col:54> 'const __impl *' static_cast<const __impl *> <NoOp>
|   |   |   `-ImplicitCastExpr 0x5605abde89e8 <col:51> '__builtin_ret_type':'const std::source_location::__impl *' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x5605abde89b0 <col:51> '__builtin_ret_type':'const std::source_location::__impl *' lvalue ParmVar 0x5605abde7958 '__p' '__builtin_ret_type':'const std::source_location::__impl *'
|   |   `-ReturnStmt 0x5605abde8c50 <line:64:7, col:14> nrvo_candidate(Var 0x5605abde8308 '__ret' 'source_location':'std::source_location')
|   |     `-CXXConstructExpr 0x5605abde8c20 <col:14> 'source_location':'std::source_location' 'void (source_location &&) noexcept'
|   |       `-ImplicitCastExpr 0x5605abde8a70 <col:14> 'source_location':'std::source_location' xvalue <NoOp>
|   |         `-DeclRefExpr 0x5605abde8a50 <col:14> 'source_location':'std::source_location' lvalue Var 0x5605abde8308 '__ret' 'source_location':'std::source_location'
|   |-CXXConstructorDecl 0x5605abde7bd0 <line:67:5, col:44> col:15 used constexpr source_location 'void () noexcept' implicit-inline
|   | |-CXXCtorInitializer Field 0x5605abde8240 '_M_impl' 'const __impl *'
|   | | `-CXXDefaultInitExpr 0x5605abde8c90 <col:15> 'const __impl *' has rewritten init
|   | |   `-ImplicitCastExpr 0x5605abde82d8 <line:87:29> 'const __impl *' <NullToPointer>
|   | |     `-CXXNullPtrLiteralExpr 0x5605abde82c8 <col:29> 'std::nullptr_t'
|   | `-CompoundStmt 0x5605abde8ce0 <line:67:42, col:44>
|   |-CXXMethodDecl 0x5605abde7dc0 <line:70:5, line:72:47> line:71:5 used constexpr line 'uint_least32_t () const noexcept' implicit-inline
|   | `-CompoundStmt 0x5605abde8e98 <line:72:5, col:47>
|   |   `-ReturnStmt 0x5605abde8e88 <col:7, col:43>
|   |     `-ConditionalOperator 0x5605abde8e58 <col:14, col:43> 'unsigned int'
|   |       |-ImplicitCastExpr 0x5605abde8e28 <col:14> 'bool' <PointerToBoolean>
|   |       | `-ImplicitCastExpr 0x5605abde8e10 <col:14> 'const __impl *' <LValueToRValue>
|   |       |   `-MemberExpr 0x5605abde8d00 <col:14> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |     `-CXXThisExpr 0x5605abde8cf0 <col:14> 'const std::source_location *' implicit this
|   |       |-ImplicitCastExpr 0x5605abde8e40 <col:24, col:33> 'unsigned int' <LValueToRValue>
|   |       | `-MemberExpr 0x5605abde8dc0 <col:24, col:33> 'const unsigned int' lvalue ->_M_line 0x5605abde76a8
|   |       |   `-ImplicitCastExpr 0x5605abde8d70 <col:24> 'const __impl *' <LValueToRValue>
|   |       |     `-MemberExpr 0x5605abde8d40 <col:24> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |       `-CXXThisExpr 0x5605abde8d30 <col:24> 'const std::source_location *' implicit this
|   |       `-IntegerLiteral 0x5605abde8df0 <col:43> 'unsigned int' 0
|   |-CXXMethodDecl 0x5605abde7eb0 <line:74:5, line:76:49> line:75:5 constexpr column 'uint_least32_t () const noexcept' implicit-inline
|   | `-CompoundStmt 0x5605abde9020 <line:76:5, col:49>
|   |   `-ReturnStmt 0x5605abde9010 <col:7, col:45>
|   |     `-ConditionalOperator 0x5605abde8fe0 <col:14, col:45> 'unsigned int'
|   |       |-ImplicitCastExpr 0x5605abde8fb0 <col:14> 'bool' <PointerToBoolean>
|   |       | `-ImplicitCastExpr 0x5605abde8f98 <col:14> 'const __impl *' <LValueToRValue>
|   |       |   `-MemberExpr 0x5605abde8ec0 <col:14> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |     `-CXXThisExpr 0x5605abde8eb0 <col:14> 'const std::source_location *' implicit this
|   |       |-ImplicitCastExpr 0x5605abde8fc8 <col:24, col:33> 'unsigned int' <LValueToRValue>
|   |       | `-MemberExpr 0x5605abde8f48 <col:24, col:33> 'const unsigned int' lvalue ->_M_column 0x5605abde7718
|   |       |   `-ImplicitCastExpr 0x5605abde8f30 <col:24> 'const __impl *' <LValueToRValue>
|   |       |     `-MemberExpr 0x5605abde8f00 <col:24> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |       `-CXXThisExpr 0x5605abde8ef0 <col:24> 'const std::source_location *' implicit this
|   |       `-IntegerLiteral 0x5605abde8f78 <col:45> 'unsigned int' 0
|   |-CXXMethodDecl 0x5605abde7fd8 <line:78:5, line:80:52> line:79:5 used constexpr file_name 'const char *() const noexcept' implicit-inline
|   | `-CompoundStmt 0x5605abde9218 <line:80:5, col:52>
|   |   `-ReturnStmt 0x5605abde9208 <col:7, col:48>
|   |     `-ConditionalOperator 0x5605abde91d8 <col:14, col:48> 'const char *'
|   |       |-ImplicitCastExpr 0x5605abde9190 <col:14> 'bool' <PointerToBoolean>
|   |       | `-ImplicitCastExpr 0x5605abde9178 <col:14> 'const __impl *' <LValueToRValue>
|   |       |   `-MemberExpr 0x5605abde9048 <col:14> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |     `-CXXThisExpr 0x5605abde9038 <col:14> 'const std::source_location *' implicit this
|   |       |-ImplicitCastExpr 0x5605abde91a8 <col:24, col:33> 'const char *' <LValueToRValue>
|   |       | `-MemberExpr 0x5605abde90d0 <col:24, col:33> 'const char *const' lvalue ->_M_file_name 0x5605abde75c8
|   |       |   `-ImplicitCastExpr 0x5605abde90b8 <col:24> 'const __impl *' <LValueToRValue>
|   |       |     `-MemberExpr 0x5605abde9088 <col:24> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |       `-CXXThisExpr 0x5605abde9078 <col:24> 'const std::source_location *' implicit this
|   |       `-ImplicitCastExpr 0x5605abde91c0 <col:48> 'const char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x5605abde9160 <col:48> 'const char[1]' lvalue ""
|   |-CXXMethodDecl 0x5605abde80d0 <line:82:5, line:84:56> line:83:5 constexpr function_name 'const char *() const noexcept' implicit-inline
|   | `-CompoundStmt 0x5605abde93b0 <line:84:5, col:56>
|   |   `-ReturnStmt 0x5605abde93a0 <col:7, col:52>
|   |     `-ConditionalOperator 0x5605abde9370 <col:14, col:52> 'const char *'
|   |       |-ImplicitCastExpr 0x5605abde9328 <col:14> 'bool' <PointerToBoolean>
|   |       | `-ImplicitCastExpr 0x5605abde9310 <col:14> 'const __impl *' <LValueToRValue>
|   |       |   `-MemberExpr 0x5605abde9240 <col:14> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |     `-CXXThisExpr 0x5605abde9230 <col:14> 'const std::source_location *' implicit this
|   |       |-ImplicitCastExpr 0x5605abde9340 <col:24, col:33> 'const char *' <LValueToRValue>
|   |       | `-MemberExpr 0x5605abde92c8 <col:24, col:33> 'const char *const' lvalue ->_M_function_name 0x5605abde7638
|   |       |   `-ImplicitCastExpr 0x5605abde92b0 <col:24> 'const __impl *' <LValueToRValue>
|   |       |     `-MemberExpr 0x5605abde9280 <col:24> 'const __impl *const' lvalue ->_M_impl 0x5605abde8240
|   |       |       `-CXXThisExpr 0x5605abde9270 <col:24> 'const std::source_location *' implicit this
|   |       `-ImplicitCastExpr 0x5605abde9358 <col:52> 'const char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x5605abde92f8 <col:52> 'const char[1]' lvalue ""
|   |-AccessSpecDecl 0x5605abde8198 <line:86:3, col:10> col:3 private
|   |-FieldDecl 0x5605abde8240 <line:87:5, col:29> col:19 referenced _M_impl 'const __impl *'
|   | `-ImplicitCastExpr 0x5605abde82d8 <col:29> 'const __impl *' <NullToPointer>
|   |   `-CXXNullPtrLiteralExpr 0x5605abde82c8 <col:29> 'std::nullptr_t'
|   |-CXXConstructorDecl 0x5605abde83d8 <line:43:10> col:10 implicit constexpr source_location 'void (const source_location &)' inline default trivial noexcept-unevaluated 0x5605abde83d8
|   | `-ParmVarDecl 0x5605abde8518 <col:10> col:10 'const source_location &'
|   |-CXXConstructorDecl 0x5605abde8608 <col:10> col:10 implicit used constexpr source_location 'void (source_location &&) noexcept' inline default trivial
|   | |-ParmVarDecl 0x5605abde8748 <col:10> col:10 used 'source_location &&'
|   | |-CXXCtorInitializer Field 0x5605abde8240 '_M_impl' 'const __impl *'
|   | | `-ImplicitCastExpr 0x5605abde8bd0 <col:10> 'const __impl *' <LValueToRValue>
|   | |   `-MemberExpr 0x5605abde8b98 <col:10> 'const __impl *' xvalue ._M_impl 0x5605abde8240
|   | |     `-CXXStaticCastExpr 0x5605abde8b68 <col:10> 'source_location':'std::source_location' xvalue static_cast<source_location &&> <NoOp>
|   | |       `-DeclRefExpr 0x5605abde8b18 <col:10> 'source_location':'std::source_location' lvalue ParmVar 0x5605abde8748 depth 0 index 0 'source_location &&'
|   | `-CompoundStmt 0x5605abde8c10 <col:10>
|   `-CXXDestructorDecl 0x5605abea6918 <col:10> col:10 implicit referenced constexpr ~source_location 'void () noexcept' inline default trivial
|-TypedefDecl 0x5605abde9400 </usr/include/bits/types.h:31:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5605aba9cad0 'unsigned char'
|-TypedefDecl 0x5605abde9478 <line:32:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5605aba9caf0 'unsigned short'
|-TypedefDecl 0x5605abde94f0 <line:33:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abde9568 <line:34:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abde95e0 <line:37:1, col:21> col:21 referenced __int8_t 'signed char'
| `-BuiltinType 0x5605aba9ca30 'signed char'
|-TypedefDecl 0x5605abde9658 <line:38:1, col:23> col:23 referenced __uint8_t 'unsigned char'
| `-BuiltinType 0x5605aba9cad0 'unsigned char'
|-TypedefDecl 0x5605abde96d0 <line:39:1, col:26> col:26 referenced __int16_t 'short'
| `-BuiltinType 0x5605aba9ca50 'short'
|-TypedefDecl 0x5605abde9748 <line:40:1, col:28> col:28 referenced __uint16_t 'unsigned short'
| `-BuiltinType 0x5605aba9caf0 'unsigned short'
|-TypedefDecl 0x5605abde97c0 <line:41:1, col:20> col:20 referenced __int32_t 'int'
| `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abde9838 <line:42:1, col:22> col:22 referenced __uint32_t 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abde98b0 <line:44:1, col:25> col:25 referenced __int64_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abde9928 <line:45:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abde99f8 <line:52:1, col:18> col:18 referenced __int_least8_t '__int8_t':'signed char'
| `-ElaboratedType 0x5605abde99b0 '__int8_t' sugar
|   `-TypedefType 0x5605abde9980 '__int8_t' sugar
|     |-Typedef 0x5605abde95e0 '__int8_t'
|     `-BuiltinType 0x5605aba9ca30 'signed char'
|-TypedefDecl 0x5605abde9ac8 <line:53:1, col:19> col:19 referenced __uint_least8_t '__uint8_t':'unsigned char'
| `-ElaboratedType 0x5605abde9a80 '__uint8_t' sugar
|   `-TypedefType 0x5605abde9a50 '__uint8_t' sugar
|     |-Typedef 0x5605abde9658 '__uint8_t'
|     `-BuiltinType 0x5605aba9cad0 'unsigned char'
|-TypedefDecl 0x5605abde9b98 <line:54:1, col:19> col:19 referenced __int_least16_t '__int16_t':'short'
| `-ElaboratedType 0x5605abde9b50 '__int16_t' sugar
|   `-TypedefType 0x5605abde9b20 '__int16_t' sugar
|     |-Typedef 0x5605abde96d0 '__int16_t'
|     `-BuiltinType 0x5605aba9ca50 'short'
|-TypedefDecl 0x5605abde9c68 <line:55:1, col:20> col:20 referenced __uint_least16_t '__uint16_t':'unsigned short'
| `-ElaboratedType 0x5605abde9c20 '__uint16_t' sugar
|   `-TypedefType 0x5605abde9bf0 '__uint16_t' sugar
|     |-Typedef 0x5605abde9748 '__uint16_t'
|     `-BuiltinType 0x5605aba9caf0 'unsigned short'
|-TypedefDecl 0x5605abde9d38 <line:56:1, col:19> col:19 referenced __int_least32_t '__int32_t':'int'
| `-ElaboratedType 0x5605abde9cf0 '__int32_t' sugar
|   `-TypedefType 0x5605abde9cc0 '__int32_t' sugar
|     |-Typedef 0x5605abde97c0 '__int32_t'
|     `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abde9e08 <line:57:1, col:20> col:20 referenced __uint_least32_t '__uint32_t':'unsigned int'
| `-ElaboratedType 0x5605abde9dc0 '__uint32_t' sugar
|   `-TypedefType 0x5605abde9d90 '__uint32_t' sugar
|     |-Typedef 0x5605abde9838 '__uint32_t'
|     `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abde9ed8 <line:58:1, col:19> col:19 referenced __int_least64_t '__int64_t':'long'
| `-ElaboratedType 0x5605abde9e90 '__int64_t' sugar
|   `-TypedefType 0x5605abde9e60 '__int64_t' sugar
|     |-Typedef 0x5605abde98b0 '__int64_t'
|     `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abde9fa8 <line:59:1, col:20> col:20 referenced __uint_least64_t '__uint64_t':'unsigned long'
| `-ElaboratedType 0x5605abde9f60 '__uint64_t' sugar
|   `-TypedefType 0x5605abde9f30 '__uint64_t' sugar
|     |-Typedef 0x5605abde9928 '__uint64_t'
|     `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf8c28 <line:63:1, col:18> col:18 __quad_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf8ca0 <line:64:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf8d18 <line:72:1, col:18> col:18 referenced __intmax_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf8d90 <line:73:1, col:27> col:27 referenced __uintmax_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf8e08 <line:137:22, line:145:25> col:25 __dev_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf8e80 <line:137:22, line:146:25> col:25 __uid_t 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdf8ef8 <line:137:22, line:147:25> col:25 __gid_t 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdf8f70 <line:137:22, line:148:25> col:25 __ino_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf8fe8 <line:137:22, line:149:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf9060 <line:137:22, line:150:26> col:26 __mode_t 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdf90d8 <line:137:22, line:151:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf9150 <line:137:22, line:152:25> col:25 referenced __off_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf91c8 <line:137:22, line:153:27> col:27 referenced __off64_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9240 <line:137:22, line:154:25> col:25 __pid_t 'int'
| `-BuiltinType 0x5605aba9ca70 'int'
|-CXXRecordDecl 0x5605abdf92a0 </usr/include/bits/typesizes.h:73:24, col:47> col:24 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial constexpr needs_implicit
| `-FieldDecl 0x5605abdf9480 <col:33, col:44> col:37 __val 'int[2]'
|-TypedefDecl 0x5605abdf9550 </usr/include/bits/types.h:137:22, line:155:26> col:26 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5605abdf94f0 'struct __fsid_t' sugar
|   `-RecordType 0x5605abdf9350 '__fsid_t'
|     `-CXXRecord 0x5605abdf92a0 </usr/include/bits/typesizes.h:73:24, col:47>
|-TypedefDecl 0x5605abdf95e0 </usr/include/bits/types.h:137:22, line:156:27> col:27 __clock_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9658 <line:137:22, line:157:26> col:26 __rlim_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf96d0 <line:137:22, line:158:28> col:28 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf9748 <line:137:22, line:159:24> col:24 __id_t 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdf97c0 <line:137:22, line:160:26> col:26 __time_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9838 <line:137:22, line:161:30> col:30 __useconds_t 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdf98b0 <line:137:22, line:162:31> col:31 __suseconds_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9928 <line:137:22, line:163:33> col:33 __suseconds64_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf99a0 <line:137:22, line:165:27> col:27 __daddr_t 'int'
| `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abdf9a18 <line:137:22, line:166:25> col:25 __key_t 'int'
| `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abdf9a90 <line:137:22, line:169:29> col:29 __clockid_t 'int'
| `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abdf9b08 <line:137:22, line:172:27> col:27 __timer_t 'void *'
| `-PointerType 0x5605aba9d150 'void *'
|   `-BuiltinType 0x5605aba9c9d0 'void'
|-TypedefDecl 0x5605abdf9b80 <line:137:22, line:175:29> col:29 __blksize_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9bf8 <line:137:22, line:180:28> col:28 __blkcnt_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9c70 <line:137:22, line:181:30> col:30 __blkcnt64_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9ce8 <line:137:22, line:184:30> col:30 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf9d60 <line:137:22, line:185:32> col:32 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf9dd8 <line:137:22, line:188:30> col:30 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf9e50 <line:137:22, line:189:32> col:32 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdf9ec8 <line:137:22, line:192:28> col:28 __fsword_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9f40 <line:137:22, line:194:27> col:27 referenced __ssize_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdf9fb8 <line:137:22, line:197:33> col:33 __syscall_slong_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfa030 <line:137:22, line:199:33> col:33 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdfa108 <line:203:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-ElaboratedType 0x5605abdfa0c0 '__off64_t' sugar
|   `-TypedefType 0x5605abdfa090 '__off64_t' sugar
|     |-Typedef 0x5605abdf91c8 '__off64_t'
|     `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfa180 <line:204:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5605aba9d200 'char *'
|   `-BuiltinType 0x5605aba9ca10 'char'
|-TypedefDecl 0x5605abdfa1f8 <line:137:22, line:207:25> col:25 __intptr_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfa270 <line:137:22, line:210:23> col:23 __socklen_t 'unsigned int'
| `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdfa2e8 <line:215:1, col:13> col:13 __sig_atomic_t 'int'
| `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abdfa358 </usr/include/bits/stdint-intn.h:24:1, col:18> col:18 int8_t '__int8_t':'signed char'
| `-ElaboratedType 0x5605abde99b0 '__int8_t' sugar
|   `-TypedefType 0x5605abde9980 '__int8_t' sugar
|     |-Typedef 0x5605abde95e0 '__int8_t'
|     `-BuiltinType 0x5605aba9ca30 'signed char'
|-TypedefDecl 0x5605abdfa3c8 <line:25:1, col:19> col:19 int16_t '__int16_t':'short'
| `-ElaboratedType 0x5605abde9b50 '__int16_t' sugar
|   `-TypedefType 0x5605abde9b20 '__int16_t' sugar
|     |-Typedef 0x5605abde96d0 '__int16_t'
|     `-BuiltinType 0x5605aba9ca50 'short'
|-TypedefDecl 0x5605abdfa438 <line:26:1, col:19> col:19 int32_t '__int32_t':'int'
| `-ElaboratedType 0x5605abde9cf0 '__int32_t' sugar
|   `-TypedefType 0x5605abde9cc0 '__int32_t' sugar
|     |-Typedef 0x5605abde97c0 '__int32_t'
|     `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abdfa4a8 <line:27:1, col:19> col:19 int64_t '__int64_t':'long'
| `-ElaboratedType 0x5605abde9e90 '__int64_t' sugar
|   `-TypedefType 0x5605abde9e60 '__int64_t' sugar
|     |-Typedef 0x5605abde98b0 '__int64_t'
|     `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfa518 </usr/include/bits/stdint-uintn.h:24:1, col:19> col:19 referenced uint8_t '__uint8_t':'unsigned char'
| `-ElaboratedType 0x5605abde9a80 '__uint8_t' sugar
|   `-TypedefType 0x5605abde9a50 '__uint8_t' sugar
|     |-Typedef 0x5605abde9658 '__uint8_t'
|     `-BuiltinType 0x5605aba9cad0 'unsigned char'
|-TypedefDecl 0x5605abdfa588 <line:25:1, col:20> col:20 referenced uint16_t '__uint16_t':'unsigned short'
| `-ElaboratedType 0x5605abde9c20 '__uint16_t' sugar
|   `-TypedefType 0x5605abde9bf0 '__uint16_t' sugar
|     |-Typedef 0x5605abde9748 '__uint16_t'
|     `-BuiltinType 0x5605aba9caf0 'unsigned short'
|-TypedefDecl 0x5605abdfa5f8 <line:26:1, col:20> col:20 referenced uint32_t '__uint32_t':'unsigned int'
| `-ElaboratedType 0x5605abde9dc0 '__uint32_t' sugar
|   `-TypedefType 0x5605abde9d90 '__uint32_t' sugar
|     |-Typedef 0x5605abde9838 '__uint32_t'
|     `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdfa668 <line:27:1, col:20> col:20 referenced uint64_t '__uint64_t':'unsigned long'
| `-ElaboratedType 0x5605abde9f60 '__uint64_t' sugar
|   `-TypedefType 0x5605abde9f30 '__uint64_t' sugar
|     |-Typedef 0x5605abde9928 '__uint64_t'
|     `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdfa738 </usr/include/bits/stdint-least.h:25:1, col:24> col:24 int_least8_t '__int_least8_t':'signed char'
| `-ElaboratedType 0x5605abdfa6f0 '__int_least8_t' sugar
|   `-TypedefType 0x5605abdfa6c0 '__int_least8_t' sugar
|     |-Typedef 0x5605abde99f8 '__int_least8_t'
|     `-ElaboratedType 0x5605abde99b0 '__int8_t' sugar
|       `-TypedefType 0x5605abde9980 '__int8_t' sugar
|         |-Typedef 0x5605abde95e0 '__int8_t'
|         `-BuiltinType 0x5605aba9ca30 'signed char'
|-TypedefDecl 0x5605abdfa808 <line:26:1, col:25> col:25 int_least16_t '__int_least16_t':'short'
| `-ElaboratedType 0x5605abdfa7c0 '__int_least16_t' sugar
|   `-TypedefType 0x5605abdfa790 '__int_least16_t' sugar
|     |-Typedef 0x5605abde9b98 '__int_least16_t'
|     `-ElaboratedType 0x5605abde9b50 '__int16_t' sugar
|       `-TypedefType 0x5605abde9b20 '__int16_t' sugar
|         |-Typedef 0x5605abde96d0 '__int16_t'
|         `-BuiltinType 0x5605aba9ca50 'short'
|-TypedefDecl 0x5605abdfa8d8 <line:27:1, col:25> col:25 int_least32_t '__int_least32_t':'int'
| `-ElaboratedType 0x5605abdfa890 '__int_least32_t' sugar
|   `-TypedefType 0x5605abdfa860 '__int_least32_t' sugar
|     |-Typedef 0x5605abde9d38 '__int_least32_t'
|     `-ElaboratedType 0x5605abde9cf0 '__int32_t' sugar
|       `-TypedefType 0x5605abde9cc0 '__int32_t' sugar
|         |-Typedef 0x5605abde97c0 '__int32_t'
|         `-BuiltinType 0x5605aba9ca70 'int'
|-TypedefDecl 0x5605abdfa9a8 <line:28:1, col:25> col:25 int_least64_t '__int_least64_t':'long'
| `-ElaboratedType 0x5605abdfa960 '__int_least64_t' sugar
|   `-TypedefType 0x5605abdfa930 '__int_least64_t' sugar
|     |-Typedef 0x5605abde9ed8 '__int_least64_t'
|     `-ElaboratedType 0x5605abde9e90 '__int64_t' sugar
|       `-TypedefType 0x5605abde9e60 '__int64_t' sugar
|         |-Typedef 0x5605abde98b0 '__int64_t'
|         `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfaa78 <line:31:1, col:25> col:25 uint_least8_t '__uint_least8_t':'unsigned char'
| `-ElaboratedType 0x5605abdfaa30 '__uint_least8_t' sugar
|   `-TypedefType 0x5605abdfaa00 '__uint_least8_t' sugar
|     |-Typedef 0x5605abde9ac8 '__uint_least8_t'
|     `-ElaboratedType 0x5605abde9a80 '__uint8_t' sugar
|       `-TypedefType 0x5605abde9a50 '__uint8_t' sugar
|         |-Typedef 0x5605abde9658 '__uint8_t'
|         `-BuiltinType 0x5605aba9cad0 'unsigned char'
|-TypedefDecl 0x5605abdfab48 <line:32:1, col:26> col:26 uint_least16_t '__uint_least16_t':'unsigned short'
| `-ElaboratedType 0x5605abdfab00 '__uint_least16_t' sugar
|   `-TypedefType 0x5605abdfaad0 '__uint_least16_t' sugar
|     |-Typedef 0x5605abde9c68 '__uint_least16_t'
|     `-ElaboratedType 0x5605abde9c20 '__uint16_t' sugar
|       `-TypedefType 0x5605abde9bf0 '__uint16_t' sugar
|         |-Typedef 0x5605abde9748 '__uint16_t'
|         `-BuiltinType 0x5605aba9caf0 'unsigned short'
|-TypedefDecl 0x5605abdfac18 <line:33:1, col:26> col:26 uint_least32_t '__uint_least32_t':'unsigned int'
| `-ElaboratedType 0x5605abdfabd0 '__uint_least32_t' sugar
|   `-TypedefType 0x5605abdfaba0 '__uint_least32_t' sugar
|     |-Typedef 0x5605abde9e08 '__uint_least32_t'
|     `-ElaboratedType 0x5605abde9dc0 '__uint32_t' sugar
|       `-TypedefType 0x5605abde9d90 '__uint32_t' sugar
|         |-Typedef 0x5605abde9838 '__uint32_t'
|         `-BuiltinType 0x5605aba9cb10 'unsigned int'
|-TypedefDecl 0x5605abdface8 <line:34:1, col:26> col:26 uint_least64_t '__uint_least64_t':'unsigned long'
| `-ElaboratedType 0x5605abdfaca0 '__uint_least64_t' sugar
|   `-TypedefType 0x5605abdfac70 '__uint_least64_t' sugar
|     |-Typedef 0x5605abde9fa8 '__uint_least64_t'
|     `-ElaboratedType 0x5605abde9f60 '__uint64_t' sugar
|       `-TypedefType 0x5605abde9f30 '__uint64_t' sugar
|         |-Typedef 0x5605abde9928 '__uint64_t'
|         `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdfad60 </usr/include/stdint.h:47:1, col:22> col:22 int_fast8_t 'signed char'
| `-BuiltinType 0x5605aba9ca30 'signed char'
|-TypedefDecl 0x5605abdfadd8 <line:49:1, col:19> col:19 int_fast16_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfae50 <line:50:1, col:19> col:19 int_fast32_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfaec8 <line:51:1, col:19> col:19 int_fast64_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfaf40 <line:60:1, col:24> col:24 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x5605aba9cad0 'unsigned char'
|-TypedefDecl 0x5605abdfafb8 <line:62:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdfb030 <line:63:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdfb0a8 <line:64:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdfb120 <line:76:1, col:19> col:19 intptr_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfb198 <line:79:1, col:27> col:27 uintptr_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-TypedefDecl 0x5605abdfb268 <line:90:1, col:21> col:21 intmax_t '__intmax_t':'long'
| `-ElaboratedType 0x5605abdfb220 '__intmax_t' sugar
|   `-TypedefType 0x5605abdfb1f0 '__intmax_t' sugar
|     |-Typedef 0x5605abdf8d18 '__intmax_t'
|     `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abdfb338 <line:91:1, col:22> col:22 uintmax_t '__uintmax_t':'unsigned long'
| `-ElaboratedType 0x5605abdfb2f0 '__uintmax_t' sugar
|   `-TypedefType 0x5605abdfb2c0 '__uintmax_t' sugar
|     |-Typedef 0x5605abdf8d90 '__uintmax_t'
|     `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-NamespaceDecl 0x5605abdfb398 prev 0x5605abde70a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/cstdint:48:1, line:142:1> line:48:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-UsingDecl 0x5605abdfb430 <line:51:3, col:11> col:11 ::int8_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfb490 <col:11> col:11 implicit Typedef 0x5605abdfa358 'int8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfb518 <line:52:3, col:11> col:11 ::int16_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfb578 <col:11> col:11 implicit Typedef 0x5605abdfa3c8 'int16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfb600 <line:53:3, col:11> col:11 ::int32_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfb660 <col:11> col:11 implicit Typedef 0x5605abdfa438 'int32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfb6e8 <line:54:3, col:11> col:11 ::int64_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfb748 <col:11> col:11 implicit Typedef 0x5605abdfa4a8 'int64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfb7d0 <line:56:3, col:11> col:11 ::int_fast8_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfb830 <col:11> col:11 implicit Typedef 0x5605abdfad60 'int_fast8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfb8b8 <line:57:3, col:11> col:11 ::int_fast16_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfb918 <col:11> col:11 implicit Typedef 0x5605abdfadd8 'int_fast16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfb9a0 <line:58:3, col:11> col:11 ::int_fast32_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfba00 <col:11> col:11 implicit Typedef 0x5605abdfae50 'int_fast32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfba88 <line:59:3, col:11> col:11 ::int_fast64_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfbae8 <col:11> col:11 implicit Typedef 0x5605abdfaec8 'int_fast64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfbb70 <line:61:3, col:11> col:11 ::int_least8_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfbbd0 <col:11> col:11 implicit Typedef 0x5605abdfa738 'int_least8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfbc58 <line:62:3, col:11> col:11 ::int_least16_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfbcb8 <col:11> col:11 implicit Typedef 0x5605abdfa808 'int_least16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfbd40 <line:63:3, col:11> col:11 ::int_least32_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfbda0 <col:11> col:11 implicit Typedef 0x5605abdfa8d8 'int_least32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfbe28 <line:64:3, col:11> col:11 ::int_least64_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfbe88 <col:11> col:11 implicit Typedef 0x5605abdfa9a8 'int_least64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfbf10 <line:66:3, col:11> col:11 ::intmax_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfbf70 <col:11> col:11 implicit Typedef 0x5605abdfb268 'intmax_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfbff8 <line:67:3, col:11> col:11 ::intptr_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc058 <col:11> col:11 implicit Typedef 0x5605abdfb120 'intptr_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfc0e0 <line:69:3, col:11> col:11 ::uint8_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc140 <col:11> col:11 implicit Typedef 0x5605abdfa518 'uint8_t'
| | `-TypedefType 0x5605abe9f0e0 'uint8_t' sugar
| |   |-Typedef 0x5605abdfa518 'uint8_t'
| |   `-ElaboratedType 0x5605abde9a80 '__uint8_t' sugar
| |     `-TypedefType 0x5605abde9a50 '__uint8_t' sugar
| |       |-Typedef 0x5605abde9658 '__uint8_t'
| |       `-BuiltinType 0x5605aba9cad0 'unsigned char'
| |-UsingDecl 0x5605abdfc1c8 <line:70:3, col:11> col:11 ::uint16_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc228 <col:11> col:11 implicit Typedef 0x5605abdfa588 'uint16_t'
| | `-TypedefType 0x5605abe99dc0 'uint16_t' sugar
| |   |-Typedef 0x5605abdfa588 'uint16_t'
| |   `-ElaboratedType 0x5605abde9c20 '__uint16_t' sugar
| |     `-TypedefType 0x5605abde9bf0 '__uint16_t' sugar
| |       |-Typedef 0x5605abde9748 '__uint16_t'
| |       `-BuiltinType 0x5605aba9caf0 'unsigned short'
| |-UsingDecl 0x5605abdfc2b0 <line:71:3, col:11> col:11 ::uint32_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc310 <col:11> col:11 implicit Typedef 0x5605abdfa5f8 'uint32_t'
| | `-TypedefType 0x5605abe9a140 'uint32_t' sugar
| |   |-Typedef 0x5605abdfa5f8 'uint32_t'
| |   `-ElaboratedType 0x5605abde9dc0 '__uint32_t' sugar
| |     `-TypedefType 0x5605abde9d90 '__uint32_t' sugar
| |       |-Typedef 0x5605abde9838 '__uint32_t'
| |       `-BuiltinType 0x5605aba9cb10 'unsigned int'
| |-UsingDecl 0x5605abdfc398 <line:72:3, col:11> col:11 ::uint64_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc3f8 <col:11> col:11 implicit Typedef 0x5605abdfa668 'uint64_t'
| | `-TypedefType 0x5605abe9edf0 'uint64_t' sugar
| |   |-Typedef 0x5605abdfa668 'uint64_t'
| |   `-ElaboratedType 0x5605abde9f60 '__uint64_t' sugar
| |     `-TypedefType 0x5605abde9f30 '__uint64_t' sugar
| |       |-Typedef 0x5605abde9928 '__uint64_t'
| |       `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |-UsingDecl 0x5605abdfc480 <line:74:3, col:11> col:11 ::uint_fast8_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc4e0 <col:11> col:11 implicit Typedef 0x5605abdfaf40 'uint_fast8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfc568 <line:75:3, col:11> col:11 ::uint_fast16_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc5c8 <col:11> col:11 implicit Typedef 0x5605abdfafb8 'uint_fast16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfc650 <line:76:3, col:11> col:11 ::uint_fast32_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc6b0 <col:11> col:11 implicit Typedef 0x5605abdfb030 'uint_fast32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfc738 <line:77:3, col:11> col:11 ::uint_fast64_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc798 <col:11> col:11 implicit Typedef 0x5605abdfb0a8 'uint_fast64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfc820 <line:79:3, col:11> col:11 ::uint_least8_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc880 <col:11> col:11 implicit Typedef 0x5605abdfaa78 'uint_least8_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfc908 <line:80:3, col:11> col:11 ::uint_least16_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfc968 <col:11> col:11 implicit Typedef 0x5605abdfab48 'uint_least16_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfc9f0 <line:81:3, col:11> col:11 ::uint_least32_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfca50 <col:11> col:11 implicit Typedef 0x5605abdfac18 'uint_least32_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfcad8 <line:82:3, col:11> col:11 ::uint_least64_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abdfcb38 <col:11> col:11 implicit Typedef 0x5605abdface8 'uint_least64_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abdfcbc0 <line:84:3, col:11> col:11 ::uintmax_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe0cd78 <col:11> col:11 implicit Typedef 0x5605abdfb338 'uintmax_t'
| | `-<<<NULL>>>
| |-UsingDecl 0x5605abe0ce00 <line:85:3, col:11> col:11 ::uintptr_t
| | `-NestedNameSpecifier Global
| `-UsingShadowDecl 0x5605abe0ce60 <col:11> col:11 implicit Typedef 0x5605abdfb198 'uintptr_t'
|   `-<<<NULL>>>
|-LinkageSpecDecl 0x5605abe0cf00 </usr/include/sys/cdefs.h:140:24, line:141:22> line:140:31 C
| |-TypedefDecl 0x5605abe0cf70 </opt/ace/build/llvm-linux-x86-64-v3-debug/lib/clang/20/include/__stddef_size_t.h:18:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |-TypedefDecl 0x5605abe0d018 </opt/ace/build/llvm-linux-x86-64-v3-debug/lib/clang/20/include/__stdarg___gnuc_va_list.h:12:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'__va_list_tag[1]'
| | `-ElaboratedType 0x5605abe0cfd0 '__builtin_va_list' sugar
| |   `-TypedefType 0x5605abdde0c0 '__builtin_va_list' sugar
| |     |-Typedef 0x5605aba9d5f8 '__builtin_va_list'
| |     `-ConstantArrayType 0x5605aba9d5a0 '__va_list_tag[1]' 1 
| |       `-RecordType 0x5605aba9d360 '__va_list_tag'
| |         `-CXXRecord 0x5605aba9d2b0 '__va_list_tag'
| |-CXXRecordDecl 0x5605abe0d078 </usr/include/bits/types/__mbstate_t.h:13:9, line:21:1> line:13:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-FieldDecl 0x5605abe0d1c8 <line:15:3, col:7> col:7 __count 'int'
| | |-CXXRecordDecl 0x5605abe0d220 <line:16:3, line:20:3> line:16:3 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor has_variant_members
| | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-FieldDecl 0x5605abe0d378 <<built-in>:193:23, /usr/include/bits/types/__mbstate_t.h:18:19> col:19 __wch 'unsigned int'
| | | `-FieldDecl 0x5605abe0d468 <line:19:5, col:18> col:10 __wchb 'char[4]'
| | `-FieldDecl 0x5605abe0d530 <line:16:3, line:20:5> col:5 __value 'union (unnamed union at /usr/include/bits/types/__mbstate_t.h:16:3)':'__mbstate_t::(unnamed union at /usr/include/bits/types/__mbstate_t.h:16:3)'
| |-TypedefDecl 0x5605abe0d610 <line:13:1, line:21:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| | `-ElaboratedType 0x5605abe0d5b0 'struct __mbstate_t' sugar
| |   `-RecordType 0x5605abe0d120 '__mbstate_t'
| |     `-CXXRecord 0x5605abe0d078 <line:13:9, line:21:1>
| |-CXXRecordDecl 0x5605abe0d688 </usr/include/bits/types/__fpos_t.h:10:9, line:14:1> line:10:16 struct _G_fpos_t definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abe0d7c0 <col:9, col:16> col:16 implicit struct _G_fpos_t
| | |-FieldDecl 0x5605abe0d8e8 <line:12:3, col:11> col:11 __pos '__off_t':'long'
| | `-FieldDecl 0x5605abe0d9b8 <line:13:3, col:15> col:15 __state '__mbstate_t'
| |-TypedefDecl 0x5605abe0da80 <line:10:1, line:14:3> col:3 referenced __fpos_t 'struct _G_fpos_t':'_G_fpos_t'
| | `-ElaboratedType 0x5605abe0da20 'struct _G_fpos_t' sugar
| |   `-RecordType 0x5605abe0d730 '_G_fpos_t'
| |     `-CXXRecord 0x5605abe0d688 '_G_fpos_t'
| |-CXXRecordDecl 0x5605abe0daf8 </usr/include/bits/types/__fpos64_t.h:10:9, line:14:1> line:10:16 struct _G_fpos64_t definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abe0dc30 <col:9, col:16> col:16 implicit struct _G_fpos64_t
| | |-FieldDecl 0x5605abe0dcf0 <line:12:3, col:13> col:13 __pos '__off64_t':'long'
| | `-FieldDecl 0x5605abe0dd58 <line:13:3, col:15> col:15 __state '__mbstate_t'
| |-TypedefDecl 0x5605abe0de20 <line:10:1, line:14:3> col:3 referenced __fpos64_t 'struct _G_fpos64_t':'_G_fpos64_t'
| | `-ElaboratedType 0x5605abe0ddc0 'struct _G_fpos64_t' sugar
| |   `-RecordType 0x5605abe0dba0 '_G_fpos64_t'
| |     `-CXXRecord 0x5605abe0daf8 '_G_fpos64_t'
| |-CXXRecordDecl 0x5605abe0de98 </usr/include/bits/types/__FILE.h:4:1, col:8> col:8 struct _IO_FILE
| |-TypedefDecl 0x5605abe0dfb8 <line:5:1, col:25> col:25 __FILE 'struct _IO_FILE':'_IO_FILE'
| | `-ElaboratedType 0x5605abe0df60 'struct _IO_FILE' sugar
| |   `-RecordType 0x5605abe0df40 '_IO_FILE'
| |     `-CXXRecord 0x5605abe0e4a8 '_IO_FILE'
| |-CXXRecordDecl 0x5605abe0e018 prev 0x5605abe0de98 </usr/include/bits/types/FILE.h:4:1, col:8> col:8 struct _IO_FILE
| |-TypedefDecl 0x5605abe0e0d0 <line:7:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'_IO_FILE'
| | `-ElaboratedType 0x5605abe0df60 'struct _IO_FILE' sugar
| |   `-RecordType 0x5605abe0df40 '_IO_FILE'
| |     `-CXXRecord 0x5605abe0e4a8 '_IO_FILE'
| |-CXXRecordDecl 0x5605abe0e130 prev 0x5605abe0e018 </usr/include/bits/types/struct_FILE.h:35:1, col:8> col:8 struct _IO_FILE
| |-CXXRecordDecl 0x5605abe0e1c8 <line:36:1, col:8> col:8 struct _IO_marker
| |-CXXRecordDecl 0x5605abe0e298 <line:37:1, col:8> col:8 struct _IO_codecvt
| |-CXXRecordDecl 0x5605abe0e368 <line:38:1, col:8> col:8 struct _IO_wide_data
| |-TypedefDecl 0x5605abe0e448 <line:43:1, col:14> col:14 referenced _IO_lock_t 'void'
| | `-BuiltinType 0x5605aba9c9d0 'void'
| |-CXXRecordDecl 0x5605abe0e4a8 prev 0x5605abe0e130 <line:49:1, line:99:1> line:49:8 struct _IO_FILE definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abe0e5a8 <col:1, col:8> col:8 implicit struct _IO_FILE
| | |-FieldDecl 0x5605abe0e670 <line:51:3, col:7> col:7 _flags 'int'
| | |-FieldDecl 0x5605abe0e6e0 <line:54:3, col:9> col:9 _IO_read_ptr 'char *'
| | |-FieldDecl 0x5605abe0e750 <line:55:3, col:9> col:9 _IO_read_end 'char *'
| | |-FieldDecl 0x5605abe0e7c0 <line:56:3, col:9> col:9 _IO_read_base 'char *'
| | |-FieldDecl 0x5605abe0e830 <line:57:3, col:9> col:9 _IO_write_base 'char *'
| | |-FieldDecl 0x5605abe0e8a0 <line:58:3, col:9> col:9 _IO_write_ptr 'char *'
| | |-FieldDecl 0x5605abe0e910 <line:59:3, col:9> col:9 _IO_write_end 'char *'
| | |-FieldDecl 0x5605abe0e980 <line:60:3, col:9> col:9 _IO_buf_base 'char *'
| | |-FieldDecl 0x5605abe0e9f0 <line:61:3, col:9> col:9 _IO_buf_end 'char *'
| | |-FieldDecl 0x5605abe0ea60 <line:64:3, col:9> col:9 _IO_save_base 'char *'
| | |-FieldDecl 0x5605abe0ead0 <line:65:3, col:9> col:9 _IO_backup_base 'char *'
| | |-FieldDecl 0x5605abe0eb40 <line:66:3, col:9> col:9 _IO_save_end 'char *'
| | |-FieldDecl 0x5605abe0ec50 <line:68:3, col:22> col:22 _markers 'struct _IO_marker *'
| | |-FieldDecl 0x5605abe0ed30 <line:70:3, col:20> col:20 _chain 'struct _IO_FILE *'
| | |-FieldDecl 0x5605abe0eda0 <line:72:3, col:7> col:7 _fileno 'int'
| | |-FieldDecl 0x5605abe0ee10 <line:73:3, col:7> col:7 _flags2 'int'
| | |-FieldDecl 0x5605abe0ee78 <line:74:3, col:11> col:11 _old_offset '__off_t':'long'
| | |-FieldDecl 0x5605abe0eee8 <line:77:3, col:18> col:18 _cur_column 'unsigned short'
| | |-FieldDecl 0x5605abe0ef58 <line:78:3, col:15> col:15 _vtable_offset 'signed char'
| | |-FieldDecl 0x5605abe0f010 <line:79:3, col:19> col:8 _shortbuf 'char[1]'
| | |-FieldDecl 0x5605abe0f110 <line:81:3, col:15> col:15 _lock '_IO_lock_t *'
| | |-FieldDecl 0x5605abe0f178 <line:89:3, col:13> col:13 _offset '__off64_t':'long'
| | |-FieldDecl 0x5605abe0f290 <line:91:3, col:23> col:23 _codecvt 'struct _IO_codecvt *'
| | |-FieldDecl 0x5605abe0f3a0 <line:92:3, col:25> col:25 _wide_data 'struct _IO_wide_data *'
| | |-FieldDecl 0x5605abe0f420 <line:93:3, col:20> col:20 _freeres_list 'struct _IO_FILE *'
| | |-FieldDecl 0x5605abe0f490 <line:94:3, col:9> col:9 _freeres_buf 'void *'
| | |-FieldDecl 0x5605abe0f570 <line:95:3, col:21> col:21 _prevchain 'struct _IO_FILE **'
| | |-FieldDecl 0x5605abe0f5e0 <line:96:3, col:7> col:7 _mode 'int'
| | `-FieldDecl 0x5605abe0f7e8 <line:98:3, col:56> col:8 _unused2 'char[20]'
| |-TypedefDecl 0x5605abe0fbc8 </usr/include/bits/types/cookie_io_functions_t.h:27:1, line:28:58> line:27:19 referenced cookie_read_function_t '__ssize_t (void *, char *, size_t)'
| | `-FunctionProtoType 0x5605abe0fb40 '__ssize_t (void *, char *, size_t)' cdecl
| |   |-ElaboratedType 0x5605abe0f880 '__ssize_t' sugar
| |   | `-TypedefType 0x5605abe0f850 '__ssize_t' sugar
| |   |   |-Typedef 0x5605abdf9f40 '__ssize_t'
| |   |   `-BuiltinType 0x5605aba9ca90 'long'
| |   |-PointerType 0x5605aba9d150 'void *'
| |   | `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-PointerType 0x5605aba9d200 'char *'
| |   | `-BuiltinType 0x5605aba9ca10 'char'
| |   `-ElaboratedType 0x5605abe0f9f0 'size_t' sugar
| |     `-TypedefType 0x5605abe0f9c0 'size_t' sugar
| |       |-Typedef 0x5605abe0cf70 'size_t'
| |       `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |-TypedefDecl 0x5605abe0fed8 <line:36:1, line:37:59> line:36:19 referenced cookie_write_function_t '__ssize_t (void *, const char *, size_t)'
| | `-FunctionProtoType 0x5605abe0fe50 '__ssize_t (void *, const char *, size_t)' cdecl
| |   |-ElaboratedType 0x5605abe0f880 '__ssize_t' sugar
| |   | `-TypedefType 0x5605abe0f850 '__ssize_t' sugar
| |   |   |-Typedef 0x5605abdf9f40 '__ssize_t'
| |   |   `-BuiltinType 0x5605aba9ca90 'long'
| |   |-PointerType 0x5605aba9d150 'void *'
| |   | `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-PointerType 0x5605aba9d900 'const char *'
| |   | `-QualType 0x5605aba9ca11 'const char' const
| |   |   `-BuiltinType 0x5605aba9ca10 'char'
| |   `-ElaboratedType 0x5605abe0f9f0 'size_t' sugar
| |     `-TypedefType 0x5605abe0f9c0 'size_t' sugar
| |       |-Typedef 0x5605abe0cf70 'size_t'
| |       `-BuiltinType 0x5605aba9cb30 'unsigned long'
| |-TypedefDecl 0x5605abe10260 <line:45:1, col:78> col:13 referenced cookie_seek_function_t 'int (void *, __off64_t *, int)'
| | `-FunctionProtoType 0x5605abe101d0 'int (void *, __off64_t *, int)' cdecl
| |   |-BuiltinType 0x5605aba9ca70 'int'
| |   |-PointerType 0x5605aba9d150 'void *'
| |   | `-BuiltinType 0x5605aba9c9d0 'void'
| |   |-PointerType 0x5605abe0fff0 '__off64_t *'
| |   | `-ElaboratedType 0x5605abdfa0c0 '__off64_t' sugar
| |   |   `-TypedefType 0x5605abdfa090 '__off64_t' sugar
| |   |     |-Typedef 0x5605abdf91c8 '__off64_t'
| |   |     `-BuiltinType 0x5605aba9ca90 'long'
| |   `-BuiltinType 0x5605aba9ca70 'int'
| |-TypedefDecl 0x5605abe103d0 <line:48:1, col:52> col:13 referenced cookie_close_function_t 'int (void *)'
| | `-FunctionProtoType 0x5605abe10360 'int (void *)' cdecl
| |   |-BuiltinType 0x5605aba9ca70 'int'
| |   `-PointerType 0x5605aba9d150 'void *'
| |     `-BuiltinType 0x5605aba9c9d0 'void'
| |-CXXRecordDecl 0x5605abe10430 <line:55:9, line:61:1> line:55:16 struct _IO_cookie_io_functions_t definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abe10570 <col:9, col:16> col:16 implicit struct _IO_cookie_io_functions_t
| | |-FieldDecl 0x5605abe10700 <line:57:3, col:27> col:27 read 'cookie_read_function_t *'
| | |-FieldDecl 0x5605abe10830 <line:58:3, col:28> col:28 write 'cookie_write_function_t *'
| | |-FieldDecl 0x5605abe10960 <line:59:3, col:27> col:27 seek 'cookie_seek_function_t *'
| | `-FieldDecl 0x5605abe10a90 <line:60:3, col:28> col:28 close 'cookie_close_function_t *'
| |-TypedefDecl 0x5605abe10b60 <line:55:1, line:61:3> col:3 referenced cookie_io_functions_t 'struct _IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| | `-ElaboratedType 0x5605abe10b00 'struct _IO_cookie_io_functions_t' sugar
| |   `-RecordType 0x5605abe104e0 '_IO_cookie_io_functions_t'
| |     `-CXXRecord 0x5605abe10430 '_IO_cookie_io_functions_t'
| |-TypedefDecl 0x5605abe10c48 </usr/include/stdio.h:53:1, col:24> col:24 va_list '__gnuc_va_list':'__va_list_tag[1]'
| | `-ElaboratedType 0x5605abe10c00 '__gnuc_va_list' sugar
| |   `-TypedefType 0x5605abe10bd0 '__gnuc_va_list' sugar
| |     |-Typedef 0x5605abe0d018 '__gnuc_va_list'
| |     `-ElaboratedType 0x5605abe0cfd0 '__builtin_va_list' sugar
| |       `-TypedefType 0x5605abdde0c0 '__builtin_va_list' sugar
| |         |-Typedef 0x5605aba9d5f8 '__builtin_va_list'
| |         `-ConstantArrayType 0x5605aba9d5a0 '__va_list_tag[1]' 1 
| |           `-RecordType 0x5605aba9d360 '__va_list_tag'
| |             `-CXXRecord 0x5605aba9d2b0 '__va_list_tag'
| |-TypedefDecl 0x5605abe10cb8 <line:64:1, col:17> col:17 off_t '__off_t':'long'
| | `-ElaboratedType 0x5605abe0d8a0 '__off_t' sugar
| |   `-TypedefType 0x5605abe0d870 '__off_t' sugar
| |     |-Typedef 0x5605abdf9150 '__off_t'
| |     `-BuiltinType 0x5605aba9ca90 'long'
| |-TypedefDecl 0x5605abe1f7e8 <line:71:1, col:19> col:19 off64_t '__off64_t':'long'
| | `-ElaboratedType 0x5605abdfa0c0 '__off64_t' sugar
| |   `-TypedefType 0x5605abdfa090 '__off64_t' sugar
| |     |-Typedef 0x5605abdf91c8 '__off64_t'
| |     `-BuiltinType 0x5605aba9ca90 'long'
| |-TypedefDecl 0x5605abe1f858 <line:78:1, col:19> col:19 ssize_t '__ssize_t':'long'
| | `-ElaboratedType 0x5605abe0f880 '__ssize_t' sugar
| |   `-TypedefType 0x5605abe0f850 '__ssize_t' sugar
| |     |-Typedef 0x5605abdf9f40 '__ssize_t'
| |     `-BuiltinType 0x5605aba9ca90 'long'
| |-TypedefDecl 0x5605abe1f928 <line:85:1, col:18> col:18 referenced fpos_t '__fpos_t':'_G_fpos_t'
| | `-ElaboratedType 0x5605abe1f8e0 '__fpos_t' sugar
| |   `-TypedefType 0x5605abe1f8b0 '__fpos_t' sugar
| |     |-Typedef 0x5605abe0da80 '__fpos_t'
| |     `-ElaboratedType 0x5605abe0da20 'struct _G_fpos_t' sugar
| |       `-RecordType 0x5605abe0d730 '_G_fpos_t'
| |         `-CXXRecord 0x5605abe0d688 '_G_fpos_t'
| |-TypedefDecl 0x5605abe1f9f8 <line:90:1, col:20> col:20 referenced fpos64_t '__fpos64_t':'_G_fpos64_t'
| | `-ElaboratedType 0x5605abe1f9b0 '__fpos64_t' sugar
| |   `-TypedefType 0x5605abe1f980 '__fpos64_t' sugar
| |     |-Typedef 0x5605abe0de20 '__fpos64_t'
| |     `-ElaboratedType 0x5605abe0ddc0 'struct _G_fpos64_t' sugar
| |       `-RecordType 0x5605abe0dba0 '_G_fpos64_t'
| |         `-CXXRecord 0x5605abe0daf8 '_G_fpos64_t'
| |-VarDecl 0x5605abe1fb00 <line:149:1, col:14> col:14 stdin 'FILE *' extern
| |-VarDecl 0x5605abe1fba0 <line:150:1, col:14> col:14 stdout 'FILE *' extern
| |-VarDecl 0x5605abe1fc40 <line:151:1, col:14> col:14 stderr 'FILE *' extern
| |-FunctionDecl 0x5605abe1fe50 <line:158:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:158:12 remove 'int (const char *) noexcept(true)' extern
| | `-ParmVarDecl 0x5605abe1fce0 <col:20, col:32> col:32 __filename 'const char *'
| |-FunctionDecl 0x5605abe20160 <line:160:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:160:12 rename 'int (const char *, const char *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe1ff38 <col:20, col:32> col:32 __old 'const char *'
| | `-ParmVarDecl 0x5605abe1ffc0 <col:39, col:51> col:51 __new 'const char *'
| |-FunctionDecl 0x5605abe205e0 <line:164:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:164:12 renameat 'int (int, const char *, int, const char *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe20250 <col:22, col:26> col:26 __oldfd 'int'
| | |-ParmVarDecl 0x5605abe202d8 <col:35, col:47> col:47 __old 'const char *'
| | |-ParmVarDecl 0x5605abe20360 <col:54, col:58> col:58 __newfd 'int'
| | `-ParmVarDecl 0x5605abe203e8 <line:165:8, col:20> col:20 __new 'const char *'
| |-FunctionDecl 0x5605abe20b30 <line:176:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:176:12 renameat2 'int (int, const char *, int, const char *, unsigned int) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe206e0 <col:23, col:27> col:27 __oldfd 'int'
| | |-ParmVarDecl 0x5605abe20768 <col:36, col:48> col:48 __old 'const char *'
| | |-ParmVarDecl 0x5605abe207f0 <col:55, col:59> col:59 __newfd 'int'
| | |-ParmVarDecl 0x5605abe20878 <line:177:9, col:21> col:21 __new 'const char *'
| | `-ParmVarDecl 0x5605abe20900 <col:28, col:41> col:41 __flags 'unsigned int'
| |-FunctionDecl 0x5605abe20d90 <line:184:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:184:12 fclose 'int (FILE *)' extern
| | |-ParmVarDecl 0x5605abe20c38 <col:20, col:26> col:26 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe20e40 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:184:49> 1
| |-FunctionDecl 0x5605abe20ff0 <line:194:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:194:14 tmpfile 'FILE *()' extern
| | `-RestrictAttr 0x5605abe21098 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe211d0 </usr/include/stdio.h:206:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:206:14 tmpfile64 'FILE *()' extern
| | `-RestrictAttr 0x5605abe21278 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe21500 </usr/include/stdio.h:211:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:211:14 tmpnam 'char *(char *) noexcept(true)' extern
| | `-ParmVarDecl 0x5605abe21388 <col:22, col:35> col:26 'char *'
| |-FunctionDecl 0x5605abe21760 <line:216:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:216:14 tmpnam_r 'char *(char *) noexcept(true)' extern
| | `-ParmVarDecl 0x5605abe21630 <col:24, col:41> col:29 __s 'char *'
| |-FunctionDecl 0x5605abe21a70 <line:228:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:228:14 tempnam 'char *(const char *, const char *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe21848 <col:23, col:35> col:35 __dir 'const char *'
| | |-ParmVarDecl 0x5605abe218d0 <col:42, col:54> col:54 __pfx 'const char *'
| | `-RestrictAttr 0x5605abe21b28 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe21c70 </usr/include/stdio.h:236:1, col:34> col:12 fflush 'int (FILE *)' extern
| | `-ParmVarDecl 0x5605abe21bb8 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0x5605abe21e10 <line:245:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| | `-ParmVarDecl 0x5605abe21d58 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0x5605abe21fd0 <line:255:1, col:27> col:12 fcloseall 'int ()' extern
| |-FunctionDecl 0x5605abe22290 <line:264:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:264:14 fopen 'FILE *(const char *__restrict, const char *__restrict)' extern
| | |-ParmVarDecl 0x5605abe220b0 <col:21, col:44> col:44 __filename 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe22138 <line:265:7, col:30> col:30 __modes 'const char *__restrict'
| | |-RestrictAttr 0x5605abe22348 </usr/include/sys/cdefs.h:452:47> malloc
| | `-BuiltinAttr 0x5605abe22430 <<invalid sloc>> Implicit 630
| |-FunctionDecl 0x5605abe22740 </usr/include/stdio.h:271:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:271:14 freopen 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abe22478 <col:23, col:46> col:46 __filename 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe22500 <line:272:9, col:32> col:32 __modes 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe22588 <line:273:9, col:26> col:26 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abe22800 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:273:55> 3
| |-FunctionDecl 0x5605abe22a00 <line:289:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:289:14 fopen64 'FILE *(const char *__restrict, const char *__restrict)' extern
| | |-ParmVarDecl 0x5605abe228a0 <col:23, col:46> col:46 __filename 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe22928 <line:290:9, col:32> col:32 __modes 'const char *__restrict'
| | `-RestrictAttr 0x5605abe22ab8 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe22d70 </usr/include/stdio.h:292:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:292:14 freopen64 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abe22b48 <col:25, col:48> col:48 __filename 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe22bd0 <line:293:4, col:27> col:27 __modes 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe22c58 <line:294:4, col:21> col:21 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abe22e30 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:294:50> 3
| |-FunctionDecl 0x5605abe230f0 <line:299:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:299:14 fdopen 'FILE *(int, const char *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe22ed0 <col:22, col:26> col:26 __fd 'int'
| | |-ParmVarDecl 0x5605abe22f58 <col:32, col:44> col:44 __modes 'const char *'
| | `-RestrictAttr 0x5605abe231a8 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe23580 </usr/include/stdio.h:306:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:306:14 fopencookie 'FILE *(void *__restrict, const char *__restrict, cookie_io_functions_t) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe23238 <col:27, col:44> col:44 __magic_cookie 'void *__restrict'
| | |-ParmVarDecl 0x5605abe232c0 <line:307:6, col:29> col:29 __modes 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe233a8 <line:308:6, col:28> col:28 __io_funcs 'cookie_io_functions_t':'_IO_cookie_io_functions_t'
| | `-RestrictAttr 0x5605abe23640 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe29640 </usr/include/stdio.h:314:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:314:14 fmemopen 'FILE *(void *, size_t, const char *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe236d0 <col:24, col:30> col:30 __s 'void *'
| | |-ParmVarDecl 0x5605abe23750 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe29468 <col:49, col:61> col:61 __modes 'const char *'
| | `-RestrictAttr 0x5605abe29700 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe29a50 </usr/include/stdio.h:320:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:320:14 open_memstream 'FILE *(char **, size_t *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe297c0 <col:30, col:37> col:37 __bufloc 'char **'
| | |-ParmVarDecl 0x5605abe298b0 <col:47, col:55> col:55 __sizeloc 'size_t *'
| | `-RestrictAttr 0x5605abe29b08 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe29dd8 </usr/include/stdio.h:334:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:334:13 setbuf 'void (FILE *__restrict, char *__restrict) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe29b98 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe29c20 <col:48, col:65> col:65 __buf 'char *__restrict'
| | `-NonNullAttr 0x5605abe29e90 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:335:16> 1
| |-FunctionDecl 0x5605abe2a2e0 <line:339:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:339:12 setvbuf 'int (FILE *__restrict, char *__restrict, int, size_t) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe29f30 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe29fb8 <col:48, col:65> col:65 __buf 'char *__restrict'
| | |-ParmVarDecl 0x5605abe2a040 <line:340:7, col:11> col:11 __modes 'int'
| | |-ParmVarDecl 0x5605abe2a0c0 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| | `-NonNullAttr 0x5605abe2a3a8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:340:53> 1
| |-FunctionDecl 0x5605abe2a748 <line:345:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:345:13 setbuffer 'void (FILE *__restrict, char *__restrict, size_t) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2a450 <col:24, col:41> col:41 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe2a4d8 <col:51, col:68> col:68 __buf 'char *__restrict'
| | |-ParmVarDecl 0x5605abe2a558 <line:346:10, col:17> col:17 __size 'size_t':'unsigned long'
| | `-NonNullAttr 0x5605abe2a808 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:346:46> 1
| |-FunctionDecl 0x5605abe2aa38 <line:349:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:349:13 setlinebuf 'void (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2a8b0 <col:25, col:31> col:31 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe2aae8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:349:62> 1
| |-FunctionDecl 0x5605abe2ada8 <line:357:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:357:12 fprintf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x5605abe2ab90 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe2ac18 <line:358:7, col:30> col:30 __format 'const char *__restrict'
| | |-NonNullAttr 0x5605abe2ae60 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:358:58> 1
| | |-BuiltinAttr 0x5605abe2afc8 <<invalid sloc>> Implicit 551
| | |-FormatAttr 0x5605abe2aff0 <line:357:12> Implicit printf 2 3
| | `-NoThrowAttr 0x5605abe2b028 <col:12> Implicit
| |-FunctionDecl 0x5605abe2b1a8 <line:363:1, col:56> col:12 used printf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x5605abe2b070 <col:20, col:43> col:43 __format 'const char *__restrict'
| | |-BuiltinAttr 0x5605abe2b270 <<invalid sloc>> Implicit 1024
| | `-FormatAttr 0x5605abe2b2c8 <col:12> Implicit printf 1 2
| |-FunctionDecl 0x5605abe2b558 <line:365:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:365:12 sprintf 'int (char *__restrict, const char *__restrict, ...) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2b320 <col:21, col:38> col:38 __s 'char *__restrict'
| | |-ParmVarDecl 0x5605abe2b3a8 <line:366:7, col:30> col:30 __format 'const char *__restrict'
| | |-BuiltinAttr 0x5605abe2b678 <<invalid sloc>> Implicit 1108
| | |-FormatAttr 0x5605abe2b6d0 <line:365:12> Implicit printf 2 3
| | `-NoThrowAttr 0x5605abe2b708 <col:12> Implicit
| |-FunctionDecl 0x5605abe2ba70 <line:372:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:372:12 vfprintf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5605abe2b750 <col:22, col:39> col:39 __s 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe2b7d8 <col:44, col:67> col:67 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe2b8b8 <line:373:8, col:23> col:23 __arg '__va_list_tag *'
| | |-NonNullAttr 0x5605abe2bb30 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:373:43> 1
| | |-BuiltinAttr 0x5605abe2bc98 <<invalid sloc>> Implicit 1433
| | |-FormatAttr 0x5605abe2bcc0 <line:372:12> Implicit printf 2 0
| | `-NoThrowAttr 0x5605abe2bcf8 <col:12> Implicit
| |-FunctionDecl 0x5605abe2bf20 <line:378:1, col:74> col:12 vprintf 'int (const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5605abe2bd40 <col:21, col:44> col:44 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe2bdc0 <col:54, col:69> col:69 __arg '__va_list_tag *'
| | |-BuiltinAttr 0x5605abe2c0b0 <<invalid sloc>> Implicit 1418
| | |-FormatAttr 0x5605abe2c108 <col:12> Implicit printf 1 0
| | `-NoThrowAttr 0x5605abe2c140 <col:12> Implicit
| |-FunctionDecl 0x5605abe2c460 <line:380:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:380:12 vsprintf 'int (char *__restrict, const char *__restrict, __va_list_tag *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2c188 <col:22, col:39> col:39 __s 'char *__restrict'
| | |-ParmVarDecl 0x5605abe2c210 <col:44, col:67> col:67 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe2c290 <line:381:8, col:23> col:23 __arg '__va_list_tag *'
| | |-BuiltinAttr 0x5605abe2c588 <<invalid sloc>> Implicit 1435
| | |-FormatAttr 0x5605abe2c5e0 <line:380:12> Implicit printf 2 0
| | `-NoThrowAttr 0x5605abe2c618 <col:12> Implicit
| |-FunctionDecl 0x5605abe2c998 <line:385:1, line:387:62> line:385:12 snprintf 'int (char *__restrict, size_t, const char *__restrict, ...) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2c660 <col:22, col:39> col:39 __s 'char *__restrict'
| | |-ParmVarDecl 0x5605abe2c6e0 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe2c768 <line:386:8, col:31> col:31 __format 'const char *__restrict'
| | |-FormatAttr 0x5605abe2ca58 <line:387:32, col:60> printf 3 4
| | |-BuiltinAttr 0x5605abe2cb30 <<invalid sloc>> Implicit 1173
| | `-NoThrowAttr 0x5605abe2cb58 <line:385:12> Implicit
| |-FunctionDecl 0x5605abe2cf70 <line:389:1, line:391:62> line:389:12 vsnprintf 'int (char *__restrict, size_t, const char *__restrict, __va_list_tag *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2cba0 <col:23, col:40> col:40 __s 'char *__restrict'
| | |-ParmVarDecl 0x5605abe2cc20 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe2cca8 <line:390:9, col:32> col:32 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe2cd28 <col:42, col:57> col:57 __arg '__va_list_tag *'
| | |-FormatAttr 0x5605abe2d038 <line:391:32, col:60> printf 3 0
| | |-BuiltinAttr 0x5605abe2d110 <<invalid sloc>> Implicit 1437
| | `-NoThrowAttr 0x5605abe2d138 <line:389:12> Implicit
| |-FunctionDecl 0x5605abe2e4d0 <line:397:1, line:399:62> line:397:12 vasprintf 'int (char **__restrict, const char *__restrict, __va_list_tag *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2d180 <col:23, col:41> col:41 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x5605abe2d208 <col:48, col:71> col:71 __f 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe2d288 <line:398:9, col:24> col:24 __arg '__va_list_tag *'
| | `-FormatAttr 0x5605abe2e590 <line:399:32, col:60> printf 2 0
| |-FunctionDecl 0x5605abe2e8b8 <line:400:1, line:402:62> line:400:12 __asprintf 'int (char **__restrict, const char *__restrict, ...) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2e630 <col:24, col:42> col:42 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x5605abe2e6b8 <line:401:10, col:33> col:33 __fmt 'const char *__restrict'
| | `-FormatAttr 0x5605abe2e970 <line:402:32, col:60> printf 2 3
| |-FunctionDecl 0x5605abe2ec48 <line:403:1, line:405:62> line:403:12 asprintf 'int (char **__restrict, const char *__restrict, ...) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2ea10 <col:22, col:40> col:40 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x5605abe2ea98 <line:404:8, col:31> col:31 __fmt 'const char *__restrict'
| | `-FormatAttr 0x5605abe2ed00 <line:405:32, col:60> printf 2 3
| |-FunctionDecl 0x5605abe2f090 <line:410:1, line:412:52> line:410:12 vdprintf 'int (int, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5605abe2eda0 <col:22, col:26> col:26 __fd 'int'
| | |-ParmVarDecl 0x5605abe2ee28 <col:32, col:55> col:55 __fmt 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe2eea8 <line:411:8, col:23> col:23 __arg '__va_list_tag *'
| | `-FormatAttr 0x5605abe2f150 <line:412:22, col:50> printf 2 0
| |-FunctionDecl 0x5605abe2f438 <line:413:1, line:414:52> line:413:12 dprintf 'int (int, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x5605abe2f1f0 <col:21, col:25> col:25 __fd 'int'
| | |-ParmVarDecl 0x5605abe2f278 <col:31, col:54> col:54 __fmt 'const char *__restrict'
| | `-FormatAttr 0x5605abe2f4f0 <line:414:22, col:50> printf 2 3
| |-FunctionDecl 0x5605abe2f710 <line:422:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:422:12 fscanf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x5605abe2f590 <col:20, col:37> col:37 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe2f618 <line:423:6, col:29> col:29 __format 'const char *__restrict'
| | |-NonNullAttr 0x5605abe2f7c8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:423:63> 1
| | |-BuiltinAttr 0x5605abe2f850 <<invalid sloc>> Implicit 554
| | `-FormatAttr 0x5605abe2f878 <line:422:12> Implicit scanf 2 3
| |-FunctionDecl 0x5605abe2f988 <line:428:1, col:55> col:12 scanf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x5605abe2f8d0 <col:19, col:42> col:42 __format 'const char *__restrict'
| | |-BuiltinAttr 0x5605abe2fa50 <<invalid sloc>> Implicit 1129
| | `-FormatAttr 0x5605abe2faa8 <col:12> Implicit scanf 1 2
| |-FunctionDecl 0x5605abe2fd38 <line:430:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:430:12 sscanf 'int (const char *__restrict, const char *__restrict, ...) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe2fb00 <col:20, col:43> col:43 __s 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe2fb88 <line:431:6, col:29> col:29 __format 'const char *__restrict'
| | |-BuiltinAttr 0x5605abe2fea8 <<invalid sloc>> Implicit 1111
| | `-FormatAttr 0x5605abe2ff00 <line:430:12> Implicit scanf 2 3
| |-TypedefDecl 0x5605abe2ff58 </usr/include/bits/floatn-common.h:214:1, col:15> col:15 _Float32 'float'
| | `-BuiltinType 0x5605aba9cb70 'float'
| |-TypedefDecl 0x5605abe2ffd0 <line:251:1, col:16> col:16 _Float64 'double'
| | `-BuiltinType 0x5605aba9cb90 'double'
| |-TypedefDecl 0x5605abe30048 <line:268:1, col:16> col:16 _Float32x 'double'
| | `-BuiltinType 0x5605aba9cb90 'double'
| |-TypedefDecl 0x5605abe300c0 <line:285:1, col:21> col:21 _Float64x 'long double'
| | `-BuiltinType 0x5605aba9cbb0 'long double'
| |-FunctionDecl 0x5605abe30350 prev 0x5605abe2f710 </usr/include/stdio.h:442:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:442:24 fscanf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x5605abe30138 <col:33, col:50> col:50 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe301c0 <line:443:5, col:28> col:28 __format 'const char *__restrict'
| | |-NonNullAttr 0x5605abe304b8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:423:63> Inherited 1
| | |-BuiltinAttr 0x5605abe304f8 <<invalid sloc>> Inherited Implicit 554
| | |-FormatAttr 0x5605abe30520 <line:422:12> Inherited scanf 2 3
| | |-AsmLabelAttr 0x5605abe303f8 <<scratch space>:279:1> "__isoc23_fscanf" IsLiteralLabel
| | `-NonNullAttr 0x5605abe30480 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:444:46> 1
| |-FunctionDecl 0x5605abe306c8 prev 0x5605abe2f988 <line:445:1, /usr/include/sys/cdefs.h:410:79> /usr/include/stdio.h:445:24 scanf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x5605abe30578 <col:32, col:55> col:55 __format 'const char *__restrict'
| | |-BuiltinAttr 0x5605abe307f0 <<invalid sloc>> Inherited Implicit 1129
| | |-FormatAttr 0x5605abe30818 <line:428:12> Inherited scanf 1 2
| | `-AsmLabelAttr 0x5605abe30770 <<scratch space>:281:1> "__isoc23_scanf" IsLiteralLabel
| |-FunctionDecl 0x5605abe30a88 prev 0x5605abe2fd38 </usr/include/stdio.h:447:1, /usr/include/sys/cdefs.h:413:52> /usr/include/stdio.h:447:28 sscanf 'int (const char *__restrict, const char *__restrict, ...) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe30870 <col:37, col:60> col:60 __s 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe308f8 <line:448:9, col:32> col:32 __format 'const char *__restrict'
| | |-BuiltinAttr 0x5605abe30bb8 <<invalid sloc>> Inherited Implicit 1111
| | |-FormatAttr 0x5605abe30be0 <line:430:12> Inherited scanf 2 3
| | `-AsmLabelAttr 0x5605abe30b30 <<scratch space>:283:1> "__isoc23_sscanf" IsLiteralLabel
| |-FunctionDecl 0x5605abe30ea8 </usr/include/stdio.h:490:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:490:12 vfscanf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5605abe30c38 <col:21, col:38> col:38 __s 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe30cc0 <col:43, col:66> col:66 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe30d40 <line:491:7, col:22> col:22 __arg '__va_list_tag *'
| | |-FormatAttr 0x5605abe30f68 <line:492:22, col:49> scanf 2 0
| | |-NonNullAttr 0x5605abe30fd0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:492:72> 1
| | `-BuiltinAttr 0x5605abe31020 <<invalid sloc>> Implicit 1415
| |-FunctionDecl 0x5605abe31210 <line:498:1, line:499:51> line:498:12 vscanf 'int (const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5605abe31068 <col:20, col:43> col:43 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe310e8 <col:53, col:68> col:68 __arg '__va_list_tag *'
| | |-FormatAttr 0x5605abe312c8 <line:499:22, col:49> scanf 1 0
| | `-BuiltinAttr 0x5605abe31348 <<invalid sloc>> Implicit 1425
| |-FunctionDecl 0x5605abe316c0 <line:502:1, line:504:59> line:502:12 vsscanf 'int (const char *__restrict, const char *__restrict, __va_list_tag *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe31390 <col:21, col:44> col:44 __s 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe31418 <line:503:7, col:30> col:30 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe31498 <col:40, col:55> col:55 __arg '__va_list_tag *'
| | |-FormatAttr 0x5605abe31780 <line:504:30, col:57> scanf 2 0
| | `-BuiltinAttr 0x5605abe318e8 <<invalid sloc>> Implicit 1423
| |-FunctionDecl 0x5605abe31c38 prev 0x5605abe30ea8 <line:511:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:511:24 vfscanf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5605abe31930 <line:512:11, col:28> col:28 __s 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe319b8 <line:513:4, col:27> col:27 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe31a38 <col:37, col:52> col:52 __arg '__va_list_tag *'
| | |-NonNullAttr 0x5605abe31de8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:492:72> Inherited 1
| | |-BuiltinAttr 0x5605abe31e28 <<invalid sloc>> Inherited Implicit 1415
| | |-AsmLabelAttr 0x5605abe31ce0 <<scratch space>:287:1> "__isoc23_vfscanf" IsLiteralLabel
| | |-FormatAttr 0x5605abe31d70 </usr/include/stdio.h:515:22, col:49> scanf 2 0
| | `-NonNullAttr 0x5605abe31da8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:515:72> 1
| |-FunctionDecl 0x5605abe32048 prev 0x5605abe31210 <line:516:1, line:518:51> line:516:24 vscanf 'int (const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5605abe31e70 <col:33, col:56> col:56 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe31ef0 <line:517:5, col:20> col:20 __arg '__va_list_tag *'
| | |-BuiltinAttr 0x5605abe321b0 <<invalid sloc>> Inherited Implicit 1425
| | |-AsmLabelAttr 0x5605abe320f0 <<scratch space>:289:1> "__isoc23_vscanf" IsLiteralLabel
| | `-FormatAttr 0x5605abe32178 </usr/include/stdio.h:518:22, col:49> scanf 1 0
| |-FunctionDecl 0x5605abb3b800 prev 0x5605abe316c0 <line:519:1, line:523:51> line:519:28 vsscanf 'int (const char *__restrict, const char *__restrict, __va_list_tag *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe321f8 <line:520:8, col:31> col:31 __s 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe32280 <line:521:8, col:31> col:31 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe32300 <line:522:8, col:23> col:23 __arg '__va_list_tag *'
| | |-BuiltinAttr 0x5605abb3b970 <<invalid sloc>> Inherited Implicit 1423
| | |-AsmLabelAttr 0x5605abb3b8a8 <<scratch space>:291:1> "__isoc23_vsscanf" IsLiteralLabel
| | `-FormatAttr 0x5605abb3b938 </usr/include/stdio.h:523:22, col:49> scanf 2 0
| |-FunctionDecl 0x5605abb3ba90 <line:575:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:575:12 fgetc 'int (FILE *)' extern
| | |-ParmVarDecl 0x5605abb3b9b8 <col:19, col:25> col:25 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3bb40 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:575:48> 1
| |-FunctionDecl 0x5605abb3bcb8 <line:576:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:576:12 getc 'int (FILE *)' extern
| | |-ParmVarDecl 0x5605abb3bbe0 <col:18, col:24> col:24 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3bd68 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:576:47> 1
| |-FunctionDecl 0x5605abb3beb8 <line:582:1, col:25> col:12 getchar 'int ()' extern
| |-FunctionDecl 0x5605abb3c070 <line:589:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:589:12 getc_unlocked 'int (FILE *)' extern
| | |-ParmVarDecl 0x5605abb3bf98 <col:27, col:33> col:33 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3c120 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:589:56> 1
| |-FunctionDecl 0x5605abb3c268 <line:590:1, col:34> col:12 getchar_unlocked 'int ()' extern
| |-FunctionDecl 0x5605abb3c420 <line:600:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:600:12 fgetc_unlocked 'int (FILE *)' extern
| | |-ParmVarDecl 0x5605abb3c348 <col:28, col:34> col:34 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3c4d0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:600:57> 1
| |-FunctionDecl 0x5605abb3c770 <line:611:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:611:12 fputc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x5605abb3c570 <col:19, col:23> col:23 __c 'int'
| | |-ParmVarDecl 0x5605abb3c5f8 <col:28, col:34> col:34 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3c828 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:611:57> 2
| |-FunctionDecl 0x5605abb3ca50 <line:612:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:612:12 putc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x5605abb3c8d0 <col:18, col:22> col:22 __c 'int'
| | |-ParmVarDecl 0x5605abb3c958 <col:27, col:33> col:33 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3cb08 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:612:56> 2
| |-FunctionDecl 0x5605abb3cca0 <line:618:1, col:28> col:12 putchar 'int (int)' extern
| | `-ParmVarDecl 0x5605abb3cbb0 <col:21, col:25> col:25 __c 'int'
| |-FunctionDecl 0x5605abb3cf08 <line:627:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:627:12 fputc_unlocked 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x5605abb3cd88 <col:28, col:32> col:32 __c 'int'
| | |-ParmVarDecl 0x5605abb3ce10 <col:37, col:43> col:43 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3cfc0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:627:66> 2
| |-FunctionDecl 0x5605abb3d1e0 <line:635:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:635:12 putc_unlocked 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x5605abb3d060 <col:27, col:31> col:31 __c 'int'
| | |-ParmVarDecl 0x5605abb3d0e8 <col:36, col:42> col:42 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3d298 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:635:65> 2
| |-FunctionDecl 0x5605abb3d3f8 <line:636:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| | `-ParmVarDecl 0x5605abb3d340 <col:30, col:34> col:34 __c 'int'
| |-FunctionDecl 0x5605abb3d5b8 <line:643:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:643:12 getw 'int (FILE *)' extern
| | |-ParmVarDecl 0x5605abb3d4e0 <col:18, col:24> col:24 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3d668 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:643:47> 1
| |-FunctionDecl 0x5605abb3d890 <line:646:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:646:12 putw 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x5605abb3d710 <col:18, col:22> col:22 __w 'int'
| | |-ParmVarDecl 0x5605abb3d798 <col:27, col:33> col:33 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3d948 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:646:56> 2
| |-FunctionDecl 0x5605abb3dcb0 <line:654:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:654:14 fgets 'char *(char *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abb3d9f0 <col:21, col:38> col:38 __s 'char *__restrict'
| | |-ParmVarDecl 0x5605abb3da78 <col:43, col:47> col:47 __n 'int'
| | |-ParmVarDecl 0x5605abb3db00 <col:52, col:69> col:69 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abb3dd70 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:655:72> 3
| |-FunctionDecl 0x5605abb3e038 <line:677:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:677:14 fgets_unlocked 'char *(char *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abb3de10 <col:30, col:47> col:47 __s 'char *__restrict'
| | |-ParmVarDecl 0x5605abb3de98 <col:52, col:56> col:56 __n 'int'
| | |-ParmVarDecl 0x5605abb3df20 <line:678:9, col:26> col:26 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abb3e0f8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:679:65> 3
| |-FunctionDecl 0x5605abb3e508 <line:689:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:689:18 __getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abb3e1a0 <col:30, col:48> col:48 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x5605abb3e228 <line:690:30, col:49> col:49 __n 'size_t *__restrict'
| | |-ParmVarDecl 0x5605abb3e2b0 <col:54, col:58> col:58 __delimiter 'int'
| | |-ParmVarDecl 0x5605abb3e338 <line:691:30, col:47> col:47 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abb3e5d0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:691:76> 4
| |-FunctionDecl 0x5605abb3e938 <line:692:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:692:18 getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abb3e670 <col:28, col:46> col:46 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x5605abb3e6f8 <line:693:28, col:47> col:47 __n 'size_t *__restrict'
| | |-ParmVarDecl 0x5605abb3e780 <col:52, col:56> col:56 __delimiter 'int'
| | |-ParmVarDecl 0x5605abb3e808 <line:694:28, col:45> col:45 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abb3ea00 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:694:74> 4
| |-FunctionDecl 0x5605abb3ed58 <line:697:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:697:18 getline '__ssize_t (char **__restrict, size_t *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abb3eaa0 <col:27, col:45> col:45 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x5605abb3eb28 <line:698:27, col:46> col:46 __n 'size_t *__restrict'
| | |-ParmVarDecl 0x5605abb3ebb0 <line:699:27, col:44> col:44 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abb3ee18 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:699:73> 3
| |-FunctionDecl 0x5605abb3f0c0 <line:707:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:707:12 fputs 'int (const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abb3eec0 <col:19, col:42> col:42 __s 'const char *__restrict'
| | |-ParmVarDecl 0x5605abb3ef48 <col:47, col:64> col:64 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abb3f178 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:708:16> 2
| |-FunctionDecl 0x5605abb3f310 <line:714:1, col:33> col:12 used puts 'int (const char *)' extern
| | `-ParmVarDecl 0x5605abb3f220 <col:18, col:30> col:30 __s 'const char *'
| |-FunctionDecl 0x5605abb3f578 <line:721:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:721:12 ungetc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x5605abb3f3f8 <col:20, col:24> col:24 __c 'int'
| | |-ParmVarDecl 0x5605abb3f480 <col:29, col:35> col:35 __stream 'FILE *'
| | `-NonNullAttr 0x5605abb3f630 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:721:58> 2
| |-FunctionDecl 0x5605abe4c248 <line:728:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:728:15 fread 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abb3f6d0 <col:22, col:39> col:39 __ptr 'void *__restrict'
| | |-ParmVarDecl 0x5605abe4bf68 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4bfe8 <line:729:8, col:15> col:15 __n 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4c070 <col:20, col:37> col:37 __stream 'FILE *__restrict'
| | |-NonNullAttr 0x5605abe4c310 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:730:15> 4
| | `-BuiltinAttr 0x5605abe4c3e0 <<invalid sloc>> Implicit 634
| |-FunctionDecl 0x5605abe4c7b8 <line:735:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:735:15 fwrite 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abe4c460 <col:23, col:46> col:46 __ptr 'const void *__restrict'
| | |-ParmVarDecl 0x5605abe4c4e0 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4c560 <line:736:9, col:16> col:16 __n 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4c5e8 <col:21, col:38> col:38 __s 'FILE *__restrict'
| | |-NonNullAttr 0x5605abe4c880 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:736:55> 4
| | `-BuiltinAttr 0x5605abe4c950 <<invalid sloc>> Implicit 645
| |-FunctionDecl 0x5605abe4cb18 <line:745:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:745:12 fputs_unlocked 'int (const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abe4c998 <col:28, col:51> col:51 __s 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe4ca20 <line:746:7, col:24> col:24 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abe4cbd0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:746:47> 2
| |-FunctionDecl 0x5605abe4cf28 <line:756:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:756:15 fread_unlocked 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abe4cc70 <col:31, col:48> col:48 __ptr 'void *__restrict'
| | |-ParmVarDecl 0x5605abe4ccf0 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4cd70 <line:757:10, col:17> col:17 __n 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4cdf8 <col:22, col:39> col:39 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abe4cff0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:758:16> 4
| |-FunctionDecl 0x5605abe4d348 <line:759:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:759:15 fwrite_unlocked 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x5605abe4d090 <col:32, col:55> col:55 __ptr 'const void *__restrict'
| | |-ParmVarDecl 0x5605abe4d110 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4d190 <line:760:11, col:18> col:18 __n 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abe4d218 <col:23, col:40> col:40 __stream 'FILE *__restrict'
| | `-NonNullAttr 0x5605abe4d410 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:761:16> 4
| |-FunctionDecl 0x5605abe4d770 <line:769:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:769:12 fseek 'int (FILE *, long, int)' extern
| | |-ParmVarDecl 0x5605abe4d4b0 <col:19, col:25> col:25 __stream 'FILE *'
| | |-ParmVarDecl 0x5605abe4d538 <col:35, col:44> col:44 __off 'long'
| | |-ParmVarDecl 0x5605abe4d5c0 <col:51, col:55> col:55 __whence 'int'
| | `-NonNullAttr 0x5605abe4d830 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:770:16> 1
| |-FunctionDecl 0x5605abe4da20 <line:775:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:775:17 ftell 'long (FILE *)' extern
| | |-ParmVarDecl 0x5605abe4d8d0 <col:24, col:30> col:30 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe4dad0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:775:59> 1
| |-FunctionDecl 0x5605abe4dcb8 <line:780:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:780:13 rewind 'void (FILE *)' extern
| | |-ParmVarDecl 0x5605abe4db70 <col:21, col:27> col:27 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe4dd68 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:780:50> 1
| |-FunctionDecl 0x5605abe4e080 <line:793:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:793:12 fseeko 'int (FILE *, __off_t, int)' extern
| | |-ParmVarDecl 0x5605abe4de10 <col:20, col:26> col:26 __stream 'FILE *'
| | |-ParmVarDecl 0x5605abe4de90 <col:36, col:44> col:44 __off '__off_t':'long'
| | |-ParmVarDecl 0x5605abe4df18 <col:51, col:55> col:55 __whence 'int'
| | `-NonNullAttr 0x5605abe4e140 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:794:16> 1
| |-FunctionDecl 0x5605abe4e2e8 <line:799:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:799:16 ftello '__off_t (FILE *)' extern
| | |-ParmVarDecl 0x5605abe4e1e0 <col:24, col:30> col:30 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe4e398 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:799:59> 1
| |-FunctionDecl 0x5605abe4e710 <line:819:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:819:12 fgetpos 'int (FILE *__restrict, fpos_t *__restrict)' extern
| | |-ParmVarDecl 0x5605abe4e440 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe4e590 <col:48, col:67> col:67 __pos 'fpos_t *__restrict'
| | `-NonNullAttr 0x5605abe4e7c8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:820:16> 1
| |-FunctionDecl 0x5605abe4eae0 <line:825:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:825:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| | |-ParmVarDecl 0x5605abe4e870 <col:21, col:27> col:27 __stream 'FILE *'
| | |-ParmVarDecl 0x5605abe4e960 <col:37, col:51> col:51 __pos 'const fpos_t *'
| | `-NonNullAttr 0x5605abe4eb98 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:825:71> 1
| |-FunctionDecl 0x5605abe4eeb0 <line:841:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:841:12 fseeko64 'int (FILE *, __off64_t, int)' extern
| | |-ParmVarDecl 0x5605abe4ec40 <col:22, col:28> col:28 __stream 'FILE *'
| | |-ParmVarDecl 0x5605abe4ecc0 <col:38, col:48> col:48 __off '__off64_t':'long'
| | |-ParmVarDecl 0x5605abe4ed48 <col:55, col:59> col:59 __whence 'int'
| | `-NonNullAttr 0x5605abe4ef70 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:842:16> 1
| |-FunctionDecl 0x5605abe4f118 <line:843:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:843:18 ftello64 '__off64_t (FILE *)' extern
| | |-ParmVarDecl 0x5605abe4f010 <col:28, col:34> col:34 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe4f1c8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:843:63> 1
| |-FunctionDecl 0x5605abe4f540 <line:844:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:844:12 fgetpos64 'int (FILE *__restrict, fpos64_t *__restrict)' extern
| | |-ParmVarDecl 0x5605abe4f270 <col:23, col:40> col:40 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x5605abe4f3c0 <col:50, col:71> col:71 __pos 'fpos64_t *__restrict'
| | `-NonNullAttr 0x5605abe4f5f8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:845:16> 1
| |-FunctionDecl 0x5605abe4f910 <line:846:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:846:12 fsetpos64 'int (FILE *, const fpos64_t *)' extern
| | |-ParmVarDecl 0x5605abe4f6a0 <col:23, col:29> col:29 __stream 'FILE *'
| | |-ParmVarDecl 0x5605abe4f790 <col:39, col:55> col:55 __pos 'const fpos64_t *'
| | `-NonNullAttr 0x5605abe4f9c8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:846:75> 1
| |-FunctionDecl 0x5605abe4fbb8 <line:850:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:850:13 clearerr 'void (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe4fa70 <col:23, col:29> col:29 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe4fc68 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:850:60> 1
| |-FunctionDecl 0x5605abe4fea0 <line:852:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:852:12 feof 'int (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe4fd10 <col:18, col:24> col:24 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe4ff70 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:852:61> 1
| |-FunctionDecl 0x5605abe50160 <line:854:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:854:12 ferror 'int (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe50010 <col:20, col:26> col:26 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe50210 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:854:63> 1
| |-FunctionDecl 0x5605abe503f8 <line:858:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:858:13 clearerr_unlocked 'void (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe502b0 <col:32, col:38> col:38 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe504a8 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:858:69> 1
| |-FunctionDecl 0x5605abe506a0 <line:859:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:859:12 feof_unlocked 'int (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe50550 <col:27, col:33> col:33 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe50750 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:859:70> 1
| |-FunctionDecl 0x5605abe50940 <line:860:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:860:12 ferror_unlocked 'int (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe507f0 <col:29, col:35> col:35 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe509f0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:860:72> 1
| |-FunctionDecl 0x5605abe50b78 <line:868:1, /usr/include/sys/cdefs.h:102:43> /usr/include/stdio.h:868:13 perror 'void (const char *)' extern
| | |-ParmVarDecl 0x5605abe50a90 <col:21, col:33> col:33 __s 'const char *'
| | `-ColdAttr 0x5605abe50c28 </usr/include/sys/cdefs.h:102:34>
| |-FunctionDecl 0x5605abe50e10 </usr/include/stdio.h:873:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:873:12 fileno 'int (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe50cb8 <col:20, col:26> col:26 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe50ec0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:873:63> 1
| |-FunctionDecl 0x5605abe510b0 <line:878:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:878:12 fileno_unlocked 'int (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe50f60 <col:29, col:35> col:35 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe51160 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:878:72> 1
| |-FunctionDecl 0x5605abe512d8 <line:887:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:887:12 pclose 'int (FILE *)' extern
| | |-ParmVarDecl 0x5605abe51200 <col:20, col:26> col:26 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe51388 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:887:49> 1
| |-FunctionDecl 0x5605abe515d0 <line:893:1, /usr/include/sys/cdefs.h:452:58> /usr/include/stdio.h:893:14 popen 'FILE *(const char *, const char *)' extern
| | |-ParmVarDecl 0x5605abe51430 <col:21, col:33> col:33 __command 'const char *'
| | |-ParmVarDecl 0x5605abe514b8 <col:44, col:56> col:56 __modes 'const char *'
| | `-RestrictAttr 0x5605abe51688 </usr/include/sys/cdefs.h:452:47> malloc
| |-FunctionDecl 0x5605abe51850 </usr/include/stdio.h:901:1, /usr/include/sys/cdefs.h:86:35> /usr/include/stdio.h:901:14 ctermid 'char *(char *) noexcept(true)' extern
| | `-ParmVarDecl 0x5605abe51718 <col:23, col:29> col:29 __s 'char *'
| |-FunctionDecl 0x5605abe51a30 <line:908:1, col:32> col:14 cuserid 'char *(char *)' extern
| | `-ParmVarDecl 0x5605abe51938 <col:23, col:29> col:29 __s 'char *'
| |-CXXRecordDecl 0x5605abe51b00 <line:914:1, col:8> col:8 struct obstack
| |-FunctionDecl 0x5605abe51f18 <line:917:1, line:919:62> line:917:12 obstack_printf 'int (struct obstack *__restrict, const char *__restrict, ...) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe51c90 <col:28, col:55> col:55 __obstack 'struct obstack *__restrict'
| | |-ParmVarDecl 0x5605abe51d18 <line:918:7, col:30> col:30 __format 'const char *__restrict'
| | `-FormatAttr 0x5605abe51fd0 <line:919:32, col:60> printf 2 3
| |-FunctionDecl 0x5605abe523b0 <line:920:1, line:923:62> line:920:12 obstack_vprintf 'int (struct obstack *__restrict, const char *__restrict, __va_list_tag *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe52080 <col:29, col:56> col:56 __obstack 'struct obstack *__restrict'
| | |-ParmVarDecl 0x5605abe52108 <line:921:8, col:31> col:31 __format 'const char *__restrict'
| | |-ParmVarDecl 0x5605abe52188 <line:922:8, col:23> col:23 __args '__va_list_tag *'
| | `-FormatAttr 0x5605abe52470 <line:923:32, col:60> printf 2 0
| |-FunctionDecl 0x5605abe52658 <line:931:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:931:13 flockfile 'void (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe52510 <col:24, col:30> col:30 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe52708 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:931:61> 1
| |-FunctionDecl 0x5605abe52900 <line:935:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:935:12 ftrylockfile 'int (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe527b0 <col:26, col:32> col:32 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe529b0 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:935:69> 1
| |-FunctionDecl 0x5605abe52b98 <line:938:1, /usr/include/sys/cdefs.h:555:76> /usr/include/stdio.h:938:13 funlockfile 'void (FILE *) noexcept(true)' extern
| | |-ParmVarDecl 0x5605abe52a50 <col:26, col:32> col:32 __stream 'FILE *'
| | `-NonNullAttr 0x5605abe52c48 </usr/include/sys/cdefs.h:555:57, /usr/include/stdio.h:938:63> 1
| |-FunctionDecl 0x5605abe52da8 <line:949:1, col:27> col:12 __uflow 'int (FILE *)' extern
| | `-ParmVarDecl 0x5605abe52cf0 <col:21, col:26> col:27 'FILE *'
| `-FunctionDecl 0x5605abe53070 <line:950:1, col:35> col:12 __overflow 'int (FILE *, int)' extern
|   |-ParmVarDecl 0x5605abe52e90 <col:24, col:29> col:30 'FILE *'
|   `-ParmVarDecl 0x5605abe52f18 <col:32> col:35 'int'
|-NamespaceDecl 0x5605abe53148 prev 0x5605abdfb398 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/cstdio:96:1, line:147:1> line:96:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-UsingDecl 0x5605abe531c8 <line:98:3, col:11> col:11 ::FILE
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53228 <col:11> col:11 implicit Typedef 0x5605abe0e0d0 'FILE'
| | `-TypedefType 0x5605abe1fa50 'FILE' sugar
| |   |-Typedef 0x5605abe0e0d0 'FILE'
| |   `-ElaboratedType 0x5605abe0df60 'struct _IO_FILE' sugar
| |     `-RecordType 0x5605abe0df40 '_IO_FILE'
| |       `-CXXRecord 0x5605abe0e4a8 '_IO_FILE'
| |-UsingDecl 0x5605abe532b0 <line:99:3, col:11> col:11 ::fpos_t
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53310 <col:11> col:11 implicit Typedef 0x5605abe1f928 'fpos_t'
| | `-TypedefType 0x5605abe4e4b0 'fpos_t' sugar
| |   |-Typedef 0x5605abe1f928 'fpos_t'
| |   `-ElaboratedType 0x5605abe1f8e0 '__fpos_t' sugar
| |     `-TypedefType 0x5605abe1f8b0 '__fpos_t' sugar
| |       |-Typedef 0x5605abe0da80 '__fpos_t'
| |       `-ElaboratedType 0x5605abe0da20 'struct _G_fpos_t' sugar
| |         `-RecordType 0x5605abe0d730 '_G_fpos_t'
| |           `-CXXRecord 0x5605abe0d688 '_G_fpos_t'
| |-UsingDecl 0x5605abe53398 <line:101:3, col:11> col:11 ::clearerr
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe533f8 <col:11> col:11 implicit Function 0x5605abe4fbb8 'clearerr' 'void (FILE *) noexcept(true)'
| |-UsingDecl 0x5605abe53480 <line:102:3, col:11> col:11 ::fclose
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe534e0 <col:11> col:11 implicit Function 0x5605abe20d90 'fclose' 'int (FILE *)'
| |-UsingDecl 0x5605abe53568 <line:103:3, col:11> col:11 ::feof
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe535c8 <col:11> col:11 implicit Function 0x5605abe4fea0 'feof' 'int (FILE *) noexcept(true)'
| |-UsingDecl 0x5605abe53650 <line:104:3, col:11> col:11 ::ferror
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe536b0 <col:11> col:11 implicit Function 0x5605abe50160 'ferror' 'int (FILE *) noexcept(true)'
| |-UsingDecl 0x5605abe53738 <line:105:3, col:11> col:11 ::fflush
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53798 <col:11> col:11 implicit Function 0x5605abe21c70 'fflush' 'int (FILE *)'
| |-UsingDecl 0x5605abe53820 <line:106:3, col:11> col:11 ::fgetc
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53880 <col:11> col:11 implicit Function 0x5605abb3ba90 'fgetc' 'int (FILE *)'
| |-UsingDecl 0x5605abe53908 <line:107:3, col:11> col:11 ::fgetpos
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53968 <col:11> col:11 implicit Function 0x5605abe4e710 'fgetpos' 'int (FILE *__restrict, fpos_t *__restrict)'
| |-UsingDecl 0x5605abe539f0 <line:108:3, col:11> col:11 ::fgets
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53a50 <col:11> col:11 implicit Function 0x5605abb3dcb0 'fgets' 'char *(char *__restrict, int, FILE *__restrict)'
| |-UsingDecl 0x5605abe53ad8 <line:109:3, col:11> col:11 ::fopen
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53b38 <col:11> col:11 implicit Function 0x5605abe22290 'fopen' 'FILE *(const char *__restrict, const char *__restrict)'
| |-UsingDecl 0x5605abe53bc0 <line:110:3, col:11> col:11 ::fprintf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53c20 <col:11> col:11 implicit Function 0x5605abe2ada8 'fprintf' 'int (FILE *__restrict, const char *__restrict, ...)'
| |-UsingDecl 0x5605abe53ca8 <line:111:3, col:11> col:11 ::fputc
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53d08 <col:11> col:11 implicit Function 0x5605abb3c770 'fputc' 'int (int, FILE *)'
| |-UsingDecl 0x5605abe53d90 <line:112:3, col:11> col:11 ::fputs
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53df0 <col:11> col:11 implicit Function 0x5605abb3f0c0 'fputs' 'int (const char *__restrict, FILE *__restrict)'
| |-UsingDecl 0x5605abe53e78 <line:113:3, col:11> col:11 ::fread
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53ed8 <col:11> col:11 implicit Function 0x5605abe4c248 'fread' 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)'
| |-UsingDecl 0x5605abe53f88 <line:114:3, col:11> col:11 ::freopen
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe53fe8 <col:11> col:11 implicit Function 0x5605abe22740 'freopen' 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)'
| |-UsingDecl 0x5605abe54070 <line:115:3, col:11> col:11 ::fscanf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe540d0 <col:11> col:11 implicit Function 0x5605abe30350 'fscanf' 'int (FILE *__restrict, const char *__restrict, ...)'
| |-UsingDecl 0x5605abe54158 <line:116:3, col:11> col:11 ::fseek
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe541b8 <col:11> col:11 implicit Function 0x5605abe4d770 'fseek' 'int (FILE *, long, int)'
| |-UsingDecl 0x5605abe54240 <line:117:3, col:11> col:11 ::fsetpos
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe542a0 <col:11> col:11 implicit Function 0x5605abe4eae0 'fsetpos' 'int (FILE *, const fpos_t *)'
| |-UsingDecl 0x5605abe54328 <line:118:3, col:11> col:11 ::ftell
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54388 <col:11> col:11 implicit Function 0x5605abe4da20 'ftell' 'long (FILE *)'
| |-UsingDecl 0x5605abe54410 <line:119:3, col:11> col:11 ::fwrite
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54470 <col:11> col:11 implicit Function 0x5605abe4c7b8 'fwrite' 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)'
| |-UsingDecl 0x5605abe544f8 <line:120:3, col:11> col:11 ::getc
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54558 <col:11> col:11 implicit Function 0x5605abb3bcb8 'getc' 'int (FILE *)'
| |-UsingDecl 0x5605abe545e0 <line:121:3, col:11> col:11 ::getchar
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54640 <col:11> col:11 implicit Function 0x5605abb3beb8 'getchar' 'int ()'
| |-UsingDecl 0x5605abe546c8 <line:126:3, col:11> col:11 ::perror
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54728 <col:11> col:11 implicit Function 0x5605abe50b78 'perror' 'void (const char *)'
| |-UsingDecl 0x5605abe547b0 <line:127:3, col:11> col:11 ::printf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54810 <col:11> col:11 implicit Function 0x5605abe2b1a8 'printf' 'int (const char *__restrict, ...)'
| |-UsingDecl 0x5605abe54898 <line:128:3, col:11> col:11 ::putc
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe548f8 <col:11> col:11 implicit Function 0x5605abb3ca50 'putc' 'int (int, FILE *)'
| |-UsingDecl 0x5605abe54980 <line:129:3, col:11> col:11 ::putchar
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe549e0 <col:11> col:11 implicit Function 0x5605abb3cca0 'putchar' 'int (int)'
| |-UsingDecl 0x5605abe54a68 <line:130:3, col:11> col:11 ::puts
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54ac8 <col:11> col:11 implicit Function 0x5605abb3f310 'puts' 'int (const char *)'
| |-UsingDecl 0x5605abe54b50 <line:131:3, col:11> col:11 ::remove
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54bb0 <col:11> col:11 implicit Function 0x5605abe1fe50 'remove' 'int (const char *) noexcept(true)'
| |-UsingDecl 0x5605abe54c38 <line:132:3, col:11> col:11 ::rename
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54c98 <col:11> col:11 implicit Function 0x5605abe20160 'rename' 'int (const char *, const char *) noexcept(true)'
| |-UsingDecl 0x5605abe54d20 <line:133:3, col:11> col:11 ::rewind
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54d80 <col:11> col:11 implicit Function 0x5605abe4dcb8 'rewind' 'void (FILE *)'
| |-UsingDecl 0x5605abe54e08 <line:134:3, col:11> col:11 ::scanf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54e68 <col:11> col:11 implicit Function 0x5605abe306c8 'scanf' 'int (const char *__restrict, ...)'
| |-UsingDecl 0x5605abe54ef0 <line:135:3, col:11> col:11 ::setbuf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe54f50 <col:11> col:11 implicit Function 0x5605abe29dd8 'setbuf' 'void (FILE *__restrict, char *__restrict) noexcept(true)'
| |-UsingDecl 0x5605abe54fd8 <line:136:3, col:11> col:11 ::setvbuf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55038 <col:11> col:11 implicit Function 0x5605abe2a2e0 'setvbuf' 'int (FILE *__restrict, char *__restrict, int, size_t) noexcept(true)'
| |-UsingDecl 0x5605abe550c0 <line:137:3, col:11> col:11 ::sprintf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55120 <col:11> col:11 implicit Function 0x5605abe2b558 'sprintf' 'int (char *__restrict, const char *__restrict, ...) noexcept(true)'
| |-UsingDecl 0x5605abe551a8 <line:138:3, col:11> col:11 ::sscanf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55208 <col:11> col:11 implicit Function 0x5605abe30a88 'sscanf' 'int (const char *__restrict, const char *__restrict, ...) noexcept(true)'
| |-UsingDecl 0x5605abe55290 <line:139:3, col:11> col:11 ::tmpfile
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe552f0 <col:11> col:11 implicit Function 0x5605abe20ff0 'tmpfile' 'FILE *()'
| |-UsingDecl 0x5605abe55378 <line:141:3, col:11> col:11 ::tmpnam
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe553d8 <col:11> col:11 implicit Function 0x5605abe21500 'tmpnam' 'char *(char *) noexcept(true)'
| |-UsingDecl 0x5605abe55460 <line:143:3, col:11> col:11 ::ungetc
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe554c0 <col:11> col:11 implicit Function 0x5605abb3f578 'ungetc' 'int (int, FILE *)'
| |-UsingDecl 0x5605abe55548 <line:144:3, col:11> col:11 ::vfprintf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe555a8 <col:11> col:11 implicit Function 0x5605abe2ba70 'vfprintf' 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)'
| |-UsingDecl 0x5605abe55630 <line:145:3, col:11> col:11 ::vprintf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55690 <col:11> col:11 implicit Function 0x5605abe2bf20 'vprintf' 'int (const char *__restrict, __va_list_tag *)'
| |-UsingDecl 0x5605abe55718 <line:146:3, col:11> col:11 ::vsprintf
| | `-NestedNameSpecifier Global
| `-UsingShadowDecl 0x5605abe55778 <col:11> col:11 implicit Function 0x5605abe2c460 'vsprintf' 'int (char *__restrict, const char *__restrict, __va_list_tag *) noexcept(true)'
|-NamespaceDecl 0x5605abe557f8 prev 0x5605abaf4c50 <line:157:1, line:181:1> line:157:11 __gnu_cxx
| |-original Namespace 0x5605abaf4c50 '__gnu_cxx'
| |-UsingDecl 0x5605abe55878 <line:175:3, col:11> col:11 ::snprintf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe558d8 <col:11> col:11 implicit Function 0x5605abe2c998 'snprintf' 'int (char *__restrict, size_t, const char *__restrict, ...) noexcept(true)'
| |-UsingDecl 0x5605abe55960 <line:176:3, col:11> col:11 ::vfscanf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe559c0 <col:11> col:11 implicit Function 0x5605abe31c38 'vfscanf' 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)'
| |-UsingDecl 0x5605abe55a48 <line:177:3, col:11> col:11 ::vscanf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55aa8 <col:11> col:11 implicit Function 0x5605abe32048 'vscanf' 'int (const char *__restrict, __va_list_tag *)'
| |-UsingDecl 0x5605abe55b30 <line:178:3, col:11> col:11 ::vsnprintf
| | `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55b90 <col:11> col:11 implicit Function 0x5605abe2cf70 'vsnprintf' 'int (char *__restrict, size_t, const char *__restrict, __va_list_tag *) noexcept(true)'
| |-UsingDecl 0x5605abe55c18 <line:179:3, col:11> col:11 ::vsscanf
| | `-NestedNameSpecifier Global
| `-UsingShadowDecl 0x5605abe55c78 <col:11> col:11 implicit Function 0x5605abb3b800 'vsscanf' 'int (const char *__restrict, const char *__restrict, __va_list_tag *) noexcept(true)'
|-NamespaceDecl 0x5605abe55cf8 prev 0x5605abe53148 <line:183:1, line:190:1> line:183:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-UsingDecl 0x5605abe55d98 <line:185:3, col:22> col:22 ::__gnu_cxx::snprintf
| | `-NestedNameSpecifier Namespace 0x5605abe557f8 '__gnu_cxx'
| |   `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55df8 <col:22> col:22 implicit Function 0x5605abe2c998 'snprintf' 'int (char *__restrict, size_t, const char *__restrict, ...) noexcept(true)'
| |-UsingDecl 0x5605abe55e88 <line:186:3, col:22> col:22 ::__gnu_cxx::vfscanf
| | `-NestedNameSpecifier Namespace 0x5605abe557f8 '__gnu_cxx'
| |   `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55ee8 <col:22> col:22 implicit Function 0x5605abe31c38 'vfscanf' 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)'
| |-UsingDecl 0x5605abe55f78 <line:187:3, col:22> col:22 ::__gnu_cxx::vscanf
| | `-NestedNameSpecifier Namespace 0x5605abe557f8 '__gnu_cxx'
| |   `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe55fd8 <col:22> col:22 implicit Function 0x5605abe32048 'vscanf' 'int (const char *__restrict, __va_list_tag *)'
| |-UsingDecl 0x5605abe56068 <line:188:3, col:22> col:22 ::__gnu_cxx::vsnprintf
| | `-NestedNameSpecifier Namespace 0x5605abe557f8 '__gnu_cxx'
| |   `-NestedNameSpecifier Global
| |-UsingShadowDecl 0x5605abe560c8 <col:22> col:22 implicit Function 0x5605abe2cf70 'vsnprintf' 'int (char *__restrict, size_t, const char *__restrict, __va_list_tag *) noexcept(true)'
| |-UsingDecl 0x5605abe56158 <line:189:3, col:22> col:22 ::__gnu_cxx::vsscanf
| | `-NestedNameSpecifier Namespace 0x5605abe557f8 '__gnu_cxx'
| |   `-NestedNameSpecifier Global
| `-UsingShadowDecl 0x5605abe561b8 <col:22> col:22 implicit Function 0x5605abb3b800 'vsscanf' 'int (const char *__restrict, const char *__restrict, __va_list_tag *) noexcept(true)'
|-LinkageSpecDecl 0x5605abe56258 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception.h:38:1, line:81:1> line:38:8 C++
| `-NamespaceDecl 0x5605abe562d0 prev 0x5605abe55cf8 <line:40:1, line:79:1> line:40:11 std
|   |-original Namespace 0x5605abaf4398 'std'
|   |-VisibilityAttr 0x5605abe56340 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
|   `-CXXRecordDecl 0x5605abe563a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception.h:59:3, line:75:3> line:59:9 referenced class exception definition
|     |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|     | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
|     | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|     | |-MoveConstructor exists non_trivial user_declared
|     | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
|     | |-MoveAssignment exists non_trivial user_declared
|     | `-Destructor non_trivial user_declared
|     |-CXXRecordDecl 0x5605abe564e0 <col:3, col:9> col:9 implicit referenced class exception
|     |-AccessSpecDecl 0x5605abe56590 <line:61:3, col:9> col:3 public
|     |-CXXConstructorDecl 0x5605abe56638 <line:62:5, col:36> col:5 used exception 'void () noexcept' implicit-inline
|     | `-CompoundStmt 0x5605abe57460 <col:34, col:36>
|     |-CXXDestructorDecl 0x5605abe56788 <line:63:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception.h:63:13 used ~exception 'void () noexcept' virtual
|     |-CXXConstructorDecl 0x5605abe56a08 <line:65:5, col:41> col:5 constexpr exception 'void (const exception &)' default noexcept-unevaluated 0x5605abe56a08 implicit-inline
|     | `-ParmVarDecl 0x5605abe568e0 <col:15, col:30> col:31 'const exception &'
|     |-CXXMethodDecl 0x5605abe56ca0 <line:66:5, col:52> col:16 constexpr operator= 'exception &(const exception &)' default noexcept-unevaluated 0x5605abe56ca0 implicit-inline
|     | `-ParmVarDecl 0x5605abe56b08 <col:26, col:41> col:42 'const exception &'
|     |-CXXConstructorDecl 0x5605abe56f18 <line:67:5, col:36> col:5 constexpr exception 'void (exception &&)' default noexcept-unevaluated 0x5605abe56f18 implicit-inline
|     | `-ParmVarDecl 0x5605abe56df0 <col:15, col:24> col:26 'exception &&'
|     |-CXXMethodDecl 0x5605abe57150 <line:68:5, col:47> col:16 constexpr operator= 'exception &(exception &&)' default noexcept-unevaluated 0x5605abe57150 implicit-inline
|     | `-ParmVarDecl 0x5605abe57018 <col:26, col:35> col:37 'exception &&'
|     `-CXXMethodDecl 0x5605abe57298 <line:73:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception.h:74:5 what 'const char *() const noexcept' virtual
|-LinkageSpecDecl 0x5605abe57498 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:41:1, line:163:1> line:41:8 C++
| |-NamespaceDecl 0x5605abe57510 prev 0x5605abe562d0 <line:43:1, line:136:1> line:43:11 std
| | |-original Namespace 0x5605abaf4398 'std'
| | |-VisibilityAttr 0x5605abe57580 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
| | |-CXXRecordDecl 0x5605abe575e0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:54:3, line:66:3> line:54:9 class bad_exception definition
| | | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| | | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor needs_overload_resolution
| | | | |-CopyAssignment simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveAssignment needs_overload_resolution
| | | | `-Destructor non_trivial user_declared needs_overload_resolution
| | | |-public 'exception':'std::exception'
| | | |-CXXRecordDecl 0x5605abe57760 <col:3, col:9> col:9 implicit referenced class bad_exception
| | | |-AccessSpecDecl 0x5605abe57810 <line:56:3, col:9> col:3 public
| | | |-CXXConstructorDecl 0x5605abe578b8 <line:57:5, col:45> col:5 bad_exception 'void () noexcept' implicit-inline
| | | | |-CXXCtorInitializer 'exception':'std::exception'
| | | | | `-CXXConstructExpr 0x5605abe60910 <col:5> 'exception':'std::exception' 'void () noexcept'
| | | | `-CompoundStmt 0x5605abe60970 <col:43, col:45>
| | | |-CXXDestructorDecl 0x5605abe57a08 <line:61:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:61:13 ~bad_exception 'void () noexcept' virtual
| | | | `-Overrides: [ 0x5605abe56788 exception::~exception 'void () noexcept' ]
| | | |-CXXMethodDecl 0x5605abe57b78 <line:64:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:65:5 what 'const char *() const noexcept' virtual
| | | | `-Overrides: [ 0x5605abe57298 exception::what 'const char *() const noexcept' ]
| | | |-CXXConstructorDecl 0x5605abe57ca8 <line:54:9> col:9 implicit constexpr bad_exception 'void (const bad_exception &)' inline default noexcept-unevaluated 0x5605abe57ca8
| | | | `-ParmVarDecl 0x5605abe57de8 <col:9> col:9 'const bad_exception &'
| | | `-CXXMethodDecl 0x5605abe57ea8 <col:9> col:9 implicit constexpr operator= 'bad_exception &(const bad_exception &)' inline default noexcept-unevaluated 0x5605abe57ea8
| | |   `-ParmVarDecl 0x5605abe60798 <col:9> col:9 'const bad_exception &'
| | |-TypedefDecl 0x5605abe609e8 <line:69:3, col:38> col:18 referenced terminate_handler 'void (*)()'
| | | `-PointerType 0x5605abde3500 'void (*)()'
| | |   `-ParenType 0x5605abde34a0 'void ()' sugar
| | |     `-FunctionProtoType 0x5605abb235f0 'void ()' cdecl
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | |-FunctionDecl 0x5605abe60bf0 <line:72:3, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:72:21 set_terminate 'terminate_handler (terminate_handler) noexcept'
| | | `-ParmVarDecl 0x5605abe60ab8 <col:35> col:52 'terminate_handler':'void (*)()'
| | |-FunctionDecl 0x5605abe60d50 <line:76:3, col:37> col:21 get_terminate 'terminate_handler () noexcept'
| | |-FunctionDecl 0x5605abe60e40 prev 0x5605abaf4840 <line:81:3, col:80> col:8 used terminate 'void () __attribute__((noreturn)) noexcept'
| | | |-VisibilityAttr 0x5605abe60f40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:317:13> Inherited Default
| | | `-ColdAttr 0x5605abe60ee8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:81:71>
| | |-FunctionDecl 0x5605abe60fe0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:100:3, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:125:76> col:8 uncaught_exception 'bool () noexcept'
| | | |-DeprecatedAttr 0x5605abe61088 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:100:19, col:58> "use 'std::uncaught_exceptions()' instead" ""
| | | `-PureAttr 0x5605abe61120 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:125:67>
| | `-FunctionDecl 0x5605abe611c8 <line:132:3, col:76> col:7 uncaught_exceptions 'int () noexcept'
| |   `-PureAttr 0x5605abe61270 <col:67>
| `-NamespaceDecl 0x5605abe61308 prev 0x5605abe557f8 <line:138:1, line:161:1> line:138:11 __gnu_cxx
|   |-original Namespace 0x5605abaf4c50 '__gnu_cxx'
|   |-VisibilityAttr 0x5605abe61378 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
|   `-FunctionDecl 0x5605abe613f8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/exception:158:3, col:36> col:8 __verbose_terminate_handler 'void ()'
|-TypedefDecl 0x5605abe614d8 </opt/ace/build/llvm-linux-x86-64-v3-debug/lib/clang/20/include/__stddef_ptrdiff_t.h:18:1, col:26> col:26 ptrdiff_t 'long'
| `-BuiltinType 0x5605aba9ca90 'long'
|-TypedefDecl 0x5605abe61550 prev 0x5605abe0cf70 </opt/ace/build/llvm-linux-x86-64-v3-debug/lib/clang/20/include/__stddef_size_t.h:18:1, col:23> col:23 referenced size_t 'unsigned long'
| `-BuiltinType 0x5605aba9cb30 'unsigned long'
|-CXXRecordDecl 0x5605abe615c8 </opt/ace/build/llvm-linux-x86-64-v3-debug/lib/clang/20/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |-VisibilityAttr 0x5605abe616f8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/cxxabi_init_exception.h:36:13> Implicit Default
| |-FieldDecl 0x5605abe617a8 </opt/ace/build/llvm-linux-x86-64-v3-debug/lib/clang/20/include/__stddef_max_align_t.h:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| | `-AlignedAttr 0x5605abe61818 <line:21:22, col:56> aligned
| |   `-ConstantExpr 0x5605abe617f8 <col:34, col:55> 'unsigned long'
| |     |-value: Int 8
| |     `-UnaryExprOrTypeTraitExpr 0x5605abe61768 <col:34, col:55> 'unsigned long' __alignof 'long long'
| `-FieldDecl 0x5605abe618d8 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
|   `-AlignedAttr 0x5605abe61948 <line:23:22, col:58> aligned
|     `-ConstantExpr 0x5605abe61928 <col:34, col:57> 'unsigned long'
|       |-value: Int 16
|       `-UnaryExprOrTypeTraitExpr 0x5605abe61898 <col:34, col:57> 'unsigned long' __alignof 'long double'
|-TypedefDecl 0x5605abe61a30 <line:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
| `-ElaboratedType 0x5605abe619d0 'struct max_align_t' sugar
|   `-RecordType 0x5605abe61670 'max_align_t'
|     `-CXXRecord 0x5605abe615c8 <line:19:9, line:24:1>
|-NamespaceDecl 0x5605abe61aa8 prev 0x5605abe57510 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/cxxabi_init_exception.h:50:1, line:53:1> line:50:11 std
| |-original Namespace 0x5605abaf4398 'std'
| `-CXXRecordDecl 0x5605abe61b20 <line:52:3, col:9> col:9 referenced class type_info
|   `-VisibilityAttr 0x5605abe61bf0 <line:36:13> Implicit Default
|-NamespaceDecl 0x5605abe61c50 <line:55:1, line:75:1> line:55:11 __cxxabiv1
| |-CXXRecordDecl 0x5605abe61ce0 <line:57:3, col:10> col:10 referenced struct __cxa_refcounted_exception
| | `-VisibilityAttr 0x5605abe61db0 <line:36:13> Implicit Default
| `-LinkageSpecDecl 0x5605abe61e30 <line:59:3, line:74:5> line:59:10 C
|   |-FunctionDecl 0x5605abe62038 <line:62:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/cxxabi_init_exception.h:63:7 __cxa_allocate_exception 'void *(size_t) noexcept'
|   | |-ParmVarDecl 0x5605abe61ef8 <col:32> col:38 'size_t':'unsigned long'
|   | `-VisibilityAttr 0x5605abe62100 <line:36:13> Implicit Default
|   |-FunctionDecl 0x5605abe62270 <line:65:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/cxxabi_init_exception.h:66:7 __cxa_free_exception 'void (void *) noexcept'
|   | |-ParmVarDecl 0x5605abe62178 <col:28, col:32> col:33 'void *'
|   | `-VisibilityAttr 0x5605abe62338 <line:36:13> Implicit Default
|   `-FunctionDecl 0x5605abe628f8 <line:69:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/cxxabi_init_exception.h:70:7 __cxa_init_primary_exception '__cxa_refcounted_exception *(void *, std::type_info *, void (*)(void *)) noexcept'
|     |-ParmVarDecl 0x5605abe623e0 <col:36, col:42> col:42 __object 'void *'
|     |-ParmVarDecl 0x5605abe62550 <col:52, col:68> col:68 __tinfo 'std::type_info *'
|     |-ParmVarDecl 0x5605abe62700 <line:71:17, col:62> col:47 __dest 'void (*)(void *)'
|     `-VisibilityAttr 0x5605abe629d0 <line:36:13> Implicit Default
|-NamespaceDecl 0x5605abe62a30 prev 0x5605abe61aa8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/hash_bytes.h:37:1, line:57:1> line:37:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-FunctionDecl 0x5605abe62d48 <line:46:3, line:47:61> col:3 used _Hash_bytes 'size_t (const void *, size_t, size_t)'
| | |-ParmVarDecl 0x5605abe62ac0 <col:15, col:27> col:27 __ptr 'const void *'
| | |-ParmVarDecl 0x5605abe62b40 <col:34, col:41> col:41 __len 'size_t':'unsigned long'
| | `-ParmVarDecl 0x5605abe62bc0 <col:48, col:55> col:55 __seed 'size_t':'unsigned long'
| `-FunctionDecl 0x5605abe63030 <line:53:3, line:54:65> col:3 _Fnv_hash_bytes 'size_t (const void *, size_t, size_t)'
|   |-ParmVarDecl 0x5605abe62e40 <col:19, col:31> col:31 __ptr 'const void *'
|   |-ParmVarDecl 0x5605abe62ec0 <col:38, col:45> col:45 __len 'size_t':'unsigned long'
|   `-ParmVarDecl 0x5605abe62f40 <col:52, col:59> col:59 __seed 'size_t':'unsigned long'
|-LinkageSpecDecl 0x5605abe63130 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:44:1, line:250:1> line:44:8 C++
| |-NamespaceDecl 0x5605abe63188 prev 0x5605abe61c50 <line:46:1, line:49:1> line:46:11 __cxxabiv1
| | |-original Namespace 0x5605abe61c50 '__cxxabiv1'
| | `-CXXRecordDecl 0x5605abe63200 <line:48:3, col:9> col:9 referenced class __class_type_info
| |   `-VisibilityAttr 0x5605abe632d0 <line:42:13> Implicit Default
| `-NamespaceDecl 0x5605abe63330 prev 0x5605abe62a30 <line:83:1, line:248:1> line:83:11 std
|   |-original Namespace 0x5605abaf4398 'std'
|   |-CXXRecordDecl 0x5605abe633a8 prev 0x5605abe61b20 <line:91:3, line:166:3> line:91:9 class type_info definition
|   | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | | |-DefaultConstructor defaulted_is_constexpr
|   | | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
|   | | |-MoveConstructor
|   | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
|   | | |-MoveAssignment
|   | | `-Destructor non_trivial user_declared
|   | |-VisibilityAttr 0x5605abe634d0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/cxxabi_init_exception.h:36:13> Inherited Default
|   | |-CXXRecordDecl 0x5605abe63500 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:91:3, col:9> col:9 implicit referenced class type_info
|   | |-AccessSpecDecl 0x5605abe635b0 <line:93:3, col:9> col:3 public
|   | |-CXXDestructorDecl 0x5605abe63660 <line:98:5, col:24> col:13 ~type_info 'void () noexcept' virtual
|   | |-CXXMethodDecl 0x5605abe637d8 <line:102:5, line:103:54> line:102:17 used name 'const char *() const noexcept' implicit-inline
|   | | `-CompoundStmt 0x5605abe77520 <line:103:5, col:54>
|   | |   `-ReturnStmt 0x5605abe77510 <col:7, col:46>
|   | |     `-ConditionalOperator 0x5605abe774e0 <col:14, col:46> 'const char *'
|   | |       |-BinaryOperator 0x5605abe773d0 <col:14, col:27> 'bool' '=='
|   | |       | |-ImplicitCastExpr 0x5605abe773a0 <col:14, col:22> 'int' <IntegralCast>
|   | |       | | `-ImplicitCastExpr 0x5605abe77388 <col:14, col:22> 'char' <LValueToRValue>
|   | |       | |   `-ArraySubscriptExpr 0x5605abe77350 <col:14, col:22> 'const char' lvalue
|   | |       | |     |-ImplicitCastExpr 0x5605abe77338 <col:14> 'const char *' <LValueToRValue>
|   | |       | |     | `-MemberExpr 0x5605abe772e8 <col:14> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   | |       | |     |   `-CXXThisExpr 0x5605abe772d8 <col:14> 'const std::type_info *' implicit this
|   | |       | |     `-IntegerLiteral 0x5605abe77318 <col:21> 'int' 0
|   | |       | `-ImplicitCastExpr 0x5605abe773b8 <col:27> 'int' <IntegralCast>
|   | |       |   `-CharacterLiteral 0x5605abe77370 <col:27> 'char' 42
|   | |       |-BinaryOperator 0x5605abe77468 <col:33, col:42> 'const char *' '+'
|   | |       | |-ImplicitCastExpr 0x5605abe77450 <col:33> 'const char *' <LValueToRValue>
|   | |       | | `-MemberExpr 0x5605abe77400 <col:33> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   | |       | |   `-CXXThisExpr 0x5605abe773f0 <col:33> 'const std::type_info *' implicit this
|   | |       | `-IntegerLiteral 0x5605abe77430 <col:42> 'int' 1
|   | |       `-ImplicitCastExpr 0x5605abe774c8 <col:46> 'const char *' <LValueToRValue>
|   | |         `-MemberExpr 0x5605abe77498 <col:46> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   | |           `-CXXThisExpr 0x5605abe77488 <col:46> 'const std::type_info *' implicit this
|   | |-CXXMethodDecl 0x5605abe63a50 <line:107:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:216:29> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:107:10 before 'bool (const type_info &) const noexcept'
|   | | `-ParmVarDecl 0x5605abe63920 <col:17, col:34> col:34 __arg 'const type_info &'
|   | |-CXXMethodDecl 0x5605abe63bf0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:199:32, line:216:29> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:110:10 constexpr operator== 'bool (const type_info &) const noexcept' implicit-inline
|   | | `-ParmVarDecl 0x5605abe63b38 <col:21, col:38> col:38 __arg 'const type_info &'
|   | |-CXXMethodDecl 0x5605abe63d20 <line:118:5, line:126:5> line:118:12 hash_code 'size_t () const noexcept' implicit-inline
|   | | `-CompoundStmt 0x5605abe77b58 <line:119:5, line:126:5>
|   | |   `-ReturnStmt 0x5605abe77b48 <line:121:7, line:122:38>
|   | |     `-CallExpr 0x5605abe77af8 <line:121:14, line:122:38> 'size_t':'unsigned long'
|   | |       |-ImplicitCastExpr 0x5605abe77ae0 <line:121:14> 'size_t (*)(const void *, size_t, size_t)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5605abe77a60 <col:14> 'size_t (const void *, size_t, size_t)' lvalue Function 0x5605abe62d48 '_Hash_bytes' 'size_t (const void *, size_t, size_t)'
|   | |       |-ImplicitCastExpr 0x5605abe77b30 <col:26, col:31> 'const void *' <BitCast>
|   | |       | `-CXXMemberCallExpr 0x5605abe775c0 <col:26, col:31> 'const char *'
|   | |       |   `-MemberExpr 0x5605abe77590 <col:26> '<bound member function type>' ->name 0x5605abe637d8
|   | |       |     `-CXXThisExpr 0x5605abe77580 <col:26> 'const std::type_info *' implicit this
|   | |       |-CallExpr 0x5605abe779d8 <col:34, col:57> 'unsigned long'
|   | |       | |-ImplicitCastExpr 0x5605abe779c0 <col:34> 'unsigned long (*)(const char *) noexcept' <BuiltinFnToFnPtr>
|   | |       | | `-DeclRefExpr 0x5605abe778f8 <col:34> '<builtin fn type>' Function 0x5605abe77758 '__builtin_strlen' 'unsigned long (const char *) noexcept'
|   | |       | `-CXXMemberCallExpr 0x5605abe77970 <col:51, col:56> 'const char *'
|   | |       |   `-MemberExpr 0x5605abe77940 <col:51> '<bound member function type>' ->name 0x5605abe637d8
|   | |       |     `-CXXThisExpr 0x5605abe77930 <col:51> 'const std::type_info *' implicit this
|   | |       `-CXXStaticCastExpr 0x5605abe77a30 <line:122:5, col:37> 'size_t':'unsigned long' static_cast<size_t> <NoOp>
|   | |         `-IntegerLiteral 0x5605abe77a00 <col:25> 'unsigned long' 3339675911
|   | |-CXXMethodDecl 0x5605abe63e38 <line:130:5, col:35> col:18 __is_pointer_p 'bool () const' virtual
|   | |-CXXMethodDecl 0x5605abe63f20 <line:133:5, col:36> col:18 __is_function_p 'bool () const' virtual
|   | |-CXXMethodDecl 0x5605abe64308 <line:141:5, line:142:26> line:141:18 __do_catch 'bool (const type_info *, void **, unsigned int) const' virtual
|   | | |-ParmVarDecl 0x5605abe64030 <col:29, col:46> col:46 __thr_type 'const type_info *'
|   | | |-ParmVarDecl 0x5605abe640f0 <col:58, col:65> col:65 __thr_obj 'void **'
|   | | `-ParmVarDecl 0x5605abe64178 <line:142:8, col:17> col:17 __outer 'unsigned int'
|   | |-CXXMethodDecl 0x5605abe76ad8 <line:145:5, line:146:27> line:145:18 __do_upcast 'bool (const __cxxabiv1::__class_type_info *, void **) const' virtual
|   | | |-ParmVarDecl 0x5605abe644f0 <col:30, col:67> col:67 __target 'const __cxxabiv1::__class_type_info *'
|   | | `-ParmVarDecl 0x5605abe64578 <line:146:9, col:16> col:16 __obj_ptr 'void **'
|   | |-AccessSpecDecl 0x5605abe76bb0 <line:148:3, col:12> col:3 protected
|   | |-FieldDecl 0x5605abe76bf8 <line:149:5, col:17> col:17 referenced __name 'const char *'
|   | |-CXXConstructorDecl 0x5605abe76d30 <line:151:5, col:56> col:14 type_info 'void (const char *)' implicit-inline
|   | | |-ParmVarDecl 0x5605abe76c68 <col:24, col:36> col:36 used __n 'const char *'
|   | | |-CXXCtorInitializer Field 0x5605abe76bf8 '__name' 'const char *'
|   | | | `-ImplicitCastExpr 0x5605abe77bb0 <col:49> 'const char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x5605abe77b70 <col:49> 'const char *' lvalue ParmVar 0x5605abe76c68 '__n' 'const char *'
|   | | `-CompoundStmt 0x5605abe77bf0 <col:54, col:56>
|   | |-AccessSpecDecl 0x5605abe76e08 <line:153:3, col:10> col:3 private
|   | |-CXXMethodDecl 0x5605abe76fe0 <line:156:5, col:51> col:16 operator= 'type_info &(const type_info &)' delete implicit-inline
|   | | `-ParmVarDecl 0x5605abe76e50 <col:26, col:41> col:42 'const type_info &'
|   | `-CXXConstructorDecl 0x5605abe771f8 <line:157:5, col:40> col:5 type_info 'void (const type_info &)' delete implicit-inline
|   |   `-ParmVarDecl 0x5605abe770c8 <col:15, col:30> col:31 'const type_info &'
|   |-CXXMethodDecl 0x5605abe77d00 parent 0x5605abe633a8 prev 0x5605abe63a50 <line:169:3, line:187:3> line:170:14 before 'bool (const type_info &) const noexcept' inline
|   | |-ParmVarDecl 0x5605abe77c48 <col:21, col:38> col:38 used __arg 'const type_info &'
|   | `-CompoundStmt 0x5605abe78628 <line:171:3, line:187:3>
|   |   |-IfStmt 0x5605abe78518 <line:176:5, line:177:56>
|   |   | |-BinaryOperator 0x5605abe78088 <line:176:9, col:48> 'bool' '||'
|   |   | | |-BinaryOperator 0x5605abe77f40 <col:9, col:22> 'bool' '!='
|   |   | | | |-ImplicitCastExpr 0x5605abe77f10 <col:9, col:17> 'int' <IntegralCast>
|   |   | | | | `-ImplicitCastExpr 0x5605abe77ef8 <col:9, col:17> 'char' <LValueToRValue>
|   |   | | | |   `-ArraySubscriptExpr 0x5605abe77ec0 <col:9, col:17> 'const char' lvalue
|   |   | | | |     |-ImplicitCastExpr 0x5605abe77ea8 <col:9> 'const char *' <LValueToRValue>
|   |   | | | |     | `-MemberExpr 0x5605abe77e58 <col:9> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   |   | | | |     |   `-CXXThisExpr 0x5605abe77e48 <col:9> 'const std::type_info *' implicit this
|   |   | | | |     `-IntegerLiteral 0x5605abe77e88 <col:16> 'int' 0
|   |   | | | `-ImplicitCastExpr 0x5605abe77f28 <col:22> 'int' <IntegralCast>
|   |   | | |   `-CharacterLiteral 0x5605abe77ee0 <col:22> 'char' 42
|   |   | | `-BinaryOperator 0x5605abe78068 <col:29, col:48> 'bool' '!='
|   |   | |   |-ImplicitCastExpr 0x5605abe78038 <col:29, col:43> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x5605abe78020 <col:29, col:43> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x5605abe77fe8 <col:29, col:43> 'const char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x5605abe77fd0 <col:29, col:35> 'const char *' <LValueToRValue>
|   |   | |   |     | `-MemberExpr 0x5605abe77f80 <col:29, col:35> 'const char *const' lvalue .__name 0x5605abe76bf8
|   |   | |   |     |   `-DeclRefExpr 0x5605abe77f60 <col:29> 'const type_info':'const std::type_info' lvalue ParmVar 0x5605abe77c48 '__arg' 'const type_info &'
|   |   | |   |     `-IntegerLiteral 0x5605abe77fb0 <col:42> 'int' 0
|   |   | |   `-ImplicitCastExpr 0x5605abe78050 <col:48> 'int' <IntegralCast>
|   |   | |     `-CharacterLiteral 0x5605abe78008 <col:48> 'char' 42
|   |   | `-ReturnStmt 0x5605abe78508 <line:177:7, col:56>
|   |   |   `-BinaryOperator 0x5605abe784e8 <col:14, col:56> 'bool' '<'
|   |   |     |-CallExpr 0x5605abe78468 <col:14, col:52> 'int'
|   |   |     | |-ImplicitCastExpr 0x5605abe78450 <col:14> 'int (*)(const char *, const char *) noexcept' <BuiltinFnToFnPtr>
|   |   |     | | `-DeclRefExpr 0x5605abe78320 <col:14> '<builtin fn type>' Function 0x5605abe78108 '__builtin_strcmp' 'int (const char *, const char *) noexcept'
|   |   |     | |-ImplicitCastExpr 0x5605abe78498 <col:32> 'const char *' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x5605abe78368 <col:32> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   |   |     | |   `-CXXThisExpr 0x5605abe78358 <col:32> 'const std::type_info *' implicit this
|   |   |     | `-ImplicitCastExpr 0x5605abe784b0 <col:40, col:46> 'const char *' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x5605abe783b8 <col:40, col:46> 'const char *const' lvalue .__name 0x5605abe76bf8
|   |   |     |     `-DeclRefExpr 0x5605abe78398 <col:40> 'const type_info':'const std::type_info' lvalue ParmVar 0x5605abe77c48 '__arg' 'const type_info &'
|   |   |     `-IntegerLiteral 0x5605abe784c8 <col:56> 'int' 0
|   |   `-ReturnStmt 0x5605abe78618 <line:186:5, col:27>
|   |     `-BinaryOperator 0x5605abe785f8 <col:12, col:27> 'bool' '<'
|   |       |-ImplicitCastExpr 0x5605abe785c8 <col:12> 'const char *' <LValueToRValue>
|   |       | `-MemberExpr 0x5605abe78548 <col:12> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   |       |   `-CXXThisExpr 0x5605abe78538 <col:12> 'const std::type_info *' implicit this
|   |       `-ImplicitCastExpr 0x5605abe785e0 <col:21, col:27> 'const char *' <LValueToRValue>
|   |         `-MemberExpr 0x5605abe78598 <col:21, col:27> 'const char *const' lvalue .__name 0x5605abe76bf8
|   |           `-DeclRefExpr 0x5605abe78578 <col:21> 'const type_info':'const std::type_info' lvalue ParmVar 0x5605abe77c48 '__arg' 'const type_info &'
|   |-CXXMethodDecl 0x5605abe78730 parent 0x5605abe633a8 prev 0x5605abe63bf0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:199:32, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:209:3> line:192:14 constexpr operator== 'bool (const type_info &) const noexcept' inline
|   | |-ParmVarDecl 0x5605abe78678 <col:25, col:42> col:42 used __arg 'const type_info &'
|   | `-CompoundStmt 0x5605abe78dd0 <line:193:3, line:209:3>
|   |   |-IfStmt 0x5605abe78978 <line:194:5, line:195:23>
|   |   | |-CallExpr 0x5605abe788e0 <line:194:9, col:38> 'bool'
|   |   | | `-ImplicitCastExpr 0x5605abe788c8 <col:9, col:14> 'bool (*)() noexcept' <FunctionToPointerDecay>
|   |   | |   `-DeclRefExpr 0x5605abe78898 <col:9, col:14> 'bool () noexcept' lvalue Function 0x5605abaf4ee0 '__is_constant_evaluated' 'bool () noexcept'
|   |   | |     `-NestedNameSpecifier Namespace 0x5605abe63330 'std'
|   |   | `-ReturnStmt 0x5605abe78968 <line:195:7, col:23>
|   |   |   `-BinaryOperator 0x5605abe78948 <col:14, col:23> 'bool' '=='
|   |   |     |-CXXThisExpr 0x5605abe78900 <col:14> 'const std::type_info *' this
|   |   |     `-UnaryOperator 0x5605abe78930 <col:22, col:23> 'const type_info *' prefix '&' cannot overflow
|   |   |       `-DeclRefExpr 0x5605abe78910 <col:23> 'const type_info':'const std::type_info' lvalue ParmVar 0x5605abe78678 '__arg' 'const type_info &'
|   |   |-IfStmt 0x5605abe78ae0 <line:197:5, line:198:14>
|   |   | |-BinaryOperator 0x5605abe78aa0 <line:197:9, col:25> 'bool' '=='
|   |   | | |-ImplicitCastExpr 0x5605abe78a70 <col:9> 'const char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x5605abe789f0 <col:9> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   |   | | |   `-CXXThisExpr 0x5605abe789e0 <col:9> 'const std::type_info *' implicit this
|   |   | | `-ImplicitCastExpr 0x5605abe78a88 <col:19, col:25> 'const char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x5605abe78a40 <col:19, col:25> 'const char *const' lvalue .__name 0x5605abe76bf8
|   |   | |     `-DeclRefExpr 0x5605abe78a20 <col:19> 'const type_info':'const std::type_info' lvalue ParmVar 0x5605abe78678 '__arg' 'const type_info &'
|   |   | `-ReturnStmt 0x5605abe78ad0 <line:198:7, col:14>
|   |   |   `-CXXBoolLiteralExpr 0x5605abe78ac0 <col:14> 'bool' true
|   |   `-ReturnStmt 0x5605abe78dc0 <line:205:5, col:75>
|   |     `-BinaryOperator 0x5605abe78da0 <col:12, col:75> 'bool' '&&'
|   |       |-BinaryOperator 0x5605abe78bf8 <col:12, col:25> 'bool' '!='
|   |       | |-ImplicitCastExpr 0x5605abe78bc8 <col:12, col:20> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5605abe78bb0 <col:12, col:20> 'char' <LValueToRValue>
|   |       | |   `-ArraySubscriptExpr 0x5605abe78b78 <col:12, col:20> 'const char' lvalue
|   |       | |     |-ImplicitCastExpr 0x5605abe78b60 <col:12> 'const char *' <LValueToRValue>
|   |       | |     | `-MemberExpr 0x5605abe78b10 <col:12> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   |       | |     |   `-CXXThisExpr 0x5605abe78b00 <col:12> 'const std::type_info *' implicit this
|   |       | |     `-IntegerLiteral 0x5605abe78b40 <col:19> 'int' 0
|   |       | `-ImplicitCastExpr 0x5605abe78be0 <col:25> 'int' <IntegralCast>
|   |       |   `-CharacterLiteral 0x5605abe78b98 <col:25> 'char' 42
|   |       `-BinaryOperator 0x5605abe78d80 <col:32, col:75> 'bool' '=='
|   |         |-CallExpr 0x5605abe78d18 <col:32, col:70> 'int'
|   |         | |-ImplicitCastExpr 0x5605abe78d00 <col:32> 'int (*)(const char *, const char *) noexcept' <BuiltinFnToFnPtr>
|   |         | | `-DeclRefExpr 0x5605abe78c18 <col:32> '<builtin fn type>' Function 0x5605abe78108 '__builtin_strcmp' 'int (const char *, const char *) noexcept'
|   |         | |-ImplicitCastExpr 0x5605abe78d48 <col:50> 'const char *' <LValueToRValue>
|   |         | | `-MemberExpr 0x5605abe78c48 <col:50> 'const char *const' lvalue ->__name 0x5605abe76bf8
|   |         | |   `-CXXThisExpr 0x5605abe78c38 <col:50> 'const std::type_info *' implicit this
|   |         | `-CXXMemberCallExpr 0x5605abe78cc8 <col:58, col:69> 'const char *'
|   |         |   `-MemberExpr 0x5605abe78c98 <col:58, col:64> '<bound member function type>' .name 0x5605abe637d8
|   |         |     `-DeclRefExpr 0x5605abe78c78 <col:58> 'const type_info':'const std::type_info' lvalue ParmVar 0x5605abe78678 '__arg' 'const type_info &'
|   |         `-IntegerLiteral 0x5605abe78d60 <col:75> 'int' 0
|   |-CXXRecordDecl 0x5605abe78e00 <line:219:3, line:230:3> line:219:9 class bad_cast definition
|   | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
|   | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
|   | | |-MoveConstructor needs_overload_resolution
|   | | |-CopyAssignment simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
|   | | |-MoveAssignment needs_overload_resolution
|   | | `-Destructor non_trivial user_declared needs_overload_resolution
|   | |-public 'exception':'std::exception'
|   | |-VisibilityAttr 0x5605abe78f38 <line:42:13> Implicit Default
|   | |-CXXRecordDecl 0x5605abe78fd8 <line:219:3, col:9> col:9 implicit referenced class bad_cast
|   | |-AccessSpecDecl 0x5605abe79088 <line:221:3, col:9> col:3 public
|   | |-CXXConstructorDecl 0x5605abe79128 <line:222:5, col:40> col:5 bad_cast 'void () noexcept' implicit-inline
|   | | |-CXXCtorInitializer 'exception':'std::exception'
|   | | | `-CXXConstructExpr 0x5605abe798b8 <col:5> 'exception':'std::exception' 'void () noexcept'
|   | | `-CompoundStmt 0x5605abe79918 <col:38, col:40>
|   | |-CXXDestructorDecl 0x5605abe79278 <line:226:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:226:13 ~bad_cast 'void () noexcept' virtual
|   | | `-Overrides: [ 0x5605abe56788 exception::~exception 'void () noexcept' ]
|   | |-CXXMethodDecl 0x5605abe793e8 <line:229:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:229:25 what 'const char *() const noexcept' virtual
|   | | `-Overrides: [ 0x5605abe57298 exception::what 'const char *() const noexcept' ]
|   | |-CXXConstructorDecl 0x5605abe79518 <line:219:9> col:9 implicit constexpr bad_cast 'void (const bad_cast &)' inline default noexcept-unevaluated 0x5605abe79518
|   | | `-ParmVarDecl 0x5605abe79658 <col:9> col:9 'const bad_cast &'
|   | `-CXXMethodDecl 0x5605abe79718 <col:9> col:9 implicit constexpr operator= 'bad_cast &(const bad_cast &)' inline default noexcept-unevaluated 0x5605abe79718
|   |   `-ParmVarDecl 0x5605abe79848 <col:9> col:9 'const bad_cast &'
|   `-CXXRecordDecl 0x5605abe79960 <line:236:3, line:247:3> line:236:9 class bad_typeid definition
|     |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|     | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
|     | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
|     | |-MoveConstructor needs_overload_resolution
|     | |-CopyAssignment simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
|     | |-MoveAssignment needs_overload_resolution
|     | `-Destructor non_trivial user_declared needs_overload_resolution
|     |-public 'exception':'std::exception'
|     |-VisibilityAttr 0x5605abe79a98 <line:42:13> Implicit Default
|     |-CXXRecordDecl 0x5605abe79b38 <line:236:3, col:9> col:9 implicit referenced class bad_typeid
|     |-AccessSpecDecl 0x5605abe79be8 <line:238:3, col:9> col:3 public
|     |-CXXConstructorDecl 0x5605abe79c88 <line:239:5, col:43> col:5 bad_typeid 'void () noexcept' implicit-inline
|     | |-CXXCtorInitializer 'exception':'std::exception'
|     | | `-CXXConstructExpr 0x5605abe7a418 <col:5> 'exception':'std::exception' 'void () noexcept'
|     | `-CompoundStmt 0x5605abe7a478 <col:41, col:43>
|     |-CXXDestructorDecl 0x5605abe79dd8 <line:243:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:243:13 ~bad_typeid 'void () noexcept' virtual
|     | `-Overrides: [ 0x5605abe56788 exception::~exception 'void () noexcept' ]
|     |-CXXMethodDecl 0x5605abe79f48 <line:246:5, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/typeinfo:246:25 what 'const char *() const noexcept' virtual
|     | `-Overrides: [ 0x5605abe57298 exception::what 'const char *() const noexcept' ]
|     |-CXXConstructorDecl 0x5605abe7a078 <line:236:9> col:9 implicit constexpr bad_typeid 'void (const bad_typeid &)' inline default noexcept-unevaluated 0x5605abe7a078
|     | `-ParmVarDecl 0x5605abe7a1b8 <col:9> col:9 'const bad_typeid &'
|     `-CXXMethodDecl 0x5605abe7a278 <col:9> col:9 implicit constexpr operator= 'bad_typeid &(const bad_typeid &)' inline default noexcept-unevaluated 0x5605abe7a278
|       `-ParmVarDecl 0x5605abe7a3a8 <col:9> col:9 'const bad_typeid &'
|-LinkageSpecDecl 0x5605abe77700 <line:121:34> col:34 implicit C
| `-FunctionDecl 0x5605abe77758 <col:34> col:34 implicit used __builtin_strlen 'unsigned long (const char *) noexcept' extern
|   |-ParmVarDecl 0x5605abe77860 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-BuiltinAttr 0x5605abe77800 <<invalid sloc>> Implicit 1206
|   `-NoThrowAttr 0x5605abe778d0 <col:34> Implicit
|-LinkageSpecDecl 0x5605abe780b0 <line:177:14> col:14 implicit C
| `-FunctionDecl 0x5605abe78108 <col:14> col:14 implicit used __builtin_strcmp 'int (const char *, const char *) noexcept' extern
|   |-ParmVarDecl 0x5605abe78210 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-ParmVarDecl 0x5605abe78280 <<invalid sloc>> <invalid sloc> 'const char *'
|   |-BuiltinAttr 0x5605abe781b0 <<invalid sloc>> Implicit 1199
|   `-NoThrowAttr 0x5605abe782f8 <col:14> Implicit
|-LinkageSpecDecl 0x5605abe7a4e0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:50:1, line:188:1> line:50:8 C++
| |-NamespaceDecl 0x5605abe7a538 prev 0x5605abe63330 <line:52:1, line:118:1> line:52:11 std
| | |-original Namespace 0x5605abaf4398 'std'
| | |-CXXRecordDecl 0x5605abe7a5b0 <line:60:3, line:76:3> line:60:9 referenced class bad_alloc definition
| | | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| | | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor needs_overload_resolution
| | | | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | | | |-MoveAssignment needs_overload_resolution
| | | | `-Destructor non_trivial user_declared needs_overload_resolution
| | | |-public 'exception':'std::exception'
| | | |-VisibilityAttr 0x5605abe7a6e8 <line:48:13> Implicit Default
| | | |-CXXRecordDecl 0x5605abe7a788 <line:60:3, col:9> col:9 implicit referenced class bad_alloc
| | | |-AccessSpecDecl 0x5605abe7a838 <line:62:3, col:9> col:3 public
| | | |-CXXConstructorDecl 0x5605abe7a910 <line:63:5, col:27> col:5 used bad_alloc 'void () throw()' implicit-inline
| | | | |-CXXCtorInitializer 'exception':'std::exception'
| | | | | `-CXXConstructExpr 0x5605abd4aa90 <col:5> 'exception':'std::exception' 'void () noexcept'
| | | | `-CompoundStmt 0x5605abd4aaf0 <col:25, col:27>
| | | |-CXXConstructorDecl 0x5605abd4a398 <line:66:5, col:41> col:5 constexpr bad_alloc 'void (const bad_alloc &)' default noexcept-unevaluated 0x5605abd4a398 implicit-inline
| | | | `-ParmVarDecl 0x5605abd4a268 <col:15, col:30> col:31 'const bad_alloc &'
| | | |-CXXMethodDecl 0x5605abd4a630 <line:67:5, col:52> col:16 constexpr operator= 'bad_alloc &(const bad_alloc &)' default noexcept-unevaluated 0x5605abd4a630 implicit-inline
| | | | `-ParmVarDecl 0x5605abd4a498 <col:26, col:41> col:42 'const bad_alloc &'
| | | |-CXXDestructorDecl 0x5605abd4a750 <line:72:5, col:32> col:13 used ~bad_alloc 'void () throw()' virtual
| | | | `-Overrides: [ 0x5605abe56788 exception::~exception 'void () noexcept' ]
| | | `-CXXMethodDecl 0x5605abd4a8e8 <line:75:5, col:44> col:25 what 'const char *() const throw()' virtual
| | |   `-Overrides: [ 0x5605abe57298 exception::what 'const char *() const noexcept' ]
| | |-CXXRecordDecl 0x5605abd4ab08 <line:79:3, line:90:3> line:79:9 class bad_array_new_length definition
| | | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| | | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor needs_overload_resolution
| | | | |-CopyAssignment simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveAssignment needs_overload_resolution
| | | | `-Destructor non_trivial user_declared needs_overload_resolution
| | | |-public 'bad_alloc':'std::bad_alloc'
| | | |-VisibilityAttr 0x5605abd4ac38 <line:48:13> Implicit Default
| | | |-CXXRecordDecl 0x5605abd4acd8 <line:79:3, col:9> col:9 implicit referenced class bad_array_new_length
| | | |-AccessSpecDecl 0x5605abd4ad88 <line:81:3, col:9> col:3 public
| | | |-CXXConstructorDecl 0x5605abd4ae28 <line:82:5, col:38> col:5 bad_array_new_length 'void () throw()' implicit-inline
| | | | |-CXXCtorInitializer 'bad_alloc':'std::bad_alloc'
| | | | | `-CXXConstructExpr 0x5605abd4b6c0 <col:5> 'bad_alloc':'std::bad_alloc' 'void () throw()'
| | | | `-CompoundStmt 0x5605abd4b720 <col:36, col:38>
| | | |-CXXDestructorDecl 0x5605abd4af78 <line:86:5, col:43> col:13 ~bad_array_new_length 'void () throw()' virtual
| | | | `-Overrides: [ 0x5605abd4a750 bad_alloc::~bad_alloc 'void () throw()' ]
| | | |-CXXMethodDecl 0x5605abd4b0e8 <line:89:5, col:44> col:25 what 'const char *() const throw()' virtual
| | | | `-Overrides: [ 0x5605abd4a8e8 bad_alloc::what 'const char *() const throw()' ]
| | | |-CXXConstructorDecl 0x5605abd4b218 <line:79:9> col:9 implicit constexpr bad_array_new_length 'void (const bad_array_new_length &)' inline default noexcept-unevaluated 0x5605abd4b218
| | | | `-ParmVarDecl 0x5605abd4b358 <col:9> col:9 'const bad_array_new_length &'
| | | `-CXXMethodDecl 0x5605abd4b418 <col:9> col:9 implicit constexpr operator= 'bad_array_new_length &(const bad_array_new_length &)' inline default noexcept-unevaluated 0x5605abd4b418
| | |   `-ParmVarDecl 0x5605abd4b548 <col:9> col:9 'const bad_array_new_length &'
| | |-EnumDecl 0x5605abd4b778 <line:94:3, col:35> col:14 referenced class align_val_t 'size_t':'unsigned long'
| | | `-VisibilityAttr 0x5605abd4b850 <line:48:13> Implicit Default
| | |-CXXRecordDecl 0x5605abd4b8b0 <line:97:3, line:102:3> line:97:10 referenced struct nothrow_t definition
| | | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable pod trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | | |-VisibilityAttr 0x5605abd4b9e8 <line:48:13> Implicit Default
| | | |-CXXRecordDecl 0x5605abd4ba48 <line:97:3, col:10> col:10 implicit referenced struct nothrow_t
| | | `-CXXConstructorDecl 0x5605abd4bb60 <line:100:5, col:34> col:14 constexpr nothrow_t 'void ()' default trivial noexcept-unevaluated 0x5605abd4bb60 implicit-inline
| | |-VarDecl 0x5605abd4bcc8 <line:104:3, col:26> col:26 nothrow 'const nothrow_t':'const std::nothrow_t' extern
| | | `-VisibilityAttr 0x5605abd4bd48 <line:48:13> Implicit Default
| | |-TypedefDecl 0x5605abd4bdd8 <line:108:3, col:31> col:18 referenced new_handler 'void (*)()'
| | | `-PointerType 0x5605abde3500 'void (*)()'
| | |   `-ParenType 0x5605abde34a0 'void ()' sugar
| | |     `-FunctionProtoType 0x5605abb235f0 'void ()' cdecl
| | |       `-BuiltinType 0x5605aba9c9d0 'void'
| | |-FunctionDecl 0x5605abd4bfa0 <line:112:3, col:50> col:15 set_new_handler 'new_handler (new_handler) throw()'
| | | |-ParmVarDecl 0x5605abd4bea8 <col:31> col:42 'new_handler':'void (*)()'
| | | `-VisibilityAttr 0x5605abd4c068 <line:48:13> Implicit Default
| | `-FunctionDecl 0x5605abd4c120 <line:116:3, col:33> col:15 get_new_handler 'new_handler () noexcept'
| |   `-VisibilityAttr 0x5605abd4c1e0 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd4de10 prev 0x5605abd4c410 <line:131:20, line:132:41> line:131:26 operator new 'void *(std::size_t)'
| | |-ParmVarDecl 0x5605abd4c2d8 <col:39, col:44> col:50 'std::size_t':'unsigned long'
| | |-VisibilityAttr 0x5605abd4df38 <<invalid sloc>> Inherited Default
| | |-ReturnsNonNullAttr 0x5605abd4df60 <<invalid sloc>> Inherited Implicit
| | |-AllocSizeAttr 0x5605abd4df88 <<invalid sloc>> Inherited Implicit 1
| | `-WarnUnusedResultAttr 0x5605abd4dec0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| |-FunctionDecl 0x5605abd4e0c8 prev 0x5605abd4c8b0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:133:20, line:134:41> line:133:26 operator new[] 'void *(std::size_t)'
| | |-ParmVarDecl 0x5605abd4e010 <col:41, col:46> col:52 'std::size_t':'unsigned long'
| | |-VisibilityAttr 0x5605abd4e1f0 <<invalid sloc>> Inherited Default
| | |-ReturnsNonNullAttr 0x5605abd4e218 <<invalid sloc>> Inherited Implicit
| | |-AllocSizeAttr 0x5605abd4faa0 <<invalid sloc>> Inherited Implicit 1
| | `-WarnUnusedResultAttr 0x5605abd4e178 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| |-FunctionDecl 0x5605abd4fba8 prev 0x5605abd4cd10 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:135:1, line:136:41> line:135:6 operator delete 'void (void *) noexcept'
| | |-ParmVarDecl 0x5605abd4faf0 <col:22, col:26> col:27 'void *'
| | `-VisibilityAttr 0x5605abd4fca0 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd4fda0 prev 0x5605abd4d600 <line:137:1, line:138:41> line:137:6 operator delete[] 'void (void *) noexcept'
| | |-ParmVarDecl 0x5605abd4fce8 <col:24, col:28> col:29 'void *'
| | `-VisibilityAttr 0x5605abd4fe98 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd500c0 prev 0x5605abd4d128 <line:140:1, line:141:41> line:140:6 used operator delete 'void (void *, std::size_t) noexcept'
| | |-ParmVarDecl 0x5605abd4fee0 <col:22, col:26> col:27 'void *'
| | |-ParmVarDecl 0x5605abd4ffa0 <col:29, col:34> col:40 'std::size_t':'unsigned long'
| | `-VisibilityAttr 0x5605abd501c0 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd503a0 prev 0x5605abd4d988 <line:142:1, line:143:41> line:142:6 operator delete[] 'void (void *, std::size_t) noexcept'
| | |-ParmVarDecl 0x5605abd50208 <col:24, col:28> col:29 'void *'
| | |-ParmVarDecl 0x5605abd502c8 <col:31, col:36> col:42 'std::size_t':'unsigned long'
| | `-VisibilityAttr 0x5605abd504a0 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd50808 <line:145:20, line:146:73> line:145:26 operator new 'void *(std::size_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd50520 <col:39, col:44> col:50 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd50680 <col:52, col:72> col:73 'const std::nothrow_t &'
| | |-WarnUnusedResultAttr 0x5605abd508c0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | |-AllocSizeAttr 0x5605abd50920 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:146:42, col:59> 1
| | |-RestrictAttr 0x5605abd50950 <col:62> malloc
| | `-VisibilityAttr 0x5605abd50990 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd50be8 <line:147:20, line:148:73> line:147:26 operator new[] 'void *(std::size_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd50a20 <col:41, col:46> col:52 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd50ae8 <col:54, col:74> col:75 'const std::nothrow_t &'
| | |-WarnUnusedResultAttr 0x5605abd50ca0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | |-AllocSizeAttr 0x5605abd50d00 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:148:42, col:59> 1
| | |-RestrictAttr 0x5605abd50d30 <col:62> malloc
| | `-VisibilityAttr 0x5605abd50d70 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd50ff0 <line:149:1, line:150:41> line:149:6 operator delete 'void (void *, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd50dc8 <col:22, col:26> col:27 'void *'
| | |-ParmVarDecl 0x5605abd50e90 <col:29, col:49> col:50 'const std::nothrow_t &'
| | `-VisibilityAttr 0x5605abd510c0 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd512e8 <line:151:1, line:152:41> line:151:6 operator delete[] 'void (void *, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd51148 <col:24, col:28> col:29 'void *'
| | |-ParmVarDecl 0x5605abd51210 <col:31, col:51> col:52 'const std::nothrow_t &'
| | `-VisibilityAttr 0x5605abd513b8 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd516a0 prev 0x5605abd4c628 <line:154:20, line:155:73> line:154:26 operator new 'void *(std::size_t, std::align_val_t)'
| | |-ParmVarDecl 0x5605abd51478 <col:39, col:44> col:50 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd51568 <col:52, col:57> col:68 'std::align_val_t'
| | |-VisibilityAttr 0x5605abd51828 <<invalid sloc>> Inherited Default
| | |-ReturnsNonNullAttr 0x5605abd51850 <<invalid sloc>> Inherited Implicit
| | |-AllocAlignAttr 0x5605abd51878 <<invalid sloc>> Inherited Implicit 2
| | |-WarnUnusedResultAttr 0x5605abd51758 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | |-AllocSizeAttr 0x5605abd517b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:155:42, col:59> 1
| | `-RestrictAttr 0x5605abd517e8 <col:62> malloc
| |-FunctionDecl 0x5605abd51c38 <line:156:20, line:157:95> line:156:26 operator new 'void *(std::size_t, std::align_val_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd518f8 <col:39, col:44> col:50 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd519b8 <col:52, col:57> col:68 'std::align_val_t'
| | |-ParmVarDecl 0x5605abd51a80 <col:70, col:90> col:91 'const std::nothrow_t &'
| | |-WarnUnusedResultAttr 0x5605abd51cf8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | |-AllocSizeAttr 0x5605abd51d58 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:157:64, col:81> 1
| | |-RestrictAttr 0x5605abd51d88 <col:84> malloc
| | |-AllocAlignAttr 0x5605abd51dc8 <line:156:26> Implicit 2
| | `-VisibilityAttr 0x5605abd51df0 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd52020 prev 0x5605abd4ced8 <line:158:1, line:159:63> line:158:6 operator delete 'void (void *, std::align_val_t) noexcept'
| | |-ParmVarDecl 0x5605abd51e48 <col:22, col:26> col:27 'void *'
| | |-ParmVarDecl 0x5605abd51f08 <col:29, col:34> col:45 'std::align_val_t'
| | `-VisibilityAttr 0x5605abd52120 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd52480 <line:160:1, line:161:63> line:160:6 operator delete 'void (void *, std::align_val_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd52168 <col:22, col:26> col:27 'void *'
| | |-ParmVarDecl 0x5605abd52228 <col:29, col:34> col:45 'std::align_val_t'
| | |-ParmVarDecl 0x5605abd522f0 <col:47, col:67> col:68 'const std::nothrow_t &'
| | `-VisibilityAttr 0x5605abd52558 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd527d0 prev 0x5605abd4ca88 <line:162:20, line:163:73> line:162:26 operator new[] 'void *(std::size_t, std::align_val_t)'
| | |-ParmVarDecl 0x5605abd52618 <col:41, col:46> col:52 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd526d8 <col:54, col:59> col:70 'std::align_val_t'
| | |-VisibilityAttr 0x5605abd52958 <<invalid sloc>> Inherited Default
| | |-ReturnsNonNullAttr 0x5605abd52980 <<invalid sloc>> Inherited Implicit
| | |-AllocAlignAttr 0x5605abd529a8 <<invalid sloc>> Inherited Implicit 2
| | |-WarnUnusedResultAttr 0x5605abd52888 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | |-AllocSizeAttr 0x5605abd528e8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:163:42, col:59> 1
| | `-RestrictAttr 0x5605abd52918 <col:62> malloc
| |-FunctionDecl 0x5605abd52cd0 <line:164:20, line:165:95> line:164:26 operator new[] 'void *(std::size_t, std::align_val_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd52a28 <col:41, col:46> col:52 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd52ae8 <col:54, col:59> col:70 'std::align_val_t'
| | |-ParmVarDecl 0x5605abd52bb0 <col:72, col:92> col:93 'const std::nothrow_t &'
| | |-WarnUnusedResultAttr 0x5605abd52d90 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | |-AllocSizeAttr 0x5605abd52df0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:165:64, col:81> 1
| | |-RestrictAttr 0x5605abd52e20 <col:84> malloc
| | |-AllocAlignAttr 0x5605abd52e60 <line:164:26> Implicit 2
| | `-VisibilityAttr 0x5605abd52e88 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd53078 prev 0x5605abd4d780 <line:166:1, line:167:63> line:166:6 operator delete[] 'void (void *, std::align_val_t) noexcept'
| | |-ParmVarDecl 0x5605abd52ee0 <col:24, col:28> col:29 'void *'
| | |-ParmVarDecl 0x5605abd52fa0 <col:31, col:36> col:47 'std::align_val_t'
| | `-VisibilityAttr 0x5605abd53178 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd53440 <line:168:1, line:169:63> line:168:6 operator delete[] 'void (void *, std::align_val_t, const std::nothrow_t &) noexcept'
| | |-ParmVarDecl 0x5605abd531c0 <col:24, col:28> col:29 'void *'
| | |-ParmVarDecl 0x5605abd53280 <col:31, col:36> col:47 'std::align_val_t'
| | |-ParmVarDecl 0x5605abd53348 <col:49, col:69> col:70 'const std::nothrow_t &'
| | `-VisibilityAttr 0x5605abd53518 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd53860 prev 0x5605abd4d380 <line:171:1, line:172:63> line:171:6 operator delete 'void (void *, std::size_t, std::align_val_t) noexcept'
| | |-ParmVarDecl 0x5605abd535a0 <col:22, col:26> col:27 'void *'
| | |-ParmVarDecl 0x5605abd53660 <col:29, col:34> col:40 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd53720 <col:42, col:47> col:58 'std::align_val_t'
| | `-VisibilityAttr 0x5605abd53968 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd54980 prev 0x5605abd4db90 <line:173:1, line:174:63> line:173:6 operator delete[] 'void (void *, std::size_t, std::align_val_t) noexcept'
| | |-ParmVarDecl 0x5605abd539b0 <col:24, col:28> col:29 'void *'
| | |-ParmVarDecl 0x5605abd547c8 <col:31, col:36> col:42 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd54888 <col:44, col:49> col:60 'std::align_val_t'
| | `-VisibilityAttr 0x5605abd54a88 <<invalid sloc>> Inherited Default
| |-FunctionDecl 0x5605abd54cf8 <line:179:20, line:180:15> line:179:33 operator new 'void *(std::size_t, void *) noexcept' inline
| | |-ParmVarDecl 0x5605abd54b08 <col:46, col:51> col:57 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd54b90 <col:59, col:65> col:65 used __p 'void *'
| | |-CompoundStmt 0x5605abd54ec0 <line:180:1, col:15>
| | | `-ReturnStmt 0x5605abd54eb0 <col:3, col:10>
| | |   `-ImplicitCastExpr 0x5605abd54e98 <col:10> 'void *' <LValueToRValue>
| | |     `-ImplicitCastExpr 0x5605abd54e80 <col:10> 'void *' xvalue <NoOp>
| | |       `-DeclRefExpr 0x5605abd54e60 <col:10> 'void *' lvalue ParmVar 0x5605abd54b90 '__p' 'void *'
| | |-WarnUnusedResultAttr 0x5605abd54db0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | `-VisibilityAttr 0x5605abd54e28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:48:13> Implicit Default
| |-FunctionDecl 0x5605abd55098 <line:181:20, line:182:15> line:181:33 operator new[] 'void *(std::size_t, void *) noexcept' inline
| | |-ParmVarDecl 0x5605abd54f30 <col:48, col:53> col:59 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5605abd54fb8 <col:61, col:67> col:67 used __p 'void *'
| | |-CompoundStmt 0x5605abd55260 <line:182:1, col:15>
| | | `-ReturnStmt 0x5605abd55250 <col:3, col:10>
| | |   `-ImplicitCastExpr 0x5605abd55238 <col:10> 'void *' <LValueToRValue>
| | |     `-ImplicitCastExpr 0x5605abd55220 <col:10> 'void *' xvalue <NoOp>
| | |       `-DeclRefExpr 0x5605abd55200 <col:10> 'void *' lvalue ParmVar 0x5605abd54fb8 '__p' 'void *'
| | |-WarnUnusedResultAttr 0x5605abd55150 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | `-VisibilityAttr 0x5605abd551c8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:48:13> Implicit Default
| |-FunctionDecl 0x5605abd55440 <line:185:1, col:69> col:13 operator delete 'void (void *, void *) noexcept' inline
| | |-ParmVarDecl 0x5605abd55298 <col:31, col:35> col:36 'void *'
| | |-ParmVarDecl 0x5605abd55320 <col:38, col:42> col:43 'void *'
| | |-CompoundStmt 0x5605abd55578 <col:67, col:69>
| | `-VisibilityAttr 0x5605abd55510 <line:48:13> Implicit Default
| `-FunctionDecl 0x5605abd55708 <line:186:1, col:69> col:13 operator delete[] 'void (void *, void *) noexcept' inline
|   |-ParmVarDecl 0x5605abd555a8 <col:31, col:35> col:36 'void *'
|   |-ParmVarDecl 0x5605abd55630 <col:38, col:42> col:43 'void *'
|   |-CompoundStmt 0x5605abd55840 <col:67, col:69>
|   `-VisibilityAttr 0x5605abd557d8 <line:48:13> Implicit Default
|-FunctionDecl 0x5605abd4c410 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x5605abd4c518 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-VisibilityAttr 0x5605abd4c4b8 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x5605abd4c588 <<invalid sloc>> Implicit
| `-AllocSizeAttr 0x5605abd4c5b0 <<invalid sloc>> Implicit 1
|-FunctionDecl 0x5605abd4c628 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long, std::align_val_t)'
| |-ParmVarDecl 0x5605abd4c730 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-ParmVarDecl 0x5605abd4c7a0 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| |-VisibilityAttr 0x5605abd4c6d0 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x5605abd4c818 <<invalid sloc>> Implicit
| |-AllocSizeAttr 0x5605abd4c840 <<invalid sloc>> Implicit 1
| `-AllocAlignAttr 0x5605abd4c870 <<invalid sloc>> Implicit 2
|-FunctionDecl 0x5605abd4c8b0 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x5605abd4c9b8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-VisibilityAttr 0x5605abd4c958 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x5605abd4ca28 <<invalid sloc>> Implicit
| `-AllocSizeAttr 0x5605abd4ca50 <<invalid sloc>> Implicit 1
|-FunctionDecl 0x5605abd4ca88 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long, std::align_val_t)'
| |-ParmVarDecl 0x5605abd4cb90 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-ParmVarDecl 0x5605abd4cc00 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| |-VisibilityAttr 0x5605abd4cb30 <<invalid sloc>> Implicit Default
| |-ReturnsNonNullAttr 0x5605abd4cc78 <<invalid sloc>> Implicit
| |-AllocSizeAttr 0x5605abd4cca0 <<invalid sloc>> Implicit 1
| `-AllocAlignAttr 0x5605abd4ccd0 <<invalid sloc>> Implicit 2
|-FunctionDecl 0x5605abd4cd10 <<invalid sloc>> <invalid sloc> implicit operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x5605abd4ce18 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x5605abd4cdb8 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x5605abd4ced8 <<invalid sloc>> <invalid sloc> implicit operator delete 'void (void *, std::align_val_t) noexcept'
| |-ParmVarDecl 0x5605abd4cfe0 <<invalid sloc>> <invalid sloc> implicit 'void *'
| |-ParmVarDecl 0x5605abd4d050 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| `-VisibilityAttr 0x5605abd4cf80 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x5605abd4d128 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *, unsigned long) noexcept'
| |-ParmVarDecl 0x5605abd4d230 <<invalid sloc>> <invalid sloc> implicit 'void *'
| |-ParmVarDecl 0x5605abd4d2a0 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x5605abd4d1d0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x5605abd4d380 <<invalid sloc>> <invalid sloc> implicit operator delete 'void (void *, unsigned long, std::align_val_t) noexcept'
| |-ParmVarDecl 0x5605abd4d488 <<invalid sloc>> <invalid sloc> implicit 'void *'
| |-ParmVarDecl 0x5605abd4d4f8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-ParmVarDecl 0x5605abd4d568 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| `-VisibilityAttr 0x5605abd4d428 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x5605abd4d600 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x5605abd4d708 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x5605abd4d6a8 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x5605abd4d780 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *, std::align_val_t) noexcept'
| |-ParmVarDecl 0x5605abd4d888 <<invalid sloc>> <invalid sloc> implicit 'void *'
| |-ParmVarDecl 0x5605abd4d8f8 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| `-VisibilityAttr 0x5605abd4d828 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x5605abd4d988 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *, unsigned long) noexcept'
| |-ParmVarDecl 0x5605abd4da90 <<invalid sloc>> <invalid sloc> implicit 'void *'
| |-ParmVarDecl 0x5605abd4db00 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x5605abd4da30 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x5605abd4db90 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *, unsigned long, std::align_val_t) noexcept'
| |-ParmVarDecl 0x5605abd4dc98 <<invalid sloc>> <invalid sloc> implicit 'void *'
| |-ParmVarDecl 0x5605abd4dd08 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| |-ParmVarDecl 0x5605abd4dd78 <<invalid sloc>> <invalid sloc> implicit 'std::align_val_t'
| `-VisibilityAttr 0x5605abd4dc38 <<invalid sloc>> Implicit Default
|-NamespaceDecl 0x5605abd55858 prev 0x5605abe7a538 <line:191:1, line:218:1> line:191:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-FunctionTemplateDecl 0x5605abd55ba0 <line:195:3, line:198:38> line:197:5 launder
| | |-TemplateTypeParmDecl 0x5605abd558d0 <line:195:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abd55af0 <line:196:19, line:198:38> line:197:5 constexpr launder '_Tp *(_Tp *) noexcept' implicit-inline
| |   |-ParmVarDecl 0x5605abd559b8 <col:13, col:18> col:18 referenced __p '_Tp *'
| |   |-CompoundStmt 0x5605abd55fd8 <line:198:5, col:38>
| |   | `-ReturnStmt 0x5605abd55fc8 <col:7, col:35>
| |   |   `-CallExpr 0x5605abd55fa0 <col:14, col:35> '<dependent type>'
| |   |     |-DeclRefExpr 0x5605abd55f48 <col:14> '<builtin fn type>' Function 0x5605abd55da8 '__builtin_launder' 'void *(void *) noexcept'
| |   |     `-DeclRefExpr 0x5605abd55f80 <col:32> '_Tp *' lvalue ParmVar 0x5605abd559b8 '__p' '_Tp *'
| |   |-WarnUnusedResultAttr 0x5605abd55c00 <line:196:7> nodiscard ""
| |   `-VisibilityAttr 0x5605abd55ce0 <line:48:13> Implicit Default
| |-FunctionTemplateDecl 0x5605abd565d8 <line:203:3, line:204:59> col:10 launder
| | |-TemplateTypeParmDecl 0x5605abd55ff8 <line:203:12, col:21> col:21 referenced typename depth 0 index 0 _Ret
| | |-TemplateTypeParmDecl 0x5605abd56088 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | |-NonTypeTemplateParmDecl 0x5605abd56128 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:241:34, col:39> col:39 referenced 'bool' depth 0 index 2 _NE
| | `-FunctionDecl 0x5605abd56528 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:204:5, col:59> col:10 launder 'void (_Ret (*)(_Args...) noexcept(_NE))' delete implicit-inline
| |   |-ParmVarDecl 0x5605abd563f8 <col:18, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:242:45> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:204:25 '_Ret (*)(_Args...) noexcept(_NE)'
| |   `-VisibilityAttr 0x5605abd566b8 <line:48:13> Implicit Default
| |-FunctionTemplateDecl 0x5605abd56d28 <line:205:3, line:206:62> col:10 launder
| | |-TemplateTypeParmDecl 0x5605abd56728 <line:205:12, col:21> col:21 referenced typename depth 0 index 0 _Ret
| | |-TemplateTypeParmDecl 0x5605abd567b8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| | |-NonTypeTemplateParmDecl 0x5605abd56858 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:241:34, col:39> col:39 referenced 'bool' depth 0 index 2 _NE
| | `-FunctionDecl 0x5605abd56c78 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:206:5, col:62> col:10 launder 'void (_Ret (*)(_Args..., ...) noexcept(_NE))' delete implicit-inline
| |   |-ParmVarDecl 0x5605abd56b48 <col:18, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:242:45> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:206:25 '_Ret (*)(_Args..., ...) noexcept(_NE)'
| |   `-VisibilityAttr 0x5605abd56e08 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd56f40 <line:208:3, col:21> col:8 launder 'void (void *)' delete implicit-inline
| | |-ParmVarDecl 0x5605abd56e90 <col:16, col:20> col:21 'void *'
| | `-VisibilityAttr 0x5605abd57008 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd57178 <line:209:3, col:27> col:8 launder 'void (const void *)' delete implicit-inline
| | |-ParmVarDecl 0x5605abd57090 <col:16, col:26> col:27 'const void *'
| | `-VisibilityAttr 0x5605abd57240 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd573e8 <line:210:3, col:30> col:8 launder 'void (volatile void *)' delete implicit-inline
| | |-ParmVarDecl 0x5605abd57300 <col:16, col:29> col:30 'volatile void *'
| | `-VisibilityAttr 0x5605abd574b0 <line:48:13> Implicit Default
| |-FunctionDecl 0x5605abd57628 <line:211:3, col:36> col:8 launder 'void (const volatile void *)' delete implicit-inline
| | |-ParmVarDecl 0x5605abd57538 <col:16, col:35> col:36 'const volatile void *'
| | `-VisibilityAttr 0x5605abd576f0 <line:48:13> Implicit Default
| |-VarDecl 0x5605abd57770 <line:215:3, <built-in>:414:32> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:215:27 hardware_destructive_interference_size 'const size_t':'const unsigned long' inline constexpr cinit
| | |-value: Int 64
| | |-ImplicitCastExpr 0x5605abd577f8 <<built-in>:414:32> 'const size_t':'const unsigned long' <IntegralCast>
| | | `-IntegerLiteral 0x5605abd577d8 <col:32> 'int' 64
| | `-VisibilityAttr 0x5605abd57870 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:48:13> Implicit Default
| `-VarDecl 0x5605abd578e0 <line:216:3, <built-in>:415:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:216:27 hardware_constructive_interference_size 'const size_t':'const unsigned long' inline constexpr cinit
|   |-value: Int 64
|   |-ImplicitCastExpr 0x5605abd57968 <<built-in>:415:33> 'const size_t':'const unsigned long' <IntegralCast>
|   | `-IntegerLiteral 0x5605abd57948 <col:33> 'int' 64
|   `-VisibilityAttr 0x5605abd579e0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/new:48:13> Implicit Default
|-LinkageSpecDecl 0x5605abd55d50 <line:198:14> col:14 implicit C
| `-FunctionDecl 0x5605abd55da8 <col:14> col:14 implicit referenced __builtin_launder 'void *(void *) noexcept' extern
|   |-ParmVarDecl 0x5605abd55eb0 <<invalid sloc>> <invalid sloc> 'void *'
|   |-BuiltinAttr 0x5605abd55e50 <<invalid sloc>> Implicit 803
|   `-NoThrowAttr 0x5605abd55f20 <col:14> Implicit
|-NamespaceDecl 0x5605abd57a88 prev 0x5605abd55858 <line:223:1, line:233:1> line:223:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-CXXRecordDecl 0x5605abd57b00 <line:227:3, line:230:3> line:227:10 referenced struct destroying_delete_t definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable pod trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-VisibilityAttr 0x5605abd57c38 <line:48:13> Implicit Default
| | |-CXXRecordDecl 0x5605abd57c98 <line:227:3, col:10> col:10 implicit referenced struct destroying_delete_t
| | |-CXXConstructorDecl 0x5605abd57db0 <line:229:5, col:44> col:14 referenced constexpr destroying_delete_t 'void () noexcept' default trivial implicit-inline
| | |-CXXConstructorDecl 0x5605abd58028 <line:227:10> col:10 implicit constexpr destroying_delete_t 'void (const destroying_delete_t &)' inline default trivial noexcept-unevaluated 0x5605abd58028
| | | `-ParmVarDecl 0x5605abd58168 <col:10> col:10 'const destroying_delete_t &'
| | `-CXXConstructorDecl 0x5605abd58258 <col:10> col:10 implicit constexpr destroying_delete_t 'void (destroying_delete_t &&)' inline default trivial noexcept-unevaluated 0x5605abd58258
| |   `-ParmVarDecl 0x5605abd58398 <col:10> col:10 'destroying_delete_t &&'
| `-VarDecl 0x5605abd57f18 <line:232:3, col:58> col:40 destroying_delete 'const destroying_delete_t':'const std::destroying_delete_t' inline constexpr listinit
|   |-value: Struct
|   |-CXXConstructExpr 0x5605abd58580 <col:40, col:58> 'const destroying_delete_t':'const std::destroying_delete_t' 'void () noexcept' list zeroing
|   `-VisibilityAttr 0x5605abd58608 <line:48:13> Implicit Default
|-NamespaceDecl 0x5605abd58688 prev 0x5605abd57a88 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:40:1, line:247:1> line:40:11 std
| |-original Namespace 0x5605abaf4398 'std'
| |-VisibilityAttr 0x5605abd586f8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
| |-FunctionTemplateDecl 0x5605abe80980 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:49:3, line:52:40> line:51:5 __addressof
| | |-TemplateTypeParmDecl 0x5605abd58758 <line:49:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abe808d0 <line:50:5, line:52:40> line:51:5 constexpr __addressof '_Tp *(_Tp &) noexcept' inline
| |   |-ParmVarDecl 0x5605abe80768 <col:17, col:22> col:22 referenced __r '_Tp &'
| |   | `-LifetimeBoundAttr 0x5605abe80b08 <col:5> Implicit
| |   |-CompoundStmt 0x5605abe80ed8 <line:52:5, col:40>
| |   | `-ReturnStmt 0x5605abe80ec8 <col:7, col:37>
| |   |   `-CallExpr 0x5605abe80ea0 <col:14, col:37> '<dependent type>'
| |   |     |-DeclRefExpr 0x5605abe80e48 <col:14> '<builtin fn type>' Function 0x5605abe80c28 '__builtin_addressof' 'void *(void &) noexcept'
| |   |     `-DeclRefExpr 0x5605abe80e80 <col:34> '_Tp' lvalue ParmVar 0x5605abe80768 '__r' '_Tp &'
| |   |-BuiltinAttr 0x5605abe80a60 <<invalid sloc>> Implicit 1462
| |   |-NoThrowAttr 0x5605abe80ab8 <line:51:5> Implicit
| |   `-ConstAttr 0x5605abe80ae0 <col:5> Implicit
| |-FunctionTemplateDecl 0x5605abe81360 <line:67:3, line:71:39> line:70:5 forward
| | |-TemplateTypeParmDecl 0x5605abe80ef8 <line:67:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-FunctionDecl 0x5605abe812b0 <line:69:5, line:71:39> line:70:5 constexpr forward '_Tp &&(typename std::remove_reference<_Tp>::type &) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abe81150 <col:13, col:56> col:56 referenced __t 'typename std::remove_reference<_Tp>::type &'
| | | | `-LifetimeBoundAttr 0x5605abe81518 <col:5> Implicit
| | | |-CompoundStmt 0x5605abe815e0 <line:71:5, col:39>
| | | | `-ReturnStmt 0x5605abe815d0 <col:7, col:36>
| | | |   `-CXXStaticCastExpr 0x5605abe815a0 <col:14, col:36> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| | | |     `-DeclRefExpr 0x5605abe81570 <col:33> 'typename std::remove_reference<_Tp>::type' lvalue ParmVar 0x5605abe81150 '__t' 'typename std::remove_reference<_Tp>::type &'
| | | |-WarnUnusedResultAttr 0x5605abe813c0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| | | |-BuiltinAttr 0x5605abe814a0 <<invalid sloc>> Implicit 631
| | | |-NoThrowAttr 0x5605abe814c8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:70:5> Implicit
| | | `-ConstAttr 0x5605abe814f0 <col:5> Implicit
| | `-FunctionDecl 0x5605abec50b0 <line:69:5, line:71:39> line:70:5 used constexpr forward 'int &&(typename std::remove_reference<int>::type &) noexcept' implicit_instantiation implicit-inline
| |   |-TemplateArgument type 'int'
| |   | `-BuiltinType 0x5605aba9ca70 'int'
| |   |-ParmVarDecl 0x5605abec4f40 <col:13, col:56> col:56 __t 'typename std::remove_reference<int>::type &'
| |   | `-LifetimeBoundAttr 0x5605abec4fa8 <col:5> Implicit
| |   |-WarnUnusedResultAttr 0x5605abec51c8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| |   |-BuiltinAttr 0x5605abec5228 <<invalid sloc>> Implicit 631
| |   |-NoThrowAttr 0x5605abec5250 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:70:5> Implicit
| |   `-ConstAttr 0x5605abec5278 <col:5> Implicit
| |-FunctionTemplateDecl 0x5605abe81a00 <line:79:3, line:87:5> line:82:5 forward
| | |-TemplateTypeParmDecl 0x5605abe81600 <line:79:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abe81950 <line:81:5, line:87:5> line:82:5 constexpr forward '_Tp &&(typename std::remove_reference<_Tp>::type &&) noexcept' implicit-inline
| |   |-ParmVarDecl 0x5605abe817f0 <col:13, col:57> col:57 referenced __t 'typename std::remove_reference<_Tp>::type &&'
| |   | `-LifetimeBoundAttr 0x5605abe81bb8 <col:5> Implicit
| |   |-CompoundStmt 0x5605abe81e80 <line:83:5, line:87:5>
| |   | |-DeclStmt 0x5605abe81df8 <line:84:7, line:85:70>
| |   | | `-StaticAssertDecl 0x5605abe81db8 <line:84:7, line:85:69> line:84:7
| |   | |   |-UnaryOperator 0x5605abe81d40 <col:21, col:53> '<dependent type>' prefix '!' cannot overflow
| |   | |   | `-DependentScopeDeclRefExpr 0x5605abe81d08 <col:22, col:53> '<dependent type>' lvalue
| |   | |   |   `-NestedNameSpecifier TypeSpec 'is_lvalue_reference<_Tp>'
| |   | |   |     `-NestedNameSpecifier Namespace 0x5605abd58688 'std'
| |   | |   `-StringLiteral 0x5605abe81d58 <line:85:4> 'NULL TYPE' lvalue "std::forward must not be used to convert an rvalue to an lvalue"
| |   | `-ReturnStmt 0x5605abe81e70 <line:86:7, col:36>
| |   |   `-CXXStaticCastExpr 0x5605abe81e40 <col:14, col:36> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
| |   |     `-DeclRefExpr 0x5605abe81e10 <col:33> 'typename std::remove_reference<_Tp>::type' lvalue ParmVar 0x5605abe817f0 '__t' 'typename std::remove_reference<_Tp>::type &&'
| |   |-WarnUnusedResultAttr 0x5605abe81a60 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| |   |-BuiltinAttr 0x5605abe81b28 <<invalid sloc>> Implicit 631
| |   |-NoThrowAttr 0x5605abe81b68 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:82:5> Implicit
| |   `-ConstAttr 0x5605abe81b90 <col:5> Implicit
| |-ClassTemplateDecl 0x5605abe820a0 <line:90:3, line:91:10> col:10 __like_impl
| | |-TemplateTypeParmDecl 0x5605abe81ea8 <line:90:12, col:21> col:21 typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe81f38 <col:26, col:35> col:35 typename depth 0 index 1 _Up
| | `-CXXRecordDecl 0x5605abe81ff0 <line:91:3, col:10> col:10 struct __like_impl
| |-ClassTemplatePartialSpecializationDecl 0x5605abe825b8 <line:93:3, line:95:24> line:94:10 struct __like_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abb9d380 'type-parameter-0-0 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abe82328 <line:93:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe823b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0x5605abe827e0 <line:94:3, col:10> col:10 implicit struct __like_impl
| | `-TypeAliasDecl 0x5605abe828a0 <line:95:5, col:21> col:11 type '_Up &'
| |   `-LValueReferenceType 0x5605abe824b0 '_Up &' dependent
| |     `-TemplateTypeParmType 0x5605abe82410 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abe823b8 '_Up'
| |-ClassTemplatePartialSpecializationDecl 0x5605abe82bc8 <line:97:3, line:99:30> line:98:10 struct __like_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'const type-parameter-0-0 &'
| | | `-LValueReferenceType 0x5605abc6c3a0 'const type-parameter-0-0 &' dependent
| | |   `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| | |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abe82938 <line:97:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe829c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0x5605abe82df0 <line:98:3, col:10> col:10 implicit struct __like_impl
| | `-TypeAliasDecl 0x5605abe82ee8 <line:99:5, col:27> col:11 type 'const _Up &'
| |   `-LValueReferenceType 0x5605abe82ea0 'const _Up &' dependent
| |     `-QualType 0x5605abe82a21 'const _Up' const
| |       `-TemplateTypeParmType 0x5605abe82a20 '_Up' dependent depth 0 index 1
| |         `-TemplateTypeParm 0x5605abe829c8 '_Up'
| |-ClassTemplatePartialSpecializationDecl 0x5605abe83208 <line:101:3, line:103:25> line:102:10 struct __like_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abb9ef10 'type-parameter-0-0 &&' dependent
| | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abe82f80 <line:101:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe83008 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0x5605abe83430 <line:102:3, col:10> col:10 implicit struct __like_impl
| | `-TypeAliasDecl 0x5605abe83528 <line:103:5, col:21> col:11 type '_Up &&'
| |   `-RValueReferenceType 0x5605abe834e0 '_Up &&' dependent
| |     `-TemplateTypeParmType 0x5605abe83060 '_Up' dependent depth 0 index 1
| |       `-TemplateTypeParm 0x5605abe83008 '_Up'
| |-ClassTemplatePartialSpecializationDecl 0x5605abe83878 <line:105:3, line:107:31> line:106:10 struct __like_impl definition explicit_specialization
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-TemplateArgument type 'const type-parameter-0-0 &&'
| | | `-RValueReferenceType 0x5605abe83700 'const type-parameter-0-0 &&' dependent
| | |   `-QualType 0x5605abb238f1 'const type-parameter-0-0' const
| | |     `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |-TemplateArgument type 'type-parameter-0-1 &'
| | | `-LValueReferenceType 0x5605abc88dc0 'type-parameter-0-1 &' dependent
| | |   `-TemplateTypeParmType 0x5605abb57f50 'type-parameter-0-1' dependent depth 0 index 1
| | |-TemplateTypeParmDecl 0x5605abe835c0 <line:105:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe83648 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | |-CXXRecordDecl 0x5605abe83aa0 <line:106:3, col:10> col:10 implicit struct __like_impl
| | `-TypeAliasDecl 0x5605abe83bc8 <line:107:5, col:27> col:11 type 'const _Up &&'
| |   `-RValueReferenceType 0x5605abe83b80 'const _Up &&' dependent
| |     `-QualType 0x5605abe836a1 'const _Up' const
| |       `-TemplateTypeParmType 0x5605abe836a0 '_Up' dependent depth 0 index 1
| |         `-TemplateTypeParm 0x5605abe83648 '_Up'
| |-TypeAliasTemplateDecl 0x5605abe83ff0 <line:109:3, line:110:57> col:5 __like_t
| | |-TemplateTypeParmDecl 0x5605abe83c60 <line:109:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe83ce8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-TypeAliasDecl 0x5605abe83f88 <line:110:5, col:57> col:11 __like_t 'typename __like_impl<_Tp &&, _Up &>::type'
| |   `-DependentNameType 0x5605abe83f10 'typename __like_impl<_Tp &&, _Up &>::type' dependent
| |-FunctionTemplateDecl 0x5605abe84798 <line:112:3, line:116:50> line:115:3 forward_like
| | |-TemplateTypeParmDecl 0x5605abe84050 <line:112:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe840d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| | `-FunctionDecl 0x5605abe846e8 <line:114:3, line:116:50> line:115:3 constexpr forward_like '__like_t<_Tp, _Up> (_Up &&) noexcept' implicit-inline
| |   |-ParmVarDecl 0x5605abe844e8 <col:16, col:22> col:22 referenced __x '_Up &&'
| |   | `-LifetimeBoundAttr 0x5605abe84950 <col:3> Implicit
| |   |-CompoundStmt 0x5605abe84cb0 <line:116:3, col:50>
| |   | `-ReturnStmt 0x5605abe84ca0 <col:5, col:47>
| |   |   `-CXXStaticCastExpr 0x5605abe84c70 <col:12, col:47> '__like_t<_Tp, _Up>':'typename __like_impl<_Tp &&, _Up &>::type' static_cast<__like_t<_Tp, _Up>> <Dependent>
| |   |     `-DeclRefExpr 0x5605abe84c28 <col:44> '_Up' lvalue ParmVar 0x5605abe844e8 '__x' '_Up &&'
| |   |-WarnUnusedResultAttr 0x5605abe847f8 <line:113:5> nodiscard ""
| |   |-BuiltinAttr 0x5605abe848d8 <<invalid sloc>> Implicit 632
| |   |-NoThrowAttr 0x5605abe84900 <line:115:3> Implicit
| |   `-ConstAttr 0x5605abe84928 <col:3> Implicit
| |-FunctionTemplateDecl 0x5605abe850d8 <line:124:3, line:128:77> line:127:5 move
| | |-TemplateTypeParmDecl 0x5605abe84cd0 <line:124:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abe85028 <line:126:5, line:128:77> line:127:5 constexpr move 'typename std::remove_reference<_Tp>::type &&(_Tp &&) noexcept' implicit-inline
| |   |-ParmVarDecl 0x5605abe84ea8 <col:10, col:16> col:16 referenced __t '_Tp &&'
| |   | `-LifetimeBoundAttr 0x5605abe85290 <col:5> Implicit
| |   |-CompoundStmt 0x5605abe85498 <line:128:5, col:77>
| |   | `-ReturnStmt 0x5605abe85488 <col:7, col:74>
| |   |   `-CXXStaticCastExpr 0x5605abe85458 <col:14, col:74> 'typename std::remove_reference<_Tp>::type' xvalue static_cast<typename std::remove_reference<_Tp>::type &&> <Dependent>
| |   |     `-DeclRefExpr 0x5605abe853e0 <col:71> '_Tp' lvalue ParmVar 0x5605abe84ea8 '__t' '_Tp &&'
| |   |-WarnUnusedResultAttr 0x5605abe85138 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| |   |-BuiltinAttr 0x5605abe85218 <<invalid sloc>> Implicit 932
| |   |-NoThrowAttr 0x5605abe85240 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:127:5> Implicit
| |   `-ConstAttr 0x5605abe85268 <col:5> Implicit
| |-ClassTemplateDecl 0x5605abe85618 <line:131:3, line:134:57> line:132:12 __move_if_noexcept_cond
| | |-TemplateTypeParmDecl 0x5605abe854b8 <line:131:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-CXXRecordDecl 0x5605abe85568 <line:132:5, line:134:57> line:132:12 struct __move_if_noexcept_cond definition
| |   |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveConstructor exists simple trivial needs_implicit
| |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| |   | |-MoveAssignment exists simple trivial needs_implicit
| |   | `-Destructor simple irrelevant trivial constexpr needs_implicit
| |   |-public '__and_<__not_<is_nothrow_move_constructible<_Tp>>, is_copy_constructible<_Tp>>::type'
| |   `-CXXRecordDecl 0x5605abe85dc8 <col:5, col:12> col:12 implicit struct __move_if_noexcept_cond
| |-FunctionTemplateDecl 0x5605abe86730 <line:144:3, line:149:30> line:148:5 move_if_noexcept
| | |-TemplateTypeParmDecl 0x5605abe85e90 <line:144:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abe86680 <line:146:5, line:149:30> line:148:5 constexpr move_if_noexcept '__conditional_t<__move_if_noexcept_cond<_Tp>::value, const _Tp &, _Tp &&> (_Tp &) noexcept' implicit-inline
| |   |-ParmVarDecl 0x5605abe86528 <col:22, col:27> col:27 referenced __x '_Tp &'
| |   | `-LifetimeBoundAttr 0x5605abe868e8 <col:5> Implicit
| |   |-CompoundStmt 0x5605abe86a00 <line:149:5, col:30>
| |   | `-ReturnStmt 0x5605abe869f0 <col:7, col:27>
| |   |   `-CallExpr 0x5605abe869c8 <col:14, col:27> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x5605abe86960 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5605abe850d8
| |   |     `-DeclRefExpr 0x5605abe869a8 <col:24> '_Tp' lvalue ParmVar 0x5605abe86528 '__x' '_Tp &'
| |   |-WarnUnusedResultAttr 0x5605abe86790 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| |   |-BuiltinAttr 0x5605abe86870 <<invalid sloc>> Implicit 933
| |   |-NoThrowAttr 0x5605abe86898 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:148:5> Implicit
| |   `-ConstAttr 0x5605abe868c0 <col:5> Implicit
| |-FunctionTemplateDecl 0x5605abe86ce0 <line:160:3, line:164:37> line:163:5 addressof
| | |-TemplateTypeParmDecl 0x5605abe86a20 <line:160:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abe86c30 <line:162:5, line:164:37> line:163:5 constexpr addressof '_Tp *(_Tp &) noexcept' inline
| |   |-ParmVarDecl 0x5605abe86b08 <col:15, col:20> col:20 referenced __r '_Tp &'
| |   | `-LifetimeBoundAttr 0x5605abe86e98 <col:5> Implicit
| |   |-CompoundStmt 0x5605abe86fb0 <line:164:5, col:37>
| |   | `-ReturnStmt 0x5605abe86fa0 <col:7, col:34>
| |   |   `-CallExpr 0x5605abe86f78 <col:14, col:34> '<dependent type>'
| |   |     |-UnresolvedLookupExpr 0x5605abe86f10 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x5605abe80980
| |   |     `-DeclRefExpr 0x5605abe86f58 <col:31> '_Tp' lvalue ParmVar 0x5605abe86b08 '__r' '_Tp &'
| |   |-WarnUnusedResultAttr 0x5605abe86d40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:153:31> nodiscard ""
| |   |-BuiltinAttr 0x5605abe86e20 <<invalid sloc>> Implicit 121
| |   |-NoThrowAttr 0x5605abe86e48 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:163:5> Implicit
| |   `-ConstAttr 0x5605abe86e70 <col:5> Implicit
| |-FunctionTemplateDecl 0x5605abe872c8 <line:168:3, line:169:37> col:16 addressof
| | |-TemplateTypeParmDecl 0x5605abe86fd0 <line:168:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abe87218 <line:169:5, col:37> col:16 addressof 'const _Tp *(const _Tp &&)' delete implicit-inline
| |   |-ParmVarDecl 0x5605abe870b8 <col:26, col:35> col:37 'const _Tp &&'
| |   | `-LifetimeBoundAttr 0x5605abe87450 <col:16> Implicit
| |   |-BuiltinAttr 0x5605abe87390 <<invalid sloc>> Implicit 121
| |   |-NoThrowAttr 0x5605abe87400 <col:16> Implicit
| |   `-ConstAttr 0x5605abe87428 <col:16> Implicit
| |-FunctionTemplateDecl 0x5605abe87928 <line:172:3, line:180:5> line:175:5 __exchange
| | |-TemplateTypeParmDecl 0x5605abe874c0 <line:172:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5605abe87558 <col:27, col:42> col:36 referenced typename depth 0 index 1 _Up
| | | `-TemplateArgument type '_Tp':'type-parameter-0-0'
| | |   `-TemplateTypeParmType 0x5605abe87510 '_Tp' dependent depth 0 index 0
| | |     `-TemplateTypeParm 0x5605abe874c0 '_Tp'
| | `-FunctionDecl 0x5605abe87878 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:191:32, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:180:5> line:175:5 constexpr __exchange '_Tp (_Tp &, _Up &&)' inline
| |   |-ParmVarDecl 0x5605abe87678 <col:16, col:21> col:21 referenced __obj '_Tp &'
| |   |-ParmVarDecl 0x5605abe87728 <col:28, col:34> col:34 referenced __new_val '_Up &&'
| |   `-CompoundStmt 0x5605abe87d10 <line:176:5, line:180:5>
| |     |-DeclStmt 0x5605abe87b40 <line:177:7, col:39>
| |     | `-VarDecl 0x5605abe87a28 <col:7, col:38> col:11 referenced __old_val '_Tp' nrvo cinit
| |     |   `-CallExpr 0x5605abe87b18 <col:23, col:38> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x5605abe87ab0 <col:23, col:28> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5605abe850d8
| |     |     `-DeclRefExpr 0x5605abe87af8 <col:33> '_Tp' lvalue ParmVar 0x5605abe87678 '__obj' '_Tp &'
| |     |-BinaryOperator 0x5605abe87c88 <line:178:7, col:42> '<dependent type>' '='
| |     | |-DeclRefExpr 0x5605abe87b58 <col:7> '_Tp' lvalue ParmVar 0x5605abe87678 '__obj' '_Tp &'
| |     | `-CallExpr 0x5605abe87c60 <col:15, col:42> '<dependent type>'
| |     |   |-UnresolvedLookupExpr 0x5605abe87bc0 <col:15, col:31> '<dependent type>' lvalue (no ADL) = 'forward' 0x5605abe81360 0x5605abe81a00
| |     |   | `-TemplateArgument type '_Up':'type-parameter-0-1'
| |     |   |   `-TemplateTypeParmType 0x5605abe875b0 '_Up' dependent depth 0 index 1
| |     |   |     `-TemplateTypeParm 0x5605abe87558 '_Up'
| |     |   `-DeclRefExpr 0x5605abe87c40 <col:33> '_Up' lvalue ParmVar 0x5605abe87728 '__new_val' '_Up &&'
| |     `-ReturnStmt 0x5605abe87cf8 <line:179:7, col:14> nrvo_candidate(Var 0x5605abe87a28 '__old_val' '_Tp')
| |       `-ImplicitCastExpr 0x5605abe87ce0 <col:14> '_Tp' xvalue <NoOp>
| |         `-DeclRefExpr 0x5605abe87ca8 <col:14> '_Tp' lvalue Var 0x5605abe87a28 '__old_val' '_Tp'
| |-FunctionTemplateDecl 0x5605abe8ab98 prev 0x5605abc9a578 <line:204:3, line:225:5> line:214:5 swap
| | |-TemplateTypeParmDecl 0x5605abe87d40 <line:204:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| | `-FunctionDecl 0x5605abe8aae8 prev 0x5605abc9a4c8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:191:32, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:225:5> line:214:5 constexpr swap 'typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>, is_move_constructible<_Tp>, is_move_assignable<_Tp>>::value>::type (_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp>>::value)' inline
| |   |-ParmVarDecl 0x5605abe88418 <col:10, col:15> col:15 referenced __a '_Tp &'
| |   |-ParmVarDecl 0x5605abe88498 <col:20, col:25> col:25 referenced __b '_Tp &'
| |   `-CompoundStmt 0x5605abe8af40 <line:217:5, line:225:5>
| |     |-DeclStmt 0x5605abe8ad30 <line:222:7, col:37>
| |     | `-VarDecl 0x5605abe8ac18 <col:7, line:185:45> line:222:11 referenced __tmp '_Tp' cinit
| |     |   `-CallExpr 0x5605abe8ad08 <line:185:30, col:45> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x5605abe8aca0 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5605abe850d8
| |     |     `-DeclRefExpr 0x5605abe8ace8 <line:222:33> '_Tp' lvalue ParmVar 0x5605abe88418 '__a' '_Tp &'
| |     |-BinaryOperator 0x5605abe8ae18 <line:223:7, line:185:45> '<dependent type>' '='
| |     | |-DeclRefExpr 0x5605abe8ad48 <line:223:7> '_Tp' lvalue ParmVar 0x5605abe88418 '__a' '_Tp &'
| |     | `-CallExpr 0x5605abe8adf0 <line:185:30, col:45> '<dependent type>'
| |     |   |-UnresolvedLookupExpr 0x5605abe8ad88 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5605abe850d8
| |     |   `-DeclRefExpr 0x5605abe8add0 <line:223:27> '_Tp' lvalue ParmVar 0x5605abe88498 '__b' '_Tp &'
| |     `-BinaryOperator 0x5605abe8af20 <line:224:7, line:185:45> '<dependent type>' '='
| |       |-DeclRefExpr 0x5605abe8ae38 <line:224:7> '_Tp' lvalue ParmVar 0x5605abe88498 '__b' '_Tp &'
| |       `-CallExpr 0x5605abe8aef8 <line:185:30, col:45> '<dependent type>'
| |         |-UnresolvedLookupExpr 0x5605abe8ae78 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5605abe850d8
| |         `-DeclRefExpr 0x5605abe8aec0 <line:224:27> '_Tp' lvalue Var 0x5605abe8ac18 '__tmp' '_Tp'
| `-FunctionTemplateDecl 0x5605abe8b7e8 prev 0x5605abc9b188 <line:230:3, line:243:5> line:238:5 swap
|   |-TemplateTypeParmDecl 0x5605abe8af70 <line:230:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   |-NonTypeTemplateParmDecl 0x5605abe8b008 <col:26, col:33> col:33 referenced 'size_t':'unsigned long' depth 0 index 1 _Nm
|   `-FunctionDecl 0x5605abe8b738 prev 0x5605abc9b0d8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:191:32, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/move.h:243:5> line:238:5 constexpr swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Nm], _Tp (&)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|     |-ParmVarDecl 0x5605abe8b398 <col:10, col:24> col:16 referenced __a '_Tp (&)[_Nm]'
|     |-ParmVarDecl 0x5605abe8b4f8 <col:27, col:41> col:33 referenced __b '_Tp (&)[_Nm]'
|     `-CompoundStmt 0x5605abe8bb60 <line:240:5, line:243:5>
|       `-ForStmt 0x5605abe8bb28 <line:241:7, line:242:25>
|         |-DeclStmt 0x5605abe8b920 <line:241:12, col:26>
|         | `-VarDecl 0x5605abe8b868 <col:12, col:25> col:19 referenced __n 'size_t':'unsigned long' cinit
|         |   `-ImplicitCastExpr 0x5605abe8b8f0 <col:25> 'size_t':'unsigned long' <IntegralCast>
|         |     `-IntegerLiteral 0x5605abe8b8d0 <col:25> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x5605abe8b990 <col:28, col:34> 'bool' '<'
|         | |-ImplicitCastExpr 0x5605abe8b978 <col:28> 'size_t':'unsigned long' <LValueToRValue>
|         | | `-DeclRefExpr 0x5605abe8b938 <col:28> 'size_t':'unsigned long' lvalue Var 0x5605abe8b868 '__n' 'size_t':'unsigned long'
|         | `-DeclRefExpr 0x5605abe8b958 <col:34> 'size_t':'unsigned long' NonTypeTemplateParm 0x5605abe8b008 '_Nm' 'size_t':'unsigned long'
|         |-UnaryOperator 0x5605abe8b9d0 <col:39, col:41> 'size_t':'unsigned long' lvalue prefix '++'
|         | `-DeclRefExpr 0x5605abe8b9b0 <col:41> 'size_t':'unsigned long' lvalue Var 0x5605abe8b868 '__n' 'size_t':'unsigned long'
|         `-CallExpr 0x5605abe8baf8 <line:242:2, col:25> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5605abe8b9e8 <col:2> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5605abe8b7e8 0x5605abe8ab98
|           |-ArraySubscriptExpr 0x5605abe8ba78 <col:7, col:14> '_Tp' lvalue
|           | |-DeclRefExpr 0x5605abe8ba38 <col:7> '_Tp[_Nm]' lvalue ParmVar 0x5605abe8b398 '__a' '_Tp (&)[_Nm]'
|           | `-DeclRefExpr 0x5605abe8ba58 <col:11> 'size_t':'unsigned long' lvalue Var 0x5605abe8b868 '__n' 'size_t':'unsigned long'
|           `-ArraySubscriptExpr 0x5605abe8bad8 <col:17, col:24> '_Tp' lvalue
|             |-DeclRefExpr 0x5605abe8ba98 <col:17> '_Tp[_Nm]' lvalue ParmVar 0x5605abe8b4f8 '__b' '_Tp (&)[_Nm]'
|             `-DeclRefExpr 0x5605abe8bab8 <col:21> 'size_t':'unsigned long' lvalue Var 0x5605abe8b868 '__n' 'size_t':'unsigned long'
|-LinkageSpecDecl 0x5605abe80bd0 <line:52:14> col:14 implicit C
| `-FunctionDecl 0x5605abe80c28 <col:14> col:14 implicit referenced __builtin_addressof 'void *(void &) noexcept' extern
|   |-ParmVarDecl 0x5605abe80d30 <<invalid sloc>> <invalid sloc> 'void &'
|   | `-LifetimeBoundAttr 0x5605abe80df0 <col:14> Implicit
|   |-BuiltinAttr 0x5605abe80cd0 <<invalid sloc>> Implicit 201
|   |-NoThrowAttr 0x5605abe80da0 <col:14> Implicit
|   `-ConstAttr 0x5605abe80dc8 <col:14> Implicit
|-LinkageSpecDecl 0x5605abe8bc78 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:50:1, line:292:1> line:50:8 C++
| `-NamespaceDecl 0x5605abe8bcf0 prev 0x5605abd58688 <line:52:1, line:290:1> line:52:11 std
|   |-original Namespace 0x5605abaf4398 'std'
|   |-VisibilityAttr 0x5605abe8bd60 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
|   |-CXXRecordDecl 0x5605abe8bdc0 prev 0x5605abe633a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:54:3, col:9> col:9 class type_info
|   | `-VisibilityAttr 0x5605abe8be80 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/cxxabi_init_exception.h:36:13> Inherited Default
|   |-NamespaceDecl 0x5605abe8beb0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:61:3, line:64:3> line:61:13 __exception_ptr
|   | `-CXXRecordDecl 0x5605abe8bf40 <line:63:5, col:11> col:11 referenced class exception_ptr
|   |-UsingDecl 0x5605abe8c038 <line:66:3, col:26> col:26 __exception_ptr::exception_ptr
|   | `-NestedNameSpecifier Namespace 0x5605abe8beb0 '__exception_ptr'
|   |-UsingShadowDecl 0x5605abe8c098 <col:26> col:26 implicit CXXRecord 0x5605abe8bf40 'exception_ptr'
|   | `-RecordType 0x5605abe8bff0 'std::__exception_ptr::exception_ptr'
|   |   `-CXXRecord 0x5605abe8ca60 'exception_ptr'
|   |-FunctionDecl 0x5605abe8c200 <line:75:3, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:75:17 used current_exception 'exception_ptr () noexcept'
|   |-FunctionTemplateDecl 0x5605abe8c570 <line:77:3, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:78:17 make_exception_ptr
|   | |-TemplateTypeParmDecl 0x5605abe8c2c8 <line:77:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
|   | `-FunctionDecl 0x5605abe8c4c0 <line:78:3, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:78:17 make_exception_ptr 'exception_ptr (_Ex) noexcept'
|   |   `-ParmVarDecl 0x5605abe8c388 <col:36> col:39 '_Ex'
|   |-FunctionDecl 0x5605abe8c818 <line:81:3, col:70> col:8 used rethrow_exception 'void (exception_ptr) __attribute__((noreturn))'
|   | `-ParmVarDecl 0x5605abe8c668 <col:26> col:39 'exception_ptr':'std::__exception_ptr::exception_ptr' destroyed
|   |-NamespaceDecl 0x5605abe8c8e8 prev 0x5605abe8beb0 <line:83:3, line:240:3> line:83:13 __exception_ptr
|   | |-original Namespace 0x5605abe8beb0 '__exception_ptr'
|   | |-UsingDecl 0x5605abe8c980 <line:85:5, col:16> col:16 std::rethrow_exception
|   | | `-NestedNameSpecifier Namespace 0x5605abe8bcf0 'std'
|   | |-UsingShadowDecl 0x5605abe8c9e0 <col:16> col:16 implicit Function 0x5605abe8c818 'rethrow_exception' 'void (exception_ptr) __attribute__((noreturn))'
|   | |-CXXRecordDecl 0x5605abe8ca60 prev 0x5605abe8bf40 <line:97:5, line:184:5> line:97:11 referenced class exception_ptr definition
|   | | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
|   | | | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
|   | | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|   | | | |-MoveConstructor exists non_trivial user_declared
|   | | | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
|   | | | |-MoveAssignment exists non_trivial user_declared
|   | | | `-Destructor non_trivial user_declared
|   | | |-CXXRecordDecl 0x5605abe8cb60 <col:5, col:11> col:11 implicit referenced class exception_ptr
|   | | |-FieldDecl 0x5605abe8cc28 <line:99:7, col:13> col:13 referenced _M_exception_object 'void *'
|   | | |-CXXConstructorDecl 0x5605abe8cd98 <line:101:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:101:16 exception_ptr 'void (void *) noexcept'
|   | | | `-ParmVarDecl 0x5605abe8cc98 <col:30, col:36> col:36 __e 'void *'
|   | | |-CXXMethodDecl 0x5605abe8ce98 <line:103:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:103:12 used _M_addref 'void () noexcept'
|   | | |-CXXMethodDecl 0x5605abe8cf88 <line:104:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:104:12 used _M_release 'void () noexcept'
|   | | |-CXXMethodDecl 0x5605abe8d0b8 <line:106:7, col:71> col:13 _M_get 'void *() const noexcept'
|   | | | `-PureAttr 0x5605abe8d160 <col:62>
|   | | |-FriendDecl 0x5605abe8d358 <line:108:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:108:33
|   | | | `-FunctionDecl 0x5605abe8d260 parent 0x5605abe8bcf0 prev 0x5605abe8c200 <col:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:108:33 used friend current_exception 'exception_ptr () noexcept'
|   | | |-FriendDecl 0x5605abe8d5e0 <line:109:7, col:55> col:24
|   | | | `-FunctionDecl 0x5605abe8d4a8 parent 0x5605abe8bcf0 prev 0x5605abe8c818 <col:7, col:55> col:24 used friend rethrow_exception 'void (exception_ptr) __attribute__((noreturn))'
|   | | |   `-ParmVarDecl 0x5605abe8d3b8 <col:42> col:55 'exception_ptr':'std::__exception_ptr::exception_ptr' destroyed
|   | | |-FriendDecl 0x5605abe8d9d0 <line:110:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:111:33
|   | | | `-FunctionTemplateDecl 0x5605abe8d8d8 parent 0x5605abe8bcf0 prev 0x5605abe8c570 <line:110:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:111:33 friend make_exception_ptr
|   | | |   |-TemplateTypeParmDecl 0x5605abe8d630 <line:110:16, col:25> col:25 referenced typename depth 0 index 0 _Ex
|   | | |   `-FunctionDecl 0x5605abe8d7e0 parent 0x5605abe8bcf0 prev 0x5605abe8c4c0 <line:111:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:111:33 friend make_exception_ptr 'exception_ptr (_Ex) noexcept'
|   | | |     `-ParmVarDecl 0x5605abe8d6e8 <col:52> col:55 '_Ex'
|   | | |-AccessSpecDecl 0x5605abe8da20 <line:113:5, col:11> col:5 public
|   | | |-CXXConstructorDecl 0x5605abe8da78 <line:114:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:114:7 exception_ptr 'void () noexcept'
|   | | |-CXXConstructorDecl 0x5605abe8dd00 <line:116:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:116:7 used exception_ptr 'void (const exception_ptr &) noexcept'
|   | | | `-ParmVarDecl 0x5605abe8dbd0 <col:21, col:40> col:41 'const exception_ptr &'
|   | | |-CXXConstructorDecl 0x5605abe8deb0 <line:119:7, line:121:9> line:119:7 exception_ptr 'void (nullptr_t) noexcept' implicit-inline
|   | | | |-ParmVarDecl 0x5605abe8ddf8 <col:21> col:30 'nullptr_t':'std::nullptr_t'
|   | | | |-CXXCtorInitializer Field 0x5605abe8cc28 '_M_exception_object' 'void *'
|   | | | | `-ImplicitCastExpr 0x5605abe908f8 <line:120:29> 'void *' <NullToPointer>
|   | | | |   `-CXXNullPtrLiteralExpr 0x5605abe908c8 <col:29> 'std::nullptr_t'
|   | | | `-CompoundStmt 0x5605abe90938 <line:121:7, col:9>
|   | | |-CXXConstructorDecl 0x5605abe8e140 <line:123:7, line:125:44> line:123:7 used exception_ptr 'void (exception_ptr &&) noexcept' implicit-inline
|   | | | |-ParmVarDecl 0x5605abe8e010 <col:21, col:37> col:37 used __o 'exception_ptr &&'
|   | | | |-CXXCtorInitializer Field 0x5605abe8cc28 '_M_exception_object' 'void *'
|   | | | | `-ImplicitCastExpr 0x5605abe909b8 <line:124:29, col:33> 'void *' <LValueToRValue>
|   | | | |   `-MemberExpr 0x5605abe90968 <col:29, col:33> 'void *' lvalue ._M_exception_object 0x5605abe8cc28
|   | | | |     `-DeclRefExpr 0x5605abe90948 <col:29> 'exception_ptr':'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe8e010 '__o' 'exception_ptr &&'
|   | | | `-CompoundStmt 0x5605abe90b68 <line:125:7, col:44>
|   | | |   `-BinaryOperator 0x5605abe90a70 <col:9, col:35> 'void *' lvalue '='
|   | | |     |-MemberExpr 0x5605abe90a18 <col:9, col:13> 'void *' lvalue ._M_exception_object 0x5605abe8cc28
|   | | |     | `-DeclRefExpr 0x5605abe909f8 <col:9> 'exception_ptr':'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe8e010 '__o' 'exception_ptr &&'
|   | | |     `-ImplicitCastExpr 0x5605abe90a58 <col:35> 'void *' <NullToPointer>
|   | | |       `-CXXNullPtrLiteralExpr 0x5605abe90a48 <col:35> 'std::nullptr_t'
|   | | |-CXXMethodDecl 0x5605abe8e3d8 <line:135:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:136:7 operator= 'exception_ptr &(const exception_ptr &) noexcept'
|   | | | `-ParmVarDecl 0x5605abe8e240 <col:17, col:36> col:37 'const exception_ptr &'
|   | | |-CXXMethodDecl 0x5605abe8e5f8 <line:139:7, line:144:7> line:140:7 operator= 'exception_ptr &(exception_ptr &&) noexcept' implicit-inline
|   | | | |-ParmVarDecl 0x5605abe8e4c0 <col:17, col:33> col:33 used __o 'exception_ptr &&'
|   | | | `-CompoundStmt 0x5605abe90d98 <line:141:7, line:144:7>
|   | | |   |-ExprWithCleanups 0x5605abe90d48 <line:142:9, col:68> 'void'
|   | | |   | `-CXXMemberCallExpr 0x5605abe90d20 <col:9, col:68> 'void'
|   | | |   |   |-MemberExpr 0x5605abe90cc8 <col:9, col:58> '<bound member function type>' .swap 0x5605abe90180
|   | | |   |   | `-MaterializeTemporaryExpr 0x5605abe90cb0 <col:9, col:56> 'exception_ptr':'std::__exception_ptr::exception_ptr' xvalue
|   | | |   |   |   `-CXXFunctionalCastExpr 0x5605abe90c88 <col:9, col:56> 'exception_ptr':'std::__exception_ptr::exception_ptr' functional cast to exception_ptr <ConstructorConversion>
|   | | |   |   |     `-CXXBindTemporaryExpr 0x5605abe90c68 <col:9, col:56> 'exception_ptr':'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5605abe90c68)
|   | | |   |   |       `-CXXConstructExpr 0x5605abe90c30 <col:9, col:56> 'exception_ptr':'std::__exception_ptr::exception_ptr' 'void (exception_ptr &&) noexcept'
|   | | |   |   |         `-CXXStaticCastExpr 0x5605abe90bc8 <col:23, col:55> 'exception_ptr':'std::__exception_ptr::exception_ptr' xvalue static_cast<exception_ptr &&> <NoOp>
|   | | |   |   |           `-DeclRefExpr 0x5605abe90b90 <col:52> 'exception_ptr':'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe8e4c0 '__o' 'exception_ptr &&'
|   | | |   |   `-UnaryOperator 0x5605abe90d08 <col:63, col:64> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
|   | | |   |     `-CXXThisExpr 0x5605abe90cf8 <col:64> 'std::__exception_ptr::exception_ptr *' this
|   | | |   `-ReturnStmt 0x5605abe90d88 <line:143:9, col:17>
|   | | |     `-UnaryOperator 0x5605abe90d70 <col:16, col:17> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
|   | | |       `-CXXThisExpr 0x5605abe90d60 <col:17> 'std::__exception_ptr::exception_ptr *' this
|   | | |-CXXDestructorDecl 0x5605abe8e728 <line:147:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:147:7 used ~exception_ptr 'void () noexcept'
|   | | |-CXXMethodDecl 0x5605abe90180 <line:149:7, /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:218:33> /usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/exception_ptr.h:150:7 used swap 'void (exception_ptr &) noexcept'
|   | | | `-ParmVarDecl 0x5605abe8e818 <col:12, col:25> col:26 'exception_ptr &'
|   | | |-CXXConversionDecl 0x5605abe90288 <line:161:7, line:162:37> line:161:16 used operator bool 'bool () const noexcept' implicit-inline
|   | | | `-CompoundStmt 0x5605abe90e38 <line:162:7, col:37>
|   | | |   `-ReturnStmt 0x5605abe90e28 <col:9, col:16>
|   | | |     `-ImplicitCastExpr 0x5605abe90e10 <col:16> 'bool' <PointerToBoolean>
|   | | |       `-ImplicitCastExpr 0x5605abe90df8 <col:16> 'void *' <LValueToRValue>
|   | | |         `-MemberExpr 0x5605abe90dc8 <col:16> 'void *const' lvalue ->_M_exception_object 0x5605abe8cc28
|   | | |           `-CXXThisExpr 0x5605abe90db8 <col:16> 'const std::__exception_ptr::exception_ptr *' implicit this
|   | | |-FriendDecl 0x5605abe90648 <line:167:7, line:168:79> col:7
|   | | | `-FunctionDecl 0x5605abe90560 parent 0x5605abe8c8e8 <line:167:7, line:168:79> col:7 constexpr friend_undeclared operator== 'bool (const exception_ptr &, const exception_ptr &) noexcept' default implicit-inline
|   | | |   |-ParmVarDecl 0x5605abe90378 <col:18, col:37> col:38 'const exception_ptr &'
|   | | |   `-ParmVarDecl 0x5605abe90400 <col:40, col:59> col:60 'const exception_ptr &'
|   | | `-CXXMethodDecl 0x5605abe907a0 <line:181:7, line:183:27> line:182:7 __cxa_exception_type 'const class std::type_info *() const noexcept'
|   | |   `-PureAttr 0x5605abe90848 <line:183:18>
|   | |-CXXConstructorDecl 0x5605abe90eb8 parent 0x5605abe8ca60 prev 0x5605abe8da78 <line:187:5, line:190:7> line:188:20 referenced exception_ptr 'void () noexcept' inline
|   | | |-CXXCtorInitializer Field 0x5605abe8cc28 '_M_exception_object' 'void *'
|   | | | `-ImplicitCastExpr 0x5605abe90fe8 <line:189:27> 'void *' <NullToPointer>
|   | | |   `-IntegerLiteral 0x5605abe90fa8 <col:27> 'int' 0
|   | | `-CompoundStmt 0x5605abe91028 <line:190:5, col:7>
|   | |-CXXConstructorDecl 0x5605abe91130 parent 0x5605abe8ca60 prev 0x5605abe8dd00 <line:193:5, line:200:5> line:194:20 used exception_ptr 'void (const exception_ptr &) noexcept' inline
|   | | |-ParmVarDecl 0x5605abe91078 <col:34, col:55> col:55 used __other 'const exception_ptr &'
|   | | |-CXXCtorInitializer Field 0x5605abe8cc28 '_M_exception_object' 'void *'
|   | | | `-ImplicitCastExpr 0x5605abe91298 <line:196:27, col:35> 'void *' <LValueToRValue>
|   | | |   `-MemberExpr 0x5605abe91248 <col:27, col:35> 'void *const' lvalue ._M_exception_object 0x5605abe8cc28
|   | | |     `-DeclRefExpr 0x5605abe91228 <col:27> 'const exception_ptr':'const std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe91078 '__other' 'const exception_ptr &'
|   | | `-CompoundStmt 0x5605abe91458 <line:197:5, line:200:5>
|   | |   `-IfStmt 0x5605abe91438 <line:198:7, line:199:12>
|   | |     |-ImplicitCastExpr 0x5605abe91378 <line:198:11> 'bool' <PointerToBoolean>
|   | |     | `-ImplicitCastExpr 0x5605abe91360 <col:11> 'void *' <LValueToRValue>
|   | |     |   `-MemberExpr 0x5605abe91330 <col:11> 'void *' lvalue ->_M_exception_object 0x5605abe8cc28
|   | |     |     `-CXXThisExpr 0x5605abe91320 <col:11> 'std::__exception_ptr::exception_ptr *' implicit this
|   | |     `-CXXMemberCallExpr 0x5605abe91418 <line:199:2, col:12> 'void'
|   | |       `-MemberExpr 0x5605abe913e8 <col:2> '<bound member function type>' ->_M_addref 0x5605abe8ce98
|   | |         `-CXXThisExpr 0x5605abe913d8 <col:2> 'std::__exception_ptr::exception_ptr *' implicit this
|   | |-CXXDestructorDecl 0x5605abe914d0 parent 0x5605abe8ca60 prev 0x5605abe8e728 <line:203:5, line:208:5> line:204:20 used ~exception_ptr 'void () noexcept' inline
|   | | `-CompoundStmt 0x5605abe91748 <line:205:5, line:208:5>
|   | |   `-IfStmt 0x5605abe91728 <line:206:7, line:207:13>
|   | |     |-ImplicitCastExpr 0x5605abe91668 <line:206:11> 'bool' <PointerToBoolean>
|   | |     | `-ImplicitCastExpr 0x5605abe91650 <col:11> 'void *' <LValueToRValue>
|   | |     |   `-MemberExpr 0x5605abe91620 <col:11> 'void *' lvalue ->_M_exception_object 0x5605abe8cc28
|   | |     |     `-CXXThisExpr 0x5605abe91610 <col:11> 'std::__exception_ptr::exception_ptr *' implicit this
|   | |     `-CXXMemberCallExpr 0x5605abe91708 <line:207:2, col:13> 'void'
|   | |       `-MemberExpr 0x5605abe916d8 <col:2> '<bound member function type>' ->_M_release 0x5605abe8cf88
|   | |         `-CXXThisExpr 0x5605abe916c8 <col:2> 'std::__exception_ptr::exception_ptr *' implicit this
|   | |-CXXMethodDecl 0x5605abe91850 parent 0x5605abe8ca60 prev 0x5605abe8e3d8 <line:211:5, line:216:5> line:212:20 operator= 'exception_ptr &(const exception_ptr &) noexcept' inline
|   | | |-ParmVarDecl 0x5605abe91790 <col:30, col:51> col:51 used __other 'const exception_ptr &'
|   | | `-CompoundStmt 0x5605abe91ae8 <line:213:5, line:216:5>
|   | |   |-ExprWithCleanups 0x5605abe91a98 <line:214:7, col:40> 'void'
|   | |   | `-CXXMemberCallExpr 0x5605abe91a70 <col:7, col:40> 'void'
|   | |   |   |-MemberExpr 0x5605abe91a18 <col:7, col:30> '<bound member function type>' .swap 0x5605abe90180
|   | |   |   | `-MaterializeTemporaryExpr 0x5605abe91a00 <col:7, col:28> 'exception_ptr':'std::__exception_ptr::exception_ptr' xvalue
|   | |   |   |   `-CXXFunctionalCastExpr 0x5605abe919d8 <col:7, col:28> 'exception_ptr':'std::__exception_ptr::exception_ptr' functional cast to exception_ptr <ConstructorConversion>
|   | |   |   |     `-CXXBindTemporaryExpr 0x5605abe919b8 <col:7, col:28> 'exception_ptr':'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5605abe919b8)
|   | |   |   |       `-CXXConstructExpr 0x5605abe91980 <col:7, col:28> 'exception_ptr':'std::__exception_ptr::exception_ptr' 'void (const exception_ptr &) noexcept'
|   | |   |   |         `-DeclRefExpr 0x5605abe91960 <col:21> 'const exception_ptr':'const std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe91790 '__other' 'const exception_ptr &'
|   | |   |   `-UnaryOperator 0x5605abe91a58 <col:35, col:36> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
|   | |   |     `-CXXThisExpr 0x5605abe91a48 <col:36> 'std::__exception_ptr::exception_ptr *' this
|   | |   `-ReturnStmt 0x5605abe91ad8 <line:215:7, col:15>
|   | |     `-UnaryOperator 0x5605abe91ac0 <col:14, col:15> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
|   | |       `-CXXThisExpr 0x5605abe91ab0 <col:15> 'std::__exception_ptr::exception_ptr *' this
|   | |-CXXMethodDecl 0x5605abe91bf0 parent 0x5605abe8ca60 prev 0x5605abe90180 <line:219:5, line:225:5> line:220:20 used swap 'void (exception_ptr &) noexcept' inline
|   | | |-ParmVarDecl 0x5605abe91b38 <col:25, col:40> col:40 used __other 'exception_ptr &'
|   | | `-CompoundStmt 0x5605abe91fb8 <line:221:5, line:225:5>
|   | |   |-DeclStmt 0x5605abe91de8 <line:222:7, col:40>
|   | |   | `-VarDecl 0x5605abe91d10 <col:7, col:21> col:13 used __tmp 'void *' cinit
|   | |   |   `-ImplicitCastExpr 0x5605abe91db8 <col:21> 'void *' <LValueToRValue>
|   | |   |     `-MemberExpr 0x5605abe91d88 <col:21> 'void *' lvalue ->_M_exception_object 0x5605abe8cc28
|   | |   |       `-CXXThisExpr 0x5605abe91d78 <col:21> 'std::__exception_ptr::exception_ptr *' implicit this
|   | |   |-BinaryOperator 0x5605abe91ef0 <line:223:7, col:37> 'void *' lvalue '='
|   | |   | |-MemberExpr 0x5605abe91e58 <col:7> 'void *' lvalue ->_M_exception_object 0x5605abe8cc28
|   | |   | | `-CXXThisExpr 0x5605abe91e48 <col:7> 'std::__exception_ptr::exception_ptr *' implicit this
|   | |   | `-ImplicitCastExpr 0x5605abe91ed8 <col:29, col:37> 'void *' <LValueToRValue>
|   | |   |   `-MemberExpr 0x5605abe91ea8 <col:29, col:37> 'void *' lvalue ._M_exception_object 0x5605abe8cc28
|   | |   |     `-DeclRefExpr 0x5605abe91e88 <col:29> 'exception_ptr':'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe91b38 '__other' 'exception_ptr &'
|   | |   `-BinaryOperator 0x5605abe91f98 <line:224:7, col:37> 'void *' lvalue '='
|   | |     |-MemberExpr 0x5605abe91f30 <col:7, col:15> 'void *' lvalue ._M_exception_object 0x5605abe8cc28
|   | |     | `-DeclRefExpr 0x5605abe91f10 <col:7> 'exception_ptr':'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe91b38 '__other' 'exception_ptr &'
|   | |     `-ImplicitCastExpr 0x5605abe91f80 <col:37> 'void *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x5605abe91f60 <col:37> 'void *' lvalue Var 0x5605abe91d10 '__tmp' 'void *'
|   | |-FunctionDecl 0x5605abe921d8 <line:228:5, line:230:26> line:229:5 swap 'void (exception_ptr &, exception_ptr &)' inline
|   | | |-ParmVarDecl 0x5605abe92000 <col:10, col:25> col:25 used __lhs 'exception_ptr &'
|   | | |-ParmVarDecl 0x5605abe92088 <col:32, col:47> col:47 used __rhs 'exception_ptr &'
|   | | `-CompoundStmt 0x5605abe92340 <line:230:5, col:26>
|   | |   `-CXXMemberCallExpr 0x5605abe92318 <col:7, col:23> 'void'
|   | |     |-MemberExpr 0x5605abe922c8 <col:7, col:13> '<bound member function type>' .swap 0x5605abe91bf0
|   | |     | `-DeclRefExpr 0x5605abe922a8 <col:7> 'exception_ptr':'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe92000 '__lhs' 'exception_ptr &'
|   | |     `-DeclRefExpr 0x5605abe922f8 <col:18> 'exception_ptr':'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5605abe92088 '__rhs' 'exception_ptr &'
|   | `-FunctionTemplateDecl 0x5605abe92580 <line:233:5, line:237:41> line:236:7 __dest_thunk
|   |   |-TemplateTypeParmDecl 0x5605abe92360 <line:233:14, col:23> col:23 referenced typename depth 0 index 0 _Ex
|   |   `-FunctionDecl 0x5605abe924d0 <line:235:7, line:237:41> line:236:7 __dest_thunk 'void (void *)' inline
|   |     |-ParmVarDecl 0x5605abe92420 <col:20, col:26> col:26 referenced __x 'void *'
|   |     `-CompoundStmt 0x5605abe92770 <line:237:7, col:41>
|   |       `-CallExpr 0x5605abe92750 <col:9, col:38> 'void'
|   |         `-CXXPseudoDestructorExpr 0x5605abe92700 <col:9, col:34> '<bound member function type>'
|   |           `-CXXStaticCastExpr 0x5605abe926c0 <col:9, col:30> '_Ex *' static_cast<_Ex *> <Dependent>
|   |             `-DeclRefExpr 0x5605abe92660 <col:27> 'void *' lvalue ParmVar 0x5605abe92420 '__x' 'void *'
|   |-UsingDecl 0x5605abe927c8 <line:242:3, col:26> col:26 __exception_ptr::swap
|   | `-NestedNameSpecifier Namespace 0x5605abe8c8e8 '__exception_ptr'
|   |-UsingShadowDecl 0x5605abe92838 <col:26> col:26 implicit Function 0x5605abe921d8 'swap' 'void (exception_ptr &, exception_ptr &)'
|   `-FunctionTemplateDecl 0x5605abe92b20 prev 0x5605abe8d8d8 <line:280:3, line:284:31> line:283:5 make_exception_ptr
|     |-TemplateTypeParmDecl 0x5605abe928b8 <line:280:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
|     `-FunctionDecl 0x5605abe92a70 prev 0x5605abe8d7e0 <line:281:5, line:284:31> line:283:5 make_exception_ptr 'exception_ptr (_Ex) noexcept' inline
|       |-ParmVarDecl 0x5605abe92978 <col:24> col:27 '_Ex'
|       |-CompoundStmt 0x5605abe92ca0 <line:284:5, col:31>
|       | `-ReturnStmt 0x5605abe92c90 <col:7, col:28>
|       |   `-ExprWithCleanups 0x5605abe92c78 <col:14, col:28> 'exception_ptr':'std::__exception_ptr::exception_ptr'
|       |     `-CXXBindTemporaryExpr 0x5605abe92c58 <col:14, col:28> 'exception_ptr':'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5605abe92c58)
|       |       `-CXXTemporaryObjectExpr 0x5605abe92c20 <col:14, col:28> 'exception_ptr':'std::__exception_ptr::exception_ptr' 'void () noexcept'
|       `-AlwaysInlineAttr 0x5605abe92b80 <line:281:21> always_inline
|-LinkageSpecDecl 0x5605abe92ce0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/nested_exception.h:40:1, line:240:1> line:40:8 C++
| `-NamespaceDecl 0x5605abe92d58 prev 0x5605abe8bcf0 <line:42:1, line:238:1> line:42:11 std
|   |-original Namespace 0x5605abaf4398 'std'
|   |-VisibilityAttr 0x5605abe92dc8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/x86_64-pc-linux-gnu/bits/c++config.h:72:49, col:67> Default
|   |-CXXRecordDecl 0x5605abe92e28 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/nested_exception.h:59:3, line:87:3> line:59:9 referenced class nested_exception definition
|   | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
|   | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|   | | |-MoveConstructor needs_overload_resolution
|   | | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
|   | | |-MoveAssignment needs_overload_resolution
|   | | `-Destructor non_trivial user_declared needs_overload_resolution
|   | |-CXXRecordDecl 0x5605abe92f60 <col:3, col:9> col:9 implicit referenced class nested_exception
|   | |-FieldDecl 0x5605abe93020 <line:61:5, col:19> col:19 referenced _M_ptr 'exception_ptr':'std::__exception_ptr::exception_ptr'
|   | |-AccessSpecDecl 0x5605abe93078 <line:63:3, col:9> col:3 public
|   | |-CXXConstructorDecl 0x5605abe93118 <line:65:5, col:65> col:5 nested_exception 'void () noexcept' implicit-inline
|   | | |-CXXCtorInitializer Field 0x5605abe93020 '_M_ptr' 'exception_ptr':'std::__exception_ptr::exception_ptr'
|   | | | `-ExprWithCleanups 0x5605abe93c60 <col:42, col:60> 'exception_ptr':'std::__exception_ptr::exception_ptr'
|   | | |   `-CXXBindTemporaryExpr 0x5605abe93c20 <col:42, col:60> 'exception_ptr':'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5605abe93c20)
|   | | |     `-CallExpr 0x5605abe93bf8 <col:42, col:60> 'exception_ptr':'std::__exception_ptr::exception_ptr'
|   | | |       `-ImplicitCastExpr 0x5605abe93be0 <col:42> 'exception_ptr (*)() noexcept' <FunctionToPointerDecay>
|   | | |         `-DeclRefExpr 0x5605abe93b58 <col:42> 'exception_ptr () noexcept' lvalue Function 0x5605abe8c200 'current_exception' 'exception_ptr () noexcept'
|   | | `-CompoundStmt 0x5605abe93ca0 <col:63, col:65>
|   | |-CXXConstructorDecl 0x5605abe933c0 <line:67:5, col:64> col:5 constexpr nested_exception 'void (const nested_exception &) noexcept' default implicit-inline
|   | | `-ParmVarDecl 0x5605abe93290 <col:22, col:44> col:45 'const nested_exception &'
|   | |-CXXMethodDecl 0x5605abe93658 <line:69:5, col:75> col:23 constexpr operator= 'nested_exception &(const nested_exception &) noexcept' default implicit-inline
|   | | `-ParmVarDecl 0x5605abe934c0 <col:33, col:55> col:56 'const nested_exception &'
|   | |-CXXDestructorDecl 0x5605abe93778 <line:71:5, col:33> col:13 ~nested_exception 'void () noexcept' virtual
|   | |-CXXMethodDecl 0x5605abe938a8 <line:75:5, line:81:5> line:76:5 referenced rethrow_nested 'void () const' implicit-inline
|   | | |-CompoundStmt 0x5605abe940b0 <line:77:5, line:81:5>
|   | | | |-IfStmt 0x5605abe93fc0 <line:78:7, line:79:26>
|   | | | | |-ImplicitCastExpr 0x5605abe93df0 <line:78:11> 'bool' <UserDefinedConversion>
|   | | | | | `-CXXMemberCallExpr 0x5605abe93da0 <col:11> 'bool'
|   | | | | |   `-MemberExpr 0x5605abe93d70 <col:11> '<bound member function type>' .operator bool 0x5605abe90288
|   | | | | |     `-MemberExpr 0x5605abe93d08 <col:11> 'const exception_ptr':'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x5605abe93020
|   | | | | |       `-CXXThisExpr 0x5605abe93cf8 <col:11> 'const std::nested_exception *' implicit this
|   | | | | `-ExprWithCleanups 0x5605abe93fa8 <line:79:2, col:26> 'void'
|   | | | |   `-CallExpr 0x5605abe93f28 <col:2, col:26> 'void'
|   | | | |     |-ImplicitCastExpr 0x5605abe93f10 <col:2> 'void (*)(exception_ptr) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | | |     | `-DeclRefExpr 0x5605abe93e90 <col:2> 'void (exception_ptr) __attribute__((noreturn))' lvalue Function 0x5605abe8c818 'rethrow_exception' 'void (exception_ptr) __attribute__((noreturn))'
|   | | | |     `-CXXBindTemporaryExpr 0x5605abe93f88 <col:20> 'exception_ptr':'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5605abe93f88)
|   | | | |       `-CXXConstructExpr 0x5605abe93f50 <col:20> 'exception_ptr':'std::__exception_ptr::exception_ptr' 'void (const exception_ptr &) noexcept'
|   | | | |         `-MemberExpr 0x5605abe93e60 <col:20> 'const exception_ptr':'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x5605abe93020
|   | | | |           `-CXXThisExpr 0x5605abe93e50 <col:20> 'const std::nested_exception *' implicit this
|   | | | `-CallExpr 0x5605abe94090 <line:80:7, col:22> 'void'
|   | | |   `-ImplicitCastExpr 0x5605abe94078 <col:7, col:12> 'void (*)() __attribute__((noreturn)) noexcept' <FunctionToPointerDecay>
|   | | |     `-DeclRefExpr 0x5605abe94048 <col:7, col:12> 'void () __attribute__((noreturn)) noexcept' lvalue Function 0x5605abe60e40 'terminate' 'void () __attribute__((noreturn)) noexcept'
|   | | |       `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
|   | | `-CXX11NoReturnAttr 0x5605abe93950 <line:74:7> noreturn
|   | `-CXXMethodDecl 0x5605abe93a50 <line:84:5, line:86:22> line:85:5 nested_ptr 'exception_ptr () const noexcept' implicit-inline
|   |   `-CompoundStmt 0x5605abe96b60 <line:86:5, col:22>
|   |     `-ReturnStmt 0x5605abe96b50 <col:7, col:14>
|   |       `-CXXConstructExpr 0x5605abe96b20 <col:14> 'exception_ptr':'std::__exception_ptr::exception_ptr' 'void (const exception_ptr &) noexcept'
|   |         `-MemberExpr 0x5605abe940e0 <col:14> 'const exception_ptr':'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x5605abe93020
|   |           `-CXXThisExpr 0x5605abe940d0 <col:14> 'const std::nested_exception *' implicit this
|   |-ClassTemplateDecl 0x5605abe96cd8 <line:91:3, line:101:5> line:92:12 _Nested_exception
|   | |-TemplateTypeParmDecl 0x5605abe96b80 <line:91:12, col:21> col:21 referenced typename depth 0 index 0 _Except
|   | `-CXXRecordDecl 0x5605abe96c28 <line:92:5, line:101:5> line:92:12 struct _Nested_exception definition
|   |   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   |   | |-DefaultConstructor defaulted_is_constexpr
|   |   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   |   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   |   | |-CopyAssignment simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   |   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   |   | `-Destructor simple non_trivial constexpr needs_implicit needs_overload_resolution
|   |   |-public '_Except'
|   |   |-public 'nested_exception':'std::nested_exception'
|   |   |-CXXRecordDecl 0x5605abe97010 <col:5, col:12> col:12 implicit referenced struct _Nested_exception
|   |   |-CXXConstructorDecl 0x5605abe97278 <line:94:7, line:96:9> line:94:16 _Nested_exception<_Except> 'void (const _Except &)' implicit-inline
|   |   | |-ParmVarDecl 0x5605abe97108 <col:34, col:49> col:49 referenced __ex 'const _Except &'
|   |   | |-CXXCtorInitializer '_Except'
|   |   | | `-ParenListExpr 0x5605abe975e0 <line:95:16, col:21> 'NULL TYPE'
|   |   | |   `-DeclRefExpr 0x5605abe975c0 <col:17> 'const _Except' lvalue ParmVar 0x5605abe97108 '__ex' 'const _Except &'
|   |   | `-CompoundStmt 0x5605abe97668 <line:96:7, col:9>
|   |   `-CXXConstructorDecl 0x5605abe974c8 <line:98:7, line:100:9> line:98:16 _Nested_exception<_Except> 'void (_Except &&)' implicit-inline
|   |     |-ParmVarDecl 0x5605abe97398 <col:34, col:44> col:44 referenced __ex '_Except &&'
|   |     |-CXXCtorInitializer '_Except'
|   |     | `-ParenListExpr 0x5605abe976d8 <line:99:16, col:45> 'NULL TYPE'
|   |     |   `-CXXStaticCastExpr 0x5605abe976a8 <col:17, col:44> '_Except' xvalue static_cast<_Except &&> <Dependent>
|   |     |     `-DeclRefExpr 0x5605abe97678 <col:40> '_Except' lvalue ParmVar 0x5605abe97398 '__ex' '_Except &&'
|   |     `-CompoundStmt 0x5605abe97730 <line:100:7, col:9>
|   |-FunctionTemplateDecl 0x5605abe979d8 <line:145:3, line:167:5> line:148:5 throw_with_nested
|   | |-TemplateTypeParmDecl 0x5605abe97748 <line:145:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
|   | `-FunctionDecl 0x5605abe97928 <line:147:5, line:167:5> line:148:5 throw_with_nested 'void (_Tp &&)' inline
|   |   |-ParmVarDecl 0x5605abe97838 <col:23, col:29> col:29 referenced __t '_Tp &&'
|   |   |-CompoundStmt 0x5605abe98920 <line:149:5, line:167:5>
|   |   | |-DeclStmt 0x5605abe97c88 <line:150:7, col:44>
|   |   | | `-TypeAliasDecl 0x5605abe97c28 <col:7, col:40> col:13 referenced _Up 'typename decay<_Tp>::type'
|   |   | |   `-DependentNameType 0x5605abe97bb0 'typename decay<_Tp>::type' dependent
|   |   | |-DeclStmt 0x5605abe98138 <line:151:7, line:152:66>
|   |   | | `-TypeAliasDecl 0x5605abe980d8 <line:151:7, line:152:65> line:151:13 referenced _CopyConstructible '__and_<is_copy_constructible<_Up>, is_move_constructible<_Up>>'
|   |   | |   `-ElaboratedType 0x5605abe98050 '__and_<is_copy_constructible<_Up>, is_move_constructible<_Up>>' sugar dependent
|   |   | |     `-TemplateSpecializationType 0x5605abe97ff0 '__and_<is_copy_constructible<_Up>, is_move_constructible<_Up>>' dependent
|   |   | |       |-name: '__and_':'std::__and_' qualified
|   |   | |       | `-ClassTemplateDecl 0x5605abb80208 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:197:3, line:200:7> line:198:12 __and_
|   |   | |       |-TemplateArgument type 'is_copy_constructible<_Up>':'is_copy_constructible<typename decay<type-parameter-0-0>::type>'
|   |   | |       | `-ElaboratedType 0x5605abe97db0 'is_copy_constructible<_Up>' sugar dependent
|   |   | |       |   `-TemplateSpecializationType 0x5605abe97d60 'is_copy_constructible<_Up>' dependent
|   |   | |       |     |-name: 'is_copy_constructible':'std::is_copy_constructible' qualified
|   |   | |       |     | `-ClassTemplateDecl 0x5605abbd5658 <line:1145:3, line:1151:5> line:1146:12 is_copy_constructible
|   |   | |       |     `-TemplateArgument type '_Up':'typename decay<type-parameter-0-0>::type'
|   |   | |       |       `-ElaboratedType 0x5605abe97cd0 '_Up' sugar dependent
|   |   | |       |         `-TypedefType 0x5605abe97ca0 '_Up' sugar dependent
|   |   | |       |           |-TypeAlias 0x5605abe97c28 '_Up'
|   |   | |       |           `-DependentNameType 0x5605abe97bb0 'typename decay<_Tp>::type' dependent
|   |   | |       `-TemplateArgument type 'is_move_constructible<_Up>':'is_move_constructible<typename decay<type-parameter-0-0>::type>'
|   |   | |         `-ElaboratedType 0x5605abe97ed0 'is_move_constructible<_Up>' sugar dependent
|   |   | |           `-TemplateSpecializationType 0x5605abe97e80 'is_move_constructible<_Up>' dependent
|   |   | |             |-name: 'is_move_constructible':'std::is_move_constructible' qualified
|   |   | |             | `-ClassTemplateDecl 0x5605abbd7a98 <line:1167:3, line:1173:5> line:1168:12 is_move_constructible
|   |   | |             `-TemplateArgument type '_Up':'typename decay<type-parameter-0-0>::type'
|   |   | |               `-ElaboratedType 0x5605abe97cd0 '_Up' sugar dependent
|   |   | |                 `-TypedefType 0x5605abe97ca0 '_Up' sugar dependent
|   |   | |                   |-TypeAlias 0x5605abe97c28 '_Up'
|   |   | |                   `-DependentNameType 0x5605abe97bb0 'typename decay<_Tp>::type' dependent
|   |   | |-DeclStmt 0x5605abe982a0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/bits/nested_exception.h:153:7, line:154:59>
|   |   | | `-StaticAssertDecl 0x5605abe98260 <line:153:7, line:154:58> line:153:7
|   |   | |   |-DependentScopeDeclRefExpr 0x5605abe981d0 <col:21, col:41> '<dependent type>' lvalue
|   |   | |   | `-NestedNameSpecifier TypeSpec '_CopyConstructible':'__and_<is_copy_constructible<_Up>, is_move_constructible<_Up>>'
|   |   | |   `-StringLiteral 0x5605abe98208 <line:154:4> 'NULL TYPE' lvalue "throw_with_nested argument must be CopyConstructible"
|   |   | |-IfStmt 0x5605abe987d8 <line:157:7, line:160:57> constexpr
|   |   | | |-UnresolvedLookupExpr 0x5605abe982c8 <line:157:21, col:35> '<dependent type>' lvalue (no ADL) = 'is_class_v' 0x5605abcc5ec8
|   |   | | | `-TemplateArgument type '_Up':'typename decay<type-parameter-0-0>::type'
|   |   | | |   `-ElaboratedType 0x5605abe97cd0 '_Up' sugar dependent
|   |   | | |     `-TypedefType 0x5605abe97ca0 '_Up' sugar dependent
|   |   | | |       |-TypeAlias 0x5605abe97c28 '_Up'
|   |   | | |       `-DependentNameType 0x5605abe97bb0 'typename decay<_Tp>::type' dependent
|   |   | | `-IfStmt 0x5605abe987b8 <line:158:2, line:160:57> constexpr
|   |   | |   |-UnaryOperator 0x5605abe983e0 <line:158:16, col:31> '<dependent type>' prefix '!' cannot overflow
|   |   | |   | `-UnresolvedLookupExpr 0x5605abe98368 <col:17, col:31> '<dependent type>' lvalue (no ADL) = 'is_final_v' 0x5605abcc94f8
|   |   | |   |   `-TemplateArgument type '_Up':'typename decay<type-parameter-0-0>::type'
|   |   | |   |     `-ElaboratedType 0x5605abe97cd0 '_Up' sugar dependent
|   |   | |   |       `-TypedefType 0x5605abe97ca0 '_Up' sugar dependent
|   |   | |   |         |-TypeAlias 0x5605abe97c28 '_Up'
|   |   | |   |         `-DependentNameType 0x5605abe97bb0 'typename decay<_Tp>::type' dependent
|   |   | |   `-IfStmt 0x5605abe98798 <line:159:4, line:160:57> constexpr
|   |   | |     |-UnaryOperator 0x5605abe984c8 <line:159:18, col:53> '<dependent type>' prefix '!' cannot overflow
|   |   | |     | `-UnresolvedLookupExpr 0x5605abe98430 <col:19, col:53> '<dependent type>' lvalue (no ADL) = 'is_base_of_v' 0x5605abcd71b0
|   |   | |     |   |-TemplateArgument type 'nested_exception':'std::nested_exception'
|   |   | |     |   | `-ElaboratedType 0x5605abe931e0 'nested_exception' sugar
|   |   | |     |   |   `-RecordType 0x5605abe92ed0 'std::nested_exception'
|   |   | |     |   |     `-CXXRecord 0x5605abe92e28 'nested_exception'
|   |   | |     |   `-TemplateArgument type '_Up':'typename decay<type-parameter-0-0>::type'
|   |   | |     |     `-ElaboratedType 0x5605abe97cd0 '_Up' sugar dependent
|   |   | |     |       `-TypedefType 0x5605abe97ca0 '_Up' sugar dependent
|   |   | |     |         |-TypeAlias 0x5605abe97c28 '_Up'
|   |   | |     |         `-DependentNameType 0x5605abe97bb0 'typename decay<_Tp>::type' dependent
|   |   | |     `-CXXThrowExpr 0x5605abe98780 <line:160:6, col:57> 'void'
|   |   | |       `-CXXUnresolvedConstructExpr 0x5605abe98758 <col:12, col:57> '_Nested_exception<_Up>' '_Nested_exception<_Up>' list
|   |   | |         `-InitListExpr 0x5605abe98710 <col:34, col:57> 'void'
|   |   | |           `-CallExpr 0x5605abe986e8 <col:35, col:56> '<dependent type>'
|   |   | |             |-UnresolvedLookupExpr 0x5605abe98648 <col:35, col:51> '<dependent type>' lvalue (no ADL) = 'forward' 0x5605abe81360 0x5605abe81a00
|   |   | |             | `-TemplateArgument type '_Tp':'type-parameter-0-0'
|   |   | |             |   `-TemplateTypeParmType 0x5605abe977a0 '_Tp' dependent depth 0 index 0
|   |   | |             |     `-TemplateTypeParm 0x5605abe97748 '_Tp'
|   |   | |             `-DeclRefExpr 0x5605abe986c8 <col:53> '_Tp' lvalue ParmVar 0x5605abe97838 '__t' '_Tp &&'
|   |   | `-CXXThrowExpr 0x5605abe98908 <line:161:7, col:34> 'void'
|   |   |   `-CallExpr 0x5605abe988e0 <col:13, col:34> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5605abe98840 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'forward' 0x5605abe81360 0x5605abe81a00
|   |   |     | `-TemplateArgument type '_Tp':'type-parameter-0-0'
|   |   |     |   `-TemplateTypeParmType 0x5605abe977a0 '_Tp' dependent depth 0 index 0
|   |   |     |     `-TemplateTypeParm 0x5605abe97748 '_Tp'
|   |   |     `-DeclRefExpr 0x5605abe988c0 <col:31> '_Tp' lvalue ParmVar 0x5605abe97838 '__t' '_Tp &&'
|   |   `-CXX11NoReturnAttr 0x5605abe97a38 <line:146:7> noreturn
|   `-FunctionTemplateDecl 0x5605abe98be8 <line:203:3, line:235:5> line:208:5 rethrow_if_nested
|     |-TemplateTypeParmDecl 0x5605abe98960 <line:203:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
|     `-FunctionDecl 0x5605abe98b38 <line:207:5, line:235:5> line:208:5 rethrow_if_nested 'void (const _Ex &)' inline
|       |-ParmVarDecl 0x5605abe98a48 <col:23, col:34> col:34 referenced __ex 'const _Ex &'
|       |-CompoundStmt 0x5605abe996d8 <line:209:5, line:235:5>
|       | |-DeclStmt 0x5605abe98e38 <line:210:7, col:51>
|       | | `-VarDecl 0x5605abe98d68 <col:7, col:50> col:18 referenced __ptr 'const _Ex *' cinit
|       | |   `-CallExpr 0x5605abe98e10 <col:26, col:50> '<dependent type>'
|       | |     |-DeclRefExpr 0x5605abe98dd0 <col:26> '<builtin fn type>' Function 0x5605abe80c28 '__builtin_addressof' 'void *(void &) noexcept'
|       | |     `-DeclRefExpr 0x5605abe98df0 <col:46> 'const _Ex' lvalue ParmVar 0x5605abe98a48 '__ex' 'const _Ex &'
|       | `-IfStmt 0x5605abe996a8 <line:223:7, line:233:27> has_else constexpr
|       |   |-UnaryOperator 0x5605abe98ef0 <line:223:21, col:42> '<dependent type>' prefix '!' cannot overflow
|       |   | `-UnresolvedLookupExpr 0x5605abe98e78 <col:22, col:42> '<dependent type>' lvalue (no ADL) = 'is_polymorphic_v' 0x5605abcc9158
|       |   |   `-TemplateArgument type '_Ex':'type-parameter-0-0'
|       |   |     `-TemplateTypeParmType 0x5605abe989b0 '_Ex' dependent depth 0 index 0
|       |   |       `-TemplateTypeParm 0x5605abe98960 '_Ex'
|       |   |-ReturnStmt 0x5605abe98f08 <line:224:2>
|       |   `-IfStmt 0x5605abe99678 <line:225:12, line:233:27> has_else constexpr
|       |     |-BinaryOperator 0x5605abe99108 <line:225:26, line:226:49> '<dependent type>' '&&'
|       |     | |-UnresolvedLookupExpr 0x5605abe98f38 <line:225:26, col:60> '<dependent type>' lvalue (no ADL) = 'is_base_of_v' 0x5605abcd71b0
|       |     | | |-TemplateArgument type 'nested_exception':'std::nested_exception'
|       |     | | | `-ElaboratedType 0x5605abe931e0 'nested_exception' sugar
|       |     | | |   `-RecordType 0x5605abe92ed0 'std::nested_exception'
|       |     | | |     `-CXXRecord 0x5605abe92e28 'nested_exception'
|       |     | | `-TemplateArgument type '_Ex':'type-parameter-0-0'
|       |     | |   `-TemplateTypeParmType 0x5605abe989b0 '_Ex' dependent depth 0 index 0
|       |     | |     `-TemplateTypeParm 0x5605abe98960 '_Ex'
|       |     | `-UnaryOperator 0x5605abe990f0 <line:226:8, col:49> '<dependent type>' prefix '!' cannot overflow
|       |     |   `-UnresolvedLookupExpr 0x5605abe99058 <col:9, col:49> '<dependent type>' lvalue (no ADL) = 'is_convertible_v' 0x5605abcd7430
|       |     |     |-TemplateArgument type '_Ex *':'type-parameter-0-0 *'
|       |     |     | `-PointerType 0x5605abe98fd0 '_Ex *' dependent
|       |     |     |   `-TemplateTypeParmType 0x5605abe989b0 '_Ex' dependent depth 0 index 0
|       |     |     |     `-TemplateTypeParm 0x5605abe98960 '_Ex'
|       |     |     `-TemplateArgument type 'nested_exception *':'std::nested_exception *'
|       |     |       `-PointerType 0x5605abe99010 'nested_exception *'
|       |     |         `-ElaboratedType 0x5605abe931e0 'nested_exception' sugar
|       |     |           `-RecordType 0x5605abe92ed0 'std::nested_exception'
|       |     |             `-CXXRecord 0x5605abe92e28 'nested_exception'
|       |     |-ReturnStmt 0x5605abe99128 <line:227:2>
|       |     `-IfStmt 0x5605abe99648 <line:229:12, line:233:27> has_else constexpr
|       |       |-UnaryOperator 0x5605abe991f0 <line:229:26, col:61> '<dependent type>' prefix '!' cannot overflow
|       |       | `-UnresolvedLookupExpr 0x5605abe99158 <col:27, col:61> '<dependent type>' lvalue (no ADL) = 'is_base_of_v' 0x5605abcd71b0
|       |       |   |-TemplateArgument type 'nested_exception':'std::nested_exception'
|       |       |   | `-ElaboratedType 0x5605abe931e0 'nested_exception' sugar
|       |       |   |   `-RecordType 0x5605abe92ed0 'std::nested_exception'
|       |       |   |     `-CXXRecord 0x5605abe92e28 'nested_exception'
|       |       |   `-TemplateArgument type '_Ex':'type-parameter-0-0'
|       |       |     `-TemplateTypeParmType 0x5605abe989b0 '_Ex' dependent depth 0 index 0
|       |       |       `-TemplateTypeParm 0x5605abe98960 '_Ex'
|       |       |-ReturnStmt 0x5605abe99208 <line:230:2>
|       |       `-IfStmt 0x5605abe99608 <line:232:12, line:233:27> has_var
|       |         |-DeclStmt 0x5605abe99630 <line:232:16, col:75>
|       |         | `-VarDecl 0x5605abe99238 <col:16, col:75> col:21 referenced __ne_ptr 'const nested_exception *' cinit
|       |         |   `-CXXDynamicCastExpr 0x5605abe99328 <col:32, col:75> 'const nested_exception *' dynamic_cast<const nested_exception *> <Dependent>
|       |         |     `-DeclRefExpr 0x5605abe992a0 <col:70> 'const _Ex *' lvalue Var 0x5605abe98d68 '__ptr' 'const _Ex *'
|       |         |-ImplicitCastExpr 0x5605abe99490 <col:21> 'bool' <PointerToBoolean>
|       |         | `-ImplicitCastExpr 0x5605abe99478 <col:21> 'const nested_exception *' <LValueToRValue>
|       |         |   `-DeclRefExpr 0x5605abe99440 <col:21> 'const nested_exception *' lvalue Var 0x5605abe99238 '__ne_ptr' 'const nested_exception *'
|       |         `-CXXMemberCallExpr 0x5605abe99510 <line:233:2, col:27> 'void'
|       |           `-MemberExpr 0x5605abe994e0 <col:2, col:12> '<bound member function type>' ->rethrow_nested 0x5605abe938a8
|       |             `-ImplicitCastExpr 0x5605abe994c8 <col:2> 'const nested_exception *' <LValueToRValue>
|       |               `-DeclRefExpr 0x5605abe994a8 <col:2> 'const nested_exception *' lvalue Var 0x5605abe99238 '__ne_ptr' 'const nested_exception *'
|       `-AlwaysInlineAttr 0x5605abe98c48 <line:205:7, col:16> always_inline
|-NamespaceDecl 0x5605abe99730 </opt/ace/src/unwrap/test.hpp:12:1, line:295:1> line:12:11 ice
| |-CXXRecordDecl 0x5605abe997c0 <line:14:1, line:65:1> line:14:7 referenced class source_location definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial constexpr
| | |-CXXRecordDecl 0x5605abe99900 <col:1, col:7> col:7 implicit referenced class source_location
| | |-AccessSpecDecl 0x5605abe999b0 <line:15:1, col:7> col:1 public
| | |-CXXConstructorDecl 0x5605abe99a58 <line:16:3, col:48> col:13 used consteval source_location 'void () noexcept' default implicit-inline
| | | |-CXXCtorInitializer Field 0x5605abe9d828 'value_' 'std::uint32_t':'unsigned int'
| | | | `-CXXDefaultInitExpr 0x5605abeaa8a0 <col:13> 'std::uint32_t':'unsigned int' has rewritten init
| | | |   `-InitListExpr 0x5605abe9d8d0 <line:64:23, col:24> 'std::uint32_t':'unsigned int'
| | | `-CompoundStmt 0x5605abeaa8f0 <line:16:48>
| | |-CXXConstructorDecl 0x5605abe99cd0 <line:18:3, line:19:60> line:18:13 used consteval source_location 'void (std::source_location) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abe99ba0 <col:29, col:50> col:50 used location 'std::source_location'
| | | |-CXXCtorInitializer Field 0x5605abe9d828 'value_' 'std::uint32_t':'unsigned int'
| | | | `-CallExpr 0x5605abe9dab8 <line:19:12, col:56> 'std::uint32_t':'unsigned int'
| | | |   |-ImplicitCastExpr 0x5605abe9daa0 <col:12> 'std::uint32_t (*)(const char *, std::uint32_t) noexcept' <FunctionToPointerDecay>
| | | |   | `-DeclRefExpr 0x5605abe9d910 <col:12> 'std::uint32_t (const char *, std::uint32_t) noexcept' lvalue CXXMethod 0x5605abe9a9c0 'encode' 'std::uint32_t (const char *, std::uint32_t) noexcept'
| | | |   |-CXXMemberCallExpr 0x5605abe9d998 <col:19, col:38> 'const char *'
| | | |   | `-MemberExpr 0x5605abe9d950 <col:19, col:28> '<bound member function type>' .file_name 0x5605abde7fd8
| | | |   |   `-ImplicitCastExpr 0x5605abe9d980 <col:19> 'const std::source_location' lvalue <NoOp>
| | | |   |     `-DeclRefExpr 0x5605abe9d930 <col:19> 'std::source_location' lvalue ParmVar 0x5605abe99ba0 'location' 'std::source_location'
| | | |   `-CXXMemberCallExpr 0x5605abe9da20 <col:41, col:55> 'uint_least32_t':'unsigned int'
| | | |     `-MemberExpr 0x5605abe9d9d8 <col:41, col:50> '<bound member function type>' .line 0x5605abde7dc0
| | | |       `-ImplicitCastExpr 0x5605abe9da08 <col:41> 'const std::source_location' lvalue <NoOp>
| | | |         `-DeclRefExpr 0x5605abe9d9b8 <col:41> 'std::source_location' lvalue ParmVar 0x5605abe99ba0 'location' 'std::source_location'
| | | `-CompoundStmt 0x5605abe9db30 <col:59, col:60>
| | |-CXXMethodDecl 0x5605abe99f40 <line:21:3, line:23:3> line:21:27 constexpr file 'std::uint16_t () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abe9dc98 <col:49, line:23:3>
| | |   `-ReturnStmt 0x5605abe9dc88 <line:22:5, col:53>
| | |     `-CXXStaticCastExpr 0x5605abe9dc58 <col:12, col:53> 'std::uint16_t':'unsigned short' static_cast<std::uint16_t> <NoOp>
| | |       `-ImplicitCastExpr 0x5605abe9dc40 <col:39, col:48> 'std::uint16_t':'unsigned short' <IntegralCast> part_of_explicit_cast
| | |         `-BinaryOperator 0x5605abe9dc00 <col:39, col:48> 'std::uint32_t':'unsigned int' '&'
| | |           |-ImplicitCastExpr 0x5605abe9dbd0 <col:39> 'std::uint32_t':'unsigned int' <LValueToRValue>
| | |           | `-MemberExpr 0x5605abe9db80 <col:39> 'const std::uint32_t':'const unsigned int' lvalue ->value_ 0x5605abe9d828
| | |           |   `-CXXThisExpr 0x5605abe9db70 <col:39> 'const ice::source_location *' implicit this
| | |           `-ImplicitCastExpr 0x5605abe9dbe8 <col:48> 'std::uint32_t':'unsigned int' <IntegralCast>
| | |             `-IntegerLiteral 0x5605abe9dbb0 <col:48> 'int' 4095
| | |-CXXMethodDecl 0x5605abe9a070 <line:25:3, line:27:3> line:25:27 constexpr line 'std::uint16_t () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abe9de48 <col:49, line:27:3>
| | |   `-ReturnStmt 0x5605abe9de38 <line:26:5, col:59>
| | |     `-CXXStaticCastExpr 0x5605abe9de08 <col:12, col:59> 'std::uint16_t':'unsigned short' static_cast<std::uint16_t> <NoOp>
| | |       `-ImplicitCastExpr 0x5605abe9ddf0 <col:39, col:54> 'std::uint16_t':'unsigned short' <IntegralCast> part_of_explicit_cast
| | |         `-BinaryOperator 0x5605abe9ddb0 <col:39, col:54> 'std::uint32_t':'unsigned int' '&'
| | |           |-BinaryOperator 0x5605abe9dd58 <col:39, col:49> 'std::uint32_t':'unsigned int' '>>'
| | |           | |-ImplicitCastExpr 0x5605abe9dd40 <col:39> 'std::uint32_t':'unsigned int' <LValueToRValue>
| | |           | | `-MemberExpr 0x5605abe9dcf0 <col:39> 'const std::uint32_t':'const unsigned int' lvalue ->value_ 0x5605abe9d828
| | |           | |   `-CXXThisExpr 0x5605abe9dce0 <col:39> 'const ice::source_location *' implicit this
| | |           | `-IntegerLiteral 0x5605abe9dd20 <col:49> 'int' 12
| | |           `-ImplicitCastExpr 0x5605abe9dd98 <col:54> 'std::uint32_t':'unsigned int' <IntegralCast>
| | |             `-IntegerLiteral 0x5605abe9dd78 <col:54> 'int' 2047
| | |-CXXMethodDecl 0x5605abe9a260 <line:29:3, line:31:3> line:29:27 used constexpr value 'std::uint32_t () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abe9dec8 <col:50, line:31:3>
| | |   `-ReturnStmt 0x5605abe9deb8 <line:30:5, col:12>
| | |     `-ImplicitCastExpr 0x5605abe9dea0 <col:12> 'std::uint32_t':'unsigned int' <LValueToRValue>
| | |       `-MemberExpr 0x5605abe9de70 <col:12> 'const std::uint32_t':'const unsigned int' lvalue ->value_ 0x5605abe9d828
| | |         `-CXXThisExpr 0x5605abe9de60 <col:12> 'const ice::source_location *' implicit this
| | |-AccessSpecDecl 0x5605abe9a328 <line:33:1, col:8> col:1 private
| | |-FriendDecl 0x5605abe9a490 <line:34:3, col:16> col:10 'class error':'ice::error'
| | | `-CXXRecordDecl 0x5605abe9a358 parent 0x5605abe99730 <col:10, col:16> col:16 friend_undeclared class error
| | |-CXXConstructorDecl 0x5605abe9a660 <line:36:3, col:85> col:22 used constexpr source_location 'void (std::uint32_t) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abe9a528 <col:38, col:52> col:52 used value 'std::uint32_t':'unsigned int'
| | | |-CXXCtorInitializer Field 0x5605abe9d828 'value_' 'std::uint32_t':'unsigned int'
| | | | `-ImplicitCastExpr 0x5605abe9df20 <col:77> 'std::uint32_t':'unsigned int' <LValueToRValue>
| | | |   `-DeclRefExpr 0x5605abe9dee0 <col:77> 'std::uint32_t':'unsigned int' lvalue ParmVar 0x5605abe9a528 'value' 'std::uint32_t':'unsigned int'
| | | `-CompoundStmt 0x5605abe9df60 <col:84, col:85>
| | |-CXXMethodDecl 0x5605abe9a9c0 <line:38:3, line:62:3> line:38:34 used consteval encode 'std::uint32_t (const char *, std::uint32_t) noexcept' static implicit-inline
| | | |-ParmVarDecl 0x5605abe9a790 <col:41, col:53> col:53 used file 'const char *'
| | | |-ParmVarDecl 0x5605abe9a850 <col:59, col:73> col:73 used line 'std::uint32_t':'unsigned int'
| | | `-CompoundStmt 0x5605abe9f098 <col:88, line:62:3>
| | |   |-DeclStmt 0x5605abe9e078 <line:39:5, col:26>
| | |   | `-VarDecl 0x5605abe9dfc0 <col:5, col:25> col:19 used crc 'std::uint16_t':'unsigned short' cinit
| | |   |   `-ImplicitCastExpr 0x5605abe9e048 <col:25> 'std::uint16_t':'unsigned short' <IntegralCast>
| | |   |     `-IntegerLiteral 0x5605abe9e028 <col:25> 'int' 0
| | |   |-ForStmt 0x5605abe9e9b0 <line:40:5, line:49:5>
| | |   | |-DeclStmt 0x5605abe9e250 <line:40:10, col:23>
| | |   | | `-VarDecl 0x5605abe9e0b0 <col:10, col:19> col:15 used c 'const char *' cinit
| | |   | |   `-ImplicitCastExpr 0x5605abe9e220 <col:19> 'const char *' <LValueToRValue>
| | |   | |     `-DeclRefExpr 0x5605abe9e118 <col:19> 'const char *' lvalue ParmVar 0x5605abe9a790 'file' 'const char *'
| | |   | |-<<<NULL>>>
| | |   | |-ImplicitCastExpr 0x5605abe9e2d0 <col:25, col:26> 'bool' <IntegralToBoolean>
| | |   | | `-ImplicitCastExpr 0x5605abe9e2b8 <col:25, col:26> 'char' <LValueToRValue>
| | |   | |   `-UnaryOperator 0x5605abe9e2a0 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
| | |   | |     `-ImplicitCastExpr 0x5605abe9e288 <col:26> 'const char *' <LValueToRValue>
| | |   | |       `-DeclRefExpr 0x5605abe9e268 <col:26> 'const char *' lvalue Var 0x5605abe9e0b0 'c' 'const char *'
| | |   | |-UnaryOperator 0x5605abe9e308 <col:29, col:30> 'const char *' postfix '++'
| | |   | | `-DeclRefExpr 0x5605abe9e2e8 <col:29> 'const char *' lvalue Var 0x5605abe9e0b0 'c' 'const char *'
| | |   | `-CompoundStmt 0x5605abe9e990 <col:34, line:49:5>
| | |   |   |-CompoundAssignOperator 0x5605abe9e498 <line:41:7, col:48> 'std::uint16_t':'unsigned short' lvalue '^=' ComputeLHSTy='int' ComputeResultTy='int'
| | |   |   | |-DeclRefExpr 0x5605abe9e320 <col:7> 'std::uint16_t':'unsigned short' lvalue Var 0x5605abe9dfc0 'crc' 'std::uint16_t':'unsigned short'
| | |   |   | `-BinaryOperator 0x5605abe9e478 <col:14, col:48> 'int' '<<'
| | |   |   |   |-ImplicitCastExpr 0x5605abe9e460 <col:14, col:43> 'int' <IntegralCast>
| | |   |   |   | `-CXXStaticCastExpr 0x5605abe9e410 <col:14, col:43> 'std::uint16_t':'unsigned short' static_cast<std::uint16_t> <NoOp>
| | |   |   |   |   `-ImplicitCastExpr 0x5605abe9e3f8 <col:41, col:42> 'std::uint16_t':'unsigned short' <IntegralCast> part_of_explicit_cast
| | |   |   |   |     `-ImplicitCastExpr 0x5605abe9e3e0 <col:41, col:42> 'char' <LValueToRValue> part_of_explicit_cast
| | |   |   |   |       `-UnaryOperator 0x5605abe9e3a8 <col:41, col:42> 'const char' lvalue prefix '*' cannot overflow
| | |   |   |   |         `-ImplicitCastExpr 0x5605abe9e390 <col:42> 'const char *' <LValueToRValue>
| | |   |   |   |           `-DeclRefExpr 0x5605abe9e370 <col:42> 'const char *' lvalue Var 0x5605abe9e0b0 'c' 'const char *'
| | |   |   |   `-IntegerLiteral 0x5605abe9e440 <col:48> 'int' 4
| | |   |   `-ForStmt 0x5605abe9e958 <line:42:7, line:48:7>
| | |   |     |-DeclStmt 0x5605abe9e588 <line:42:12, col:21>
| | |   |     | `-VarDecl 0x5605abe9e4e8 <col:12, col:20> col:16 used i 'int' cinit
| | |   |     |   `-IntegerLiteral 0x5605abe9e550 <col:20> 'int' 0
| | |   |     |-<<<NULL>>>
| | |   |     |-BinaryOperator 0x5605abe9e5f8 <col:23, col:27> 'bool' '<'
| | |   |     | |-ImplicitCastExpr 0x5605abe9e5e0 <col:23> 'int' <LValueToRValue>
| | |   |     | | `-DeclRefExpr 0x5605abe9e5a0 <col:23> 'int' lvalue Var 0x5605abe9e4e8 'i' 'int'
| | |   |     | `-IntegerLiteral 0x5605abe9e5c0 <col:27> 'int' 8
| | |   |     |-UnaryOperator 0x5605abe9e638 <col:30, col:32> 'int' lvalue prefix '++'
| | |   |     | `-DeclRefExpr 0x5605abe9e618 <col:32> 'int' lvalue Var 0x5605abe9e4e8 'i' 'int'
| | |   |     `-CompoundStmt 0x5605abe9e940 <col:35, line:48:7>
| | |   |       `-IfStmt 0x5605abe9e910 <line:43:9, line:47:9> has_else
| | |   |         |-ImplicitCastExpr 0x5605abe9e6e0 <line:43:13, col:19> 'bool' <IntegralToBoolean>
| | |   |         | `-BinaryOperator 0x5605abe9e6c0 <col:13, col:19> 'int' '&'
| | |   |         |   |-ImplicitCastExpr 0x5605abe9e6a8 <col:13> 'int' <IntegralCast>
| | |   |         |   | `-ImplicitCastExpr 0x5605abe9e690 <col:13> 'std::uint16_t':'unsigned short' <LValueToRValue>
| | |   |         |   |   `-DeclRefExpr 0x5605abe9e650 <col:13> 'std::uint16_t':'unsigned short' lvalue Var 0x5605abe9dfc0 'crc' 'std::uint16_t':'unsigned short'
| | |   |         |   `-IntegerLiteral 0x5605abe9e670 <col:19> 'int' 2048
| | |   |         |-CompoundStmt 0x5605abe9e840 <col:26, line:45:9>
| | |   |         | `-BinaryOperator 0x5605abe9e820 <line:44:11, col:30> 'std::uint16_t':'unsigned short' lvalue '='
| | |   |         |   |-DeclRefExpr 0x5605abe9e6f8 <col:11> 'std::uint16_t':'unsigned short' lvalue Var 0x5605abe9dfc0 'crc' 'std::uint16_t':'unsigned short'
| | |   |         |   `-ImplicitCastExpr 0x5605abe9e808 <col:17, col:30> 'std::uint16_t':'unsigned short' <IntegralCast>
| | |   |         |     `-BinaryOperator 0x5605abe9e7e8 <col:17, col:30> 'int' '^'
| | |   |         |       |-ParenExpr 0x5605abe9e7a8 <col:17, col:26> 'int'
| | |   |         |       | `-BinaryOperator 0x5605abe9e788 <col:18, col:25> 'int' '<<'
| | |   |         |       |   |-ImplicitCastExpr 0x5605abe9e770 <col:18> 'int' <IntegralCast>
| | |   |         |       |   | `-ImplicitCastExpr 0x5605abe9e758 <col:18> 'std::uint16_t':'unsigned short' <LValueToRValue>
| | |   |         |       |   |   `-DeclRefExpr 0x5605abe9e718 <col:18> 'std::uint16_t':'unsigned short' lvalue Var 0x5605abe9dfc0 'crc' 'std::uint16_t':'unsigned short'
| | |   |         |       |   `-IntegerLiteral 0x5605abe9e738 <col:25> 'int' 1
| | |   |         |       `-IntegerLiteral 0x5605abe9e7c8 <col:30> 'int' 3891
| | |   |         `-CompoundStmt 0x5605abe9e8f8 <line:45:16, line:47:9>
| | |   |           `-CompoundAssignOperator 0x5605abe9e8c8 <line:46:11, col:19> 'std::uint16_t':'unsigned short' lvalue '<<=' ComputeLHSTy='int' ComputeResultTy='int'
| | |   |             |-DeclRefExpr 0x5605abe9e858 <col:11> 'std::uint16_t':'unsigned short' lvalue Var 0x5605abe9dfc0 'crc' 'std::uint16_t':'unsigned short'
| | |   |             `-IntegerLiteral 0x5605abe9e878 <col:19> 'int' 1
| | |   |-CompoundAssignOperator 0x5605abe9ea28 <line:50:5, col:12> 'std::uint16_t':'unsigned short' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
| | |   | |-DeclRefExpr 0x5605abe9e9e8 <col:5> 'std::uint16_t':'unsigned short' lvalue Var 0x5605abe9dfc0 'crc' 'std::uint16_t':'unsigned short'
| | |   | `-IntegerLiteral 0x5605abe9ea08 <col:12> 'int' 4095
| | |   |-IfStmt 0x5605abe9edb8 <line:52:5, line:59:5>
| | |   | |-BinaryOperator 0x5605abe9eb08 <line:52:9, col:24> 'bool' '>'
| | |   | | |-ImplicitCastExpr 0x5605abe9ead8 <col:9> 'std::uint32_t':'unsigned int' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x5605abe9ea58 <col:9> 'std::uint32_t':'unsigned int' lvalue ParmVar 0x5605abe9a850 'line' 'std::uint32_t':'unsigned int'
| | |   | | `-ImplicitCastExpr 0x5605abe9eaf0 <col:16, col:24> 'std::uint32_t':'unsigned int' <IntegralCast>
| | |   | |   `-BinaryOperator 0x5605abe9eab8 <col:16, col:24> 'int' '-'
| | |   | |     |-IntegerLiteral 0x5605abe9ea78 <col:16> 'int' 2047
| | |   | |     `-IntegerLiteral 0x5605abe9ea98 <col:24> 'int' 2
| | |   | `-CompoundStmt 0x5605abe9ed98 <col:27, line:59:5>
| | |   |   |-CallExpr 0x5605abe9ed00 <line:55:7, col:29> 'void'
| | |   |   | `-ImplicitCastExpr 0x5605abe9ece8 <col:7> 'void (*)() __attribute__((noreturn)) noexcept' <BuiltinFnToFnPtr>
| | |   |   |   `-DeclRefExpr 0x5605abe9ecb0 <col:7> '<builtin fn type>' Function 0x5605abe9eb88 '__builtin_unreachable' 'void () __attribute__((noreturn)) noexcept'
| | |   |   `-BinaryOperator 0x5605abe9ed78 <line:58:7, col:14> 'std::uint32_t':'unsigned int' lvalue '='
| | |   |     |-DeclRefExpr 0x5605abe9ed20 <col:7> 'std::uint32_t':'unsigned int' lvalue ParmVar 0x5605abe9a850 'line' 'std::uint32_t':'unsigned int'
| | |   |     `-ImplicitCastExpr 0x5605abe9ed60 <col:14> 'std::uint32_t':'unsigned int' <IntegralCast>
| | |   |       `-IntegerLiteral 0x5605abe9ed40 <col:14> 'int' 2047
| | |   `-ReturnStmt 0x5605abe9f088 <line:61:5, col:83>
| | |     `-ImplicitCastExpr 0x5605abe9f070 <col:12, col:83> 'std::uint32_t':'unsigned int' <IntegralCast>
| | |       `-BinaryOperator 0x5605abe9f050 <col:12, col:83> 'std::uint64_t':'unsigned long' '|'
| | |         |-BinaryOperator 0x5605abe9ef60 <col:12, col:48> 'std::uint64_t':'unsigned long' '<<'
| | |         | |-CXXStaticCastExpr 0x5605abe9ef10 <col:12, col:43> 'std::uint64_t':'unsigned long' static_cast<std::uint64_t> <NoOp>
| | |         | | `-ImplicitCastExpr 0x5605abe9eef8 <col:39> 'std::uint64_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| | |         | |   `-ImplicitCastExpr 0x5605abe9eee0 <col:39> 'std::uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
| | |         | |     `-DeclRefExpr 0x5605abe9eea0 <col:39> 'std::uint32_t':'unsigned int' lvalue ParmVar 0x5605abe9a850 'line' 'std::uint32_t':'unsigned int'
| | |         | `-IntegerLiteral 0x5605abe9ef40 <col:48> 'int' 12
| | |         `-CXXStaticCastExpr 0x5605abe9f020 <col:53, col:83> 'std::uint64_t':'unsigned long' static_cast<std::uint64_t> <NoOp>
| | |           `-ImplicitCastExpr 0x5605abe9f008 <col:80> 'std::uint64_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| | |             `-ImplicitCastExpr 0x5605abe9eff0 <col:80> 'std::uint16_t':'unsigned short' <LValueToRValue> part_of_explicit_cast
| | |               `-DeclRefExpr 0x5605abe9efb0 <col:80> 'std::uint16_t':'unsigned short' lvalue Var 0x5605abe9dfc0 'crc' 'std::uint16_t':'unsigned short'
| | |-FieldDecl 0x5605abe9d828 <line:64:3, col:24> col:17 referenced value_ 'std::uint32_t':'unsigned int'
| | | `-InitListExpr 0x5605abe9d8d0 <col:23, col:24> 'std::uint32_t':'unsigned int'
| | |-CXXConstructorDecl 0x5605abea6ab8 <line:14:7> col:7 implicit used constexpr source_location 'void (const source_location &) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abea6bf8 <col:7> col:7 used 'const source_location &'
| | | |-CXXCtorInitializer Field 0x5605abe9d828 'value_' 'std::uint32_t':'unsigned int'
| | | | `-ImplicitCastExpr 0x5605abea78a8 <col:7> 'std::uint32_t':'unsigned int' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abea7870 <col:7> 'const std::uint32_t':'const unsigned int' lvalue .value_ 0x5605abe9d828
| | | |     `-DeclRefExpr 0x5605abea7838 <col:7> 'const source_location':'const ice::source_location' lvalue ParmVar 0x5605abea6bf8 depth 0 index 0 'const source_location &'
| | | `-CompoundStmt 0x5605abea78e8 <col:7>
| | |-CXXConstructorDecl 0x5605abea6ce8 <col:7> col:7 implicit constexpr source_location 'void (source_location &&)' inline default trivial noexcept-unevaluated 0x5605abea6ce8
| | | `-ParmVarDecl 0x5605abea6e28 <col:7> col:7 'source_location &&'
| | `-CXXDestructorDecl 0x5605abea7038 <col:7> col:7 implicit referenced constexpr ~source_location 'void () noexcept' inline default trivial
| |-EnumDecl 0x5605abe9f1b8 <line:67:1, line:71:1> line:67:12 referenced class errc 'std::uint8_t':'unsigned char'
| | |-EnumConstantDecl 0x5605abe9f2f0 <line:68:3, col:13> col:3 success 'ice::errc'
| | | `-ConstantExpr 0x5605abe9f2c8 <col:13> 'std::uint8_t':'unsigned char'
| | |   |-value: Int 0
| | |   `-ImplicitCastExpr 0x5605abe9f2b0 <col:13> 'std::uint8_t':'unsigned char' <IntegralCast>
| | |     `-IntegerLiteral 0x5605abe9f290 <col:13> 'int' 0
| | |-EnumConstantDecl 0x5605abe9f350 <line:69:3> col:3 referenced invalid_result_state 'ice::errc'
| | `-EnumConstantDecl 0x5605abe9f3b0 <line:70:3> col:3 referenced static_assert_test 'ice::errc'
| |-EnumDecl 0x5605abe9f460 <line:73:1, col:39> col:12 referenced class error_type 'std::uint8_t':'unsigned char'
| |-FunctionDecl 0x5605abe9f6f0 <line:75:1, line:77:1> line:75:22 used consteval make_error_type 'error_type (std::uint8_t) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abe9f5c0 <col:38, col:51> col:51 used index 'std::uint8_t':'unsigned char'
| | `-CompoundStmt 0x5605abe9f840 <col:67, line:77:1>
| |   `-ReturnStmt 0x5605abe9f830 <line:76:3, col:39>
| |     `-CXXStaticCastExpr 0x5605abe9f800 <col:10, col:39> 'error_type':'ice::error_type' static_cast<error_type> <IntegralCast>
| |       `-ImplicitCastExpr 0x5605abe9f7e8 <col:34> 'std::uint8_t':'unsigned char' <LValueToRValue> part_of_explicit_cast
| |         `-DeclRefExpr 0x5605abe9f7b8 <col:34> 'std::uint8_t':'unsigned char' lvalue ParmVar 0x5605abe9f5c0 'index' 'std::uint8_t':'unsigned char'
| |-ConceptDecl 0x5605abe9f908 <line:79:1, line:86:1> line:80:9 ErrorCode
| | |-TemplateTypeParmDecl 0x5605abe9f860 <line:79:11, col:17> col:17 referenced class depth 0 index 0 T
| | `-RequiresExpr 0x5605abea0308 <line:80:21, line:86:1> 'bool'
| |   |-ParmVarDecl 0x5605abe9f968 <line:80:30, col:32> col:32 referenced code 'T'
| |   |-NestedRequirement 0x5605abe9fe78 dependent
| |   | `-BinaryOperator 0x5605abe9fe58 <line:82:12, col:84> '<dependent type>' '&&'
| |   |   |-UnresolvedLookupExpr 0x5605abe9fa80 <col:12, col:28> '<dependent type>' lvalue (no ADL) = 'is_enum_v' 0x5605abcc5b28
| |   |   | `-TemplateArgument type 'T':'type-parameter-0-0'
| |   |   |   `-TemplateTypeParmType 0x5605abe9f8b0 'T' dependent depth 0 index 0
| |   |   |     `-TemplateTypeParm 0x5605abe9f860 'T'
| |   |   `-UnaryOperator 0x5605abe9fe40 <col:33, col:84> '<dependent type>' prefix '!' cannot overflow
| |   |     `-UnresolvedLookupExpr 0x5605abe9fda8 <col:34, col:84> '<dependent type>' lvalue (no ADL) = 'is_convertible_v' 0x5605abcd7430
| |   |       |-TemplateArgument type 'T':'type-parameter-0-0'
| |   |       | `-TemplateTypeParmType 0x5605abe9f8b0 'T' dependent depth 0 index 0
| |   |       |   `-TemplateTypeParm 0x5605abe9f860 'T'
| |   |       `-TemplateArgument type 'std::underlying_type_t<T>':'typename underlying_type<type-parameter-0-0>::type'
| |   |         `-ElaboratedType 0x5605abe9fcf0 'std::underlying_type_t<T>' sugar dependent
| |   |           `-TemplateSpecializationType 0x5605abe9fca0 'underlying_type_t<T>' sugar dependent alias
| |   |             |-name: 'std::underlying_type_t' qualified
| |   |             | |-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| |   |             | `-TypeAliasTemplateDecl 0x5605abc929e0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2722:3, line:2723:62> col:5 underlying_type_t
| |   |             |-TemplateArgument type 'T':'type-parameter-0-0'
| |   |             | `-TemplateTypeParmType 0x5605abe9f8b0 'T' dependent depth 0 index 0
| |   |             |   `-TemplateTypeParm 0x5605abe9f860 'T'
| |   |             `-DependentNameType 0x5605abe9fc50 'typename underlying_type<T>::type' dependent
| |   |-NestedRequirement 0x5605abe9ff70 dependent
| |   | `-BinaryOperator 0x5605abe9ff50 </opt/ace/src/unwrap/test.hpp:83:12, col:45> 'bool' '<='
| |   |   |-UnaryExprOrTypeTraitExpr 0x5605abe9fec8 <col:12, col:20> 'unsigned long' sizeof 'T'
| |   |   `-UnaryExprOrTypeTraitExpr 0x5605abe9ff30 <col:25, col:45> 'unsigned long' sizeof 'std::uint32_t':'unsigned int'
| |   `-CompoundRequirement 0x5605abea02d8 dependent
| |     |-CallExpr 0x5605abea0010 <line:84:5, col:24> '<dependent type>'
| |     | |-UnresolvedLookupExpr 0x5605abe9ffb0 <col:5> '<overloaded function type>' lvalue (ADL) = 'get_error_type' empty
| |     | `-DeclRefExpr 0x5605abe9fff0 <col:20> 'T' lvalue ParmVar 0x5605abe9f968 'code' 'T' non_odr_use_unevaluated
| |     `-ConceptSpecializationExpr 0x5605abea0248 <col:31, col:54> 'bool' Concept 0x5605abd12b80 'same_as'
| |       |-ImplicitConceptSpecializationDecl 0x5605abea0158 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:62:13> col:13
| |       | |-TemplateArgument type 'type-parameter-1-0'
| |       | | `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| |       | `-TemplateArgument type 'ice::error_type'
| |       |   `-EnumType 0x5605abe9f520 'ice::error_type'
| |       |     `-Enum 0x5605abe9f460 'error_type'
| |       |-TemplateArgument type 'expr-type':'type-parameter-1-0'
| |       | `-TemplateTypeParmType 0x5605abea00e0 'expr-type' dependent depth 1 index 0
| |       |   `-TemplateTypeParm 0x5605abea0078 'expr-type'
| |       `-TemplateArgument </opt/ace/src/unwrap/test.hpp:84:44> type 'error_type':'ice::error_type'
| |         `-ElaboratedType 0x5605abe9f540 'error_type' sugar
| |           `-EnumType 0x5605abe9f520 'ice::error_type'
| |             `-Enum 0x5605abe9f460 'error_type'
| |-ConceptDecl 0x5605abea0408 <line:88:1, line:92:1> line:89:9 ErrorValue
| | |-TemplateTypeParmDecl 0x5605abea0360 <line:88:11, col:17> col:17 referenced class depth 0 index 0 T
| | `-RequiresExpr 0x5605abea0810 <line:89:22, line:92:1> 'bool'
| |   |-ParmVarDecl 0x5605abea0468 <line:89:31, col:33> col:33 code 'T'
| |   |-NestedRequirement 0x5605abea06d8 dependent
| |   | `-BinaryOperator 0x5605abea06b8 <line:90:12, col:54> '<dependent type>' '&&'
| |   |   |-UnresolvedLookupExpr 0x5605abea0580 <col:12, col:32> '<dependent type>' lvalue (no ADL) = 'is_integral_v' 0x5605abcc36c8
| |   |   | `-TemplateArgument type 'T':'type-parameter-0-0'
| |   |   |   `-TemplateTypeParmType 0x5605abea03b0 'T' dependent depth 0 index 0
| |   |   |     `-TemplateTypeParm 0x5605abea0360 'T'
| |   |   `-UnaryOperator 0x5605abea06a0 <col:37, col:54> '<dependent type>' prefix '!' cannot overflow
| |   |     `-UnresolvedLookupExpr 0x5605abea0628 <col:38, col:54> '<dependent type>' lvalue (no ADL) = 'is_enum_v' 0x5605abcc5b28
| |   |       `-TemplateArgument type 'T':'type-parameter-0-0'
| |   |         `-TemplateTypeParmType 0x5605abea03b0 'T' dependent depth 0 index 0
| |   |           `-TemplateTypeParm 0x5605abea0360 'T'
| |   `-NestedRequirement 0x5605abea07d0 dependent
| |     `-BinaryOperator 0x5605abea07b0 <line:91:12, col:45> 'bool' '<='
| |       |-UnaryExprOrTypeTraitExpr 0x5605abea0728 <col:12, col:20> 'unsigned long' sizeof 'T'
| |       `-UnaryExprOrTypeTraitExpr 0x5605abea0790 <col:25, col:45> 'unsigned long' sizeof 'std::uint32_t':'unsigned int'
| |-CXXRecordDecl 0x5605abea0860 prev 0x5605abe9a358 <line:94:1, line:175:1> line:94:7 referenced class error definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor
| | | |-CopyAssignment simple trivial has_const_param implicit_has_const_param
| | | |-MoveAssignment
| | | `-Destructor irrelevant trivial user_declared constexpr
| | |-CXXRecordDecl 0x5605abea0960 <col:1, col:7> col:7 implicit referenced class error
| | |-AccessSpecDecl 0x5605abea0a10 <line:95:1, col:7> col:1 public
| | |-CXXConstructorDecl 0x5605abea0ab8 <line:96:3, col:38> col:13 used consteval error 'void () noexcept' default implicit-inline
| | | |-CXXCtorInitializer Field 0x5605abea6680 'value_' 'std::uint64_t':'unsigned long'
| | | | `-CXXDefaultInitExpr 0x5605abeabf00 <col:13> 'std::uint64_t':'unsigned long' has rewritten init
| | | |   `-InitListExpr 0x5605abea7370 <line:174:23, col:24> 'std::uint64_t':'unsigned long'
| | | `-CompoundStmt 0x5605abeabf50 <line:96:38>
| | |-FunctionTemplateDecl 0x5605abea10c8 <line:98:3, line:102:94> line:99:22 error
| | | |-TemplateTypeParmDecl 0x5605abea0ba0 <line:98:13, col:23> col:23 referenced Concept 0x5605abe9f908 'ErrorCode' depth 0 index 0 Code
| | | | `-ConceptSpecializationExpr 0x5605abea0d00 <col:13> 'bool' Concept 0x5605abe9f908 'ErrorCode'
| | | |   |-ImplicitConceptSpecializationDecl 0x5605abea0c48 <line:80:9> col:9
| | | |   | `-TemplateArgument type 'type-parameter-0-0'
| | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   `-TemplateArgument <line:98:23> type 'Code':'type-parameter-0-0'
| | | |     `-TemplateTypeParmType 0x5605abea0c00 'Code' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x5605abea0ba0 'Code'
| | | |-CXXConstructorDecl 0x5605abea1010 <line:99:3, line:102:94> line:99:22 constexpr error 'void (Code, ice::source_location) noexcept' implicit-inline
| | | | |-ParmVarDecl 0x5605abea0da8 <line:100:5, col:10> col:10 referenced code 'Code'
| | | | |-ParmVarDecl 0x5605abea0eb8 <line:101:5, col:74> col:26 referenced source_location 'ice::source_location' cinit
| | | | | `-ImplicitCastExpr 0x5605abea7018 <col:44, col:74> 'ice::source_location' <ConstructorConversion>
| | | | |   `-CXXConstructExpr 0x5605abea6fe8 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | | | |     `-CallExpr 0x5605abea67d8 <col:44, col:74> 'source_location':'std::source_location'
| | | | |       |-ImplicitCastExpr 0x5605abea67c0 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | | | |       | `-DeclRefExpr 0x5605abea6730 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | | | |       |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | | | |       |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | | | |       `-CXXDefaultArgExpr 0x5605abea6800 <<invalid sloc>> 'const std::source_location::__impl *'
| | | | |         `-SourceLocExpr 0x5605abde82a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | | | |-CXXCtorInitializer Field 0x5605abea6680 'value_' 'std::uint64_t':'unsigned long'
| | | | | `-ParenListExpr 0x5605abea7550 </opt/ace/src/unwrap/test.hpp:102:11, col:91> 'NULL TYPE'
| | | | |   `-CallExpr 0x5605abea7518 <col:12, col:90> '<dependent type>'
| | | | |     |-DeclRefExpr 0x5605abea73b0 <col:12> 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept' lvalue CXXMethod 0x5605abea6550 'encode' 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept'
| | | | |     |-CXXStaticCastExpr 0x5605abea7440 <col:19, col:50> 'std::uint32_t':'unsigned int' static_cast<std::uint32_t> <Dependent>
| | | | |     | `-DeclRefExpr 0x5605abea7400 <col:46> 'Code' lvalue ParmVar 0x5605abea0da8 'code' 'Code'
| | | | |     |-CallExpr 0x5605abea74d0 <col:53, col:72> '<dependent type>'
| | | | |     | |-UnresolvedLookupExpr 0x5605abea7470 <col:53> '<overloaded function type>' lvalue (ADL) = 'get_error_type' empty
| | | | |     | `-DeclRefExpr 0x5605abea74b0 <col:68> 'Code' lvalue ParmVar 0x5605abea0da8 'code' 'Code'
| | | | |     `-DeclRefExpr 0x5605abea74f8 <col:75> 'ice::source_location' lvalue ParmVar 0x5605abea0eb8 'source_location' 'ice::source_location'
| | | | `-CompoundStmt 0x5605abea7598 <col:93, col:94>
| | | |-CXXConstructorDecl 0x5605abeadac0 <line:99:3, line:102:94> line:99:22 used constexpr error 'void (ice::errc, ice::source_location) noexcept' implicit_instantiation implicit-inline
| | | | |-TemplateArgument type 'ice::errc'
| | | | | `-EnumType 0x5605abe9f270 'ice::errc'
| | | | |   `-Enum 0x5605abe9f1b8 'errc'
| | | | |-ParmVarDecl 0x5605abead928 <line:100:5, col:10> col:10 used code 'ice::errc'
| | | | |-ParmVarDecl 0x5605abead998 <line:101:5, col:74> col:26 used source_location 'ice::source_location' cinit
| | | | | `-ImplicitCastExpr 0x5605abeb2170 <col:44, col:74> 'ice::source_location' <ConstructorConversion>
| | | | |   `-CXXConstructExpr 0x5605abeb2140 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | | | |     `-CallExpr 0x5605abeb20d0 <col:44, col:74> 'source_location':'std::source_location'
| | | | |       |-ImplicitCastExpr 0x5605abeb20b8 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | | | |       | `-DeclRefExpr 0x5605abea6730 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | | | |       |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | | | |       |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | | | |       `-CXXDefaultArgExpr 0x5605abeb2118 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | | | |         `-SourceLocExpr 0x5605abeb20f8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | | | |-CXXCtorInitializer Field 0x5605abea6680 'value_' 'std::uint64_t':'unsigned long'
| | | | | `-CallExpr 0x5605abeb2480 </opt/ace/src/unwrap/test.hpp:102:12, col:90> 'std::uint64_t':'unsigned long'
| | | | |   |-ImplicitCastExpr 0x5605abeb2468 <col:12> 'std::uint64_t (*)(std::uint64_t, ice::error_type, ice::source_location) noexcept' <FunctionToPointerDecay>
| | | | |   | `-DeclRefExpr 0x5605abea73b0 <col:12> 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept' lvalue CXXMethod 0x5605abea6550 'encode' 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept'
| | | | |   |-ImplicitCastExpr 0x5605abeb24b8 <col:19, col:50> 'std::uint64_t':'unsigned long' <IntegralCast>
| | | | |   | `-CXXStaticCastExpr 0x5605abeb2328 <col:19, col:50> 'std::uint32_t':'unsigned int' static_cast<std::uint32_t> <IntegralCast>
| | | | |   |   `-ImplicitCastExpr 0x5605abeb2310 <col:46> 'ice::errc' <LValueToRValue> part_of_explicit_cast
| | | | |   |     `-DeclRefExpr 0x5605abeb22d8 <col:46> 'ice::errc' lvalue ParmVar 0x5605abead928 'code' 'ice::errc'
| | | | |   |-CallExpr 0x5605abeb23f0 <col:53, col:72> 'ice::error_type' adl
| | | | |   | |-ImplicitCastExpr 0x5605abeb23d8 <col:53> 'ice::error_type (*)(errc) noexcept' <FunctionToPointerDecay>
| | | | |   | | `-DeclRefExpr 0x5605abeb23b8 <col:53> 'ice::error_type (errc) noexcept' lvalue Function 0x5605abead530 'get_error_type' 'ice::error_type (errc) noexcept'
| | | | |   | `-ImplicitCastExpr 0x5605abeb2418 <col:68> 'ice::errc' <LValueToRValue>
| | | | |   |   `-DeclRefExpr 0x5605abeb2398 <col:68> 'ice::errc' lvalue ParmVar 0x5605abead928 'code' 'ice::errc'
| | | | |   `-CXXConstructExpr 0x5605abeb24e8 <col:75> 'ice::source_location' 'void (const source_location &) noexcept'
| | | | |     `-ImplicitCastExpr 0x5605abeb24d0 <col:75> 'const source_location':'const ice::source_location' lvalue <NoOp>
| | | | |       `-DeclRefExpr 0x5605abeb2430 <col:75> 'ice::source_location' lvalue ParmVar 0x5605abead998 'source_location' 'ice::source_location'
| | | | `-CompoundStmt 0x5605abea7598 <col:93, col:94>
| | | |-CXXConstructorDecl 0x5605abeb6550 <line:99:3, line:102:94> line:99:22 constexpr error 'void (ice::error, ice::source_location) noexcept' implicit_instantiation implicit-inline
| | | | |-TemplateArgument type 'ice::error'
| | | | | `-RecordType 0x5605abe9a400 'ice::error'
| | | | |   `-CXXRecord 0x5605abea0860 'error'
| | | | |-ParmVarDecl 0x5605abeb63b8 <line:100:5, col:10> col:10 code 'ice::error'
| | | | `-ParmVarDecl 0x5605abeb6428 <line:101:5, col:74> col:26 source_location 'ice::source_location'
| | | `-CXXConstructorDecl 0x5605abece120 <line:99:3, line:102:94> line:99:22 used constexpr immediate error 'void (errc, ice::source_location) noexcept' implicit_instantiation implicit-inline
| | |   |-TemplateArgument type 'errc'
| | |   | `-EnumType 0x5605abec9650 'errc'
| | |   |   `-Enum 0x5605abec9590 'errc'
| | |   |-ParmVarDecl 0x5605abecdf88 <line:100:5, col:10> col:10 used code 'errc'
| | |   |-ParmVarDecl 0x5605abecdff8 <line:101:5, col:74> col:26 used source_location 'ice::source_location' cinit
| | |   | `-ImplicitCastExpr 0x5605abed0e70 <col:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |   |   `-CXXConstructExpr 0x5605abed0e40 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |   |     `-CallExpr 0x5605abed0dd0 <col:44, col:74> 'source_location':'std::source_location'
| | |   |       |-ImplicitCastExpr 0x5605abed0db8 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |   |       | `-DeclRefExpr 0x5605abea6730 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |   |       |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |   |       |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   |       `-CXXDefaultArgExpr 0x5605abed0e18 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | |   |         `-SourceLocExpr 0x5605abed0df8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | |   |-CXXCtorInitializer Field 0x5605abea6680 'value_' 'std::uint64_t':'unsigned long'
| | |   | `-CallExpr 0x5605abed1180 </opt/ace/src/unwrap/test.hpp:102:12, col:90> 'std::uint64_t':'unsigned long'
| | |   |   |-ImplicitCastExpr 0x5605abed1168 <col:12> 'std::uint64_t (*)(std::uint64_t, ice::error_type, ice::source_location) noexcept' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x5605abea73b0 <col:12> 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept' lvalue CXXMethod 0x5605abea6550 'encode' 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept'
| | |   |   |-ImplicitCastExpr 0x5605abed11b8 <col:19, col:50> 'std::uint64_t':'unsigned long' <IntegralCast>
| | |   |   | `-CXXStaticCastExpr 0x5605abed1028 <col:19, col:50> 'std::uint32_t':'unsigned int' static_cast<std::uint32_t> <IntegralCast>
| | |   |   |   `-ImplicitCastExpr 0x5605abed1010 <col:46> 'errc' <LValueToRValue> part_of_explicit_cast
| | |   |   |     `-DeclRefExpr 0x5605abed0fd8 <col:46> 'errc' lvalue ParmVar 0x5605abecdf88 'code' 'errc'
| | |   |   |-CallExpr 0x5605abed10f0 <col:53, col:72> 'ice::error_type' adl
| | |   |   | |-ImplicitCastExpr 0x5605abed10d8 <col:53> 'ice::error_type (*)(errc) noexcept' <FunctionToPointerDecay>
| | |   |   | | `-DeclRefExpr 0x5605abed10b8 <col:53> 'ice::error_type (errc) noexcept' lvalue Function 0x5605abec9e10 'get_error_type' 'ice::error_type (errc) noexcept' immediate-escalating
| | |   |   | `-ImplicitCastExpr 0x5605abed1118 <col:68> 'errc' <LValueToRValue>
| | |   |   |   `-DeclRefExpr 0x5605abed1098 <col:68> 'errc' lvalue ParmVar 0x5605abecdf88 'code' 'errc'
| | |   |   `-CXXConstructExpr 0x5605abed11e8 <col:75> 'ice::source_location' 'void (const source_location &) noexcept'
| | |   |     `-ImplicitCastExpr 0x5605abed11d0 <col:75> 'const source_location':'const ice::source_location' lvalue <NoOp>
| | |   |       `-DeclRefExpr 0x5605abed1130 <col:75> 'ice::source_location' lvalue ParmVar 0x5605abecdff8 'source_location' 'ice::source_location'
| | |   `-CompoundStmt 0x5605abea7598 <col:93, col:94>
| | |-FunctionTemplateDecl 0x5605abea1788 <line:104:3, line:109:79> line:105:22 error
| | | |-TemplateTypeParmDecl 0x5605abea1178 <line:104:13, col:24> col:24 referenced Concept 0x5605abea0408 'ErrorValue' depth 0 index 0 Value
| | | | `-ConceptSpecializationExpr 0x5605abea12e0 <col:13> 'bool' Concept 0x5605abea0408 'ErrorValue'
| | | |   |-ImplicitConceptSpecializationDecl 0x5605abea1228 <line:89:9> col:9
| | | |   | `-TemplateArgument type 'type-parameter-0-0'
| | | |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | |   `-TemplateArgument <line:104:24> type 'Value':'type-parameter-0-0'
| | | |     `-TemplateTypeParmType 0x5605abea11e0 'Value' dependent depth 0 index 0
| | | |       `-TemplateTypeParm 0x5605abea1178 'Value'
| | | `-CXXConstructorDecl 0x5605abea16d0 <line:105:3, line:109:79> line:105:22 constexpr error 'void (Value, ice::error_type, ice::source_location) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abea1388 <line:106:5, col:11> col:11 referenced value 'Value'
| | |   |-ParmVarDecl 0x5605abea1478 <line:107:5, col:21> col:21 referenced type 'ice::error_type'
| | |   |-ParmVarDecl 0x5605abea1538 <line:108:5, col:74> col:26 referenced source_location 'ice::source_location' cinit
| | |   | `-ImplicitCastExpr 0x5605abea72b0 <col:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |   |   `-CXXConstructExpr 0x5605abea7280 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |   |     `-CallExpr 0x5605abea7238 <col:44, col:74> 'source_location':'std::source_location'
| | |   |       |-ImplicitCastExpr 0x5605abea7220 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |   |       | `-DeclRefExpr 0x5605abea71f0 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |   |       |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |   |       |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   |       `-CXXDefaultArgExpr 0x5605abea7260 <<invalid sloc>> 'const std::source_location::__impl *'
| | |   |         `-SourceLocExpr 0x5605abde82a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | |   |-CXXCtorInitializer Field 0x5605abea6680 'value_' 'std::uint64_t':'unsigned long'
| | |   | `-CallExpr 0x5605abea7728 </opt/ace/src/unwrap/test.hpp:109:12, col:75> 'std::uint64_t':'unsigned long'
| | |   |   |-ImplicitCastExpr 0x5605abea7710 <col:12> 'std::uint64_t (*)(std::uint64_t, ice::error_type, ice::source_location) noexcept' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x5605abea75a8 <col:12> 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept' lvalue CXXMethod 0x5605abea6550 'encode' 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept'
| | |   |   |-ImplicitCastExpr 0x5605abea7760 <col:19, col:51> 'std::uint64_t':'unsigned long' <IntegralCast>
| | |   |   | `-CXXStaticCastExpr 0x5605abea7638 <col:19, col:51> 'std::uint32_t':'unsigned int' static_cast<std::uint32_t> <Dependent>
| | |   |   |   `-DeclRefExpr 0x5605abea75f8 <col:46> 'Value' lvalue ParmVar 0x5605abea1388 'value' 'Value'
| | |   |   |-ImplicitCastExpr 0x5605abea7778 <col:54> 'ice::error_type' <LValueToRValue>
| | |   |   | `-DeclRefExpr 0x5605abea7668 <col:54> 'ice::error_type' lvalue ParmVar 0x5605abea1478 'type' 'ice::error_type'
| | |   |   `-CXXConstructExpr 0x5605abea78f8 <col:60> 'ice::source_location' 'void (const source_location &) noexcept'
| | |   |     `-ImplicitCastExpr 0x5605abea7790 <col:60> 'const source_location':'const ice::source_location' lvalue <NoOp>
| | |   |       `-DeclRefExpr 0x5605abea7688 <col:60> 'ice::source_location' lvalue ParmVar 0x5605abea1538 'source_location' 'ice::source_location'
| | |   `-CompoundStmt 0x5605abea7970 <col:78, col:79>
| | |-CXXDestructorDecl 0x5605abea41f0 <line:111:3, col:30> col:13 referenced constexpr ~error 'void () noexcept' default trivial implicit-inline
| | |-CXXMethodDecl 0x5605abea4398 <line:113:3, line:115:3> line:113:17 used constexpr code 'int () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abea7ae0 <col:39, line:115:3>
| | |   `-ReturnStmt 0x5605abea7ad0 <line:114:5, col:63>
| | |     `-CXXStaticCastExpr 0x5605abea7aa0 <col:12, col:63> 'int' static_cast<int> <NoOp>
| | |       `-ImplicitCastExpr 0x5605abea7a88 <col:29, col:62> 'int' <IntegralCast> part_of_explicit_cast
| | |         `-CXXStaticCastExpr 0x5605abea7a40 <col:29, col:62> 'std::uint32_t':'unsigned int' static_cast<std::uint32_t> <NoOp>
| | |           `-ImplicitCastExpr 0x5605abea7a28 <col:56> 'std::uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
| | |             `-ImplicitCastExpr 0x5605abea7a10 <col:56> 'std::uint64_t':'unsigned long' <LValueToRValue> part_of_explicit_cast
| | |               `-MemberExpr 0x5605abea79c0 <col:56> 'const std::uint64_t':'const unsigned long' lvalue ->value_ 0x5605abea6680
| | |                 `-CXXThisExpr 0x5605abea79b0 <col:56> 'const ice::error *' implicit this
| | |-CXXMethodDecl 0x5605abea4530 <line:117:3, line:119:3> line:117:29 used constexpr type 'ice::error_type () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abea7c38 <col:51, line:119:3>
| | |   `-ReturnStmt 0x5605abea7c28 <line:118:5, col:55>
| | |     `-CXXStaticCastExpr 0x5605abea7bf8 <col:12, col:55> 'error_type':'ice::error_type' static_cast<error_type> <IntegralCast>
| | |       `-BinaryOperator 0x5605abea7bc8 <col:36, col:51> 'std::uint64_t':'unsigned long' '&'
| | |         |-BinaryOperator 0x5605abea7b70 <col:36, col:46> 'std::uint64_t':'unsigned long' '>>'
| | |         | |-ImplicitCastExpr 0x5605abea7b58 <col:36> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |         | | `-MemberExpr 0x5605abea7b08 <col:36> 'const std::uint64_t':'const unsigned long' lvalue ->value_ 0x5605abea6680
| | |         | |   `-CXXThisExpr 0x5605abea7af8 <col:36> 'const ice::error *' implicit this
| | |         | `-IntegerLiteral 0x5605abea7b38 <col:46> 'int' 32
| | |         `-ImplicitCastExpr 0x5605abea7bb0 <col:51> 'std::uint64_t':'unsigned long' <IntegralCast>
| | |           `-IntegerLiteral 0x5605abea7b90 <col:51> 'int' 255
| | |-CXXMethodDecl 0x5605abea46c0 <line:121:3, line:123:3> line:121:34 constexpr source_location 'ice::source_location () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abea7eb0 <col:67, line:123:3>
| | |   `-ReturnStmt 0x5605abea7ea0 <line:122:5, col:88>
| | |     `-CXXTemporaryObjectExpr 0x5605abea7e68 <col:12, col:88> 'ice::source_location' 'void (std::uint32_t) noexcept' list
| | |       `-CXXStaticCastExpr 0x5605abea7df0 <col:34, col:86> 'std::uint32_t':'unsigned int' static_cast<std::uint32_t> <NoOp>
| | |         `-ImplicitCastExpr 0x5605abea7dd8 <col:61, col:76> 'std::uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
| | |           `-BinaryOperator 0x5605abea7d98 <col:61, col:76> 'std::uint64_t':'unsigned long' '&'
| | |             |-BinaryOperator 0x5605abea7d40 <col:61, col:71> 'std::uint64_t':'unsigned long' '>>'
| | |             | |-ImplicitCastExpr 0x5605abea7d28 <col:61> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |             | | `-MemberExpr 0x5605abea7cd8 <col:61> 'const std::uint64_t':'const unsigned long' lvalue ->value_ 0x5605abea6680
| | |             | |   `-CXXThisExpr 0x5605abea7cc8 <col:61> 'const ice::error *' implicit this
| | |             | `-IntegerLiteral 0x5605abea7d08 <col:71> 'int' 40
| | |             `-ImplicitCastExpr 0x5605abea7d80 <col:76> 'std::uint64_t':'unsigned long' <IntegralCast>
| | |               `-IntegerLiteral 0x5605abea7d60 <col:76> 'unsigned int' 4294967295
| | |-CXXMethodDecl 0x5605abea4820 <line:125:3, line:127:3> line:125:27 constexpr value 'std::uint64_t () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abea7f30 <col:50, line:127:3>
| | |   `-ReturnStmt 0x5605abea7f20 <line:126:5, col:12>
| | |     `-ImplicitCastExpr 0x5605abea7f08 <col:12> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |       `-MemberExpr 0x5605abea7ed8 <col:12> 'const std::uint64_t':'const unsigned long' lvalue ->value_ 0x5605abea6680
| | |         `-CXXThisExpr 0x5605abea7ec8 <col:12> 'const ice::error *' implicit this
| | |-CXXConversionDecl 0x5605abea4920 <line:129:3, line:131:3> line:129:22 used constexpr operator bool 'bool () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abea8008 <col:53, line:131:3>
| | |   `-ReturnStmt 0x5605abea7ff8 <line:130:5, col:22>
| | |     `-BinaryOperator 0x5605abea7fd8 <col:12, col:22> 'bool' '!='
| | |       |-ImplicitCastExpr 0x5605abea7fa8 <col:12> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |       | `-MemberExpr 0x5605abea7f58 <col:12> 'const std::uint64_t':'const unsigned long' lvalue ->value_ 0x5605abea6680
| | |       |   `-CXXThisExpr 0x5605abea7f48 <col:12> 'const ice::error *' implicit this
| | |       `-ImplicitCastExpr 0x5605abea7fc0 <col:22> 'std::uint64_t':'unsigned long' <IntegralCast>
| | |         `-IntegerLiteral 0x5605abea7f88 <col:22> 'int' 0
| | |-FriendDecl 0x5605abea4cc8 <line:133:3, line:135:3> line:133:25
| | | `-FunctionDecl 0x5605abea4be0 parent 0x5605abe99730 <col:3, line:135:3> line:133:25 used constexpr friend_undeclared operator== 'bool (error, error) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abea4a08 <col:36, col:42> col:42 used lhs 'error':'ice::error'
| | |   |-ParmVarDecl 0x5605abea4a88 <col:47, col:53> col:53 used rhs 'error':'ice::error'
| | |   `-CompoundStmt 0x5605abeaa5f8 <col:67, line:135:3>
| | |     `-ReturnStmt 0x5605abeaa5e8 <line:134:5, col:51>
| | |       `-BinaryOperator 0x5605abeaa4f0 <col:12, col:51> 'bool' '=='
| | |         |-ParenExpr 0x5605abea8100 <col:12, col:29> 'std::uint64_t':'unsigned long'
| | |         | `-BinaryOperator 0x5605abea80e0 <col:13, col:26> 'std::uint64_t':'unsigned long' '&'
| | |         |   |-ImplicitCastExpr 0x5605abea8090 <col:13, col:17> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |         |   | `-MemberExpr 0x5605abea8040 <col:13, col:17> 'std::uint64_t':'unsigned long' lvalue .value_ 0x5605abea6680
| | |         |   |   `-DeclRefExpr 0x5605abea8020 <col:13> 'error':'ice::error' lvalue ParmVar 0x5605abea4a08 'lhs' 'error':'ice::error'
| | |         |   `-ImplicitCastExpr 0x5605abea80c8 <col:26> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |         |     `-DeclRefExpr 0x5605abea80a8 <col:26> 'const std::uint64_t':'const unsigned long' lvalue Var 0x5605abea5908 'cmp' 'const std::uint64_t':'const unsigned long' non_odr_use_constant
| | |         `-ParenExpr 0x5605abeaa4d0 <col:34, col:51> 'std::uint64_t':'unsigned long'
| | |           `-BinaryOperator 0x5605abeaa4b0 <col:35, col:48> 'std::uint64_t':'unsigned long' '&'
| | |             |-ImplicitCastExpr 0x5605abeaa460 <col:35, col:39> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |             | `-MemberExpr 0x5605abea8140 <col:35, col:39> 'std::uint64_t':'unsigned long' lvalue .value_ 0x5605abea6680
| | |             |   `-DeclRefExpr 0x5605abea8120 <col:35> 'error':'ice::error' lvalue ParmVar 0x5605abea4a88 'rhs' 'error':'ice::error'
| | |             `-ImplicitCastExpr 0x5605abeaa498 <col:48> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |               `-DeclRefExpr 0x5605abeaa478 <col:48> 'const std::uint64_t':'const unsigned long' lvalue Var 0x5605abea5908 'cmp' 'const std::uint64_t':'const unsigned long' non_odr_use_constant
| | |-FriendDecl 0x5605abea4ff8 <line:137:3, line:139:3> line:137:25
| | | `-FunctionDecl 0x5605abea4f00 parent 0x5605abe99730 <col:3, line:139:3> line:137:25 constexpr friend_undeclared operator== 'bool (error, error_type) noexcept' implicit-inline
| | |   |-ParmVarDecl 0x5605abea4d28 <col:36, col:42> col:42 used error 'error':'ice::error'
| | |   |-ParmVarDecl 0x5605abea4da8 <col:49, col:60> col:60 used type 'error_type':'ice::error_type'
| | |   `-CompoundStmt 0x5605abeaa748 <col:75, line:139:3>
| | |     `-ReturnStmt 0x5605abeaa738 <line:138:5, col:28>
| | |       `-BinaryOperator 0x5605abeaa718 <col:12, col:28> 'bool' '=='
| | |         |-CXXMemberCallExpr 0x5605abeaa6a8 <col:12, col:23> 'ice::error_type'
| | |         | `-MemberExpr 0x5605abeaa630 <col:12, col:18> '<bound member function type>' .type 0x5605abea4530
| | |         |   `-ImplicitCastExpr 0x5605abeaa690 <col:12> 'const ice::error' lvalue <NoOp>
| | |         |     `-DeclRefExpr 0x5605abeaa610 <col:12> 'error':'ice::error' lvalue ParmVar 0x5605abea4d28 'error' 'error':'ice::error'
| | |         `-ImplicitCastExpr 0x5605abeaa700 <col:28> 'error_type':'ice::error_type' <LValueToRValue>
| | |           `-DeclRefExpr 0x5605abeaa6c8 <col:28> 'error_type':'ice::error_type' lvalue ParmVar 0x5605abea4da8 'type' 'error_type':'ice::error_type'
| | |-FriendDecl 0x5605abea5690 <line:141:3, line:144:3> line:142:25
| | | `-FunctionTemplateDecl 0x5605abea54f0 parent 0x5605abe99730 <line:141:3, line:144:3> line:142:25 friend_undeclared operator==
| | |   |-TemplateTypeParmDecl 0x5605abea5048 <line:141:13, col:23> col:23 referenced Concept 0x5605abe9f908 'ErrorCode' depth 0 index 0 Code
| | |   | `-ConceptSpecializationExpr 0x5605abea51b0 <col:13> 'bool' Concept 0x5605abe9f908 'ErrorCode'
| | |   |   |-ImplicitConceptSpecializationDecl 0x5605abea50f8 <line:80:9> col:9
| | |   |   | `-TemplateArgument type 'type-parameter-0-0'
| | |   |   |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | |   |   `-TemplateArgument <line:141:23> type 'Code':'type-parameter-0-0'
| | |   |     `-TemplateTypeParmType 0x5605abea50b0 'Code' dependent depth 0 index 0
| | |   |       `-TemplateTypeParm 0x5605abea5048 'Code'
| | |   |-FunctionDecl 0x5605abea5430 parent 0x5605abe99730 <line:142:3, line:144:3> line:142:25 constexpr friend_undeclared operator== 'bool (error, Code) noexcept' implicit-inline
| | |   | |-ParmVarDecl 0x5605abea5258 <col:36, col:42> col:42 referenced error 'error':'ice::error'
| | |   | |-ParmVarDecl 0x5605abea52d8 <col:49, col:54> col:54 referenced code 'Code'
| | |   | `-CompoundStmt 0x5605abeaba00 <col:69, line:144:3>
| | |   |   `-ReturnStmt 0x5605abeab9f0 <line:143:5, col:62>
| | |   |     `-CXXOperatorCallExpr 0x5605abeab9b8 <col:12, col:62> 'bool' '==' adl
| | |   |       |-ImplicitCastExpr 0x5605abeab9a0 <col:18> 'bool (*)(error, error) noexcept' <FunctionToPointerDecay>
| | |   |       | `-DeclRefExpr 0x5605abeab918 <col:18> 'bool (error, error) noexcept' lvalue Function 0x5605abea4be0 'operator==' 'bool (error, error) noexcept'
| | |   |       |-CXXConstructExpr 0x5605abeab8e8 <col:12> 'error':'ice::error' 'void (const error &) noexcept'
| | |   |       | `-ImplicitCastExpr 0x5605abeab718 <col:12> 'const error':'const ice::error' lvalue <NoOp>
| | |   |       |   `-DeclRefExpr 0x5605abeaa760 <col:12> 'error':'ice::error' lvalue ParmVar 0x5605abea5258 'error' 'error':'ice::error'
| | |   |       `-CXXUnresolvedConstructExpr 0x5605abeaa9d0 <col:21, col:62> 'ice::error' 'ice::error' list
| | |   |         `-InitListExpr 0x5605abeaa980 <col:31, col:62> 'void'
| | |   |           |-DeclRefExpr 0x5605abeaa7f8 <col:33> 'Code' lvalue ParmVar 0x5605abea52d8 'code' 'Code'
| | |   |           `-ConstantExpr 0x5605abeaa930 <col:39, col:60> 'ice::source_location'
| | |   |             |-value: Struct
| | |   |             | `-field: Int 0
| | |   |             `-CXXTemporaryObjectExpr 0x5605abeaa900 <col:39, col:60> 'ice::source_location' 'void () noexcept' list zeroing
| | |   |-FunctionDecl 0x5605abeaac00 parent 0x5605abe99730 <line:142:3, col:60> col:25 constexpr friend_undeclared operator== 'bool (error, ice::error) noexcept' implicit_instantiation implicit-inline
| | |   | |-TemplateArgument type 'ice::error'
| | |   | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   | |   `-CXXRecord 0x5605abea0860 'error'
| | |   | |-ParmVarDecl 0x5605abeaaa68 <col:36, col:42> col:42 error 'error':'ice::error'
| | |   | `-ParmVarDecl 0x5605abeaab18 <col:49, col:54> col:54 code 'ice::error'
| | |   |-FunctionDecl 0x5605abeb2d80 parent 0x5605abe99730 <col:3, line:144:3> line:142:25 used constexpr friend_undeclared operator== 'bool (error, ice::errc) noexcept' implicit_instantiation implicit-inline
| | |   | |-TemplateArgument type 'ice::errc'
| | |   | | `-EnumType 0x5605abe9f270 'ice::errc'
| | |   | |   `-Enum 0x5605abe9f1b8 'errc'
| | |   | |-ParmVarDecl 0x5605abeb2ba0 <col:36, col:42> col:42 used error 'error':'ice::error'
| | |   | |-ParmVarDecl 0x5605abeb2c58 <col:49, col:54> col:54 used code 'ice::errc'
| | |   | `-CompoundStmt 0x5605abeb32b0 <col:69, line:144:3>
| | |   |   `-ReturnStmt 0x5605abeb32a0 <line:143:5, col:62>
| | |   |     `-CXXOperatorCallExpr 0x5605abeb3268 <col:12, col:62> 'bool' '=='
| | |   |       |-ImplicitCastExpr 0x5605abeb3250 <col:18> 'bool (*)(error, error) noexcept' <FunctionToPointerDecay>
| | |   |       | `-DeclRefExpr 0x5605abeb3230 <col:18> 'bool (error, error) noexcept' lvalue Function 0x5605abea4be0 'operator==' 'bool (error, error) noexcept'
| | |   |       |-CXXConstructExpr 0x5605abeb3200 <col:12> 'error':'ice::error' 'void (const error &) noexcept'
| | |   |       | `-ImplicitCastExpr 0x5605abeb31e8 <col:12> 'const error':'const ice::error' lvalue <NoOp>
| | |   |       |   `-DeclRefExpr 0x5605abeb3030 <col:12> 'error':'ice::error' lvalue ParmVar 0x5605abeb2ba0 'error' 'error':'ice::error'
| | |   |       `-CXXTemporaryObjectExpr 0x5605abeb31a8 <col:21, col:62> 'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | |   |         |-ImplicitCastExpr 0x5605abeb3190 <col:33> 'ice::errc' <LValueToRValue>
| | |   |         | `-DeclRefExpr 0x5605abeb3068 <col:33> 'ice::errc' lvalue ParmVar 0x5605abeb2c58 'code' 'ice::errc'
| | |   |         `-CXXTemporaryObjectExpr 0x5605abeaa900 <col:39, col:60> 'ice::source_location' 'void () noexcept' list zeroing
| | |   `-FunctionDecl 0x5605abed1a60 parent 0x5605abe99730 <line:142:3, line:144:3> line:142:25 used constexpr immediate friend_undeclared operator== 'bool (error, errc) noexcept' implicit_instantiation implicit-inline
| | |     |-TemplateArgument type 'errc'
| | |     | `-EnumType 0x5605abec9650 'errc'
| | |     |   `-Enum 0x5605abec9590 'errc'
| | |     |-ParmVarDecl 0x5605abed1880 <col:36, col:42> col:42 used error 'error':'ice::error'
| | |     |-ParmVarDecl 0x5605abed1938 <col:49, col:54> col:54 used code 'errc'
| | |     `-CompoundStmt 0x5605abed1f78 <col:69, line:144:3>
| | |       `-ReturnStmt 0x5605abed1f68 <line:143:5, col:62>
| | |         `-CXXOperatorCallExpr 0x5605abed1f30 <col:12, col:62> 'bool' '=='
| | |           |-ImplicitCastExpr 0x5605abed1f18 <col:18> 'bool (*)(error, error) noexcept' <FunctionToPointerDecay>
| | |           | `-DeclRefExpr 0x5605abed1ef8 <col:18> 'bool (error, error) noexcept' lvalue Function 0x5605abea4be0 'operator==' 'bool (error, error) noexcept'
| | |           |-CXXConstructExpr 0x5605abed1ec8 <col:12> 'error':'ice::error' 'void (const error &) noexcept'
| | |           | `-ImplicitCastExpr 0x5605abed1eb0 <col:12> 'const error':'const ice::error' lvalue <NoOp>
| | |           |   `-DeclRefExpr 0x5605abed1cf8 <col:12> 'error':'ice::error' lvalue ParmVar 0x5605abed1880 'error' 'error':'ice::error'
| | |           `-CXXTemporaryObjectExpr 0x5605abed1e70 <col:21, col:62> 'ice::error' 'void (errc, ice::source_location) noexcept' list immediate-escalating
| | |             |-ImplicitCastExpr 0x5605abed1e58 <col:33> 'errc' <LValueToRValue>
| | |             | `-DeclRefExpr 0x5605abed1d30 <col:33> 'errc' lvalue ParmVar 0x5605abed1938 'code' 'errc'
| | |             `-CXXTemporaryObjectExpr 0x5605abeaa900 <col:39, col:60> 'ice::source_location' 'void () noexcept' list zeroing
| | |-AccessSpecDecl 0x5605abea5748 <line:146:1, col:8> col:1 private
| | |-VarDecl 0x5605abea57c8 <line:148:3, col:40> col:34 referenced bit 'const std::uint64_t':'const unsigned long' static inline constexpr cinit
| | | |-value: Int 9223372036854775808
| | | `-IntegerLiteral 0x5605abea5830 <col:40> 'unsigned long' 9223372036854775808
| | |-VarDecl 0x5605abea5908 <line:151:3, col:40> col:34 referenced cmp 'const std::uint64_t':'const unsigned long' static inline constexpr cinit
| | | |-value: Int 9223373136366403583
| | | `-IntegerLiteral 0x5605abea5970 <col:40> 'unsigned long' 9223373136366403583
| | |-VarDecl 0x5605abea5a48 <line:154:3, col:40> col:34 src 'const std::uint64_t':'const unsigned long' static inline constexpr cinit
| | | |-value: Int 9223370937343148032
| | | `-ImplicitCastExpr 0x5605abea5ad0 <col:40> 'const std::uint64_t':'const unsigned long' <IntegralCast>
| | |   `-IntegerLiteral 0x5605abea5ab0 <col:40> 'long' 9223370937343148032
| | |-FriendDecl 0x5605abea5f18 <line:156:3, line:157:16> col:16
| | | `-ClassTemplateDecl 0x5605abea5ca8 parent 0x5605abe99730 <line:156:3, line:157:16> col:16 friend_undeclared result
| | |   |-TemplateTypeParmDecl 0x5605abea5b50 <line:156:13, col:19> col:19 class depth 0 index 0 T
| | |   |-CXXRecordDecl 0x5605abea5bf8 parent 0x5605abe99730 <line:157:10, col:16> col:16 class result
| | |   |-ClassTemplateSpecializationDecl 0x5605abeb73f0 <line:200:1, line:249:1> line:201:7 class result definition implicit_instantiation
| | |   | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | |   | | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | |   | | |-CopyConstructor trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | |   | | |-MoveConstructor exists trivial user_declared needs_overload_resolution
| | |   | | |-CopyAssignment trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | |   | | |-MoveAssignment exists trivial user_declared needs_overload_resolution
| | |   | | `-Destructor irrelevant trivial user_declared constexpr needs_overload_resolution
| | |   | |-TemplateArgument type 'long'
| | |   | | `-BuiltinType 0x5605aba9ca90 'long'
| | |   | |-FinalAttr 0x5605abeb7628 <col:14> final
| | |   | |-CXXRecordDecl 0x5605abeb76f0 <col:1, col:7> col:7 implicit class result
| | |   | |-StaticAssertDecl 0x5605abeb9c88 <line:202:3, col:31> col:3
| | |   | | |-ConceptSpecializationExpr 0x5605abeb9c28 <col:17, col:30> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |   | | | |-ImplicitConceptSpecializationDecl 0x5605abeb77e8 <line:198:9> col:9
| | |   | | | | `-TemplateArgument type 'long'
| | |   | | | |   `-BuiltinType 0x5605aba9ca90 'long'
| | |   | | | `-TemplateArgument <line:202:29> type 'long'
| | |   | | |   `-SubstTemplateTypeParmType 0x5605abeb77a0 'long' sugar class depth 0 index 0 T
| | |   | | |     |-ClassTemplateSpecialization 0x5605abeb73f0 'result'
| | |   | | |     `-BuiltinType 0x5605aba9ca90 'long'
| | |   | | `-<<<NULL>>>
| | |   | |-AccessSpecDecl 0x5605abeb9cd0 <line:204:1, col:7> col:1 public
| | |   | |-TypeAliasDecl 0x5605abeba288 <line:205:3, col:43> col:9 referenced value_type 'std::remove_cvref_t<long>':'long'
| | |   | | `-ElaboratedType 0x5605abeba220 'std::remove_cvref_t<long>' sugar
| | |   | |   `-TemplateSpecializationType 0x5605abeba1d0 'remove_cvref_t<long>' sugar alias
| | |   | |     |-name: 'remove_cvref_t':'std::remove_cvref_t' qualified
| | |   | |     | `-TypeAliasTemplateDecl 0x5605abcdc810 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3613:3, line:3614:56> col:5 remove_cvref_t
| | |   | |     |-TemplateArgument type 'long'
| | |   | |     | `-SubstTemplateTypeParmType 0x5605abeb77a0 'long' sugar class depth 0 index 0 T
| | |   | |     |   |-ClassTemplateSpecialization 0x5605abeb73f0 'result'
| | |   | |     |   `-BuiltinType 0x5605aba9ca90 'long'
| | |   | |     `-ElaboratedType 0x5605abeba180 'typename remove_cvref<long>::type' sugar
| | |   | |       `-TypedefType 0x5605abeba150 'std::remove_cvref<long>::type' sugar
| | |   | |         |-TypeAlias 0x5605abeba0d8 'type'
| | |   | |         `-UnaryTransformType 0x5605abeba080 '__remove_cvref(long)' sugar remove_cvref
| | |   | |           |-SubstTemplateTypeParmType 0x5605abeba040 'long' sugar typename depth 0 index 0 _Tp
| | |   | |           | |-ClassTemplateSpecialization 0x5605abeb9d80 'remove_cvref'
| | |   | |           | `-BuiltinType 0x5605aba9ca90 'long'
| | |   | |           `-SubstTemplateTypeParmType 0x5605abeba040 'long' sugar typename depth 0 index 0 _Tp
| | |   | |             |-ClassTemplateSpecialization 0x5605abeb9d80 'remove_cvref'
| | |   | |             `-BuiltinType 0x5605aba9ca90 'long'
| | |   | |-TypeAliasDecl 0x5605abeba2f0 </opt/ace/src/unwrap/test.hpp:206:3, col:27> col:9 referenced error_type 'ice::error'
| | |   | | `-ElaboratedType 0x5605abeaa780 'ice::error' sugar
| | |   | |   `-RecordType 0x5605abe9a400 'ice::error'
| | |   | |     `-CXXRecord 0x5605abea0860 'error'
| | |   | |-CXXConstructorDecl 0x5605abeba390 <line:208:3, col:39> col:13 used consteval result 'void () noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb4208
| | |   | | |-CXXCtorInitializer Field 0x5605abebbf78 'error_' 'error_type':'ice::error'
| | |   | | | `-CXXDefaultInitExpr 0x5605abebda88 <col:13> 'error_type':'ice::error' has rewritten init
| | |   | | |   `-CXXConstructExpr 0x5605abebda50 <line:247:20, col:54> 'error_type':'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | |   | | |     |-DeclRefExpr 0x5605abebc7f8 <col:22, col:33> 'ice::errc' EnumConstant 0x5605abe9f350 'invalid_result_state' 'ice::errc'
| | |   | | |     | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |   | | |     |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | |   | | |     `-CXXDefaultArgExpr 0x5605abebc9e8 <<invalid sloc>> 'ice::source_location' has rewritten init
| | |   | | |       `-ImplicitCastExpr 0x5605abebc9d0 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |   | | |         `-CXXConstructExpr 0x5605abebc9a0 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |   | | |           `-CallExpr 0x5605abebc930 <col:44, col:74> 'source_location':'std::source_location'
| | |   | | |             |-ImplicitCastExpr 0x5605abebc918 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |   | | |             | `-DeclRefExpr 0x5605abebc8e8 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |   | | |             |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |   | | |             |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   | | |             `-CXXDefaultArgExpr 0x5605abebc978 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | |   | | |               `-SourceLocExpr 0x5605abebc958 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | |   | | `-CompoundStmt 0x5605abebdad8 </opt/ace/src/unwrap/test.hpp:208:39>
| | |   | |-CXXConstructorDecl 0x5605abeba530 <line:210:3, col:64> col:13 used constexpr result 'void (error_type) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb4480
| | |   | | |-ParmVarDecl 0x5605abeba470 <col:20, col:31> col:31 used error 'error_type':'ice::error'
| | |   | | |-CXXCtorInitializer Field 0x5605abebbf78 'error_' 'error_type':'ice::error'
| | |   | | | `-CXXConstructExpr 0x5605abec1130 <col:49, col:61> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |   | | |   `-ImplicitCastExpr 0x5605abec1118 <col:56> 'const error':'const ice::error' lvalue <NoOp>
| | |   | | |     `-DeclRefExpr 0x5605abec0f90 <col:56> 'error_type':'ice::error' lvalue ParmVar 0x5605abeba470 'error' 'error_type':'ice::error'
| | |   | | `-CompoundStmt 0x5605abeb6910 <col:63, col:64>
| | |   | |-FunctionTemplateDecl 0x5605abebab28 <line:212:3, line:214:80> line:213:13 result
| | |   | | |-TemplateTypeParmDecl 0x5605abeba628 <line:212:13, col:25> col:25 Concept 0x5605abeb3518 'ResultValue' depth 0 index 0 Value
| | |   | | | `-ConceptSpecializationExpr 0x5605abeb46d0 <col:13> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abeb4618 <line:198:9> col:9
| | |   | | |   | `-TemplateArgument type 'type-parameter-1-0'
| | |   | | |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | |   | | |   `-TemplateArgument <line:212:25> type 'Value':'type-parameter-1-0'
| | |   | | |     `-TemplateTypeParmType 0x5605abeb45d0 'Value' dependent depth 1 index 0
| | |   | | |       `-TemplateTypeParm 0x5605abeb4568 'Value'
| | |   | | |-TemplateTypeParmDecl 0x5605abeba6c8 <col:32, col:41> col:41 class depth 0 index 1 ... Args
| | |   | | |-CXXConstructorDecl 0x5605abebaa70 <line:213:3, line:214:80> line:213:13 constexpr result 'void (Value &&, Args &&...) noexcept' implicit-inline
| | |   | | | |-ParmVarDecl 0x5605abeba7c8 <col:20, col:28> col:28 value 'Value &&'
| | |   | | | `-ParmVarDecl 0x5605abeba920 <col:35, col:45> col:45 args 'Args &&...' pack
| | |   | | |-CXXConstructorDecl 0x5605abebe9b0 <col:3, line:214:80> line:213:13 constexpr result 'void (ice::error &&) noexcept' implicit_instantiation implicit-inline
| | |   | | | |-TemplateArgument type 'ice::error'
| | |   | | | | `-RecordType 0x5605abe9a400 'ice::error'
| | |   | | | |   `-CXXRecord 0x5605abea0860 'error'
| | |   | | | |-TemplateArgument pack '<>'
| | |   | | | `-ParmVarDecl 0x5605abebe898 <col:20, col:28> col:28 value 'ice::error &&'
| | |   | | `-CXXConstructorDecl 0x5605abec23a0 <col:3, line:214:80> line:213:13 used constexpr result 'void (int &&) noexcept' implicit_instantiation implicit-inline
| | |   | |   |-TemplateArgument type 'int'
| | |   | |   | `-BuiltinType 0x5605aba9ca70 'int'
| | |   | |   |-TemplateArgument pack '<>'
| | |   | |   |-ParmVarDecl 0x5605abec2288 <col:20, col:28> col:28 used value 'int &&'
| | |   | |   |-CXXCtorInitializer Field 0x5605abebbf78 'error_' 'error_type':'ice::error'
| | |   | |   | `-ConstantExpr 0x5605abec45e8 <line:214:5, col:12> 'error_type':'ice::error'
| | |   | |   |   |-value: Struct
| | |   | |   |   | `-field: Int 0
| | |   | |   |   `-CXXConstructExpr 0x5605abec45c0 <col:5, col:12> 'error_type':'ice::error' 'void () noexcept' zeroing
| | |   | |   |-CXXCtorInitializer Field 0x5605abebbfe0 'value_' 'value_type':'long'
| | |   | |   | `-ImplicitCastExpr 0x5605abec5680 <col:22, col:47> 'value_type':'long' <IntegralCast>
| | |   | |   |   `-ImplicitCastExpr 0x5605abec5668 <col:22, col:47> 'int' <LValueToRValue>
| | |   | |   |     `-CallExpr 0x5605abec55e8 <col:22, col:47> 'int' xvalue
| | |   | |   |       |-ImplicitCastExpr 0x5605abec55d0 <col:22, col:40> 'int &&(*)(typename std::remove_reference<int>::type &) noexcept' <BuiltinFnToFnPtr>
| | |   | |   |       | `-DeclRefExpr 0x5605abec5500 <col:22, col:40> '<builtin fn type>' Function 0x5605abec50b0 'forward' 'int &&(typename std::remove_reference<int>::type &) noexcept' (FunctionTemplate 0x5605abe81360 'forward')
| | |   | |   |       |   `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   | |   |       `-DeclRefExpr 0x5605abec4700 <col:42> 'int' lvalue ParmVar 0x5605abec2288 'value' 'int &&'
| | |   | |   `-CompoundStmt 0x5605abeb6c68 <col:79, col:80>
| | |   | |-CXXConstructorDecl 0x5605abebae10 <line:216:3, col:53> col:13 constexpr result 'void (result<long> &&) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb4eb0
| | |   | | `-ParmVarDecl 0x5605abebacd0 <col:20, col:29> col:29 other 'result<long> &&'
| | |   | |-CXXConstructorDecl 0x5605abebb0c0 <line:217:3, col:58> col:13 constexpr result 'void (const result<long> &) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb5140
| | |   | | `-ParmVarDecl 0x5605abebaf80 <col:20, col:34> col:34 other 'const result<long> &'
| | |   | |-CXXMethodDecl 0x5605abebb358 <line:218:3, col:64> col:21 constexpr operator= 'result<long> &(result<long> &&) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb53d8
| | |   | | `-ParmVarDecl 0x5605abebb230 <col:31, col:40> col:40 other 'result<long> &&'
| | |   | |-CXXMethodDecl 0x5605abebb578 <line:219:3, col:69> col:21 constexpr operator= 'result<long> &(const result<long> &) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb55f8
| | |   | | `-ParmVarDecl 0x5605abebb450 <col:31, col:45> col:45 other 'const result<long> &'
| | |   | |-CXXDestructorDecl 0x5605abebb690 <line:221:3, col:31> col:13 referenced constexpr ~result 'void () noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb5720
| | |   | |-CXXConversionDecl 0x5605abebb7a0 <line:223:3, line:225:3> line:223:22 used constexpr operator bool 'bool () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5860
| | |   | | `-CompoundStmt 0x5605abebdc90 <col:53, line:225:3>
| | |   | |   `-ReturnStmt 0x5605abebdc80 <line:224:5, col:13>
| | |   | |     `-UnaryOperator 0x5605abebdc68 <col:12, col:13> 'bool' prefix '!' cannot overflow
| | |   | |       `-ImplicitCastExpr 0x5605abebdc50 <col:13> 'bool' <UserDefinedConversion>
| | |   | |         `-CXXMemberCallExpr 0x5605abebdc30 <col:13> 'bool'
| | |   | |           `-MemberExpr 0x5605abebdc00 <col:13> '<bound member function type>' .operator bool 0x5605abea4920
| | |   | |             `-MemberExpr 0x5605abebdbd0 <col:13> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abebbf78
| | |   | |               `-CXXThisExpr 0x5605abebdbc0 <col:13> 'const ice::result<long> *' implicit this
| | |   | |-CXXMethodDecl 0x5605abebb9d8 <line:227:3, line:230:3> line:227:25 constexpr operator* 'value_type &() & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5a88
| | |   | |-CXXMethodDecl 0x5605abebbba8 <line:232:3, line:235:3> line:232:26 constexpr operator* 'value_type &&() && noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5c48
| | |   | |-CXXMethodDecl 0x5605abebbd88 <line:237:3, line:240:3> line:237:31 constexpr operator* 'const value_type &() const & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5e18
| | |   | |-CXXMethodDecl 0x5605abebbe70 <line:242:3, line:244:3> line:242:24 used constexpr error 'error_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5f80
| | |   | | `-CompoundStmt 0x5605abebe108 <col:47, line:244:3>
| | |   | |   `-ReturnStmt 0x5605abebe0f8 <line:243:5, col:12>
| | |   | |     `-CXXConstructExpr 0x5605abebe0c8 <col:12> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |   | |       `-MemberExpr 0x5605abebe098 <col:12> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abebbf78
| | |   | |         `-CXXThisExpr 0x5605abebe088 <col:12> 'const ice::result<long> *' implicit this
| | |   | |-AccessSpecDecl 0x5605abebbf48 <line:246:1, col:8> col:1 private
| | |   | |-FieldDecl 0x5605abebbf78 <line:247:3, col:54> col:14 referenced error_ 'error_type':'ice::error'
| | |   | | `-CXXConstructExpr 0x5605abebc798 <col:20, col:54> 'error_type':'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | |   | |   |-DeclRefExpr 0x5605abeb6188 <col:22, col:33> 'ice::errc' EnumConstant 0x5605abe9f350 'invalid_result_state' 'ice::errc'
| | |   | |   | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |   | |   |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | |   | |   `-CXXDefaultArgExpr 0x5605abebc770 <<invalid sloc>> 'ice::source_location' has rewritten init
| | |   | |     `-ImplicitCastExpr 0x5605abebc758 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |   | |       `-CXXConstructExpr 0x5605abebc728 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |   | |         `-CallExpr 0x5605abebc6b8 <col:44, col:74> 'source_location':'std::source_location'
| | |   | |           |-ImplicitCastExpr 0x5605abebc6a0 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |   | |           | `-DeclRefExpr 0x5605abebc670 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |   | |           |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |   | |           |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   | |           `-CXXDefaultArgExpr 0x5605abebc700 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | |   | |             `-SourceLocExpr 0x5605abebc6e0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | |   | `-FieldDecl 0x5605abebbfe0 </opt/ace/src/unwrap/test.hpp:248:3, col:14> col:14 value_ 'value_type':'long'
| | |   |-ClassTemplateSpecialization 0x5605abec5860 'result'
| | |   |-ClassTemplateSpecializationDecl 0x5605abed3408 <line:200:1, line:249:1> line:201:7 class result definition implicit_instantiation
| | |   | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | |   | | |-CopyConstructor trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | |   | | |-MoveConstructor exists trivial user_declared needs_overload_resolution
| | |   | | |-CopyAssignment trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | |   | | |-MoveAssignment exists trivial user_declared needs_overload_resolution
| | |   | | `-Destructor irrelevant trivial user_declared constexpr needs_overload_resolution
| | |   | |-TemplateArgument type 'consteval_move'
| | |   | | `-RecordType 0x5605abeccf70 'consteval_move'
| | |   | |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |   | |-FinalAttr 0x5605abed3740 <col:14> final
| | |   | |-CXXRecordDecl 0x5605abed3808 <col:1, col:7> col:7 implicit class result
| | |   | |-StaticAssertDecl 0x5605abed68b8 <line:202:3, col:31> col:3
| | |   | | |-ConceptSpecializationExpr 0x5605abed6858 <col:17, col:30> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |   | | | |-ImplicitConceptSpecializationDecl 0x5605abed38f8 <line:198:9> col:9
| | |   | | | | `-TemplateArgument type 'consteval_move'
| | |   | | | |   `-RecordType 0x5605abeccf70 'consteval_move'
| | |   | | | |     `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |   | | | `-TemplateArgument <line:202:29> type 'consteval_move'
| | |   | | |   `-SubstTemplateTypeParmType 0x5605abed38b0 'consteval_move' sugar class depth 0 index 0 T
| | |   | | |     |-ClassTemplateSpecialization 0x5605abed3408 'result'
| | |   | | |     `-RecordType 0x5605abeccf70 'consteval_move'
| | |   | | |       `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |   | | `-<<<NULL>>>
| | |   | |-AccessSpecDecl 0x5605abed6900 <line:204:1, col:7> col:1 public
| | |   | |-TypeAliasDecl 0x5605abed6eb8 <line:205:3, col:43> col:9 referenced value_type 'std::remove_cvref_t<consteval_move>':'consteval_move'
| | |   | | `-ElaboratedType 0x5605abed6e50 'std::remove_cvref_t<consteval_move>' sugar
| | |   | |   `-TemplateSpecializationType 0x5605abed6e00 'remove_cvref_t<consteval_move>' sugar alias
| | |   | |     |-name: 'remove_cvref_t':'std::remove_cvref_t' qualified
| | |   | |     | `-TypeAliasTemplateDecl 0x5605abcdc810 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3613:3, line:3614:56> col:5 remove_cvref_t
| | |   | |     |-TemplateArgument type 'consteval_move'
| | |   | |     | `-SubstTemplateTypeParmType 0x5605abed38b0 'consteval_move' sugar class depth 0 index 0 T
| | |   | |     |   |-ClassTemplateSpecialization 0x5605abed3408 'result'
| | |   | |     |   `-RecordType 0x5605abeccf70 'consteval_move'
| | |   | |     |     `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |   | |     `-ElaboratedType 0x5605abed6db0 'typename remove_cvref<consteval_move>::type' sugar
| | |   | |       `-TypedefType 0x5605abed6d80 'std::remove_cvref<consteval_move>::type' sugar
| | |   | |         |-TypeAlias 0x5605abed6d08 'type'
| | |   | |         `-UnaryTransformType 0x5605abed6cb0 '__remove_cvref(consteval_move)' sugar remove_cvref
| | |   | |           |-SubstTemplateTypeParmType 0x5605abed6c70 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |   | |           | |-ClassTemplateSpecialization 0x5605abed69b0 'remove_cvref'
| | |   | |           | `-RecordType 0x5605abeccf70 'consteval_move'
| | |   | |           |   `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |   | |           `-SubstTemplateTypeParmType 0x5605abed6c70 'consteval_move' sugar typename depth 0 index 0 _Tp
| | |   | |             |-ClassTemplateSpecialization 0x5605abed69b0 'remove_cvref'
| | |   | |             `-RecordType 0x5605abeccf70 'consteval_move'
| | |   | |               `-CXXRecord 0x5605abeccec8 'consteval_move'
| | |   | |-TypeAliasDecl 0x5605abed6f20 </opt/ace/src/unwrap/test.hpp:206:3, col:27> col:9 referenced error_type 'ice::error'
| | |   | | `-ElaboratedType 0x5605abeaa780 'ice::error' sugar
| | |   | |   `-RecordType 0x5605abe9a400 'ice::error'
| | |   | |     `-CXXRecord 0x5605abea0860 'error'
| | |   | |-CXXConstructorDecl 0x5605abed6fc0 <line:208:3, col:39> col:13 consteval result 'void () noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb4208
| | |   | |-CXXConstructorDecl 0x5605abed7160 <line:210:3, col:64> col:13 used constexpr result 'void (error_type) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb4480
| | |   | | |-ParmVarDecl 0x5605abed70a0 <col:20, col:31> col:31 used error 'error_type':'ice::error'
| | |   | | |-CXXCtorInitializer Field 0x5605abed8b08 'error_' 'error_type':'ice::error'
| | |   | | | `-CXXConstructExpr 0x5605abeddbc0 <col:49, col:61> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |   | | |   `-ImplicitCastExpr 0x5605abeddba8 <col:56> 'const error':'const ice::error' lvalue <NoOp>
| | |   | | |     `-DeclRefExpr 0x5605abedda20 <col:56> 'error_type':'ice::error' lvalue ParmVar 0x5605abed70a0 'error' 'error_type':'ice::error'
| | |   | | |-CXXCtorInitializer Field 0x5605abed8b70 'value_' 'value_type':'consteval_move'
| | |   | | | `-ConstantExpr 0x5605abeddc98 <col:13> 'value_type':'consteval_move'
| | |   | | |   |-value: Struct
| | |   | | |   | `-field: Int 0
| | |   | | |   `-CXXConstructExpr 0x5605abeddc70 <col:13> 'value_type':'consteval_move' 'void () noexcept'
| | |   | | `-CompoundStmt 0x5605abeb6910 <col:63, col:64>
| | |   | |-FunctionTemplateDecl 0x5605abed76b8 <line:212:3, line:214:80> line:213:13 result
| | |   | | |-TemplateTypeParmDecl 0x5605abed7258 <line:212:13, col:25> col:25 Concept 0x5605abeb3518 'ResultValue' depth 0 index 0 Value
| | |   | | | `-ConceptSpecializationExpr 0x5605abeb46d0 <col:13> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abeb4618 <line:198:9> col:9
| | |   | | |   | `-TemplateArgument type 'type-parameter-1-0'
| | |   | | |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | |   | | |   `-TemplateArgument <line:212:25> type 'Value':'type-parameter-1-0'
| | |   | | |     `-TemplateTypeParmType 0x5605abeb45d0 'Value' dependent depth 1 index 0
| | |   | | |       `-TemplateTypeParm 0x5605abeb4568 'Value'
| | |   | | |-TemplateTypeParmDecl 0x5605abed72f8 <col:32, col:41> col:41 class depth 0 index 1 ... Args
| | |   | | |-CXXConstructorDecl 0x5605abed7600 <line:213:3, line:214:80> line:213:13 constexpr result 'void (Value &&, Args &&...) noexcept' implicit-inline
| | |   | | | |-ParmVarDecl 0x5605abed73f8 <col:20, col:28> col:28 value 'Value &&'
| | |   | | | `-ParmVarDecl 0x5605abed74f0 <col:35, col:45> col:45 args 'Args &&...' pack
| | |   | | |-CXXConstructorDecl 0x5605abed9650 <col:3, line:214:80> line:213:13 used constexpr result 'void (int &&) noexcept' implicit_instantiation implicit-inline
| | |   | | | |-TemplateArgument type 'int'
| | |   | | | | `-BuiltinType 0x5605aba9ca70 'int'
| | |   | | | |-TemplateArgument pack '<>'
| | |   | | | |-ParmVarDecl 0x5605abed9578 <col:20, col:28> col:28 used value 'int &&'
| | |   | | | |-CXXCtorInitializer Field 0x5605abed8b08 'error_' 'error_type':'ice::error'
| | |   | | | | `-ConstantExpr 0x5605abed9b38 <line:214:5, col:12> 'error_type':'ice::error'
| | |   | | | |   |-value: Struct
| | |   | | | |   | `-field: Int 0
| | |   | | | |   `-CXXConstructExpr 0x5605abed9b10 <col:5, col:12> 'error_type':'ice::error' 'void () noexcept' zeroing
| | |   | | | |-CXXCtorInitializer Field 0x5605abed8b70 'value_' 'value_type':'consteval_move'
| | |   | | | | `-CXXConstructExpr 0x5605abedcb00 <col:15, col:77> 'value_type':'consteval_move' 'void (int) noexcept'
| | |   | | | |   `-ImplicitCastExpr 0x5605abedcab8 <col:22, col:47> 'int' <LValueToRValue>
| | |   | | | |     `-CallExpr 0x5605abedca70 <col:22, col:47> 'int' xvalue
| | |   | | | |       |-ImplicitCastExpr 0x5605abedca58 <col:22, col:40> 'int &&(*)(typename std::remove_reference<int>::type &) noexcept' <BuiltinFnToFnPtr>
| | |   | | | |       | `-DeclRefExpr 0x5605abedc9f0 <col:22, col:40> '<builtin fn type>' Function 0x5605abec50b0 'forward' 'int &&(typename std::remove_reference<int>::type &) noexcept' (FunctionTemplate 0x5605abe81360 'forward')
| | |   | | | |       |   `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   | | | |       `-DeclRefExpr 0x5605abed9c50 <col:42> 'int' lvalue ParmVar 0x5605abed9578 'value' 'int &&'
| | |   | | | `-CompoundStmt 0x5605abeb6c68 <col:79, col:80>
| | |   | | `-CXXConstructorDecl 0x5605abedd670 <line:213:3, line:214:80> line:213:13 constexpr result 'void (ice::error &&) noexcept' implicit_instantiation implicit-inline
| | |   | |   |-TemplateArgument type 'ice::error'
| | |   | |   | `-RecordType 0x5605abe9a400 'ice::error'
| | |   | |   |   `-CXXRecord 0x5605abea0860 'error'
| | |   | |   |-TemplateArgument pack '<>'
| | |   | |   `-ParmVarDecl 0x5605abedd598 <col:20, col:28> col:28 value 'ice::error &&'
| | |   | |-CXXConstructorDecl 0x5605abed79a0 <line:216:3, col:53> col:13 constexpr result 'void (result<consteval_move> &&) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb4eb0
| | |   | | `-ParmVarDecl 0x5605abed7860 <col:20, col:29> col:29 other 'result<consteval_move> &&'
| | |   | |-CXXConstructorDecl 0x5605abed7c50 <line:217:3, col:58> col:13 constexpr result 'void (const result<consteval_move> &) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb5140
| | |   | | `-ParmVarDecl 0x5605abed7b10 <col:20, col:34> col:34 other 'const result<consteval_move> &'
| | |   | |-CXXMethodDecl 0x5605abed7ee8 <line:218:3, col:64> col:21 constexpr operator= 'result<consteval_move> &(result<consteval_move> &&) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb53d8
| | |   | | `-ParmVarDecl 0x5605abed7dc0 <col:31, col:40> col:40 other 'result<consteval_move> &&'
| | |   | |-CXXMethodDecl 0x5605abed8108 <line:219:3, col:69> col:21 constexpr operator= 'result<consteval_move> &(const result<consteval_move> &) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb55f8
| | |   | | `-ParmVarDecl 0x5605abed7fe0 <col:31, col:45> col:45 other 'const result<consteval_move> &'
| | |   | |-CXXDestructorDecl 0x5605abed8220 <line:221:3, col:31> col:13 referenced constexpr ~result 'void () noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb5720
| | |   | |-CXXConversionDecl 0x5605abed8330 <line:223:3, line:225:3> line:223:22 used constexpr operator bool 'bool () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5860
| | |   | | `-CompoundStmt 0x5605abedce80 <col:53, line:225:3>
| | |   | |   `-ReturnStmt 0x5605abedce70 <line:224:5, col:13>
| | |   | |     `-UnaryOperator 0x5605abedce58 <col:12, col:13> 'bool' prefix '!' cannot overflow
| | |   | |       `-ImplicitCastExpr 0x5605abedce40 <col:13> 'bool' <UserDefinedConversion>
| | |   | |         `-CXXMemberCallExpr 0x5605abedce20 <col:13> 'bool'
| | |   | |           `-MemberExpr 0x5605abedcdf0 <col:13> '<bound member function type>' .operator bool 0x5605abea4920
| | |   | |             `-MemberExpr 0x5605abedcdc0 <col:13> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abed8b08
| | |   | |               `-CXXThisExpr 0x5605abedcdb0 <col:13> 'const ice::result<consteval_move> *' implicit this
| | |   | |-CXXMethodDecl 0x5605abed8568 <line:227:3, line:230:3> line:227:25 constexpr operator* 'value_type &() & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5a88
| | |   | |-CXXMethodDecl 0x5605abed8738 <line:232:3, line:235:3> line:232:26 constexpr operator* 'value_type &&() && noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5c48
| | |   | |-CXXMethodDecl 0x5605abed8918 <line:237:3, line:240:3> line:237:31 constexpr operator* 'const value_type &() const & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5e18
| | |   | |-CXXMethodDecl 0x5605abed8a00 <line:242:3, line:244:3> line:242:24 used constexpr error 'error_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5f80
| | |   | | `-CompoundStmt 0x5605abede230 <col:47, line:244:3>
| | |   | |   `-ReturnStmt 0x5605abede220 <line:243:5, col:12>
| | |   | |     `-CXXConstructExpr 0x5605abede1f0 <col:12> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |   | |       `-MemberExpr 0x5605abede1c0 <col:12> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abed8b08
| | |   | |         `-CXXThisExpr 0x5605abede1b0 <col:12> 'const ice::result<consteval_move> *' implicit this
| | |   | |-AccessSpecDecl 0x5605abed8ad8 <line:246:1, col:8> col:1 private
| | |   | |-FieldDecl 0x5605abed8b08 <line:247:3, col:14> col:14 referenced error_ 'error_type':'ice::error'
| | |   | `-FieldDecl 0x5605abed8b70 <line:248:3, col:14> col:14 value_ 'value_type':'consteval_move'
| | |   |-ClassTemplateSpecializationDecl 0x5605abede658 <line:200:1, line:249:1> line:201:7 class result definition implicit_instantiation
| | |   | |-DefinitionData standard_layout literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | |   | | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | |   | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | |   | | |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| | |   | | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | |   | | |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| | |   | | `-Destructor irrelevant trivial user_declared constexpr needs_overload_resolution
| | |   | |-TemplateArgument type 'move<false>'
| | |   | | `-RecordType 0x5605abede560 'move<false>'
| | |   | |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| | |   | |-FinalAttr 0x5605abede990 <col:14> final
| | |   | |-CXXRecordDecl 0x5605abedea58 <col:1, col:7> col:7 implicit class result
| | |   | |-StaticAssertDecl 0x5605abee0aa8 <line:202:3, col:31> col:3
| | |   | | |-ConceptSpecializationExpr 0x5605abee0a48 <col:17, col:30> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |   | | | |-ImplicitConceptSpecializationDecl 0x5605abedeb48 <line:198:9> col:9
| | |   | | | | `-TemplateArgument type 'move<false>'
| | |   | | | |   `-RecordType 0x5605abede560 'move<false>'
| | |   | | | |     `-ClassTemplateSpecialization 0x5605abede470 'move'
| | |   | | | `-TemplateArgument <line:202:29> type 'move<false>'
| | |   | | |   `-SubstTemplateTypeParmType 0x5605abedeb00 'move<false>' sugar class depth 0 index 0 T
| | |   | | |     |-ClassTemplateSpecialization 0x5605abede658 'result'
| | |   | | |     `-RecordType 0x5605abede560 'move<false>'
| | |   | | |       `-ClassTemplateSpecialization 0x5605abede470 'move'
| | |   | | `-<<<NULL>>>
| | |   | |-AccessSpecDecl 0x5605abee0af0 <line:204:1, col:7> col:1 public
| | |   | |-TypeAliasDecl 0x5605abee10a8 <line:205:3, col:43> col:9 referenced value_type 'std::remove_cvref_t<move<false>>':'move<false>'
| | |   | | `-ElaboratedType 0x5605abee1040 'std::remove_cvref_t<move<false>>' sugar
| | |   | |   `-TemplateSpecializationType 0x5605abee0ff0 'remove_cvref_t<move<false>>' sugar alias
| | |   | |     |-name: 'remove_cvref_t':'std::remove_cvref_t' qualified
| | |   | |     | `-TypeAliasTemplateDecl 0x5605abcdc810 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3613:3, line:3614:56> col:5 remove_cvref_t
| | |   | |     |-TemplateArgument type 'move<false>'
| | |   | |     | `-SubstTemplateTypeParmType 0x5605abedeb00 'move<false>' sugar class depth 0 index 0 T
| | |   | |     |   |-ClassTemplateSpecialization 0x5605abede658 'result'
| | |   | |     |   `-RecordType 0x5605abede560 'move<false>'
| | |   | |     |     `-ClassTemplateSpecialization 0x5605abede470 'move'
| | |   | |     `-ElaboratedType 0x5605abee0fa0 'typename remove_cvref<move<false>>::type' sugar
| | |   | |       `-TypedefType 0x5605abee0f70 'std::remove_cvref<move<false>>::type' sugar
| | |   | |         |-TypeAlias 0x5605abee0ef8 'type'
| | |   | |         `-UnaryTransformType 0x5605abee0ea0 '__remove_cvref(move<false>)' sugar remove_cvref
| | |   | |           |-SubstTemplateTypeParmType 0x5605abee0e60 'move<false>' sugar typename depth 0 index 0 _Tp
| | |   | |           | |-ClassTemplateSpecialization 0x5605abee0ba0 'remove_cvref'
| | |   | |           | `-RecordType 0x5605abede560 'move<false>'
| | |   | |           |   `-ClassTemplateSpecialization 0x5605abede470 'move'
| | |   | |           `-SubstTemplateTypeParmType 0x5605abee0e60 'move<false>' sugar typename depth 0 index 0 _Tp
| | |   | |             |-ClassTemplateSpecialization 0x5605abee0ba0 'remove_cvref'
| | |   | |             `-RecordType 0x5605abede560 'move<false>'
| | |   | |               `-ClassTemplateSpecialization 0x5605abede470 'move'
| | |   | |-TypeAliasDecl 0x5605abee1110 </opt/ace/src/unwrap/test.hpp:206:3, col:27> col:9 referenced error_type 'ice::error'
| | |   | | `-ElaboratedType 0x5605abeaa780 'ice::error' sugar
| | |   | |   `-RecordType 0x5605abe9a400 'ice::error'
| | |   | |     `-CXXRecord 0x5605abea0860 'error'
| | |   | |-CXXConstructorDecl 0x5605abee11b0 <line:208:3, col:39> col:13 consteval result 'void () noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb4208
| | |   | |-CXXConstructorDecl 0x5605abee1350 <line:210:3, col:64> col:13 used constexpr result 'void (error_type) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb4480
| | |   | | |-ParmVarDecl 0x5605abee1290 <col:20, col:31> col:31 used error 'error_type':'ice::error'
| | |   | | |-CXXCtorInitializer Field 0x5605abee2cf8 'error_' 'error_type':'ice::error'
| | |   | | | `-CXXConstructExpr 0x5605abce2e60 <col:49, col:61> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |   | | |   `-ImplicitCastExpr 0x5605abce2e48 <col:56> 'const error':'const ice::error' lvalue <NoOp>
| | |   | | |     `-DeclRefExpr 0x5605abce2cc0 <col:56> 'error_type':'ice::error' lvalue ParmVar 0x5605abee1290 'error' 'error_type':'ice::error'
| | |   | | |-CXXCtorInitializer Field 0x5605abee3ca0 'value_' 'value_type':'move<false>'
| | |   | | | `-ConstantExpr 0x5605abce2f38 <col:13> 'value_type':'move<false>'
| | |   | | |   |-value: Struct
| | |   | | |   | `-field: Int 0
| | |   | | |   `-CXXConstructExpr 0x5605abce2f10 <col:13> 'value_type':'move<false>' 'void () noexcept'
| | |   | | `-CompoundStmt 0x5605abeb6910 <col:63, col:64>
| | |   | |-FunctionTemplateDecl 0x5605abee18a8 <line:212:3, line:214:80> line:213:13 result
| | |   | | |-TemplateTypeParmDecl 0x5605abee1448 <line:212:13, col:25> col:25 Concept 0x5605abeb3518 'ResultValue' depth 0 index 0 Value
| | |   | | | `-ConceptSpecializationExpr 0x5605abeb46d0 <col:13> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |   | | |   |-ImplicitConceptSpecializationDecl 0x5605abeb4618 <line:198:9> col:9
| | |   | | |   | `-TemplateArgument type 'type-parameter-1-0'
| | |   | | |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | |   | | |   `-TemplateArgument <line:212:25> type 'Value':'type-parameter-1-0'
| | |   | | |     `-TemplateTypeParmType 0x5605abeb45d0 'Value' dependent depth 1 index 0
| | |   | | |       `-TemplateTypeParm 0x5605abeb4568 'Value'
| | |   | | |-TemplateTypeParmDecl 0x5605abee14e8 <col:32, col:41> col:41 class depth 0 index 1 ... Args
| | |   | | |-CXXConstructorDecl 0x5605abee17f0 <line:213:3, line:214:80> line:213:13 constexpr result 'void (Value &&, Args &&...) noexcept' implicit-inline
| | |   | | | |-ParmVarDecl 0x5605abee15e8 <col:20, col:28> col:28 value 'Value &&'
| | |   | | | `-ParmVarDecl 0x5605abee16e0 <col:35, col:45> col:45 args 'Args &&...' pack
| | |   | | |-CXXConstructorDecl 0x5605abee3fe0 <col:3, line:214:80> line:213:13 used constexpr immediate result 'void (int &&) noexcept' implicit_instantiation implicit-inline
| | |   | | | |-TemplateArgument type 'int'
| | |   | | | | `-BuiltinType 0x5605aba9ca70 'int'
| | |   | | | |-TemplateArgument pack '<>'
| | |   | | | |-ParmVarDecl 0x5605abee3f08 <col:20, col:28> col:28 used value 'int &&'
| | |   | | | |-CXXCtorInitializer Field 0x5605abee2cf8 'error_' 'error_type':'ice::error'
| | |   | | | | `-ConstantExpr 0x5605abee44c8 <line:214:5, col:12> 'error_type':'ice::error'
| | |   | | | |   |-value: Struct
| | |   | | | |   | `-field: Int 0
| | |   | | | |   `-CXXConstructExpr 0x5605abee44a0 <col:5, col:12> 'error_type':'ice::error' 'void () noexcept' zeroing
| | |   | | | |-CXXCtorInitializer Field 0x5605abee3ca0 'value_' 'value_type':'move<false>'
| | |   | | | | `-CXXConstructExpr 0x5605abce1cf8 <col:15, col:77> 'value_type':'move<false>' 'void (int) noexcept' immediate-escalating
| | |   | | | |   `-ImplicitCastExpr 0x5605abce1c58 <col:22, col:47> 'int' <LValueToRValue>
| | |   | | | |     `-CallExpr 0x5605abce1c10 <col:22, col:47> 'int' xvalue
| | |   | | | |       |-ImplicitCastExpr 0x5605abce1bf8 <col:22, col:40> 'int &&(*)(typename std::remove_reference<int>::type &) noexcept' <BuiltinFnToFnPtr>
| | |   | | | |       | `-DeclRefExpr 0x5605abce1b90 <col:22, col:40> '<builtin fn type>' Function 0x5605abec50b0 'forward' 'int &&(typename std::remove_reference<int>::type &) noexcept' (FunctionTemplate 0x5605abe81360 'forward')
| | |   | | | |       |   `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   | | | |       `-DeclRefExpr 0x5605abce1638 <col:42> 'int' lvalue ParmVar 0x5605abee3f08 'value' 'int &&'
| | |   | | | `-CompoundStmt 0x5605abeb6c68 <col:79, col:80>
| | |   | | `-CXXConstructorDecl 0x5605abce2910 <line:213:3, line:214:80> line:213:13 constexpr result 'void (ice::error &&) noexcept' implicit_instantiation implicit-inline
| | |   | |   |-TemplateArgument type 'ice::error'
| | |   | |   | `-RecordType 0x5605abe9a400 'ice::error'
| | |   | |   |   `-CXXRecord 0x5605abea0860 'error'
| | |   | |   |-TemplateArgument pack '<>'
| | |   | |   `-ParmVarDecl 0x5605abce2838 <col:20, col:28> col:28 value 'ice::error &&'
| | |   | |-CXXConstructorDecl 0x5605abee1b90 <line:216:3, col:53> col:13 constexpr result 'void (result<move<false>> &&) noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb4eb0
| | |   | | `-ParmVarDecl 0x5605abee1a50 <col:20, col:29> col:29 other 'result<move<false>> &&'
| | |   | |-CXXConstructorDecl 0x5605abee1e40 <line:217:3, col:58> col:13 constexpr result 'void (const result<move<false>> &) noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb5140
| | |   | | `-ParmVarDecl 0x5605abee1d00 <col:20, col:34> col:34 other 'const result<move<false>> &'
| | |   | |-CXXMethodDecl 0x5605abee20d8 <line:218:3, col:64> col:21 constexpr operator= 'result<move<false>> &(result<move<false>> &&) noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb53d8
| | |   | | `-ParmVarDecl 0x5605abee1fb0 <col:31, col:40> col:40 other 'result<move<false>> &&'
| | |   | |-CXXMethodDecl 0x5605abee22f8 <line:219:3, col:69> col:21 constexpr operator= 'result<move<false>> &(const result<move<false>> &) noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb55f8
| | |   | | `-ParmVarDecl 0x5605abee21d0 <col:31, col:45> col:45 other 'const result<move<false>> &'
| | |   | |-CXXDestructorDecl 0x5605abee2410 <line:221:3, col:31> col:13 referenced constexpr ~result 'void () noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb5720
| | |   | |-CXXConversionDecl 0x5605abee2520 <line:223:3, line:225:3> line:223:22 used constexpr operator bool 'bool () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5860
| | |   | | `-CompoundStmt 0x5605abce2090 <col:53, line:225:3>
| | |   | |   `-ReturnStmt 0x5605abce2080 <line:224:5, col:13>
| | |   | |     `-UnaryOperator 0x5605abce2068 <col:12, col:13> 'bool' prefix '!' cannot overflow
| | |   | |       `-ImplicitCastExpr 0x5605abce2050 <col:13> 'bool' <UserDefinedConversion>
| | |   | |         `-CXXMemberCallExpr 0x5605abce2030 <col:13> 'bool'
| | |   | |           `-MemberExpr 0x5605abce2000 <col:13> '<bound member function type>' .operator bool 0x5605abea4920
| | |   | |             `-MemberExpr 0x5605abce1fd0 <col:13> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abee2cf8
| | |   | |               `-CXXThisExpr 0x5605abce1fc0 <col:13> 'const ice::result<move<false>> *' implicit this
| | |   | |-CXXMethodDecl 0x5605abee2758 <line:227:3, line:230:3> line:227:25 constexpr operator* 'value_type &() & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5a88
| | |   | |-CXXMethodDecl 0x5605abee2928 <line:232:3, line:235:3> line:232:26 constexpr operator* 'value_type &&() && noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5c48
| | |   | |-CXXMethodDecl 0x5605abee2b08 <line:237:3, line:240:3> line:237:31 constexpr operator* 'const value_type &() const & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5e18
| | |   | |-CXXMethodDecl 0x5605abee2bf0 <line:242:3, line:244:3> line:242:24 used constexpr error 'error_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5f80
| | |   | | `-CompoundStmt 0x5605abce34b0 <col:47, line:244:3>
| | |   | |   `-ReturnStmt 0x5605abce34a0 <line:243:5, col:12>
| | |   | |     `-CXXConstructExpr 0x5605abce3470 <col:12> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |   | |       `-MemberExpr 0x5605abce3440 <col:12> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abee2cf8
| | |   | |         `-CXXThisExpr 0x5605abce3430 <col:12> 'const ice::result<move<false>> *' implicit this
| | |   | |-AccessSpecDecl 0x5605abee2cc8 <line:246:1, col:8> col:1 private
| | |   | |-FieldDecl 0x5605abee2cf8 <line:247:3, col:14> col:14 referenced error_ 'error_type':'ice::error'
| | |   | `-FieldDecl 0x5605abee3ca0 <line:248:3, col:14> col:14 value_ 'value_type':'move<false>'
| | |   `-ClassTemplateSpecializationDecl 0x5605abce36e8 <line:200:1, line:249:1> line:201:7 class result definition implicit_instantiation
| | |     |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | |     | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | |     | |-CopyConstructor trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | |     | |-MoveConstructor exists trivial user_declared needs_overload_resolution
| | |     | |-CopyAssignment trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | |     | |-MoveAssignment exists trivial user_declared needs_overload_resolution
| | |     | `-Destructor irrelevant trivial user_declared constexpr needs_overload_resolution
| | |     |-TemplateArgument type 'int'
| | |     | `-BuiltinType 0x5605aba9ca70 'int'
| | |     |-FinalAttr 0x5605abce3a20 <col:14> final
| | |     |-CXXRecordDecl 0x5605abce3ae8 <col:1, col:7> col:7 implicit class result
| | |     |-StaticAssertDecl 0x5605abce3cf0 <line:202:3, col:31> col:3
| | |     | |-ConceptSpecializationExpr 0x5605abce3c90 <col:17, col:30> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |     | | |-ImplicitConceptSpecializationDecl 0x5605abce3bd8 <line:198:9> col:9
| | |     | | | `-TemplateArgument type 'int'
| | |     | | |   `-BuiltinType 0x5605aba9ca70 'int'
| | |     | | `-TemplateArgument <line:202:29> type 'int'
| | |     | |   `-SubstTemplateTypeParmType 0x5605abce3b90 'int' sugar class depth 0 index 0 T
| | |     | |     |-ClassTemplateSpecialization 0x5605abce36e8 'result'
| | |     | |     `-BuiltinType 0x5605aba9ca70 'int'
| | |     | `-<<<NULL>>>
| | |     |-AccessSpecDecl 0x5605abce3d38 <line:204:1, col:7> col:1 public
| | |     |-TypeAliasDecl 0x5605abce42f8 <line:205:3, col:43> col:9 referenced value_type 'std::remove_cvref_t<int>':'int'
| | |     | `-ElaboratedType 0x5605abce4290 'std::remove_cvref_t<int>' sugar
| | |     |   `-TemplateSpecializationType 0x5605abce4240 'remove_cvref_t<int>' sugar alias
| | |     |     |-name: 'remove_cvref_t':'std::remove_cvref_t' qualified
| | |     |     | `-TypeAliasTemplateDecl 0x5605abcdc810 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3613:3, line:3614:56> col:5 remove_cvref_t
| | |     |     |-TemplateArgument type 'int'
| | |     |     | `-SubstTemplateTypeParmType 0x5605abce3b90 'int' sugar class depth 0 index 0 T
| | |     |     |   |-ClassTemplateSpecialization 0x5605abce36e8 'result'
| | |     |     |   `-BuiltinType 0x5605aba9ca70 'int'
| | |     |     `-ElaboratedType 0x5605abce41f0 'typename remove_cvref<int>::type' sugar
| | |     |       `-TypedefType 0x5605abce41c0 'std::remove_cvref<int>::type' sugar
| | |     |         |-TypeAlias 0x5605abce4148 'type'
| | |     |         `-UnaryTransformType 0x5605abce40f0 '__remove_cvref(int)' sugar remove_cvref
| | |     |           |-SubstTemplateTypeParmType 0x5605abce40b0 'int' sugar typename depth 0 index 0 _Tp
| | |     |           | |-ClassTemplateSpecialization 0x5605abce3de8 'remove_cvref'
| | |     |           | `-BuiltinType 0x5605aba9ca70 'int'
| | |     |           `-SubstTemplateTypeParmType 0x5605abce40b0 'int' sugar typename depth 0 index 0 _Tp
| | |     |             |-ClassTemplateSpecialization 0x5605abce3de8 'remove_cvref'
| | |     |             `-BuiltinType 0x5605aba9ca70 'int'
| | |     |-TypeAliasDecl 0x5605abce4360 </opt/ace/src/unwrap/test.hpp:206:3, col:27> col:9 referenced error_type 'ice::error'
| | |     | `-ElaboratedType 0x5605abeaa780 'ice::error' sugar
| | |     |   `-RecordType 0x5605abe9a400 'ice::error'
| | |     |     `-CXXRecord 0x5605abea0860 'error'
| | |     |-CXXConstructorDecl 0x5605abce4400 <line:208:3, col:39> col:13 consteval result 'void () noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeb4208
| | |     |-CXXConstructorDecl 0x5605abce45a0 <line:210:3, col:64> col:13 constexpr result 'void (error_type) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb4480
| | |     | `-ParmVarDecl 0x5605abce44e0 <col:20, col:31> col:31 error 'error_type':'ice::error'
| | |     |-FunctionTemplateDecl 0x5605abce4af8 <line:212:3, line:214:80> line:213:13 result
| | |     | |-TemplateTypeParmDecl 0x5605abce4698 <line:212:13, col:25> col:25 Concept 0x5605abeb3518 'ResultValue' depth 0 index 0 Value
| | |     | | `-ConceptSpecializationExpr 0x5605abeb46d0 <col:13> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | |     | |   |-ImplicitConceptSpecializationDecl 0x5605abeb4618 <line:198:9> col:9
| | |     | |   | `-TemplateArgument type 'type-parameter-1-0'
| | |     | |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | |     | |   `-TemplateArgument <line:212:25> type 'Value':'type-parameter-1-0'
| | |     | |     `-TemplateTypeParmType 0x5605abeb45d0 'Value' dependent depth 1 index 0
| | |     | |       `-TemplateTypeParm 0x5605abeb4568 'Value'
| | |     | |-TemplateTypeParmDecl 0x5605abce4738 <col:32, col:41> col:41 class depth 0 index 1 ... Args
| | |     | |-CXXConstructorDecl 0x5605abce4a40 <line:213:3, line:214:80> line:213:13 constexpr result 'void (Value &&, Args &&...) noexcept' implicit-inline
| | |     | | |-ParmVarDecl 0x5605abce4838 <col:20, col:28> col:28 value 'Value &&'
| | |     | | `-ParmVarDecl 0x5605abce4930 <col:35, col:45> col:45 args 'Args &&...' pack
| | |     | `-CXXConstructorDecl 0x5605abce8890 <col:3, line:214:80> line:213:13 used constexpr result 'void (int &&) noexcept' implicit_instantiation implicit-inline
| | |     |   |-TemplateArgument type 'int'
| | |     |   | `-BuiltinType 0x5605aba9ca70 'int'
| | |     |   |-TemplateArgument pack '<>'
| | |     |   |-ParmVarDecl 0x5605abce87b8 <col:20, col:28> col:28 used value 'int &&'
| | |     |   |-CXXCtorInitializer Field 0x5605abce8518 'error_' 'error_type':'ice::error'
| | |     |   | `-ConstantExpr 0x5605abce8ca0 <line:214:5, col:12> 'error_type':'ice::error'
| | |     |   |   |-value: Struct
| | |     |   |   | `-field: Int 0
| | |     |   |   `-CXXConstructExpr 0x5605abce8c78 <col:5, col:12> 'error_type':'ice::error' 'void () noexcept' zeroing
| | |     |   |-CXXCtorInitializer Field 0x5605abce8580 'value_' 'value_type':'int'
| | |     |   | `-ImplicitCastExpr 0x5605abce93d8 <col:22, col:47> 'int' <LValueToRValue>
| | |     |   |   `-CallExpr 0x5605abce9390 <col:22, col:47> 'int' xvalue
| | |     |   |     |-ImplicitCastExpr 0x5605abce9378 <col:22, col:40> 'int &&(*)(typename std::remove_reference<int>::type &) noexcept' <BuiltinFnToFnPtr>
| | |     |   |     | `-DeclRefExpr 0x5605abce9310 <col:22, col:40> '<builtin fn type>' Function 0x5605abec50b0 'forward' 'int &&(typename std::remove_reference<int>::type &) noexcept' (FunctionTemplate 0x5605abe81360 'forward')
| | |     |   |     |   `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |     |   |     `-DeclRefExpr 0x5605abce8db8 <col:42> 'int' lvalue ParmVar 0x5605abce87b8 'value' 'int &&'
| | |     |   `-CompoundStmt 0x5605abeb6c68 <col:79, col:80>
| | |     |-CXXConstructorDecl 0x5605abce4de0 <line:216:3, col:53> col:13 constexpr result 'void (result<int> &&) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb4eb0
| | |     | `-ParmVarDecl 0x5605abce4ca0 <col:20, col:29> col:29 other 'result<int> &&'
| | |     |-CXXConstructorDecl 0x5605abce5090 <line:217:3, col:58> col:13 constexpr result 'void (const result<int> &) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb5140
| | |     | `-ParmVarDecl 0x5605abce4f50 <col:20, col:34> col:34 other 'const result<int> &'
| | |     |-CXXMethodDecl 0x5605abce5328 <line:218:3, col:64> col:21 constexpr operator= 'result<int> &(result<int> &&) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb53d8
| | |     | `-ParmVarDecl 0x5605abce5200 <col:31, col:40> col:40 other 'result<int> &&'
| | |     |-CXXMethodDecl 0x5605abce7b78 <line:219:3, col:69> col:21 constexpr operator= 'result<int> &(const result<int> &) noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb55f8
| | |     | `-ParmVarDecl 0x5605abce5420 <col:31, col:45> col:45 other 'const result<int> &'
| | |     |-CXXDestructorDecl 0x5605abce7c90 <line:221:3, col:31> col:13 referenced constexpr ~result 'void () noexcept' implicit_instantiation default trivial implicit-inline instantiated_from 0x5605abeb5720
| | |     |-CXXConversionDecl 0x5605abce7da0 <line:223:3, line:225:3> line:223:22 used constexpr operator bool 'bool () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5860
| | |     | `-CompoundStmt 0x5605abce9ac0 <col:53, line:225:3>
| | |     |   `-ReturnStmt 0x5605abce9ab0 <line:224:5, col:13>
| | |     |     `-UnaryOperator 0x5605abce9a98 <col:12, col:13> 'bool' prefix '!' cannot overflow
| | |     |       `-ImplicitCastExpr 0x5605abce9a80 <col:13> 'bool' <UserDefinedConversion>
| | |     |         `-CXXMemberCallExpr 0x5605abce9a60 <col:13> 'bool'
| | |     |           `-MemberExpr 0x5605abce9a30 <col:13> '<bound member function type>' .operator bool 0x5605abea4920
| | |     |             `-MemberExpr 0x5605abce9a00 <col:13> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abce8518
| | |     |               `-CXXThisExpr 0x5605abce99f0 <col:13> 'const ice::result<int> *' implicit this
| | |     |-CXXMethodDecl 0x5605abce7fa8 <line:227:3, line:230:3> line:227:25 used constexpr operator* 'value_type &() & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5a88
| | |     | `-CompoundStmt 0x5605abce9da0 <col:48, line:230:3>
| | |     |   |-CallExpr 0x5605abce9d10 <line:228:5, col:25> 'int'
| | |     |   | |-ImplicitCastExpr 0x5605abce9cf8 <col:5> 'int (*)(const char *)' <FunctionToPointerDecay>
| | |     |   | | `-DeclRefExpr 0x5605abeb6e68 <col:5> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | |     |   | `-ImplicitCastExpr 0x5605abce9d38 <col:10> 'const char *' <ArrayToPointerDecay>
| | |     |   |   `-StringLiteral 0x5605abeb6e40 <col:10> 'const char[14]' lvalue "operator*() &"
| | |     |   `-ReturnStmt 0x5605abce9d90 <line:229:5, col:12>
| | |     |     `-MemberExpr 0x5605abce9d60 <col:12> 'value_type':'int' lvalue ->value_ 0x5605abce8580
| | |     |       `-CXXThisExpr 0x5605abce9d50 <col:12> 'ice::result<int> *' implicit this
| | |     |-CXXMethodDecl 0x5605abce8148 <line:232:3, line:235:3> line:232:26 constexpr operator* 'value_type &&() && noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5c48
| | |     |-CXXMethodDecl 0x5605abce8328 <line:237:3, line:240:3> line:237:31 constexpr operator* 'const value_type &() const & noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5e18
| | |     |-CXXMethodDecl 0x5605abce8410 <line:242:3, line:244:3> line:242:24 used constexpr error 'error_type () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeb5f80
| | |     | `-CompoundStmt 0x5605abce9bd8 <col:47, line:244:3>
| | |     |   `-ReturnStmt 0x5605abce9bc8 <line:243:5, col:12>
| | |     |     `-CXXConstructExpr 0x5605abce9b98 <col:12> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |     |       `-MemberExpr 0x5605abce9b68 <col:12> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abce8518
| | |     |         `-CXXThisExpr 0x5605abce9b58 <col:12> 'const ice::result<int> *' implicit this
| | |     |-AccessSpecDecl 0x5605abce84e8 <line:246:1, col:8> col:1 private
| | |     |-FieldDecl 0x5605abce8518 <line:247:3, col:14> col:14 referenced error_ 'error_type':'ice::error'
| | |     `-FieldDecl 0x5605abce8580 <line:248:3, col:14> col:14 referenced value_ 'value_type':'int'
| | |-CXXConstructorDecl 0x5605abea60c0 <line:159:3, col:75> col:22 constexpr error 'void (std::uint64_t) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abea5fc8 <col:28, col:42> col:42 used value 'std::uint64_t':'unsigned long'
| | | |-CXXCtorInitializer Field 0x5605abea6680 'value_' 'std::uint64_t':'unsigned long'
| | | | `-ImplicitCastExpr 0x5605abeaba58 <col:67> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | | |   `-DeclRefExpr 0x5605abeaba18 <col:67> 'std::uint64_t':'unsigned long' lvalue ParmVar 0x5605abea5fc8 'value' 'std::uint64_t':'unsigned long'
| | | `-CompoundStmt 0x5605abeaba98 <col:74, col:75>
| | |-CXXMethodDecl 0x5605abea6550 <line:161:3, line:167:3> line:161:34 used constexpr encode 'std::uint64_t (std::uint64_t, ice::error_type, ice::source_location) noexcept' static implicit-inline
| | | |-ParmVarDecl 0x5605abea6228 <line:162:5, col:19> col:19 used code 'std::uint64_t':'unsigned long'
| | | |-ParmVarDecl 0x5605abea62e8 <line:163:5, col:21> col:21 used type 'ice::error_type'
| | | |-ParmVarDecl 0x5605abea63a8 <line:164:5, col:26> col:26 used source_location 'ice::source_location'
| | | `-CompoundStmt 0x5605abeabe00 <col:52, line:167:3>
| | |   `-ReturnStmt 0x5605abeabdf0 <line:165:5, line:166:53>
| | |     `-BinaryOperator 0x5605abeabdd0 <line:165:12, line:166:53> 'std::uint64_t':'unsigned long' '|'
| | |       |-BinaryOperator 0x5605abeabd78 <line:165:12, line:166:48> 'std::uint64_t':'unsigned long' '|'
| | |       | |-BinaryOperator 0x5605abeabc60 <line:165:12, col:73> 'std::uint64_t':'unsigned long' '|'
| | |       | | |-ImplicitCastExpr 0x5605abeabc48 <col:12> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |       | | | `-DeclRefExpr 0x5605abeabc28 <col:12> 'const std::uint64_t':'const unsigned long' lvalue Var 0x5605abea57c8 'bit' 'const std::uint64_t':'const unsigned long' non_odr_use_constant
| | |       | | `-BinaryOperator 0x5605abeabc08 <col:18, col:73> 'std::uint64_t':'unsigned long' '<<'
| | |       | |   |-CXXStaticCastExpr 0x5605abeabbb8 <col:18, col:68> 'std::uint64_t':'unsigned long' static_cast<std::uint64_t> <NoOp>
| | |       | |   | `-ImplicitCastExpr 0x5605abeabba0 <col:45, col:67> 'std::uint64_t':'unsigned long' <IntegralCast> part_of_explicit_cast
| | |       | |   |   `-CXXMemberCallExpr 0x5605abeabb60 <col:45, col:67> 'std::uint32_t':'unsigned int'
| | |       | |   |     `-MemberExpr 0x5605abeabb18 <col:45, col:61> '<bound member function type>' .value 0x5605abe9a260
| | |       | |   |       `-ImplicitCastExpr 0x5605abeabb48 <col:45> 'const ice::source_location' lvalue <NoOp>
| | |       | |   |         `-DeclRefExpr 0x5605abeabaf8 <col:45> 'ice::source_location' lvalue ParmVar 0x5605abea63a8 'source_location' 'ice::source_location'
| | |       | |   `-IntegerLiteral 0x5605abeabbe8 <col:73> 'int' 40
| | |       | `-BinaryOperator 0x5605abeabd58 <line:166:12, col:48> 'std::uint64_t':'unsigned long' '<<'
| | |       |   |-CXXStaticCastExpr 0x5605abeabd08 <col:12, col:43> 'std::uint64_t':'unsigned long' static_cast<std::uint64_t> <IntegralCast>
| | |       |   | `-ImplicitCastExpr 0x5605abeabcf0 <col:39> 'ice::error_type' <LValueToRValue> part_of_explicit_cast
| | |       |   |   `-DeclRefExpr 0x5605abeabcb0 <col:39> 'ice::error_type' lvalue ParmVar 0x5605abea62e8 'type' 'ice::error_type'
| | |       |   `-IntegerLiteral 0x5605abeabd38 <col:48> 'int' 32
| | |       `-ImplicitCastExpr 0x5605abeabdb8 <col:53> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | |         `-DeclRefExpr 0x5605abeabd98 <col:53> 'std::uint64_t':'unsigned long' lvalue ParmVar 0x5605abea6228 'code' 'std::uint64_t':'unsigned long'
| | |-FieldDecl 0x5605abea6680 <line:174:3, col:24> col:17 referenced value_ 'std::uint64_t':'unsigned long'
| | | `-InitListExpr 0x5605abea7370 <col:23, col:24> 'std::uint64_t':'unsigned long'
| | |-CXXConstructorDecl 0x5605abeab558 <line:94:7> col:7 implicit used constexpr error 'void (const error &) noexcept' inline default trivial
| | | |-ParmVarDecl 0x5605abeab698 <col:7> col:7 used 'const error &'
| | | |-CXXCtorInitializer Field 0x5605abea6680 'value_' 'std::uint64_t':'unsigned long'
| | | | `-ImplicitCastExpr 0x5605abeab898 <col:7> 'std::uint64_t':'unsigned long' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abeab860 <col:7> 'const std::uint64_t':'const unsigned long' lvalue .value_ 0x5605abea6680
| | | |     `-DeclRefExpr 0x5605abeab828 <col:7> 'const error':'const ice::error' lvalue ParmVar 0x5605abeab698 depth 0 index 0 'const error &'
| | | `-CompoundStmt 0x5605abeab8d8 <col:7>
| | `-CXXMethodDecl 0x5605abebc2c8 <col:7> col:7 implicit constexpr operator= 'error &(const error &)' inline default trivial noexcept-unevaluated 0x5605abebc2c8
| |   `-ParmVarDecl 0x5605abebc3f8 <col:7> col:7 'const error &'
| |-StaticAssertDecl 0x5605abeac080 <line:177:1, col:28> col:1
| | |-ExprWithCleanups 0x5605abeac040 <col:15, col:27> 'bool'
| | | `-UnaryOperator 0x5605abeac028 <col:15, col:27> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0x5605abeac010 <col:16, col:27> 'bool' <UserDefinedConversion>
| | |     `-CXXMemberCallExpr 0x5605abeabff0 <col:16, col:27> 'bool'
| | |       `-MemberExpr 0x5605abeabfc0 <col:16, col:27> '<bound member function type>' .operator bool 0x5605abea4920
| | |         `-ImplicitCastExpr 0x5605abeabfa8 <col:16, col:27> 'const ice::error' lvalue <NoOp>
| | |           `-MaterializeTemporaryExpr 0x5605abeabf90 <col:16, col:27> 'ice::error' lvalue
| | |             `-CXXTemporaryObjectExpr 0x5605abeabf60 <col:16, col:27> 'ice::error' 'void () noexcept' list zeroing
| | `-<<<NULL>>>
| |-CXXRecordDecl 0x5605abeac0c8 <line:179:1, line:188:1> line:179:8 struct error_category definition
| | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor defaulted_is_constexpr
| | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | | |-MoveConstructor exists non_trivial user_declared
| | | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | | |-MoveAssignment exists non_trivial user_declared
| | | `-Destructor non_trivial user_declared
| | |-CXXRecordDecl 0x5605abeac200 <col:1, col:8> col:8 implicit referenced struct error_category
| | |-CXXConstructorDecl 0x5605abeac4f0 <line:180:3, col:101> col:3 error_category 'void (error_type, source_location) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abeac2c0 <col:18, col:29> col:29 type 'error_type':'ice::error_type'
| | | |-ParmVarDecl 0x5605abeac340 <col:35, col:88> col:51 code 'source_location':'ice::source_location' cinit
| | | | `-ImplicitCastExpr 0x5605abead260 <col:58, col:88> 'source_location':'ice::source_location' <ConstructorConversion>
| | | |   `-CXXConstructExpr 0x5605abead230 <col:58, col:88> 'source_location':'ice::source_location' 'void (std::source_location) noexcept'
| | | |     `-CallExpr 0x5605abead1b0 <col:58, col:88> 'source_location':'std::source_location'
| | | |       |-ImplicitCastExpr 0x5605abead198 <col:58, col:80> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | | |       | `-DeclRefExpr 0x5605abead168 <col:58, col:80> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | | |       |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | | |       |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | | |       `-CXXDefaultArgExpr 0x5605abead1d8 <<invalid sloc>> 'const std::source_location::__impl *'
| | | |         `-SourceLocExpr 0x5605abde82a8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | | `-CompoundStmt 0x5605abead278 </opt/ace/src/unwrap/test.hpp:180:100, col:101>
| | |-CXXConstructorDecl 0x5605abeac7a8 <line:182:3, col:49> col:3 error_category 'void (error_category &&)' delete implicit-inline
| | | `-ParmVarDecl 0x5605abeac680 <col:18, col:35> col:35 other 'error_category &&'
| | |-CXXConstructorDecl 0x5605abeaca38 <line:183:3, col:54> col:3 error_category 'void (const error_category &)' delete implicit-inline
| | | `-ParmVarDecl 0x5605abeac910 <col:18, col:40> col:40 other 'const error_category &'
| | |-CXXMethodDecl 0x5605abeaccd0 <line:184:3, col:60> col:19 operator= 'error_category &(error_category &&)' delete implicit-inline
| | | `-ParmVarDecl 0x5605abeacb38 <col:29, col:46> col:46 other 'error_category &&'
| | |-CXXMethodDecl 0x5605abeacef0 <line:185:3, col:65> col:19 operator= 'error_category &(const error_category &)' delete implicit-inline
| | | `-ParmVarDecl 0x5605abeacdb8 <col:29, col:51> col:51 other 'const error_category &'
| | `-CXXDestructorDecl 0x5605abead018 <line:187:3, col:30> col:11 used ~error_category 'void () noexcept' virtual implicit-inline
| |   `-CompoundStmt 0x5605abead288 <col:29, col:30>
| |-FunctionDecl 0x5605abead530 <line:190:1, line:192:1> line:190:27 used constexpr get_error_type 'ice::error_type (errc) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abead3e8 <col:42> col:46 'errc':'ice::errc'
| | `-CompoundStmt 0x5605abead758 <col:57, line:192:1>
| |   `-ReturnStmt 0x5605abead748 <line:191:3, col:32>
| |     `-ConstantExpr 0x5605abead728 <col:10, col:32> 'error_type':'ice::error_type'
| |       |-value: Int 0
| |       `-CallExpr 0x5605abead6e8 <col:10, col:32> 'error_type':'ice::error_type'
| |         |-ImplicitCastExpr 0x5605abead6d0 <col:10, col:15> 'error_type (*)(std::uint8_t) noexcept' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x5605abead618 <col:10, col:15> 'error_type (std::uint8_t) noexcept' lvalue Function 0x5605abe9f6f0 'make_error_type' 'error_type (std::uint8_t) noexcept'
| |         |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| |         `-ImplicitCastExpr 0x5605abead710 <col:31> 'std::uint8_t':'unsigned char' <IntegralCast>
| |           `-IntegerLiteral 0x5605abead648 <col:31> 'int' 0
| |-StaticAssertDecl 0x5605abeb27a8 <line:194:1, col:58> col:1
| | |-ExprWithCleanups 0x5605abeb2638 <col:15, col:57> 'bool'
| | | `-ImplicitCastExpr 0x5605abeb2620 <col:15, col:57> 'bool' <UserDefinedConversion>
| | |   `-CXXMemberCallExpr 0x5605abeb2600 <col:15, col:57> 'bool'
| | |     `-MemberExpr 0x5605abeb25d0 <col:15, col:57> '<bound member function type>' .operator bool 0x5605abea4920
| | |       `-ImplicitCastExpr 0x5605abeb25b8 <col:15, col:57> 'const ice::error' lvalue <NoOp>
| | |         `-MaterializeTemporaryExpr 0x5605abeb25a0 <col:15, col:57> 'ice::error' lvalue
| | |           `-CXXTemporaryObjectExpr 0x5605abeb2560 <col:15, col:57> 'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | |             |-DeclRefExpr 0x5605abead818 <col:27, col:38> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
| | |             | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |             |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | |             `-CXXDefaultArgExpr 0x5605abeb22b0 <<invalid sloc>> 'ice::source_location' has rewritten init
| | |               `-ImplicitCastExpr 0x5605abeb2298 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |                 `-CXXConstructExpr 0x5605abeb2268 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |                   `-CallExpr 0x5605abeb21f8 <col:44, col:74> 'source_location':'std::source_location'
| | |                     |-ImplicitCastExpr 0x5605abeb21e0 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |                     | `-DeclRefExpr 0x5605abeb21b0 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |                     |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |                     |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |                     `-CXXDefaultArgExpr 0x5605abeb2240 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | |                       `-SourceLocExpr 0x5605abeb2220 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | `-<<<NULL>>>
| |-StaticAssertDecl 0x5605abeb3428 </opt/ace/src/unwrap/test.hpp:195:1, col:91> col:1
| | |-CXXOperatorCallExpr 0x5605abeb3348 <col:15, col:73> 'bool' '==' adl
| | | |-ImplicitCastExpr 0x5605abeb3330 <col:59> 'bool (*)(error, ice::errc) noexcept' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x5605abeb3010 <col:59> 'bool (error, ice::errc) noexcept' lvalue Function 0x5605abeb2d80 'operator==' 'bool (error, ice::errc) noexcept'
| | | |-CXXTemporaryObjectExpr 0x5605abeb2a90 <col:15, col:57> 'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | | | |-DeclRefExpr 0x5605abeb2878 <col:27, col:38> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
| | | | | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | | | |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | | | `-CXXDefaultArgExpr 0x5605abeb2a68 <<invalid sloc>> 'ice::source_location' has rewritten init
| | | |   `-ImplicitCastExpr 0x5605abeb2a50 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | | |     `-CXXConstructExpr 0x5605abeb2a20 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | | |       `-CallExpr 0x5605abeb29b0 <col:44, col:74> 'source_location':'std::source_location'
| | | |         |-ImplicitCastExpr 0x5605abeb2998 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | | |         | `-DeclRefExpr 0x5605abeb2968 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | | |         |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | | |         |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | | |         `-CXXDefaultArgExpr 0x5605abeb29f8 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | | |           `-SourceLocExpr 0x5605abeb29d8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | | `-DeclRefExpr 0x5605abeb2b18 </opt/ace/src/unwrap/test.hpp:195:62, col:73> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
| | |   `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |     `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | `-<<<NULL>>>
| |-ConceptDecl 0x5605abeb3518 <line:197:1, line:198:64> col:9 ResultValue
| | |-TemplateTypeParmDecl 0x5605abeb3470 <line:197:11, col:17> col:17 referenced class depth 0 index 0 T
| | `-UnaryOperator 0x5605abeb3950 <line:198:23, col:64> 'bool' prefix '!' cannot overflow
| |   `-ConceptSpecializationExpr 0x5605abeb3928 <col:24, col:64> 'bool' Concept 0x5605abd12b80 'same_as'
| |     |-ImplicitConceptSpecializationDecl 0x5605abeb3838 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/concepts:62:13> col:13
| |     | |-TemplateArgument type 'typename decay<type-parameter-0-0>::type'
| |     | | `-DependentNameType 0x5605abc662c0 'typename decay<type-parameter-0-0>::type' dependent
| |     | `-TemplateArgument type 'ice::error'
| |     |   `-RecordType 0x5605abe9a400 'ice::error'
| |     |     `-CXXRecord 0x5605abea0860 'error'
| |     |-TemplateArgument </opt/ace/src/unwrap/test.hpp:198:37, col:51> type 'std::decay_t<T>':'typename decay<type-parameter-0-0>::type'
| |     | `-ElaboratedType 0x5605abeb3730 'std::decay_t<T>' sugar dependent
| |     |   `-TemplateSpecializationType 0x5605abeb36e0 'decay_t<T>' sugar dependent alias
| |     |     |-name: 'std::decay_t' qualified
| |     |     | |-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| |     |     | `-TypeAliasTemplateDecl 0x5605abc91c40 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:2706:3, line:2707:42> col:5 decay_t
| |     |     |-TemplateArgument type 'T':'type-parameter-0-0'
| |     |     | `-TemplateTypeParmType 0x5605abeb34c0 'T' dependent depth 0 index 0
| |     |     |   `-TemplateTypeParm 0x5605abeb3470 'T'
| |     |     `-DependentNameType 0x5605abeb3690 'typename decay<T>::type' dependent
| |     `-TemplateArgument </opt/ace/src/unwrap/test.hpp:198:54, col:59> type 'ice::error'
| |       `-ElaboratedType 0x5605abeaa780 'ice::error' sugar
| |         `-RecordType 0x5605abe9a400 'ice::error'
| |           `-CXXRecord 0x5605abea0860 'error'
| |-ClassTemplateDecl 0x5605abeb3ab0 prev 0x5605abea5ca8 <line:200:1, line:249:1> line:201:7 result
| | |-TemplateTypeParmDecl 0x5605abeb3970 <line:200:11, col:17> col:17 referenced class depth 0 index 0 T
| | |-CXXRecordDecl 0x5605abeb3a18 prev 0x5605abea5bf8 <line:201:1, line:249:1> line:201:7 class result definition
| | | |-DefinitionData standard_layout has_user_declared_ctor has_constexpr_non_copy_move_ctor
| | | | |-DefaultConstructor exists constexpr
| | | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | | | |-MoveConstructor exists user_declared needs_overload_resolution
| | | | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | | | |-MoveAssignment exists user_declared needs_overload_resolution
| | | | `-Destructor irrelevant non_trivial user_declared constexpr needs_overload_resolution
| | | |-FinalAttr 0x5605abeb3b70 <col:14> final
| | | |-CXXRecordDecl 0x5605abeb3bd0 <col:1, col:7> col:7 implicit referenced class result
| | | |-StaticAssertDecl 0x5605abeb3d90 <line:202:3, col:31> col:3
| | | | |-ConceptSpecializationExpr 0x5605abeb3d60 <col:17, col:30> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | | | | |-ImplicitConceptSpecializationDecl 0x5605abeb3ca8 <line:198:9> col:9
| | | | | | `-TemplateArgument type 'type-parameter-0-0'
| | | | | |   `-TemplateTypeParmType 0x5605abb238f0 'type-parameter-0-0' dependent depth 0 index 0
| | | | | `-TemplateArgument <line:202:29> type 'T':'type-parameter-0-0'
| | | | |   `-TemplateTypeParmType 0x5605abeb39c0 'T' dependent depth 0 index 0
| | | | |     `-TemplateTypeParm 0x5605abeb3970 'T'
| | | | `-<<<NULL>>>
| | | |-AccessSpecDecl 0x5605abeb3dd8 <line:204:1, col:7> col:1 public
| | | |-TypeAliasDecl 0x5605abeb4078 <line:205:3, col:43> col:9 referenced value_type 'std::remove_cvref_t<T>':'typename remove_cvref<T>::type'
| | | | `-ElaboratedType 0x5605abeb3fe0 'std::remove_cvref_t<T>' sugar dependent
| | | |   `-TemplateSpecializationType 0x5605abeb3f90 'remove_cvref_t<T>' sugar dependent alias
| | | |     |-name: 'std::remove_cvref_t' qualified
| | | |     | |-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | | |     | `-TypeAliasTemplateDecl 0x5605abcdc810 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/type_traits:3613:3, line:3614:56> col:5 remove_cvref_t
| | | |     |-TemplateArgument type 'T':'type-parameter-0-0'
| | | |     | `-TemplateTypeParmType 0x5605abeb39c0 'T' dependent depth 0 index 0
| | | |     |   `-TemplateTypeParm 0x5605abeb3970 'T'
| | | |     `-DependentNameType 0x5605abeb3f40 'typename remove_cvref<T>::type' dependent
| | | |-TypeAliasDecl 0x5605abeb4130 </opt/ace/src/unwrap/test.hpp:206:3, col:27> col:9 referenced error_type 'ice::error'
| | | | `-ElaboratedType 0x5605abeaa780 'ice::error' sugar
| | | |   `-RecordType 0x5605abe9a400 'ice::error'
| | | |     `-CXXRecord 0x5605abea0860 'error'
| | | |-CXXConstructorDecl 0x5605abeb4208 <line:208:3, col:39> col:13 consteval result<T> 'void () noexcept' default implicit-inline
| | | |-CXXConstructorDecl 0x5605abeb4480 <line:210:3, col:64> col:13 constexpr result<T> 'void (error_type) noexcept' implicit-inline
| | | | |-ParmVarDecl 0x5605abeb4348 <col:20, col:31> col:31 referenced error 'error_type':'ice::error'
| | | | |-CXXCtorInitializer Field 0x5605abeb6088 'error_' 'error_type':'ice::error'
| | | | | `-CXXConstructExpr 0x5605abeb68b8 <col:49, col:61> 'error_type':'ice::error' 'void (const error &) noexcept'
| | | | |   `-ImplicitCastExpr 0x5605abeb68a0 <col:56> 'const error':'const ice::error' lvalue <NoOp>
| | | | |     `-DeclRefExpr 0x5605abeb62d8 <col:56> 'error_type':'ice::error' lvalue ParmVar 0x5605abeb4348 'error' 'error_type':'ice::error'
| | | | `-CompoundStmt 0x5605abeb6910 <col:63, col:64>
| | | |-FunctionTemplateDecl 0x5605abeb4c38 <line:212:3, line:214:80> line:213:13 result<T>
| | | | |-TemplateTypeParmDecl 0x5605abeb4568 <line:212:13, col:25> col:25 referenced Concept 0x5605abeb3518 'ResultValue' depth 1 index 0 Value
| | | | | `-ConceptSpecializationExpr 0x5605abeb46d0 <col:13> 'bool' Concept 0x5605abeb3518 'ResultValue'
| | | | |   |-ImplicitConceptSpecializationDecl 0x5605abeb4618 <line:198:9> col:9
| | | | |   | `-TemplateArgument type 'type-parameter-1-0'
| | | | |   |   `-TemplateTypeParmType 0x5605abb7a890 'type-parameter-1-0' dependent depth 1 index 0
| | | | |   `-TemplateArgument <line:212:25> type 'Value':'type-parameter-1-0'
| | | | |     `-TemplateTypeParmType 0x5605abeb45d0 'Value' dependent depth 1 index 0
| | | | |       `-TemplateTypeParm 0x5605abeb4568 'Value'
| | | | |-TemplateTypeParmDecl 0x5605abeb4748 <col:32, col:41> col:41 referenced class depth 1 index 1 ... Args
| | | | `-CXXConstructorDecl 0x5605abeb4b80 <line:213:3, line:214:80> line:213:13 constexpr result<T> 'void (Value &&, Args &&...) noexcept' implicit-inline
| | | |   |-ParmVarDecl 0x5605abeb48a8 <col:20, col:28> col:28 referenced value 'Value &&'
| | | |   |-ParmVarDecl 0x5605abeb4a28 <col:35, col:45> col:45 referenced args 'Args &&...' pack
| | | |   |-CXXCtorInitializer Field 0x5605abeb6088 'error_' 'error_type':'ice::error'
| | | |   | `-ConstantExpr 0x5605abeb6960 <line:214:5, col:12> 'error_type':'ice::error'
| | | |   |   |-value: Struct
| | | |   |   | `-field: Int 0
| | | |   |   `-CXXConstructExpr 0x5605abeb6938 <col:5, col:12> 'error_type':'ice::error' 'void () noexcept' zeroing
| | | |   |-CXXCtorInitializer Field 0x5605abeb60f0 'value_' 'value_type':'typename remove_cvref<T>::type'
| | | |   | `-ParenListExpr 0x5605abeb6c10 <col:21, col:77> 'NULL TYPE'
| | | |   |   |-CallExpr 0x5605abeb6ab8 <col:22, col:47> '<dependent type>'
| | | |   |   | |-UnresolvedLookupExpr 0x5605abeb6a18 <col:22, col:40> '<dependent type>' lvalue (no ADL) = 'forward' 0x5605abe81360 0x5605abe81a00
| | | |   |   | | `-TemplateArgument type 'Value':'type-parameter-1-0'
| | | |   |   | |   `-TemplateTypeParmType 0x5605abeb45d0 'Value' dependent depth 1 index 0
| | | |   |   | |     `-TemplateTypeParm 0x5605abeb4568 'Value'
| | | |   |   | `-DeclRefExpr 0x5605abeb6a98 <col:42> 'Value' lvalue ParmVar 0x5605abeb48a8 'value' 'Value &&'
| | | |   |   `-PackExpansionExpr 0x5605abeb6bf0 <col:50, col:74> '<dependent type>'
| | | |   |     `-CallExpr 0x5605abeb6bc8 <col:50, col:73> '<dependent type>'
| | | |   |       |-UnresolvedLookupExpr 0x5605abeb6b28 <col:50, col:67> '<dependent type>' lvalue (no ADL) = 'forward' 0x5605abe81360 0x5605abe81a00
| | | |   |       | `-TemplateArgument type 'Args':'type-parameter-1-1'
| | | |   |       |   `-TemplateTypeParmType 0x5605abeb47d0 'Args' dependent contains_unexpanded_pack depth 1 index 1 pack
| | | |   |       |     `-TemplateTypeParm 0x5605abeb4748 'Args'
| | | |   |       `-DeclRefExpr 0x5605abeb6ba8 <col:69> 'Args' lvalue ParmVar 0x5605abeb4a28 'args' 'Args &&...'
| | | |   `-CompoundStmt 0x5605abeb6c68 <col:79, col:80>
| | | |-CXXConstructorDecl 0x5605abeb4eb0 <line:216:3, col:53> col:13 constexpr result<T> 'void (result<T> &&) noexcept' default implicit-inline
| | | | `-ParmVarDecl 0x5605abeb4d80 <col:20, col:29> col:29 other 'result<T> &&'
| | | |-CXXConstructorDecl 0x5605abeb5140 <line:217:3, col:58> col:13 constexpr result<T> 'void (const result<T> &) noexcept' default implicit-inline
| | | | `-ParmVarDecl 0x5605abeb5010 <col:20, col:34> col:34 other 'const result<T> &'
| | | |-CXXMethodDecl 0x5605abeb53d8 <line:218:3, col:64> col:21 constexpr operator= 'result<T> &(result<T> &&) noexcept' default implicit-inline
| | | | `-ParmVarDecl 0x5605abeb5240 <col:31, col:40> col:40 other 'result<T> &&'
| | | |-CXXMethodDecl 0x5605abeb55f8 <line:219:3, col:69> col:21 constexpr operator= 'result<T> &(const result<T> &) noexcept' default implicit-inline
| | | | `-ParmVarDecl 0x5605abeb54c0 <col:31, col:45> col:45 other 'const result<T> &'
| | | |-CXXDestructorDecl 0x5605abeb5720 <line:221:3, col:31> col:13 constexpr ~result<T> 'void ()' default not_selected implicit-inline
| | | |-CXXConversionDecl 0x5605abeb5860 <line:223:3, line:225:3> line:223:22 constexpr operator bool 'bool () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abeb6d80 <col:53, line:225:3>
| | | |   `-ReturnStmt 0x5605abeb6d70 <line:224:5, col:13>
| | | |     `-UnaryOperator 0x5605abeb6d58 <col:12, col:13> 'bool' prefix '!' cannot overflow
| | | |       `-ImplicitCastExpr 0x5605abeb6d40 <col:13> 'bool' <UserDefinedConversion>
| | | |         `-CXXMemberCallExpr 0x5605abeb6ce8 <col:13> 'bool'
| | | |           `-MemberExpr 0x5605abeb6cb8 <col:13> '<bound member function type>' .operator bool 0x5605abea4920
| | | |             `-MemberExpr 0x5605abeb6c88 <col:13> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abeb6088
| | | |               `-CXXThisExpr 0x5605abeb6c78 <col:13> 'const result<T> *' implicit this
| | | |-CXXMethodDecl 0x5605abeb5a88 <line:227:3, line:230:3> line:227:25 constexpr operator* 'value_type &() & noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abeb6f68 <col:48, line:230:3>
| | | |   |-CallExpr 0x5605abeb6ed8 <line:228:5, col:25> 'int'
| | | |   | |-ImplicitCastExpr 0x5605abeb6ec0 <col:5> 'int (*)(const char *)' <FunctionToPointerDecay>
| | | |   | | `-DeclRefExpr 0x5605abeb6e68 <col:5> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | | |   | `-ImplicitCastExpr 0x5605abeb6f00 <col:10> 'const char *' <ArrayToPointerDecay>
| | | |   |   `-StringLiteral 0x5605abeb6e40 <col:10> 'const char[14]' lvalue "operator*() &"
| | | |   `-ReturnStmt 0x5605abeb6f58 <line:229:5, col:12>
| | | |     `-MemberExpr 0x5605abeb6f28 <col:12> 'value_type':'typename remove_cvref<T>::type' lvalue ->value_ 0x5605abeb60f0
| | | |       `-CXXThisExpr 0x5605abeb6f18 <col:12> 'result<T> *' implicit this
| | | |-CXXMethodDecl 0x5605abeb5c48 <line:232:3, line:235:3> line:232:26 constexpr operator* 'value_type &&() && noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abeb7150 <col:50, line:235:3>
| | | |   |-CallExpr 0x5605abeb7030 <line:233:5, col:26> 'int'
| | | |   | |-ImplicitCastExpr 0x5605abeb7018 <col:5> 'int (*)(const char *)' <FunctionToPointerDecay>
| | | |   | | `-DeclRefExpr 0x5605abeb6ff8 <col:5> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | | |   | `-ImplicitCastExpr 0x5605abeb7058 <col:10> 'const char *' <ArrayToPointerDecay>
| | | |   |   `-StringLiteral 0x5605abeb6fd0 <col:10> 'const char[15]' lvalue "operator*() &&"
| | | |   `-ReturnStmt 0x5605abeb7140 <line:234:5, col:28>
| | | |     `-CallExpr 0x5605abeb7118 <col:12, col:28> '<dependent type>'
| | | |       |-UnresolvedLookupExpr 0x5605abeb7090 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5605abe850d8
| | | |       `-MemberExpr 0x5605abeb70e8 <col:22> 'value_type':'typename remove_cvref<T>::type' lvalue ->value_ 0x5605abeb60f0
| | | |         `-CXXThisExpr 0x5605abeb70d8 <col:22> 'result<T> *' implicit this
| | | |-CXXMethodDecl 0x5605abeb5e18 <line:237:3, line:240:3> line:237:31 constexpr operator* 'const value_type &() const & noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abeb72e8 <col:60, line:240:3>
| | | |   |-CallExpr 0x5605abeb7258 <line:238:5, col:31> 'int'
| | | |   | |-ImplicitCastExpr 0x5605abeb7240 <col:5> 'int (*)(const char *)' <FunctionToPointerDecay>
| | | |   | | `-DeclRefExpr 0x5605abeb7220 <col:5> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | | |   | `-ImplicitCastExpr 0x5605abeb7280 <col:10> 'const char *' <ArrayToPointerDecay>
| | | |   |   `-StringLiteral 0x5605abeb71f0 <col:10> 'const char[20]' lvalue "operator*() const &"
| | | |   `-ReturnStmt 0x5605abeb72d8 <line:239:5, col:12>
| | | |     `-MemberExpr 0x5605abeb72a8 <col:12> 'const value_type':'const typename remove_cvref<T>::type' lvalue ->value_ 0x5605abeb60f0
| | | |       `-CXXThisExpr 0x5605abeb7298 <col:12> 'const result<T> *' implicit this
| | | |-CXXMethodDecl 0x5605abeb5f80 <line:242:3, line:244:3> line:242:24 constexpr error 'error_type () const noexcept' implicit-inline
| | | | `-CompoundStmt 0x5605abeb7388 <col:47, line:244:3>
| | | |   `-ReturnStmt 0x5605abeb7378 <line:243:5, col:12>
| | | |     `-CXXConstructExpr 0x5605abeb7348 <col:12> 'error_type':'ice::error' 'void (const error &) noexcept'
| | | |       `-MemberExpr 0x5605abeb7318 <col:12> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abeb6088
| | | |         `-CXXThisExpr 0x5605abeb7308 <col:12> 'const result<T> *' implicit this
| | | |-AccessSpecDecl 0x5605abeb6048 <line:246:1, col:8> col:1 private
| | | |-FieldDecl 0x5605abeb6088 <line:247:3, col:54> col:14 referenced error_ 'error_type':'ice::error'
| | | | `-CXXConstructExpr 0x5605abeb62a0 <col:20, col:54> 'error_type':'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | | |   |-DeclRefExpr 0x5605abeb6188 <col:22, col:33> 'ice::errc' EnumConstant 0x5605abe9f350 'invalid_result_state' 'ice::errc'
| | | |   | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | | |   |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | | |   `-CXXDefaultArgExpr 0x5605abeb6250 <<invalid sloc>> 'ice::source_location'
| | | |     `-ImplicitCastExpr 0x5605abeb2170 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | | |       `-CXXConstructExpr 0x5605abeb2140 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | | |         `-CallExpr 0x5605abeb20d0 <col:44, col:74> 'source_location':'std::source_location'
| | | |           |-ImplicitCastExpr 0x5605abeb20b8 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x5605abea6730 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | | |           |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | | |           |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | | |           `-CXXDefaultArgExpr 0x5605abeb2118 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | | |             `-SourceLocExpr 0x5605abeb20f8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | | `-FieldDecl 0x5605abeb60f0 </opt/ace/src/unwrap/test.hpp:248:3, col:14> col:14 referenced value_ 'value_type':'typename remove_cvref<T>::type'
| | |-ClassTemplateSpecialization 0x5605abeb73f0 'result'
| | |-ClassTemplateSpecialization 0x5605abec5860 'result'
| | |-ClassTemplateSpecialization 0x5605abed3408 'result'
| | |-ClassTemplateSpecialization 0x5605abede658 'result'
| | `-ClassTemplateSpecialization 0x5605abce36e8 'result'
| |-StaticAssertDecl 0x5605abebde58 <line:251:1, col:35> col:1
| | |-ExprWithCleanups 0x5605abebdcf8 <col:15, col:34> 'bool'
| | | `-UnaryOperator 0x5605abebdce0 <col:15, col:34> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0x5605abebdcc8 <col:16, col:34> 'bool' <UserDefinedConversion>
| | |     `-CXXMemberCallExpr 0x5605abebdca8 <col:16, col:34> 'bool'
| | |       `-MemberExpr 0x5605abebdb60 <col:16, col:34> '<bound member function type>' .operator bool 0x5605abebb7a0
| | |         `-ImplicitCastExpr 0x5605abebdb48 <col:16, col:34> 'const ice::result<long>' lvalue <NoOp>
| | |           `-MaterializeTemporaryExpr 0x5605abebdb30 <col:16, col:34> 'ice::result<long>' lvalue
| | |             `-CXXTemporaryObjectExpr 0x5605abebdae8 <col:16, col:34> 'ice::result<long>' 'void () noexcept' list zeroing
| | `-<<<NULL>>>
| |-StaticAssertDecl 0x5605abebe2e0 <line:252:1, col:77> col:1
| | |-ExprWithCleanups 0x5605abebe2a0 <col:15, col:57> 'bool'
| | | `-CXXOperatorCallExpr 0x5605abebe268 <col:15, col:57> 'bool' '==' adl
| | |   |-ImplicitCastExpr 0x5605abebe250 <col:43> 'bool (*)(error, ice::errc) noexcept' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x5605abebe230 <col:43> 'bool (error, ice::errc) noexcept' lvalue Function 0x5605abeb2d80 'operator==' 'bool (error, ice::errc) noexcept'
| | |   |-CXXMemberCallExpr 0x5605abebe138 <col:15, col:41> 'error_type':'ice::error'
| | |   | `-MemberExpr 0x5605abebe058 <col:15, col:35> '<bound member function type>' .error 0x5605abebbe70
| | |   |   `-ImplicitCastExpr 0x5605abebe120 <col:15, col:33> 'const ice::result<long>' xvalue <NoOp>
| | |   |     `-MaterializeTemporaryExpr 0x5605abebe040 <col:15, col:33> 'ice::result<long>' xvalue
| | |   |       `-CXXTemporaryObjectExpr 0x5605abebe010 <col:15, col:33> 'ice::result<long>' 'void () noexcept' list zeroing
| | |   `-DeclRefExpr 0x5605abebe1a0 <col:46, col:57> 'ice::errc' EnumConstant 0x5605abe9f350 'invalid_result_state' 'ice::errc'
| | |     `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |       `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | `-<<<NULL>>>
| |-StaticAssertDecl 0x5605abec1330 <line:254:1, col:80> col:1
| | |-ExprWithCleanups 0x5605abec1270 <col:15, col:79> 'bool'
| | | `-UnaryOperator 0x5605abec1258 <col:15, col:79> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0x5605abec1240 <col:16, col:79> 'bool' <UserDefinedConversion>
| | |     `-CXXMemberCallExpr 0x5605abec1220 <col:16, col:79> 'bool'
| | |       `-MemberExpr 0x5605abec11f0 <col:16, col:79> '<bound member function type>' .operator bool 0x5605abebb7a0
| | |         `-ImplicitCastExpr 0x5605abec11d8 <col:16, col:79> 'const ice::result<long>' lvalue <NoOp>
| | |           `-MaterializeTemporaryExpr 0x5605abec11c0 <col:16, col:79> 'ice::result<long>' lvalue
| | |             `-CXXTemporaryObjectExpr 0x5605abec1188 <col:16, col:79> 'ice::result<long>' 'void (error_type) noexcept' list
| | |               `-CXXTemporaryObjectExpr 0x5605abebe6d0 <col:35, col:77> 'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | |                 |-DeclRefExpr 0x5605abebe4b8 <col:47, col:58> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
| | |                 | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |                 |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | |                 `-CXXDefaultArgExpr 0x5605abebe6a8 <<invalid sloc>> 'ice::source_location' has rewritten init
| | |                   `-ImplicitCastExpr 0x5605abebe690 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |                     `-CXXConstructExpr 0x5605abebe660 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |                       `-CallExpr 0x5605abebe5f0 <col:44, col:74> 'source_location':'std::source_location'
| | |                         |-ImplicitCastExpr 0x5605abebe5d8 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |                         | `-DeclRefExpr 0x5605abebe5a8 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |                         |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |                         |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |                         `-CXXDefaultArgExpr 0x5605abebe638 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | |                           `-SourceLocExpr 0x5605abebe618 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | `-<<<NULL>>>
| |-StaticAssertDecl 0x5605abec1fa0 </opt/ace/src/unwrap/test.hpp:255:1, col:120> col:1
| | |-ExprWithCleanups 0x5605abec1ee0 <col:15, col:102> 'bool'
| | | `-CXXOperatorCallExpr 0x5605abec1ea8 <col:15, col:102> 'bool' '==' adl
| | |   |-ImplicitCastExpr 0x5605abec1e90 <col:88> 'bool (*)(error, ice::errc) noexcept' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x5605abec1e70 <col:88> 'bool (error, ice::errc) noexcept' lvalue Function 0x5605abeb2d80 'operator==' 'bool (error, ice::errc) noexcept'
| | |   |-CXXMemberCallExpr 0x5605abec1d78 <col:15, col:86> 'error_type':'ice::error'
| | |   | `-MemberExpr 0x5605abec1d30 <col:15, col:80> '<bound member function type>' .error 0x5605abebbe70
| | |   |   `-ImplicitCastExpr 0x5605abec1d60 <col:15, col:78> 'const ice::result<long>' xvalue <NoOp>
| | |   |     `-MaterializeTemporaryExpr 0x5605abec1d18 <col:15, col:78> 'ice::result<long>' xvalue
| | |   |       `-CXXTemporaryObjectExpr 0x5605abec1ce0 <col:15, col:78> 'ice::result<long>' 'void (error_type) noexcept' list
| | |   |         `-CXXTemporaryObjectExpr 0x5605abec1720 <col:34, col:76> 'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | |   |           |-DeclRefExpr 0x5605abec1508 <col:46, col:57> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
| | |   |           | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |   |           |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | |   |           `-CXXDefaultArgExpr 0x5605abec16f8 <<invalid sloc>> 'ice::source_location' has rewritten init
| | |   |             `-ImplicitCastExpr 0x5605abec16e0 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |   |               `-CXXConstructExpr 0x5605abec16b0 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |   |                 `-CallExpr 0x5605abec1640 <col:44, col:74> 'source_location':'std::source_location'
| | |   |                   |-ImplicitCastExpr 0x5605abec1628 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |   |                   | `-DeclRefExpr 0x5605abec15f8 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |   |                   |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |   |                   |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |   |                   `-CXXDefaultArgExpr 0x5605abec1688 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | |   |                     `-SourceLocExpr 0x5605abec1668 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | |   `-DeclRefExpr 0x5605abec1de0 </opt/ace/src/unwrap/test.hpp:255:91, col:102> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
| | |     `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |       `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | `-<<<NULL>>>
| |-StaticAssertDecl 0x5605abec57d8 <line:257:1, col:37> col:1
| | |-ExprWithCleanups 0x5605abec5798 <col:15, col:36> 'bool'
| | | `-ImplicitCastExpr 0x5605abec5780 <col:15, col:36> 'bool' <UserDefinedConversion>
| | |   `-CXXMemberCallExpr 0x5605abec5760 <col:15, col:36> 'bool'
| | |     `-MemberExpr 0x5605abec5730 <col:15, col:36> '<bound member function type>' .operator bool 0x5605abebb7a0
| | |       `-ImplicitCastExpr 0x5605abec5718 <col:15, col:36> 'const ice::result<long>' lvalue <NoOp>
| | |         `-MaterializeTemporaryExpr 0x5605abec5700 <col:15, col:36> 'ice::result<long>' lvalue
| | |           `-CXXTemporaryObjectExpr 0x5605abec56c8 <col:15, col:36> 'ice::result<long>' 'void (int &&) noexcept' list
| | |             `-MaterializeTemporaryExpr 0x5605abec44f0 <col:34> 'int' xvalue
| | |               `-IntegerLiteral 0x5605abec20e8 <col:34> 'int' 1
| | `-<<<NULL>>>
| |-ClassTemplateSpecializationDecl 0x5605abec5860 <line:260:1, line:288:1> line:261:7 class result definition explicit_specialization
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | | |-MoveConstructor exists trivial user_declared needs_overload_resolution
| | | |-CopyAssignment trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | | |-MoveAssignment exists trivial user_declared needs_overload_resolution
| | | `-Destructor irrelevant trivial user_declared constexpr needs_overload_resolution
| | |-TemplateArgument type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-FinalAttr 0x5605abec5a30 <col:20> final
| | |-CXXRecordDecl 0x5605abec6988 <col:1, col:7> col:7 implicit referenced class result
| | |-AccessSpecDecl 0x5605abec6a38 <line:262:1, col:7> col:1 public
| | |-TypeAliasDecl 0x5605abec6a78 <line:263:3, col:22> col:9 referenced value_type 'void'
| | | `-BuiltinType 0x5605aba9c9d0 'void'
| | |-TypeAliasDecl 0x5605abec6b30 <line:264:3, col:27> col:9 referenced error_type 'ice::error'
| | | `-ElaboratedType 0x5605abeaa780 'ice::error' sugar
| | |   `-RecordType 0x5605abe9a400 'ice::error'
| | |     `-CXXRecord 0x5605abea0860 'error'
| | |-CXXConstructorDecl 0x5605abec6c08 <line:266:3, col:39> col:13 used consteval result 'void () noexcept' default implicit-inline
| | | |-CXXCtorInitializer Field 0x5605abec7ea8 'error_' 'error_type':'ice::error'
| | | | `-CXXConstructExpr 0x5605abec8528 <col:13> 'error_type':'ice::error' 'void () noexcept'
| | | `-CompoundStmt 0x5605abec8578 <col:39>
| | |-CXXConstructorDecl 0x5605abec6e40 <line:267:3, col:64> col:13 used constexpr result 'void (error_type) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abec6d48 <col:20, col:31> col:31 used error 'error_type':'ice::error'
| | | |-CXXCtorInitializer Field 0x5605abec7ea8 'error_' 'error_type':'ice::error'
| | | | `-CXXConstructExpr 0x5605abec80b0 <col:49, col:61> 'error_type':'ice::error' 'void (const error &) noexcept'
| | | |   `-ImplicitCastExpr 0x5605abec8068 <col:56> 'const error':'const ice::error' lvalue <NoOp>
| | | |     `-DeclRefExpr 0x5605abec7ef8 <col:56> 'error_type':'ice::error' lvalue ParmVar 0x5605abec6d48 'error' 'error_type':'ice::error'
| | | `-CompoundStmt 0x5605abec8108 <col:63, col:64>
| | |-CXXConstructorDecl 0x5605abec7100 <line:269:3, col:53> col:13 constexpr result 'void (result<void> &&) noexcept' default trivial implicit-inline
| | | `-ParmVarDecl 0x5605abec6fd0 <col:20, col:29> col:29 other 'result<void> &&'
| | |-CXXConstructorDecl 0x5605abec7390 <line:270:3, col:58> col:13 constexpr result 'void (const result<void> &) noexcept' default trivial implicit-inline
| | | `-ParmVarDecl 0x5605abec7260 <col:20, col:34> col:34 other 'const result<void> &'
| | |-CXXMethodDecl 0x5605abec7628 <line:271:3, col:64> col:21 constexpr operator= 'result<void> &(result<void> &&) noexcept' default trivial implicit-inline
| | | `-ParmVarDecl 0x5605abec7490 <col:31, col:40> col:40 other 'result<void> &&'
| | |-CXXMethodDecl 0x5605abec7848 <line:272:3, col:69> col:21 constexpr operator= 'result<void> &(const result<void> &) noexcept' default trivial implicit-inline
| | | `-ParmVarDecl 0x5605abec7710 <col:31, col:45> col:45 other 'const result<void> &'
| | |-CXXDestructorDecl 0x5605abec7970 <line:274:3, col:31> col:13 referenced constexpr ~result 'void () noexcept' default trivial implicit-inline
| | |-CXXConversionDecl 0x5605abec7af0 <line:276:3, line:278:3> line:276:22 used constexpr operator bool 'bool () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abec8220 <col:53, line:278:3>
| | |   `-ReturnStmt 0x5605abec8210 <line:277:5, col:13>
| | |     `-UnaryOperator 0x5605abec81f8 <col:12, col:13> 'bool' prefix '!' cannot overflow
| | |       `-ImplicitCastExpr 0x5605abec81e0 <col:13> 'bool' <UserDefinedConversion>
| | |         `-CXXMemberCallExpr 0x5605abec8188 <col:13> 'bool'
| | |           `-MemberExpr 0x5605abec8158 <col:13> '<bound member function type>' .operator bool 0x5605abea4920
| | |             `-MemberExpr 0x5605abec8128 <col:13> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abec7ea8
| | |               `-CXXThisExpr 0x5605abec8118 <col:13> 'const ice::result<void> *' implicit this
| | |-CXXMethodDecl 0x5605abec7c80 <line:280:3, col:52> col:24 constexpr operator* 'value_type () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abec8238 <col:51, col:52>
| | |-CXXMethodDecl 0x5605abec7da0 <line:282:3, line:284:3> line:282:24 used constexpr error 'error_type () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abec82c8 <col:47, line:284:3>
| | |   `-ReturnStmt 0x5605abec82b8 <line:283:5, col:12>
| | |     `-CXXConstructExpr 0x5605abec8288 <col:12> 'error_type':'ice::error' 'void (const error &) noexcept'
| | |       `-MemberExpr 0x5605abec8258 <col:12> 'const error_type':'const ice::error' lvalue ->error_ 0x5605abec7ea8
| | |         `-CXXThisExpr 0x5605abec8248 <col:12> 'const ice::result<void> *' implicit this
| | |-AccessSpecDecl 0x5605abec7e68 <line:286:1, col:8> col:1 private
| | `-FieldDecl 0x5605abec7ea8 <line:287:3, col:14> col:14 referenced error_ 'error_type':'ice::error'
| |-StaticAssertDecl 0x5605abec8690 <line:290:1, col:34> col:1
| | |-ExprWithCleanups 0x5605abec8650 <col:15, col:33> 'bool'
| | | `-ImplicitCastExpr 0x5605abec8638 <col:15, col:33> 'bool' <UserDefinedConversion>
| | |   `-CXXMemberCallExpr 0x5605abec8618 <col:15, col:33> 'bool'
| | |     `-MemberExpr 0x5605abec85e8 <col:15, col:33> '<bound member function type>' .operator bool 0x5605abec7af0
| | |       `-ImplicitCastExpr 0x5605abec85d0 <col:15, col:33> 'const ice::result<void>' lvalue <NoOp>
| | |         `-MaterializeTemporaryExpr 0x5605abec85b8 <col:15, col:33> 'ice::result<void>' lvalue
| | |           `-CXXTemporaryObjectExpr 0x5605abec8588 <col:15, col:33> 'ice::result<void>' 'void () noexcept' list zeroing
| | `-<<<NULL>>>
| |-StaticAssertDecl 0x5605abec8cd8 <line:292:1, col:80> col:1
| | |-ExprWithCleanups 0x5605abec8c18 <col:15, col:79> 'bool'
| | | `-UnaryOperator 0x5605abec8c00 <col:15, col:79> 'bool' prefix '!' cannot overflow
| | |   `-ImplicitCastExpr 0x5605abec8be8 <col:16, col:79> 'bool' <UserDefinedConversion>
| | |     `-CXXMemberCallExpr 0x5605abec8bc8 <col:16, col:79> 'bool'
| | |       `-MemberExpr 0x5605abec8b98 <col:16, col:79> '<bound member function type>' .operator bool 0x5605abec7af0
| | |         `-ImplicitCastExpr 0x5605abec8b80 <col:16, col:79> 'const ice::result<void>' lvalue <NoOp>
| | |           `-MaterializeTemporaryExpr 0x5605abec8b68 <col:16, col:79> 'ice::result<void>' lvalue
| | |             `-CXXTemporaryObjectExpr 0x5605abec8b30 <col:16, col:79> 'ice::result<void>' 'void (error_type) noexcept' list
| | |               `-CXXTemporaryObjectExpr 0x5605abec8a70 <col:35, col:77> 'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
| | |                 |-DeclRefExpr 0x5605abec8858 <col:47, col:58> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
| | |                 | `-NestedNameSpecifier TypeSpec 'ice::errc'
| | |                 |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
| | |                 `-CXXDefaultArgExpr 0x5605abec8a48 <<invalid sloc>> 'ice::source_location' has rewritten init
| | |                   `-ImplicitCastExpr 0x5605abec8a30 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
| | |                     `-CXXConstructExpr 0x5605abec8a00 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
| | |                       `-CallExpr 0x5605abec8990 <col:44, col:74> 'source_location':'std::source_location'
| | |                         |-ImplicitCastExpr 0x5605abec8978 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
| | |                         | `-DeclRefExpr 0x5605abec8948 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
| | |                         |   `-NestedNameSpecifier TypeSpec 'std::source_location'
| | |                         |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
| | |                         `-CXXDefaultArgExpr 0x5605abec89d8 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
| | |                           `-SourceLocExpr 0x5605abec89b8 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
| | `-<<<NULL>>>
| `-StaticAssertDecl 0x5605abec9440 </opt/ace/src/unwrap/test.hpp:293:1, col:120> col:1
|   |-ExprWithCleanups 0x5605abec9380 <col:15, col:102> 'bool'
|   | `-CXXOperatorCallExpr 0x5605abec9348 <col:15, col:102> 'bool' '==' adl
|   |   |-ImplicitCastExpr 0x5605abec9330 <col:88> 'bool (*)(error, ice::errc) noexcept' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5605abec9310 <col:88> 'bool (error, ice::errc) noexcept' lvalue Function 0x5605abeb2d80 'operator==' 'bool (error, ice::errc) noexcept'
|   |   |-CXXMemberCallExpr 0x5605abec9218 <col:15, col:86> 'error_type':'ice::error'
|   |   | `-MemberExpr 0x5605abec91d0 <col:15, col:80> '<bound member function type>' .error 0x5605abec7da0
|   |   |   `-ImplicitCastExpr 0x5605abec9200 <col:15, col:78> 'const ice::result<void>' xvalue <NoOp>
|   |   |     `-MaterializeTemporaryExpr 0x5605abec91b8 <col:15, col:78> 'ice::result<void>' xvalue
|   |   |       `-CXXTemporaryObjectExpr 0x5605abec9180 <col:15, col:78> 'ice::result<void>' 'void (error_type) noexcept' list
|   |   |         `-CXXTemporaryObjectExpr 0x5605abec90c0 <col:34, col:76> 'ice::error' 'void (ice::errc, ice::source_location) noexcept' list
|   |   |           |-DeclRefExpr 0x5605abec8ea8 <col:46, col:57> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
|   |   |           | `-NestedNameSpecifier TypeSpec 'ice::errc'
|   |   |           |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
|   |   |           `-CXXDefaultArgExpr 0x5605abec9098 <<invalid sloc>> 'ice::source_location' has rewritten init
|   |   |             `-ImplicitCastExpr 0x5605abec9080 <line:101:44, col:74> 'ice::source_location' <ConstructorConversion>
|   |   |               `-CXXConstructExpr 0x5605abec9050 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
|   |   |                 `-CallExpr 0x5605abec8fe0 <col:44, col:74> 'source_location':'std::source_location'
|   |   |                   |-ImplicitCastExpr 0x5605abec8fc8 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
|   |   |                   | `-DeclRefExpr 0x5605abec8f98 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
|   |   |                   |   `-NestedNameSpecifier TypeSpec 'std::source_location'
|   |   |                   |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
|   |   |                   `-CXXDefaultArgExpr 0x5605abec9028 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
|   |   |                     `-SourceLocExpr 0x5605abec9008 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
|   |   `-DeclRefExpr 0x5605abec9280 </opt/ace/src/unwrap/test.hpp:293:91, col:102> 'ice::errc' EnumConstant 0x5605abe9f3b0 'static_assert_test' 'ice::errc'
|   |     `-NestedNameSpecifier TypeSpec 'ice::errc'
|   |       `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
|   `-<<<NULL>>>
|-LinkageSpecDecl 0x5605abe9eb30 <line:55:7> col:7 implicit C
| `-FunctionDecl 0x5605abe9eb88 <col:7> col:7 implicit used __builtin_unreachable 'void () __attribute__((noreturn)) noexcept' extern
|   |-BuiltinAttr 0x5605abe9ec30 <<invalid sloc>> Implicit 1408
|   `-NoThrowAttr 0x5605abe9ec88 <col:7> Implicit
|-VarDecl 0x5605abec94a0 </opt/ace/src/unwrap/test.cpp:3:1, col:21> col:12 used g_argc 'int' static cinit
| `-IntegerLiteral 0x5605abec9508 <col:21> 'int' 0
|-EnumDecl 0x5605abec9590 <line:5:1, line:11:1> line:5:12 referenced class errc 'int'
| |-EnumConstantDecl 0x5605abec96b8 <line:6:3, col:13> col:3 unknown 'errc'
| | `-ConstantExpr 0x5605abec9690 <col:13> 'int'
| |   |-value: Int 0
| |   `-IntegerLiteral 0x5605abec9670 <col:13> 'int' 0
| |-EnumConstantDecl 0x5605abec9758 <line:7:3, col:13> col:3 referenced failure 'errc'
| | `-ConstantExpr 0x5605abec9730 <col:13> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x5605abec9710 <col:13> 'int' 1
| |-EnumConstantDecl 0x5605abec97f8 <line:8:3, col:27> col:3 success_never_reached 'errc'
| | `-ConstantExpr 0x5605abec97d0 <col:27> 'int'
| |   |-value: Int 100
| |   `-IntegerLiteral 0x5605abec97b0 <col:27> 'int' 100
| |-EnumConstantDecl 0x5605abec9898 <line:9:3, col:27> col:3 failure_never_reached 'errc'
| | `-ConstantExpr 0x5605abec9870 <col:27> 'int'
| |   |-value: Int 101
| |   `-IntegerLiteral 0x5605abec9850 <col:27> 'int' 101
| `-EnumConstantDecl 0x5605abec9938 <line:10:3, col:26> col:3 move_not_initialized 'errc'
|   `-ConstantExpr 0x5605abec9910 <col:26> 'int'
|     |-value: Int 1000
|     `-IntegerLiteral 0x5605abec98f0 <col:26> 'int' 1000
|-VarDecl 0x5605abec99b0 <line:13:1, col:51> col:16 referenced error_type 'const error_type':'const ice::error_type' constexpr cinit
| |-value: Int 2
| `-ConstantExpr 0x5605abec9ae0 <col:29, col:51> 'error_type':'ice::error_type'
|   `-CallExpr 0x5605abec9aa0 <col:29, col:51> 'error_type':'ice::error_type'
|     |-ImplicitCastExpr 0x5605abec9a88 <col:29, col:34> 'error_type (*)(std::uint8_t) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5605abec9a38 <col:29, col:34> 'error_type (std::uint8_t) noexcept' lvalue Function 0x5605abe9f6f0 'make_error_type' 'error_type (std::uint8_t) noexcept'
|     |   `-NestedNameSpecifier Namespace 0x5605abe99730 'ice'
|     `-ImplicitCastExpr 0x5605abec9ac8 <col:50> 'std::uint8_t':'unsigned char' <IntegralCast>
|       `-IntegerLiteral 0x5605abec9a68 <col:50> 'int' 2
|-FunctionDecl 0x5605abec9e10 <line:14:1, col:78> col:27 used consteval get_error_type 'ice::error_type (errc) noexcept' implicit-inline
| |-ParmVarDecl 0x5605abec9cc8 <col:42> col:46 'errc'
| `-CompoundStmt 0x5605abec9f40 <col:57, col:78>
|   `-ReturnStmt 0x5605abec9f30 <col:59, col:66>
|     `-ImplicitCastExpr 0x5605abec9f18 <col:66> 'error_type':'ice::error_type' <LValueToRValue>
|       `-DeclRefExpr 0x5605abec9ef8 <col:66> 'const error_type':'const ice::error_type' lvalue Var 0x5605abec99b0 'error_type' 'const error_type':'const ice::error_type' non_odr_use_constant
|-ClassTemplateDecl 0x5605abeca0a0 <line:16:1, line:48:1> line:17:7 move
| |-NonTypeTemplateParmDecl 0x5605abec9f70 <line:16:11, col:16> col:16 referenced 'bool' depth 0 index 0 Consteval
| |-CXXRecordDecl 0x5605abec9ff0 <line:17:1, line:48:1> line:17:7 class move definition
| | |-DefinitionData standard_layout literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists constexpr defaulted_is_constexpr
| | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| | | |-MoveConstructor exists non_trivial user_declared
| | | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| | | |-MoveAssignment exists non_trivial user_declared
| | | `-Destructor simple irrelevant trivial constexpr needs_implicit
| | |-CXXRecordDecl 0x5605abeca370 <col:1, col:7> col:7 implicit referenced class move
| | |-AccessSpecDecl 0x5605abeca420 <line:18:1, col:7> col:1 public
| | |-CXXConstructorDecl 0x5605abeca4c8 <line:19:3, col:37> col:13 consteval move<Consteval> 'void () noexcept' default implicit-inline
| | |-CXXConstructorDecl 0x5605abeca6a0 <line:20:3, col:54> col:13 consteval move<Consteval> 'void (int) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abeca5b0 <col:18> col:21 'int'
| | | |-CXXCtorInitializer Field 0x5605abecc338 'initialized_' 'bool'
| | | | `-CXXBoolLiteralExpr 0x5605abecc3b0 <col:47> 'bool' true
| | | `-CompoundStmt 0x5605abecc408 <col:53, col:54>
| | |-CXXConstructorDecl 0x5605abecb9a8 <line:22:3, line:24:3> line:22:13 constexpr move<Consteval> 'void (move<Consteval> &&) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abeca830 <col:18, col:25> col:25 referenced other 'move<Consteval> &&'
| | | |-CXXCtorInitializer Field 0x5605abecc338 'initialized_' 'bool'
| | | | `-ImplicitCastExpr 0x5605abecc488 <col:56, col:62> 'bool' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abecc438 <col:56, col:62> 'bool' lvalue .initialized_ 0x5605abecc338
| | | |     `-DeclRefExpr 0x5605abecc418 <col:56> 'move<Consteval>' lvalue ParmVar 0x5605abeca830 'other' 'move<Consteval> &&'
| | | `-CompoundStmt 0x5605abecc670 <col:76, line:24:3>
| | |   `-IfStmt 0x5605abecc650 <line:23:5, col:47> constexpr
| | |     |-UnaryOperator 0x5605abecc4e8 <col:19, col:20> 'bool' prefix '!' cannot overflow
| | |     | `-DeclRefExpr 0x5605abecc4c8 <col:20> 'bool' NonTypeTemplateParm 0x5605abec9f70 'Consteval' 'bool'
| | |     `-CallExpr 0x5605abecc610 <col:31, col:47> 'int'
| | |       |-ImplicitCastExpr 0x5605abecc5f8 <col:31> 'int (*)(const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x5605abecc5d8 <col:31> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | |       `-ImplicitCastExpr 0x5605abecc638 <col:36> 'const char *' <ArrayToPointerDecay>
| | |         `-StringLiteral 0x5605abecc5b0 <col:36> 'const char[10]' lvalue "move ctor"
| | |-CXXConstructorDecl 0x5605abecbc40 <line:26:3, line:28:3> line:26:13 constexpr move<Consteval> 'void (const move<Consteval> &) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abecbb10 <col:18, col:30> col:30 referenced other 'const move<Consteval> &'
| | | |-CXXCtorInitializer Field 0x5605abecc338 'initialized_' 'bool'
| | | | `-ImplicitCastExpr 0x5605abecc6f8 <col:61, col:67> 'bool' <LValueToRValue>
| | | |   `-MemberExpr 0x5605abecc6a8 <col:61, col:67> 'const bool' lvalue .initialized_ 0x5605abecc338
| | | |     `-DeclRefExpr 0x5605abecc688 <col:61> 'const move<Consteval>' lvalue ParmVar 0x5605abecbb10 'other' 'const move<Consteval> &'
| | | `-CompoundStmt 0x5605abecc878 <col:81, line:28:3>
| | |   `-IfStmt 0x5605abecc858 <line:27:5, col:47> constexpr
| | |     |-UnaryOperator 0x5605abecc758 <col:19, col:20> 'bool' prefix '!' cannot overflow
| | |     | `-DeclRefExpr 0x5605abecc738 <col:20> 'bool' NonTypeTemplateParm 0x5605abec9f70 'Consteval' 'bool'
| | |     `-CallExpr 0x5605abecc818 <col:31, col:47> 'int'
| | |       |-ImplicitCastExpr 0x5605abecc800 <col:31> 'int (*)(const char *)' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x5605abecc7e0 <col:31> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | |       `-ImplicitCastExpr 0x5605abecc840 <col:36> 'const char *' <ArrayToPointerDecay>
| | |         `-StringLiteral 0x5605abecc7b8 <col:36> 'const char[10]' lvalue "copy ctor"
| | |-CXXMethodDecl 0x5605abecbed8 <line:30:3, line:34:3> line:30:19 constexpr operator= 'move<Consteval> &(move<Consteval> &&) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abecbd40 <col:29, col:36> col:36 referenced other 'move<Consteval> &&'
| | | `-CompoundStmt 0x5605abeccb70 <col:52, line:34:3>
| | |   |-BinaryOperator 0x5605abecc980 <line:31:5, col:26> 'bool' lvalue '='
| | |   | |-MemberExpr 0x5605abecc8e8 <col:5> 'bool' lvalue ->initialized_ 0x5605abecc338
| | |   | | `-CXXThisExpr 0x5605abecc8d8 <col:5> 'move<Consteval> *' implicit this
| | |   | `-ImplicitCastExpr 0x5605abecc968 <col:20, col:26> 'bool' <LValueToRValue>
| | |   |   `-MemberExpr 0x5605abecc938 <col:20, col:26> 'bool' lvalue .initialized_ 0x5605abecc338
| | |   |     `-DeclRefExpr 0x5605abecc918 <col:20> 'move<Consteval>' lvalue ParmVar 0x5605abecbd40 'other' 'move<Consteval> &&'
| | |   |-IfStmt 0x5605abeccb18 <line:32:5, col:45> constexpr
| | |   | |-UnaryOperator 0x5605abecc9c0 <col:19, col:20> 'bool' prefix '!' cannot overflow
| | |   | | `-DeclRefExpr 0x5605abecc9a0 <col:20> 'bool' NonTypeTemplateParm 0x5605abec9f70 'Consteval' 'bool'
| | |   | `-CallExpr 0x5605abeccad8 <col:31, col:45> 'int'
| | |   |   |-ImplicitCastExpr 0x5605abeccac0 <col:31> 'int (*)(const char *)' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x5605abeccaa0 <col:31> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | |   |   `-ImplicitCastExpr 0x5605abeccb00 <col:36> 'const char *' <ArrayToPointerDecay>
| | |   |     `-StringLiteral 0x5605abecca80 <col:36> 'const char[8]' lvalue "move op"
| | |   `-ReturnStmt 0x5605abeccb60 <line:33:5, col:13>
| | |     `-UnaryOperator 0x5605abeccb48 <col:12, col:13> 'move<Consteval>' lvalue prefix '*' cannot overflow
| | |       `-CXXThisExpr 0x5605abeccb38 <col:13> 'move<Consteval> *' this
| | |-CXXMethodDecl 0x5605abecc0f8 <line:36:3, line:40:3> line:36:19 constexpr operator= 'move<Consteval> &(const move<Consteval> &) noexcept' implicit-inline
| | | |-ParmVarDecl 0x5605abecbfc0 <col:29, col:41> col:41 referenced other 'const move<Consteval> &'
| | | `-CompoundStmt 0x5605abecce18 <col:57, line:40:3>
| | |   |-BinaryOperator 0x5605abeccc88 <line:37:5, col:26> 'bool' lvalue '='
| | |   | |-MemberExpr 0x5605abeccbf0 <col:5> 'bool' lvalue ->initialized_ 0x5605abecc338
| | |   | | `-CXXThisExpr 0x5605abeccbe0 <col:5> 'move<Consteval> *' implicit this
| | |   | `-ImplicitCastExpr 0x5605abeccc70 <col:20, col:26> 'bool' <LValueToRValue>
| | |   |   `-MemberExpr 0x5605abeccc40 <col:20, col:26> 'const bool' lvalue .initialized_ 0x5605abecc338
| | |   |     `-DeclRefExpr 0x5605abeccc20 <col:20> 'const move<Consteval>' lvalue ParmVar 0x5605abecbfc0 'other' 'const move<Consteval> &'
| | |   |-IfStmt 0x5605abeccdc0 <line:38:5, col:45> constexpr
| | |   | |-UnaryOperator 0x5605abecccc8 <col:19, col:20> 'bool' prefix '!' cannot overflow
| | |   | | `-DeclRefExpr 0x5605abeccca8 <col:20> 'bool' NonTypeTemplateParm 0x5605abec9f70 'Consteval' 'bool'
| | |   | `-CallExpr 0x5605abeccd80 <col:31, col:45> 'int'
| | |   |   |-ImplicitCastExpr 0x5605abeccd68 <col:31> 'int (*)(const char *)' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x5605abeccd48 <col:31> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
| | |   |   `-ImplicitCastExpr 0x5605abeccda8 <col:36> 'const char *' <ArrayToPointerDecay>
| | |   |     `-StringLiteral 0x5605abeccd28 <col:36> 'const char[8]' lvalue "copy op"
| | |   `-ReturnStmt 0x5605abecce08 <line:39:5, col:13>
| | |     `-UnaryOperator 0x5605abeccdf0 <col:12, col:13> 'move<Consteval>' lvalue prefix '*' cannot overflow
| | |       `-CXXThisExpr 0x5605abeccde0 <col:13> 'move<Consteval> *' this
| | |-CXXMethodDecl 0x5605abecc230 <line:42:3, line:44:3> line:42:18 constexpr initialized 'bool () const noexcept' implicit-inline
| | | `-CompoundStmt 0x5605abeccea8 <col:47, line:44:3>
| | |   `-ReturnStmt 0x5605abecce98 <line:43:5, col:12>
| | |     `-ImplicitCastExpr 0x5605abecce80 <col:12> 'bool' <LValueToRValue>
| | |       `-MemberExpr 0x5605abecce50 <col:12> 'const bool' lvalue ->initialized_ 0x5605abecc338
| | |         `-CXXThisExpr 0x5605abecce40 <col:12> 'const move<Consteval> *' implicit this
| | |-AccessSpecDecl 0x5605abecc2f8 <line:46:1, col:8> col:1 private
| | `-FieldDecl 0x5605abecc338 <line:47:3, col:23> col:8 referenced initialized_ 'bool'
| |   `-CXXBoolLiteralExpr 0x5605abecc3a0 <col:23> 'bool' false
| `-ClassTemplateSpecializationDecl 0x5605abede470 <line:16:1, line:48:1> line:17:7 class move definition implicit_instantiation
|   |-DefinitionData standard_layout literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
|   | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists non_trivial user_declared
|   | |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
|   | |-MoveAssignment exists non_trivial user_declared
|   | `-Destructor simple irrelevant trivial constexpr
|   |-TemplateArgument integral 'false'
|   |-CXXRecordDecl 0x5605abee2dc8 <col:1, col:7> col:7 implicit class move
|   |-AccessSpecDecl 0x5605abee2e78 <line:18:1, col:7> col:1 public
|   |-CXXConstructorDecl 0x5605abee2ee0 <line:19:3, col:37> col:13 used consteval move 'void () noexcept' implicit_instantiation default implicit-inline instantiated_from 0x5605abeca4c8
|   | |-CXXCtorInitializer Field 0x5605abee3c30 'initialized_' 'bool'
|   | | `-CXXDefaultInitExpr 0x5605abce2eb0 <col:13> 'bool' has rewritten init
|   | |   `-CXXBoolLiteralExpr 0x5605abecc3a0 <line:47:23> 'bool' false
|   | `-CompoundStmt 0x5605abce2f00 <line:19:37>
|   |-CXXConstructorDecl 0x5605abee3080 <line:20:3, col:54> col:13 used consteval move 'void (int) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abeca6a0
|   | |-ParmVarDecl 0x5605abee2fc0 <col:18> col:21 'int'
|   | |-CXXCtorInitializer Field 0x5605abee3c30 'initialized_' 'bool'
|   | | `-CXXBoolLiteralExpr 0x5605abecc3b0 <col:47> 'bool' true
|   | `-CompoundStmt 0x5605abecc408 <col:53, col:54>
|   |-CXXConstructorDecl 0x5605abee3330 <line:22:3, line:24:3> line:22:13 constexpr move 'void (move<false> &&) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abecb9a8
|   | `-ParmVarDecl 0x5605abee31f0 <col:18, col:25> col:25 other 'move<false> &&'
|   |-CXXConstructorDecl 0x5605abee35b0 <line:26:3, line:28:3> line:26:13 constexpr move 'void (const move<false> &) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abecbc40
|   | `-ParmVarDecl 0x5605abee3470 <col:18, col:30> col:30 other 'const move<false> &'
|   |-CXXMethodDecl 0x5605abee3818 <line:30:3, line:34:3> line:30:19 constexpr operator= 'move<false> &(move<false> &&) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abecbed8
|   | `-ParmVarDecl 0x5605abee36f0 <col:29, col:36> col:36 other 'move<false> &&'
|   |-CXXMethodDecl 0x5605abee3a38 <line:36:3, line:40:3> line:36:19 constexpr operator= 'move<false> &(const move<false> &) noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abecc0f8
|   | `-ParmVarDecl 0x5605abee3910 <col:29, col:41> col:41 other 'const move<false> &'
|   |-CXXMethodDecl 0x5605abee3b28 <line:42:3, line:44:3> line:42:18 constexpr initialized 'bool () const noexcept' implicit_instantiation implicit-inline instantiated_from 0x5605abecc230
|   |-AccessSpecDecl 0x5605abee3c00 <line:46:1, col:8> col:1 private
|   |-FieldDecl 0x5605abee3c30 <line:47:3, col:23> col:8 initialized_ 'bool'
|   | `-CXXBoolLiteralExpr 0x5605abecc3a0 <col:23> 'bool' false
|   `-CXXDestructorDecl 0x5605abee3cf8 <line:17:7> col:7 implicit constexpr ~move 'void () noexcept' inline default trivial
|-CXXRecordDecl 0x5605abeccec8 <line:50:1, line:59:1> line:50:7 referenced class consteval_move definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment simple trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial constexpr
| |-CXXRecordDecl 0x5605abecd000 <col:1, col:7> col:7 implicit referenced class consteval_move
| |-AccessSpecDecl 0x5605abecd0b0 <line:51:1, col:7> col:1 public
| |-CXXConstructorDecl 0x5605abecd158 <line:52:3, col:47> col:13 used consteval consteval_move 'void () noexcept' default implicit-inline
| | |-CXXCtorInitializer Field 0x5605abecd548 'initialized_' 'bool'
| | | `-CXXDefaultInitExpr 0x5605abeddc10 <col:13> 'bool' has rewritten init
| | |   `-CXXBoolLiteralExpr 0x5605abecd5b0 <line:58:23> 'bool' false
| | `-CompoundStmt 0x5605abeddc60 <line:52:47>
| |-CXXConstructorDecl 0x5605abecd2f8 <line:53:3, col:64> col:13 used constexpr consteval_move 'void (int) noexcept' implicit-inline
| | |-ParmVarDecl 0x5605abecd240 <col:28> col:31 'int'
| | |-CXXCtorInitializer Field 0x5605abecd548 'initialized_' 'bool'
| | | `-CXXBoolLiteralExpr 0x5605abecd5c0 <col:57> 'bool' true
| | `-CompoundStmt 0x5605abecd618 <col:63, col:64>
| |-CXXMethodDecl 0x5605abecd440 <line:55:3, col:70> col:18 constexpr initialized 'bool () const noexcept' implicit-inline
| | `-CompoundStmt 0x5605abecd690 <col:47, col:70>
| |   `-ReturnStmt 0x5605abecd680 <col:49, col:56>
| |     `-ImplicitCastExpr 0x5605abecd668 <col:56> 'bool' <LValueToRValue>
| |       `-MemberExpr 0x5605abecd638 <col:56> 'const bool' lvalue ->initialized_ 0x5605abecd548
| |         `-CXXThisExpr 0x5605abecd628 <col:56> 'const consteval_move *' implicit this
| |-AccessSpecDecl 0x5605abecd508 <line:57:1, col:8> col:1 private
| |-FieldDecl 0x5605abecd548 <line:58:3, col:23> col:8 referenced initialized_ 'bool'
| | `-CXXBoolLiteralExpr 0x5605abecd5b0 <col:23> 'bool' false
| |-CXXDestructorDecl 0x5605abed8bc8 <line:50:7> col:7 implicit constexpr ~consteval_move 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5605abed8cf8 <col:7> col:7 implicit constexpr consteval_move 'void (const consteval_move &)' inline default trivial noexcept-unevaluated 0x5605abed8cf8
| | `-ParmVarDecl 0x5605abed8e38 <col:7> col:7 'const consteval_move &'
| |-CXXConstructorDecl 0x5605abed8ef8 <col:7> col:7 implicit constexpr consteval_move 'void (consteval_move &&)' inline default trivial noexcept-unevaluated 0x5605abed8ef8
| | `-ParmVarDecl 0x5605abed9038 <col:7> col:7 'consteval_move &&'
| |-CXXMethodDecl 0x5605abed90f8 <col:7> col:7 implicit constexpr operator= 'consteval_move &(const consteval_move &)' inline default trivial noexcept-unevaluated 0x5605abed90f8
| | `-ParmVarDecl 0x5605abed9228 <col:7> col:7 'const consteval_move &'
| `-CXXMethodDecl 0x5605abed92a0 <col:7> col:7 implicit constexpr operator= 'consteval_move &(consteval_move &&)' inline default trivial noexcept-unevaluated 0x5605abed92a0
|   `-ParmVarDecl 0x5605abed93d8 <col:7> col:7 'consteval_move &&'
|-FunctionDecl 0x5605abecd830 <line:63:1, line:65:1> line:63:29 used consteval void_success 'ice::result<void> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abecd998 <col:53, line:65:1>
|   `-ReturnStmt 0x5605abecd988 <line:64:3, col:11>
|     `-CXXConstructExpr 0x5605abecd960 <col:10, col:11> 'ice::result<void>' 'void () noexcept' list zeroing
|-StaticAssertDecl 0x5605abecdb90 <line:67:1, col:29> col:1
| |-ExprWithCleanups 0x5605abecdb50 <col:15, col:28> 'bool'
| | `-ImplicitCastExpr 0x5605abecdb38 <col:15, col:28> 'bool' <UserDefinedConversion>
| |   `-CXXMemberCallExpr 0x5605abecdb18 <col:15, col:28> 'bool'
| |     `-MemberExpr 0x5605abecdae8 <col:15, col:28> '<bound member function type>' .operator bool 0x5605abec7af0
| |       `-ImplicitCastExpr 0x5605abecdad0 <col:15, col:28> 'const ice::result<void>' lvalue <NoOp>
| |         `-MaterializeTemporaryExpr 0x5605abecdab8 <col:15, col:28> 'ice::result<void>' lvalue
| |           `-CallExpr 0x5605abecda98 <col:15, col:28> 'ice::result<void>'
| |             `-ImplicitCastExpr 0x5605abecda80 <col:15> 'ice::result<void> (*)() noexcept' <FunctionToPointerDecay>
| |               `-DeclRefExpr 0x5605abecd9f8 <col:15> 'ice::result<void> () noexcept' lvalue Function 0x5605abecd830 'void_success' 'ice::result<void> () noexcept'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abecdd20 <line:69:1, line:71:1> line:69:29 used consteval void_failure 'ice::result<void> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abed1328 <col:53, line:71:1>
|   `-ReturnStmt 0x5605abed1318 <line:70:3, col:36>
|     `-ImplicitCastExpr 0x5605abed1300 <col:10, col:36> 'ice::result<void>' <ConstructorConversion>
|       `-CXXConstructExpr 0x5605abed12d0 <col:10, col:36> 'ice::result<void>' 'void (error_type) noexcept'
|         `-CXXTemporaryObjectExpr 0x5605abed1260 <col:10, col:36> 'ice::error' 'void (errc, ice::source_location) noexcept' list
|           |-DeclRefExpr 0x5605abecde78 <col:22, col:28> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
|           | `-NestedNameSpecifier TypeSpec 'errc'
|           `-CXXDefaultArgExpr 0x5605abed0fb0 <<invalid sloc>> 'ice::source_location' has rewritten init
|             `-ImplicitCastExpr 0x5605abed0f98 </opt/ace/src/unwrap/test.hpp:101:44, col:74> 'ice::source_location' <ConstructorConversion>
|               `-CXXConstructExpr 0x5605abed0f68 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
|                 `-CallExpr 0x5605abed0ef8 <col:44, col:74> 'source_location':'std::source_location'
|                   |-ImplicitCastExpr 0x5605abed0ee0 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x5605abed0eb0 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
|                   |   `-NestedNameSpecifier TypeSpec 'std::source_location'
|                   |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
|                   `-CXXDefaultArgExpr 0x5605abed0f40 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
|                     `-SourceLocExpr 0x5605abed0f20 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
|-StaticAssertDecl 0x5605abed1660 </opt/ace/src/unwrap/test.cpp:73:1, col:30> col:1
| |-ExprWithCleanups 0x5605abed14c8 <col:15, col:29> 'bool'
| | `-UnaryOperator 0x5605abed14b0 <col:15, col:29> 'bool' prefix '!' cannot overflow
| |   `-ImplicitCastExpr 0x5605abed1498 <col:16, col:29> 'bool' <UserDefinedConversion>
| |     `-CXXMemberCallExpr 0x5605abed1478 <col:16, col:29> 'bool'
| |       `-MemberExpr 0x5605abed1448 <col:16, col:29> '<bound member function type>' .operator bool 0x5605abec7af0
| |         `-ImplicitCastExpr 0x5605abed1430 <col:16, col:29> 'const ice::result<void>' lvalue <NoOp>
| |           `-MaterializeTemporaryExpr 0x5605abed1418 <col:16, col:29> 'ice::result<void>' lvalue
| |             `-CallExpr 0x5605abed13f8 <col:16, col:29> 'ice::result<void>'
| |               `-ImplicitCastExpr 0x5605abed13e0 <col:16> 'ice::result<void> (*)() noexcept' <FunctionToPointerDecay>
| |                 `-DeclRefExpr 0x5605abed1388 <col:16> 'ice::result<void> () noexcept' lvalue Function 0x5605abecdd20 'void_failure' 'ice::result<void> () noexcept'
| `-<<<NULL>>>
|-StaticAssertDecl 0x5605abed2080 <line:74:1, col:54> col:1
| |-ExprWithCleanups 0x5605abed2040 <col:15, col:47> 'bool'
| | `-CXXOperatorCallExpr 0x5605abed2008 <col:15, col:47> 'bool' '==' adl
| |   |-ImplicitCastExpr 0x5605abed1ff0 <col:38> 'bool (*)(error, errc) noexcept' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x5605abed1cd8 <col:38> 'bool (error, errc) noexcept' lvalue Function 0x5605abed1a60 'operator==' 'bool (error, errc) noexcept'
| |   |-CXXMemberCallExpr 0x5605abed17a0 <col:15, col:36> 'error_type':'ice::error'
| |   | `-MemberExpr 0x5605abed1758 <col:15, col:30> '<bound member function type>' .error 0x5605abec7da0
| |   |   `-ImplicitCastExpr 0x5605abed1788 <col:15, col:28> 'const ice::result<void>' xvalue <NoOp>
| |   |     `-MaterializeTemporaryExpr 0x5605abed1740 <col:15, col:28> 'ice::result<void>' xvalue
| |   |       `-CallExpr 0x5605abed1720 <col:15, col:28> 'ice::result<void>'
| |   |         `-ImplicitCastExpr 0x5605abed1708 <col:15> 'ice::result<void> (*)() noexcept' <FunctionToPointerDecay>
| |   |           `-DeclRefExpr 0x5605abed16e8 <col:15> 'ice::result<void> () noexcept' lvalue Function 0x5605abecdd20 'void_failure' 'ice::result<void> () noexcept'
| |   `-DeclRefExpr 0x5605abed17f8 <col:41, col:47> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
| |     `-NestedNameSpecifier TypeSpec 'errc'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abed2250 <line:76:1, line:78:1> line:76:29 used consteval long_success 'ice::result<long> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abed2470 <col:53, line:78:1>
|   `-ReturnStmt 0x5605abed2460 <line:77:3, col:10>
|     `-ExprWithCleanups 0x5605abed2448 <col:10> 'ice::result<long>'
|       `-ImplicitCastExpr 0x5605abed2430 <col:10> 'ice::result<long>' <ConstructorConversion>
|         `-CXXConstructExpr 0x5605abed2400 <col:10> 'ice::result<long>' 'void (int &&) noexcept'
|           `-MaterializeTemporaryExpr 0x5605abed23b8 <col:10> 'int' xvalue
|             `-IntegerLiteral 0x5605abed2310 <col:10> 'int' 33
|-StaticAssertDecl 0x5605abed2660 <line:80:1, col:29> col:1
| |-ExprWithCleanups 0x5605abed2620 <col:15, col:28> 'bool'
| | `-ImplicitCastExpr 0x5605abed2608 <col:15, col:28> 'bool' <UserDefinedConversion>
| |   `-CXXMemberCallExpr 0x5605abed25e8 <col:15, col:28> 'bool'
| |     `-MemberExpr 0x5605abed25b8 <col:15, col:28> '<bound member function type>' .operator bool 0x5605abebb7a0
| |       `-ImplicitCastExpr 0x5605abed25a0 <col:15, col:28> 'const ice::result<long>' lvalue <NoOp>
| |         `-MaterializeTemporaryExpr 0x5605abed2588 <col:15, col:28> 'ice::result<long>' lvalue
| |           `-CallExpr 0x5605abed2568 <col:15, col:28> 'ice::result<long>'
| |             `-ImplicitCastExpr 0x5605abed2550 <col:15> 'ice::result<long> (*)() noexcept' <FunctionToPointerDecay>
| |               `-DeclRefExpr 0x5605abed24d0 <col:15> 'ice::result<long> () noexcept' lvalue Function 0x5605abed2250 'long_success' 'ice::result<long> () noexcept'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abed2800 <line:83:1, line:85:1> line:83:29 used constexpr long_failure 'ice::result<long> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abed2e08 <col:53, line:85:1>
|   `-ReturnStmt 0x5605abed2df8 <line:84:3, col:36>
|     `-ImplicitCastExpr 0x5605abed2de0 <col:10, col:36> 'ice::result<long>' <ConstructorConversion>
|       `-CXXConstructExpr 0x5605abed2db0 <col:10, col:36> 'ice::result<long>' 'void (error_type) noexcept'
|         `-ConstantExpr 0x5605abed2b98 <col:10, col:36> 'ice::error'
|           |-value: Struct
|           | `-field: Int 9604721160864399361
|           `-CXXTemporaryObjectExpr 0x5605abed2b58 <col:10, col:36> 'ice::error' 'void (errc, ice::source_location) noexcept' list
|             |-DeclRefExpr 0x5605abed2940 <col:22, col:28> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
|             | `-NestedNameSpecifier TypeSpec 'errc'
|             `-CXXDefaultArgExpr 0x5605abed2b30 <<invalid sloc>> 'ice::source_location' has rewritten init
|               `-ImplicitCastExpr 0x5605abed2b18 </opt/ace/src/unwrap/test.hpp:101:44, col:74> 'ice::source_location' <ConstructorConversion>
|                 `-CXXConstructExpr 0x5605abed2ae8 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
|                   `-CallExpr 0x5605abed2a78 <col:44, col:74> 'source_location':'std::source_location'
|                     |-ImplicitCastExpr 0x5605abed2a60 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
|                     | `-DeclRefExpr 0x5605abed2a30 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
|                     |   `-NestedNameSpecifier TypeSpec 'std::source_location'
|                     |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
|                     `-CXXDefaultArgExpr 0x5605abed2ac0 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
|                       `-SourceLocExpr 0x5605abed2aa0 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
|-StaticAssertDecl 0x5605abed3098 </opt/ace/src/unwrap/test.cpp:87:1, col:30> col:1
| |-ExprWithCleanups 0x5605abed3058 <col:15, col:29> 'bool'
| | `-UnaryOperator 0x5605abed3040 <col:15, col:29> 'bool' prefix '!' cannot overflow
| |   `-ImplicitCastExpr 0x5605abed3028 <col:16, col:29> 'bool' <UserDefinedConversion>
| |     `-CXXMemberCallExpr 0x5605abed3008 <col:16, col:29> 'bool'
| |       `-MemberExpr 0x5605abed2fd8 <col:16, col:29> '<bound member function type>' .operator bool 0x5605abebb7a0
| |         `-ImplicitCastExpr 0x5605abed2fc0 <col:16, col:29> 'const ice::result<long>' lvalue <NoOp>
| |           `-MaterializeTemporaryExpr 0x5605abed2fa8 <col:16, col:29> 'ice::result<long>' lvalue
| |             `-CallExpr 0x5605abed2f88 <col:16, col:29> 'ice::result<long>'
| |               `-ImplicitCastExpr 0x5605abed2f70 <col:16> 'ice::result<long> (*)() noexcept' <FunctionToPointerDecay>
| |                 `-DeclRefExpr 0x5605abed2f20 <col:16> 'ice::result<long> () noexcept' lvalue Function 0x5605abed2800 'long_failure' 'ice::result<long> () noexcept'
| `-<<<NULL>>>
|-StaticAssertDecl 0x5605abed3370 <line:88:1, col:54> col:1
| |-ExprWithCleanups 0x5605abed3330 <col:15, col:47> 'bool'
| | `-CXXOperatorCallExpr 0x5605abed32f8 <col:15, col:47> 'bool' '==' adl
| |   |-ImplicitCastExpr 0x5605abed32e0 <col:38> 'bool (*)(error, errc) noexcept' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x5605abed32c0 <col:38> 'bool (error, errc) noexcept' lvalue Function 0x5605abed1a60 'operator==' 'bool (error, errc) noexcept'
| |   |-CXXMemberCallExpr 0x5605abed31d8 <col:15, col:36> 'error_type':'ice::error'
| |   | `-MemberExpr 0x5605abed3190 <col:15, col:30> '<bound member function type>' .error 0x5605abebbe70
| |   |   `-ImplicitCastExpr 0x5605abed31c0 <col:15, col:28> 'const ice::result<long>' xvalue <NoOp>
| |   |     `-MaterializeTemporaryExpr 0x5605abed3178 <col:15, col:28> 'ice::result<long>' xvalue
| |   |       `-CallExpr 0x5605abed3158 <col:15, col:28> 'ice::result<long>'
| |   |         `-ImplicitCastExpr 0x5605abed3140 <col:15> 'ice::result<long> (*)() noexcept' <FunctionToPointerDecay>
| |   |           `-DeclRefExpr 0x5605abed3120 <col:15> 'ice::result<long> () noexcept' lvalue Function 0x5605abed2800 'long_failure' 'ice::result<long> () noexcept'
| |   `-DeclRefExpr 0x5605abed3230 <col:41, col:47> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
| |     `-NestedNameSpecifier TypeSpec 'errc'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abed3680 <line:90:1, line:92:1> line:90:39 used consteval consteval_move_success 'ice::result<consteval_move> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abedcbd0 <col:73, line:92:1>
|   `-ReturnStmt 0x5605abedcbc0 <line:91:3, col:10>
|     `-ExprWithCleanups 0x5605abedcba8 <col:10> 'ice::result<consteval_move>'
|       `-ImplicitCastExpr 0x5605abedcb90 <col:10> 'ice::result<consteval_move>' <ConstructorConversion>
|         `-CXXConstructExpr 0x5605abedcb60 <col:10> 'ice::result<consteval_move>' 'void (int &&) noexcept'
|           `-MaterializeTemporaryExpr 0x5605abed98f8 <col:10> 'int' xvalue
|             `-IntegerLiteral 0x5605abed9458 <col:10> 'int' 33
|-StaticAssertDecl 0x5605abedcf10 <line:94:1, col:39> col:1
| |-ExprWithCleanups 0x5605abedced0 <col:15, col:38> 'bool'
| | `-ImplicitCastExpr 0x5605abedceb8 <col:15, col:38> 'bool' <UserDefinedConversion>
| |   `-CXXMemberCallExpr 0x5605abedce98 <col:15, col:38> 'bool'
| |     `-MemberExpr 0x5605abedcd48 <col:15, col:38> '<bound member function type>' .operator bool 0x5605abed8330
| |       `-ImplicitCastExpr 0x5605abedcd30 <col:15, col:38> 'const ice::result<consteval_move>' lvalue <NoOp>
| |         `-MaterializeTemporaryExpr 0x5605abedcd18 <col:15, col:38> 'ice::result<consteval_move>' lvalue
| |           `-CallExpr 0x5605abedccc8 <col:15, col:38> 'ice::result<consteval_move>'
| |             `-ImplicitCastExpr 0x5605abedccb0 <col:15> 'ice::result<consteval_move> (*)() noexcept' <FunctionToPointerDecay>
| |               `-DeclRefExpr 0x5605abedcc30 <col:15> 'ice::result<consteval_move> () noexcept' lvalue Function 0x5605abed3680 'consteval_move_success' 'ice::result<consteval_move> () noexcept'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abedd0a0 <line:97:1, line:99:1> line:97:39 used constexpr consteval_move_failure 'ice::result<consteval_move> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abeddd70 <col:73, line:99:1>
|   `-ReturnStmt 0x5605abeddd60 <line:98:3, col:36>
|     `-ImplicitCastExpr 0x5605abeddd48 <col:10, col:36> 'ice::result<consteval_move>' <ConstructorConversion>
|       `-CXXConstructExpr 0x5605abeddd18 <col:10, col:36> 'ice::result<consteval_move>' 'void (error_type) noexcept'
|         `-ConstantExpr 0x5605abedd438 <col:10, col:36> 'ice::error'
|           |-value: Struct
|           | `-field: Int 9667771555647586305
|           `-CXXTemporaryObjectExpr 0x5605abedd3f8 <col:10, col:36> 'ice::error' 'void (errc, ice::source_location) noexcept' list
|             |-DeclRefExpr 0x5605abedd1e0 <col:22, col:28> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
|             | `-NestedNameSpecifier TypeSpec 'errc'
|             `-CXXDefaultArgExpr 0x5605abedd3d0 <<invalid sloc>> 'ice::source_location' has rewritten init
|               `-ImplicitCastExpr 0x5605abedd3b8 </opt/ace/src/unwrap/test.hpp:101:44, col:74> 'ice::source_location' <ConstructorConversion>
|                 `-CXXConstructExpr 0x5605abedd388 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
|                   `-CallExpr 0x5605abedd318 <col:44, col:74> 'source_location':'std::source_location'
|                     |-ImplicitCastExpr 0x5605abedd300 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
|                     | `-DeclRefExpr 0x5605abedd2d0 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
|                     |   `-NestedNameSpecifier TypeSpec 'std::source_location'
|                     |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
|                     `-CXXDefaultArgExpr 0x5605abedd360 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
|                       `-SourceLocExpr 0x5605abedd340 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
|-StaticAssertDecl 0x5605abede088 </opt/ace/src/unwrap/test.cpp:101:1, col:40> col:1
| |-ExprWithCleanups 0x5605abede048 <col:15, col:39> 'bool'
| | `-UnaryOperator 0x5605abede030 <col:15, col:39> 'bool' prefix '!' cannot overflow
| |   `-ImplicitCastExpr 0x5605abede018 <col:16, col:39> 'bool' <UserDefinedConversion>
| |     `-CXXMemberCallExpr 0x5605abeddff8 <col:16, col:39> 'bool'
| |       `-MemberExpr 0x5605abeddfc8 <col:16, col:39> '<bound member function type>' .operator bool 0x5605abed8330
| |         `-ImplicitCastExpr 0x5605abeddfb0 <col:16, col:39> 'const ice::result<consteval_move>' lvalue <NoOp>
| |           `-MaterializeTemporaryExpr 0x5605abeddf98 <col:16, col:39> 'ice::result<consteval_move>' lvalue
| |             `-CallExpr 0x5605abeddf78 <col:16, col:39> 'ice::result<consteval_move>'
| |               `-ImplicitCastExpr 0x5605abeddf60 <col:16> 'ice::result<consteval_move> (*)() noexcept' <FunctionToPointerDecay>
| |                 `-DeclRefExpr 0x5605abeddf08 <col:16> 'ice::result<consteval_move> () noexcept' lvalue Function 0x5605abedd0a0 'consteval_move_failure' 'ice::result<consteval_move> () noexcept'
| `-<<<NULL>>>
|-StaticAssertDecl 0x5605abede3f8 <line:102:1, col:64> col:1
| |-ExprWithCleanups 0x5605abede3b8 <col:15, col:57> 'bool'
| | `-CXXOperatorCallExpr 0x5605abede380 <col:15, col:57> 'bool' '==' adl
| |   |-ImplicitCastExpr 0x5605abede368 <col:48> 'bool (*)(error, errc) noexcept' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x5605abede348 <col:48> 'bool (error, errc) noexcept' lvalue Function 0x5605abed1a60 'operator==' 'bool (error, errc) noexcept'
| |   |-CXXMemberCallExpr 0x5605abede260 <col:15, col:46> 'error_type':'ice::error'
| |   | `-MemberExpr 0x5605abede180 <col:15, col:40> '<bound member function type>' .error 0x5605abed8a00
| |   |   `-ImplicitCastExpr 0x5605abede248 <col:15, col:38> 'const ice::result<consteval_move>' xvalue <NoOp>
| |   |     `-MaterializeTemporaryExpr 0x5605abede168 <col:15, col:38> 'ice::result<consteval_move>' xvalue
| |   |       `-CallExpr 0x5605abede148 <col:15, col:38> 'ice::result<consteval_move>'
| |   |         `-ImplicitCastExpr 0x5605abede130 <col:15> 'ice::result<consteval_move> (*)() noexcept' <FunctionToPointerDecay>
| |   |           `-DeclRefExpr 0x5605abede110 <col:15> 'ice::result<consteval_move> () noexcept' lvalue Function 0x5605abedd0a0 'consteval_move_failure' 'ice::result<consteval_move> () noexcept'
| |   `-DeclRefExpr 0x5605abede2b8 <col:51, col:57> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
| |     `-NestedNameSpecifier TypeSpec 'errc'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abede8d0 <line:104:1, line:106:1> line:104:36 used consteval move_success 'ice::result<move<false>> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abce1de0 <col:60, line:106:1>
|   `-ReturnStmt 0x5605abce1dd0 <line:105:3, col:10>
|     `-ExprWithCleanups 0x5605abce1db8 <col:10> 'ice::result<move<false>>'
|       `-ImplicitCastExpr 0x5605abce1da0 <col:10> 'ice::result<move<false>>' <ConstructorConversion>
|         `-CXXConstructExpr 0x5605abce1d70 <col:10> 'ice::result<move<false>>' 'void (int &&) noexcept'
|           `-MaterializeTemporaryExpr 0x5605abee4288 <col:10> 'int' xvalue
|             `-IntegerLiteral 0x5605abee3de8 <col:10> 'int' 33
|-StaticAssertDecl 0x5605abce2120 <line:108:1, col:29> col:1
| |-ExprWithCleanups 0x5605abce20e0 <col:15, col:28> 'bool'
| | `-ImplicitCastExpr 0x5605abce20c8 <col:15, col:28> 'bool' <UserDefinedConversion>
| |   `-CXXMemberCallExpr 0x5605abce20a8 <col:15, col:28> 'bool'
| |     `-MemberExpr 0x5605abce1f58 <col:15, col:28> '<bound member function type>' .operator bool 0x5605abee2520
| |       `-ImplicitCastExpr 0x5605abce1f40 <col:15, col:28> 'const ice::result<move<false>>' lvalue <NoOp>
| |         `-MaterializeTemporaryExpr 0x5605abce1f28 <col:15, col:28> 'ice::result<move<false>>' lvalue
| |           `-CallExpr 0x5605abce1ed8 <col:15, col:28> 'ice::result<move<false>>'
| |             `-ImplicitCastExpr 0x5605abce1ec0 <col:15> 'ice::result<move<false>> (*)() noexcept' <FunctionToPointerDecay>
| |               `-DeclRefExpr 0x5605abce1e40 <col:15> 'ice::result<move<false>> () noexcept' lvalue Function 0x5605abede8d0 'move_success' 'ice::result<move<false>> () noexcept'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abce2390 <line:111:1, line:113:1> line:111:36 used consteval move_failure 'ice::result<move<false>> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abce3010 <col:60, line:113:1>
|   `-ReturnStmt 0x5605abce3000 <line:112:3, col:36>
|     `-ImplicitCastExpr 0x5605abce2fe8 <col:10, col:36> 'ice::result<move<false>>' <ConstructorConversion>
|       `-CXXConstructExpr 0x5605abce2fb8 <col:10, col:36> 'ice::result<move<false>>' 'void (error_type) noexcept'
|         `-CXXTemporaryObjectExpr 0x5605abce26e8 <col:10, col:36> 'ice::error' 'void (errc, ice::source_location) noexcept' list
|           |-DeclRefExpr 0x5605abce24d0 <col:22, col:28> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
|           | `-NestedNameSpecifier TypeSpec 'errc'
|           `-CXXDefaultArgExpr 0x5605abce26c0 <<invalid sloc>> 'ice::source_location' has rewritten init
|             `-ImplicitCastExpr 0x5605abce26a8 </opt/ace/src/unwrap/test.hpp:101:44, col:74> 'ice::source_location' <ConstructorConversion>
|               `-CXXConstructExpr 0x5605abce2678 <col:44, col:74> 'ice::source_location' 'void (std::source_location) noexcept'
|                 `-CallExpr 0x5605abce2608 <col:44, col:74> 'source_location':'std::source_location'
|                   |-ImplicitCastExpr 0x5605abce25f0 <col:44, col:66> 'source_location (*)(__builtin_ret_type) noexcept' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x5605abce25c0 <col:44, col:66> 'source_location (__builtin_ret_type) noexcept' lvalue CXXMethod 0x5605abde7ac0 'current' 'source_location (__builtin_ret_type) noexcept'
|                   |   `-NestedNameSpecifier TypeSpec 'std::source_location'
|                   |     `-NestedNameSpecifier Namespace 0x5605abe92d58 'std'
|                   `-CXXDefaultArgExpr 0x5605abce2650 <<invalid sloc>> 'const std::source_location::__impl *' has rewritten init
|                     `-SourceLocExpr 0x5605abce2630 </usr/lib/gcc/x86_64-pc-linux-gnu/14/include/g++-v14/source_location:60:38, col:64> 'const std::source_location::__impl *'
|-StaticAssertDecl 0x5605abce3308 </opt/ace/src/unwrap/test.cpp:115:1, col:30> col:1
| |-ExprWithCleanups 0x5605abce31a8 <col:15, col:29> 'bool'
| | `-UnaryOperator 0x5605abce3190 <col:15, col:29> 'bool' prefix '!' cannot overflow
| |   `-ImplicitCastExpr 0x5605abce3178 <col:16, col:29> 'bool' <UserDefinedConversion>
| |     `-CXXMemberCallExpr 0x5605abce3158 <col:16, col:29> 'bool'
| |       `-MemberExpr 0x5605abce3128 <col:16, col:29> '<bound member function type>' .operator bool 0x5605abee2520
| |         `-ImplicitCastExpr 0x5605abce3110 <col:16, col:29> 'const ice::result<move<false>>' lvalue <NoOp>
| |           `-MaterializeTemporaryExpr 0x5605abce30f8 <col:16, col:29> 'ice::result<move<false>>' lvalue
| |             `-CallExpr 0x5605abce30d8 <col:16, col:29> 'ice::result<move<false>>'
| |               `-ImplicitCastExpr 0x5605abce30c0 <col:16> 'ice::result<move<false>> (*)() noexcept' <FunctionToPointerDecay>
| |                 `-DeclRefExpr 0x5605abce3070 <col:16> 'ice::result<move<false>> () noexcept' lvalue Function 0x5605abce2390 'move_failure' 'ice::result<move<false>> () noexcept'
| `-<<<NULL>>>
|-StaticAssertDecl 0x5605abce3678 <line:116:1, col:54> col:1
| |-ExprWithCleanups 0x5605abce3638 <col:15, col:47> 'bool'
| | `-CXXOperatorCallExpr 0x5605abce3600 <col:15, col:47> 'bool' '==' adl
| |   |-ImplicitCastExpr 0x5605abce35e8 <col:38> 'bool (*)(error, errc) noexcept' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x5605abce35c8 <col:38> 'bool (error, errc) noexcept' lvalue Function 0x5605abed1a60 'operator==' 'bool (error, errc) noexcept'
| |   |-CXXMemberCallExpr 0x5605abce34e0 <col:15, col:36> 'error_type':'ice::error'
| |   | `-MemberExpr 0x5605abce3400 <col:15, col:30> '<bound member function type>' .error 0x5605abee2bf0
| |   |   `-ImplicitCastExpr 0x5605abce34c8 <col:15, col:28> 'const ice::result<move<false>>' xvalue <NoOp>
| |   |     `-MaterializeTemporaryExpr 0x5605abce33e8 <col:15, col:28> 'ice::result<move<false>>' xvalue
| |   |       `-CallExpr 0x5605abce33c8 <col:15, col:28> 'ice::result<move<false>>'
| |   |         `-ImplicitCastExpr 0x5605abce33b0 <col:15> 'ice::result<move<false>> (*)() noexcept' <FunctionToPointerDecay>
| |   |           `-DeclRefExpr 0x5605abce3390 <col:15> 'ice::result<move<false>> () noexcept' lvalue Function 0x5605abce2390 'move_failure' 'ice::result<move<false>> () noexcept'
| |   `-DeclRefExpr 0x5605abce3538 <col:41, col:47> 'errc' EnumConstant 0x5605abec9758 'failure' 'errc'
| |     `-NestedNameSpecifier TypeSpec 'errc'
| `-<<<NULL>>>
|-FunctionDecl 0x5605abce3960 <line:123:1, line:125:1> line:123:18 used func 'ice::result<int> () noexcept'
| `-CompoundStmt 0x5605abce9490 <col:34, line:125:1>
|   `-ReturnStmt 0x5605abce9480 <line:124:3, col:29>
|     `-ExprWithCleanups 0x5605abce9468 <col:10, col:29> 'ice::result<int>'
|       `-ImplicitCastExpr 0x5605abce9450 <col:10, col:29> 'ice::result<int>' <ConstructorConversion>
|         `-CXXConstructExpr 0x5605abce9420 <col:10, col:29> 'ice::result<int>' 'void (int &&) noexcept'
|           `-MaterializeTemporaryExpr 0x5605abce8b38 <col:10, col:29> 'int' xvalue
|             `-ConditionalOperator 0x5605abce8688 <col:10, col:29> 'int'
|               |-BinaryOperator 0x5605abce8628 <col:10, col:19> 'bool' '<'
|               | |-ImplicitCastExpr 0x5605abce8610 <col:10> 'int' <LValueToRValue>
|               | | `-DeclRefExpr 0x5605abce85d0 <col:10> 'int' lvalue Var 0x5605abec94a0 'g_argc' 'int'
|               | `-IntegerLiteral 0x5605abce85f0 <col:19> 'int' 0
|               |-IntegerLiteral 0x5605abce8648 <col:23> 'int' 137
|               `-IntegerLiteral 0x5605abce8668 <col:29> 'int' 138
|-FunctionDecl 0x5605abce9600 <line:129:1, line:181:1> line:129:29 used constexpr test 'ice::result<void> () noexcept' implicit-inline
| `-CompoundStmt 0x5605abceaa68 <col:45, line:181:1>
|   |-DeclStmt 0x5605abcea000 <line:137:3, col:41>
|   | `-VarDecl 0x5605abce96e0 <col:3, col:24> col:14 uuuuuuu 'const value_type':'const int' cinit
|   |   `-StmtExpr 0x5605abce9e90 <col:24> 'value_type':'int'
|   |     `-CompoundStmt 0x5605abce9e68 <col:24>
|   |       |-DeclStmt 0x5605abce9938 <col:24>
|   |       | `-VarDecl 0x5605abce98b8 <col:24, col:40> col:24 used __rv 'ice::result<int>' auto cinit
|   |       |   `-CallExpr 0x5605abce9828 <col:35, col:40> 'ice::result<int>'
|   |       |     `-ImplicitCastExpr 0x5605abce9810 <col:35> 'ice::result<int> (*)() noexcept' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x5605abce9790 <col:35> 'ice::result<int> () noexcept' lvalue Function 0x5605abce3960 'func' 'ice::result<int> () noexcept'
|   |       |-IfStmt 0x5605abce9cb8 <col:24>
|   |       | |-UnaryOperator 0x5605abce9b10 <col:24> 'bool' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x5605abce9af8 <col:24> 'bool' <UserDefinedConversion>
|   |       | |   `-CXXMemberCallExpr 0x5605abce9ad8 <col:24> 'bool'
|   |       | |     `-MemberExpr 0x5605abce9988 <col:24> '<bound member function type>' .operator bool 0x5605abce7da0
|   |       | |       `-ImplicitCastExpr 0x5605abce9970 <col:24> 'const ice::result<int>' lvalue <NoOp>
|   |       | |         `-DeclRefExpr 0x5605abce9950 <col:24> 'ice::result<int>' lvalue Var 0x5605abce98b8 '__rv' 'ice::result<int>'
|   |       | `-ReturnStmt 0x5605abce9ca8 <col:24>
|   |       |   `-ImplicitCastExpr 0x5605abce9c90 <col:24> 'ice::result<void>' <ConstructorConversion>
|   |       |     `-CXXConstructExpr 0x5605abce9c60 <col:24> 'ice::result<void>' 'void (error_type) noexcept'
|   |       |       `-CXXMemberCallExpr 0x5605abce9c08 <col:24> 'error_type':'ice::error'
|   |       |         `-MemberExpr 0x5605abce9b28 <col:24> '<bound member function type>' .error 0x5605abce8410
|   |       |           `-ImplicitCastExpr 0x5605abce9bf0 <col:24> 'const ice::result<int>' lvalue <NoOp>
|   |       |             `-DeclRefExpr 0x5605abce9950 <col:24> 'ice::result<int>' lvalue Var 0x5605abce98b8 '__rv' 'ice::result<int>'
|   |       `-CXXOperatorCallExpr 0x5605abce9e38 <col:24> 'value_type':'int' lvalue '*'
|   |         |-ImplicitCastExpr 0x5605abce9e20 <col:24> 'value_type &(*)() & noexcept' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x5605abce9cd8 <col:24> 'value_type &() & noexcept' lvalue CXXMethod 0x5605abce7fa8 'operator*' 'value_type &() & noexcept'
|   |         `-DeclRefExpr 0x5605abce9950 <col:24> 'ice::result<int>' lvalue Var 0x5605abce98b8 '__rv' 'ice::result<int>'
|   |-DeclStmt 0x5605abcea840 <line:138:3, col:90>
|   | `-VarDecl 0x5605abcea038 <col:3, col:89> col:14 mmmmmmm 'const value_type':'const int' cinit
|   |   `-StmtExpr 0x5605abcea700 <col:24, col:89> 'value_type':'int'
|   |     `-CompoundStmt 0x5605abcea6d8 <col:25, col:88>
|   |       |-DeclStmt 0x5605abcea430 <col:27, col:47>
|   |       | `-VarDecl 0x5605abcea0f8 <col:27, col:46> col:34 used __rv 'ice::result<int> &&' cinit
|   |       |   `-ExprWithCleanups 0x5605abcea3b8 <col:41, col:46> 'ice::result<int>' xvalue
|   |       |     `-MaterializeTemporaryExpr 0x5605abcea350 <col:41, col:46> 'ice::result<int>' xvalue extended by Var 0x5605abcea0f8 '__rv' 'ice::result<int> &&'
|   |       |       `-CallExpr 0x5605abcea1e0 <col:41, col:46> 'ice::result<int>'
|   |       |         `-ImplicitCastExpr 0x5605abcea1c8 <col:41> 'ice::result<int> (*)() noexcept' <FunctionToPointerDecay>
|   |       |           `-DeclRefExpr 0x5605abcea1a8 <col:41> 'ice::result<int> () noexcept' lvalue Function 0x5605abce3960 'func' 'ice::result<int> () noexcept'
|   |       |-IfStmt 0x5605abcea5e0 <col:49, col:78>
|   |       | |-UnaryOperator 0x5605abcea4e8 <col:53, col:54> 'bool' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x5605abcea4d0 <col:54> 'bool' <UserDefinedConversion>
|   |       | |   `-CXXMemberCallExpr 0x5605abcea4b0 <col:54> 'bool'
|   |       | |     `-MemberExpr 0x5605abcea480 <col:54> '<bound member function type>' .operator bool 0x5605abce7da0
|   |       | |       `-ImplicitCastExpr 0x5605abcea468 <col:54> 'const ice::result<int>' lvalue <NoOp>
|   |       | |         `-DeclRefExpr 0x5605abcea448 <col:54> 'ice::result<int>' lvalue Var 0x5605abcea0f8 '__rv' 'ice::result<int> &&'
|   |       | `-ReturnStmt 0x5605abcea5d0 <col:60, col:78>
|   |       |   `-ImplicitCastExpr 0x5605abcea5b8 <col:67, col:78> 'ice::result<void>' <ConstructorConversion>
|   |       |     `-CXXConstructExpr 0x5605abcea588 <col:67, col:78> 'ice::result<void>' 'void (error_type) noexcept'
|   |       |       `-CXXMemberCallExpr 0x5605abcea568 <col:67, col:78> 'error_type':'ice::error'
|   |       |         `-MemberExpr 0x5605abcea520 <col:67, col:72> '<bound member function type>' .error 0x5605abce8410
|   |       |           `-ImplicitCastExpr 0x5605abcea550 <col:67> 'const ice::result<int>' lvalue <NoOp>
|   |       |             `-DeclRefExpr 0x5605abcea500 <col:67> 'ice::result<int>' lvalue Var 0x5605abcea0f8 '__rv' 'ice::result<int> &&'
|   |       `-ImplicitCastExpr 0x5605abcea6c0 <col:81, col:82> 'value_type':'int' <LValueToRValue>
|   |         `-CXXOperatorCallExpr 0x5605abcea658 <col:81, col:82> 'value_type':'int' lvalue '*'
|   |           |-ImplicitCastExpr 0x5605abcea640 <col:81> 'value_type &(*)() & noexcept' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x5605abcea620 <col:81> 'value_type &() & noexcept' lvalue CXXMethod 0x5605abce7fa8 'operator*' 'value_type &() & noexcept'
|   |           `-DeclRefExpr 0x5605abcea600 <col:82> 'ice::result<int>' lvalue Var 0x5605abcea0f8 '__rv' 'ice::result<int> &&'
|   |-CallExpr 0x5605abcea960 <line:179:3, col:21> 'int'
|   | |-ImplicitCastExpr 0x5605abcea948 <col:3> 'int (*)(const char *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5605abcea928 <col:3> 'int (const char *)' lvalue Function 0x5605abb3f310 'puts' 'int (const char *)'
|   | `-ImplicitCastExpr 0x5605abcea988 <col:8> 'const char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x5605abcea900 <col:8> 'const char[12]' lvalue "unreachable"
|   `-ReturnStmt 0x5605abceaa58 <line:180:3, col:11>
|     `-ConstantExpr 0x5605abceaa08 <col:10, col:11> 'ice::result<void>'
|       |-value: Struct
|       | `-field: Struct
|       |   `-field: Int 0
|       `-CXXConstructExpr 0x5605abcea9e0 <col:10, col:11> 'ice::result<void>' 'void () noexcept' list zeroing
`-FunctionDecl 0x5605abcead10 <line:183:1, line:193:1> line:183:5 main 'int (int, char **)'
  |-ParmVarDecl 0x5605abceaab8 <col:10, col:14> col:14 used argc 'int'
  |-ParmVarDecl 0x5605abceabb8 <col:20, col:31> col:26 argv 'char **'
  `-CompoundStmt 0x5605abceb4e8 <col:34, line:193:1>
    |-BinaryOperator 0x5605abceae38 <line:184:3, col:12> 'int' lvalue '='
    | |-DeclRefExpr 0x5605abceade0 <col:3> 'int' lvalue Var 0x5605abec94a0 'g_argc' 'int'
    | `-ImplicitCastExpr 0x5605abceae20 <col:12> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x5605abceae00 <col:12> 'int' lvalue ParmVar 0x5605abceaab8 'argc' 'int'
    `-IfStmt 0x5605abceb4c0 <line:185:3, line:187:3> has_init
      |-DeclStmt 0x5605abceb0d0 <line:185:7, col:29>
      | `-VarDecl 0x5605abceae78 <col:7, col:28> col:18 used rv 'const ice::result<void>' cinit
      |   `-ImplicitCastExpr 0x5605abceb0a0 <col:23, col:28> 'const ice::result<void>' <NoOp>
      |     `-CallExpr 0x5605abceaf98 <col:23, col:28> 'ice::result<void>'
      |       `-ImplicitCastExpr 0x5605abceaf80 <col:23> 'ice::result<void> (*)() noexcept' <FunctionToPointerDecay>
      |         `-DeclRefExpr 0x5605abceaf28 <col:23> 'ice::result<void> () noexcept' lvalue Function 0x5605abce9600 'test' 'ice::result<void> () noexcept'
      |-UnaryOperator 0x5605abceb1a8 <col:31, col:32> 'bool' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x5605abceb190 <col:32> 'bool' <UserDefinedConversion>
      |   `-CXXMemberCallExpr 0x5605abceb138 <col:32> 'bool'
      |     `-MemberExpr 0x5605abceb108 <col:32> '<bound member function type>' .operator bool 0x5605abec7af0
      |       `-DeclRefExpr 0x5605abceb0e8 <col:32> 'const ice::result<void>' lvalue Var 0x5605abceae78 'rv' 'const ice::result<void>'
      `-CompoundStmt 0x5605abceb4a8 <col:36, line:187:3>
        `-ExprWithCleanups 0x5605abceb490 <line:186:5, col:67> 'int'
          `-CallExpr 0x5605abceb448 <col:5, col:67> 'int'
            |-ImplicitCastExpr 0x5605abceb430 <col:5> 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
            | `-DeclRefExpr 0x5605abceb3b0 <col:5> 'int (const char *__restrict, ...)' lvalue Function 0x5605abe2b1a8 'printf' 'int (const char *__restrict, ...)'
            |-ImplicitCastExpr 0x5605abceb478 <col:12> 'const char *' <ArrayToPointerDecay>
            | `-StringLiteral 0x5605abceb250 <col:12> 'const char[16]' lvalue "void error: %d\n"
            `-CXXStaticCastExpr 0x5605abceb380 <col:32, col:66> 'int' static_cast<int> <NoOp>
              `-CXXMemberCallExpr 0x5605abceb348 <col:49, col:65> 'int'
                `-MemberExpr 0x5605abceb300 <col:49, col:60> '<bound member function type>' .code 0x5605abea4398
                  `-ImplicitCastExpr 0x5605abceb330 <col:49, col:58> 'const ice::error' xvalue <NoOp>
                    `-MaterializeTemporaryExpr 0x5605abceb2e8 <col:49, col:58> 'error_type':'ice::error' xvalue
                      `-CXXMemberCallExpr 0x5605abceb2c8 <col:49, col:58> 'error_type':'ice::error'
                        `-MemberExpr 0x5605abceb298 <col:49, col:52> '<bound member function type>' .error 0x5605abec7da0
                          `-DeclRefExpr 0x5605abceb278 <col:49> 'const ice::result<void>' lvalue Var 0x5605abceae78 'rv' 'const ice::result<void>'
